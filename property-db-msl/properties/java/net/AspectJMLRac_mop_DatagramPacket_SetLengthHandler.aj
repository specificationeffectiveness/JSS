import mop.*;
import org.aspectjml.ajmlrac.runtime.*;
import org.aspectjml.lang.annotation.*;
import org.aspectjml.lang.annotation.siesta.Before;
import org.aspectjml.lang.annotation.siesta.Before.*;
import java.net.DatagramPacket;
import java.net.DatagramPacket.*;
import java.util.Map;
import java.util.Map.Entry;


privileged aspect AspectJMLRac_mop_DatagramPacket_SetLengthHandler$c63bdb9f_f86c_4688_9ead_533d44a42ed8 {

 declare precedence: AspectJMLRac$JMLRacPost4Project, AspectJMLRac_* , *;

  /** Generated by AspectJML to check the exceptional public postcondition of
   * method vioDatagramPacket_SetLength. */
   after (final java.net.DatagramPacket datagramPacket, final int length) throwing (Throwable rac$e) :
     call(static void mop.DatagramPacket_SetLengthHandler.vioDatagramPacket_SetLength(java.net.DatagramPacket, int)) && 
     !within(*..AspectJMLRac_*) && !within(AspectJMLRac_*) && args(datagramPacket, length) {
           JMLChecker.rethrowJMLAssertionError(rac$e, "mop.DatagramPacket_SetLengthHandler.vioDatagramPacket_SetLength(java.net.DatagramPacket, int)");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.RuntimeException) {
  			   java.lang.RuntimeException jml$ex = (java.lang.RuntimeException) rac$e;
  			   boolean rac$b1 = true;
  			   try{			     
  			     rac$b1 = true;
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"mop.DatagramPacket_SetLengthHandler.java\" by method mop.DatagramPacket_SetLengthHandler.vioDatagramPacket_SetLength\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b1) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b1;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method mop.DatagramPacket_SetLengthHandler.vioDatagramPacket_SetLength regarding code at \nFile \"mop.DatagramPacket_SetLengthHandler.java\""+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, 1, "mop.DatagramPacket_SetLengthHandler.vioDatagramPacket_SetLength(java.net.DatagramPacket, int)", rac$e);
  		 }
  		   }
  	 }





  /** Generated by AspectJML to activate the SIESTA handler concer nchecking */
  @org.aspectj.lang.annotation.Aspect
  public static class AspectJMLInnerCC_mop_DatagramPacket_SetLengthHandler{

  /** Generated by AspectJML/Siesta to check properties for
   * the Java members intercepted by @Before handler vioDatagramPacket_SetLength. */
  @org.aspectj.lang.annotation.Before("((call(void java.net.DatagramPacket.setLength(int)) && args(length)) && target(java.net.DatagramPacket))")
  public void vioDatagramPacket_SetLength_Before(org.aspectj.lang.JoinPoint thisJP, int length) {//#public static void mop.DatagramPacket_SetLengthHandler.vioDatagramPacket_SetLength(java.net.DatagramPacket, int)#'mop.DatagramPacket_SetLengthHandler' (DatagramPacket_SetLengthHandler.java:23)
  mop.DatagramPacket_SetLengthHandler.vioDatagramPacket_SetLength((java.net.DatagramPacket)thisJP.getTarget(), length);
  }

  }
}
