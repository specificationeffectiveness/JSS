package mop;
import mop.*;
import org.aspectjml.ajmlrac.runtime.*;
import org.aspectjml.lang.annotation.*;
import org.aspectjml.lang.annotation.siesta.Before;
import org.aspectjml.lang.annotation.siesta.Before.*;
import java.io.Closeable;
import java.io.Closeable.*;
import java.io.IOException;
import java.util.Map;
import java.util.Map.Entry;


privileged aspect AspectJMLRac_mop_Closeable_MultipleCloseHandler$d1a54de8_a494_4308_ac31_50f7da18ee09 {

 declare precedence: AspectJMLRac$JMLRacPost4Project, AspectJMLRac_* , *;

  /** Generated by AspectJML to check the exceptional public postcondition of
   * method vioCloseable_MultipleClose. */
   after (final java.io.Closeable closeable) throwing (Throwable rac$e) :
     call(static void mop.Closeable_MultipleCloseHandler.vioCloseable_MultipleClose(java.io.Closeable)) && 
     !within(*..AspectJMLRac_*) && !within(AspectJMLRac_*) && args(closeable) {
           JMLChecker.rethrowJMLAssertionError(rac$e, "mop.Closeable_MultipleCloseHandler.vioCloseable_MultipleClose(java.io.Closeable)");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.RuntimeException) {
  			   java.lang.RuntimeException jml$ex = (java.lang.RuntimeException) rac$e;
  			   boolean rac$b1 = true;
  			   try{			     
  			     rac$b1 = true;
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"mop.Closeable_MultipleCloseHandler.java\" by method mop.Closeable_MultipleCloseHandler.vioCloseable_MultipleClose\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b1) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b1;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method mop.Closeable_MultipleCloseHandler.vioCloseable_MultipleClose regarding code at \nFile \"mop.Closeable_MultipleCloseHandler.java\""+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, 1, "mop.Closeable_MultipleCloseHandler.vioCloseable_MultipleClose(java.io.Closeable)", rac$e);
  		 }
  		   }
  	 }





//  /** Generated by AspectJML to activate the SIESTA handler concer nchecking */
//  @org.aspectj.lang.annotation.Aspect
//  public static class AspectJMLInnerCC_mop_Closeable_MultipleCloseHandler{
//   private String[] list= null;
//  /** Generated by AspectJML/Siesta to check properties for
//   * the Java members intercepted by @Before handler vioCloseable_MultipleClose. */
//  @org.aspectj.lang.annotation.Before("(call(* java.io.Closeable+.close()) && target(java.io.Closeable))")
//  public void vioCloseable_MultipleClose_Before(org.aspectj.lang.JoinPoint thisJP) {//#public static void mop.Closeable_MultipleCloseHandler.vioCloseable_MultipleClose(java.io.Closeable)#'mop.Closeable_MultipleCloseHandler' (Closeable_MultipleCloseHandler.java:21)
//	 
//	  mop.Closeable_MultipleCloseHandler.vioCloseable_MultipleClose((java.io.Closeable)thisJP.getTarget(),semantic_mop_Closeable_MultipleCloseHandler(thisJP) );
//  }
   
   /** Generated by AspectJML to activate the SIESTA handler concer nchecking */
   @org.aspectj.lang.annotation.Aspect
   public static class AspectJMLInnerCC_mop_Closeable_MultipleCloseHandler{
	   private String[] list= null;
   /** Generated by AspectJML/Siesta to check properties for
    * the Java members intercepted by @Before handler vioCloseable_MultipleClose. */
   @org.aspectj.lang.annotation.Before("(call(* java.io.Closeable+.close()) && target(java.io.Closeable))")
   public void vioCloseable_MultipleClose_Before(org.aspectj.lang.JoinPoint thisJP) {//#public static void mop.Closeable_MultipleCloseHandler.vioCloseable_MultipleClose(java.io.Closeable, java.lang.String[])#'mop.Closeable_MultipleCloseHandler' (Closeable_MultipleCloseHandler.java:22)
   mop.Closeable_MultipleCloseHandler.vioCloseable_MultipleClose((java.io.Closeable)thisJP.getTarget(), semantic_mop_Closeable_MultipleCloseHandler(thisJP));
   }
  /** Manually by code to get methods in the classe
   * 
   */
  private String[] semantic_mop_Closeable_MultipleCloseHandler(org.aspectj.lang.JoinPoint thisJP) {
		try {
			list =  SemanticParser.historyOf(thisJP.getStaticPart().getSourceLocation());
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	 return list; 
  }
  }
}
