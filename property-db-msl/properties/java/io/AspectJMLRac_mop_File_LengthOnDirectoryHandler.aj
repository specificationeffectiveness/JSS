import mop.*;
import org.aspectjml.ajmlrac.runtime.*;
import org.aspectjml.lang.annotation.*;
import org.aspectjml.lang.annotation.siesta.Before;
import org.aspectjml.lang.annotation.siesta.Before.*;
import java.io.File;
import java.io.File.*;
import java.util.Map;
import java.util.Map.Entry;


privileged aspect AspectJMLRac_mop_File_LengthOnDirectoryHandler$c6a2317d_3a7d_4319_b069_0a0f515c5d73 {

 declare precedence: AspectJMLRac$JMLRacPost4Project, AspectJMLRac_* , *;

  /** Generated by AspectJML to check the exceptional public postcondition of
   * method vioFile_LengthOnDirectory. */
   after (final java.io.File file) throwing (Throwable rac$e) :
     call(static void mop.File_LengthOnDirectoryHandler.vioFile_LengthOnDirectory(java.io.File)) && 
     !within(*..AspectJMLRac_*) && !within(AspectJMLRac_*) && args(file) {
           JMLChecker.rethrowJMLAssertionError(rac$e, "mop.File_LengthOnDirectoryHandler.vioFile_LengthOnDirectory(java.io.File)");
           boolean rac$b = true;
           String rac$ErrorMsg = "";

  		   if (true) {
  		     if (rac$e instanceof java.lang.RuntimeException) {
  			   java.lang.RuntimeException jml$ex = (java.lang.RuntimeException) rac$e;
  			   boolean rac$b1 = true;
  			   try{			     
  			     rac$b1 = true;
  			   }   catch (JMLNonExecutableException rac$nonExec) {
  			     throw new JMLEvaluationError("Invalid Expression in \"mop.File_LengthOnDirectoryHandler.java\" by method mop.File_LengthOnDirectoryHandler.vioFile_LengthOnDirectory\nCaused by: "+rac$e);
  			   }
  			   if(!rac$b1) {
  			     if(rac$ErrorMsg.equals("")) {
  			       rac$ErrorMsg = "jml$ex";
  			     }
  			     else {
  			       rac$ErrorMsg += " and jml$ex";
  			     }
  			   }
  			   rac$b = rac$b && rac$b1;
           if(rac$ErrorMsg.indexOf("and") >= 0 ){
             rac$ErrorMsg += " are ";
           }
           else{
             rac$ErrorMsg += " is ";
           }
               JMLChecker.checkExceptionalPostcondition(rac$b,"by method mop.File_LengthOnDirectoryHandler.vioFile_LengthOnDirectory regarding code at \nFile \"mop.File_LengthOnDirectoryHandler.java\""+"\n\t"+rac$ErrorMsg+rac$e, "jml$ex", true, 1, "mop.File_LengthOnDirectoryHandler.vioFile_LengthOnDirectory(java.io.File)", rac$e);
  		 }
  		   }
  	 }





  /** Generated by AspectJML to activate the SIESTA handler concer nchecking */
  @org.aspectj.lang.annotation.Aspect
  public static class AspectJMLInnerCC_mop_File_LengthOnDirectoryHandler{

  /** Generated by AspectJML/Siesta to check properties for
   * the Java members intercepted by @Before handler vioFile_LengthOnDirectory. */
  @org.aspectj.lang.annotation.Before("(call(* java.io.File+.length()) && target(java.io.File))")
  public void vioFile_LengthOnDirectory_Before(org.aspectj.lang.JoinPoint thisJP) {//#public static void mop.File_LengthOnDirectoryHandler.vioFile_LengthOnDirectory(java.io.File)#'mop.File_LengthOnDirectoryHandler' (File_LengthOnDirectoryHandler.java:18)
  mop.File_LengthOnDirectoryHandler.vioFile_LengthOnDirectory((java.io.File)thisJP.getTarget());
  }

  }
}
