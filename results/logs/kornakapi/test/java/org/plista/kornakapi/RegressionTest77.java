package org.plista.kornakapi;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest77 {

    public static boolean debug = false;

    @Test
    public void test38501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38501");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 1);
        long long6 = mutablePreference0.getUserID();
        java.lang.String str7 = mutablePreference0.toString();
        java.lang.String str8 = mutablePreference0.toString();
        java.lang.String str9 = mutablePreference0.toString();
        mutablePreference0.setValue((float) (short) 1);
        long long12 = mutablePreference0.getItemID();
        mutablePreference0.set(97L, 32L, (float) 10);
        java.lang.String str17 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str8, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str9, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=97, itemID=32, value=10.0}" + "'", str17, "MutablePreference{userID=97, itemID=32, value=10.0}");
    }

    @Test
    public void test38502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38502");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str2 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcUrl("");
        storageConfiguration0.setJdbcUrl("");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.InvalidParameterException: file");
        java.lang.String str9 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        java.lang.String str12 = storageConfiguration0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: file" + "'", str9, "org.plista.kornakapi.web.InvalidParameterException: file");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: file" + "'", str12, "org.plista.kornakapi.web.InvalidParameterException: file");
    }

    @Test
    public void test38503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38503");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(trainingScheduler5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
    }

    @Test
    public void test38504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38504");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig0.setLambda((double) 35);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) 'a');
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) '4');
        factorizationbasedRecommenderConfig0.setLambda((double) (byte) 100);
        int int17 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setLambda((double) 97);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
    }

    @Test
    public void test38505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38505");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "itemID", 97);
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
    }

    @Test
    public void test38506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38506");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        java.lang.String str16 = batchDeleteCandidatesServlet14.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet17 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet19 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        setPreferenceServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet17.init((javax.servlet.ServletConfig) recommendServlet22);
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) setPreferenceServlet17);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet25 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet27 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet26.init((javax.servlet.ServletConfig) batchSetPreferencesServlet27);
        javax.servlet.ServletConfig servletConfig29 = batchSetPreferencesServlet26.getServletConfig();
        addCandidateServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig31 = addCandidateServlet25.getServletConfig();
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) addCandidateServlet25);
        javax.servlet.ServletConfig servletConfig33 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet14);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet35 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet35.init();
        setPreferenceServlet35.init();
        setPreferenceServlet35.destroy();
        javax.servlet.ServletConfig servletConfig39 = setPreferenceServlet35.getServletConfig();
        java.lang.String str40 = setPreferenceServlet35.getServletInfo();
        setPreferenceServlet35.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet35);
        javax.servlet.ServletConfig servletConfig43 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.init();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(servletConfig29);
        org.junit.Assert.assertNotNull(servletConfig31);
        org.junit.Assert.assertNotNull(servletConfig33);
        org.junit.Assert.assertNull(servletConfig39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(servletConfig43);
    }

    @Test
    public void test38507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38507");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig7.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig7);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList18 = null; // flaky: configuration5.getItembasedRecommenders();
        java.lang.String str19 = null; // flaky: configuration5.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig20 = null;
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig20);
// flaky:         configuration5.setModelDirectory("MutablePreference{userID=32, itemID=0, value=35.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList18);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany" + "'", str19, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany");
    }

    @Test
    public void test38508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38508");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler12, "label", (int) ' ');
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener15);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener23 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener23.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener25 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener23.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler30 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener33 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler30, "label", (int) ' ');
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener33);
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener36 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener38 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener43 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener43.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener45 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener43.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener45);
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener45);
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener53 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener55 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener55.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener53.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener55);
        delegatingPreferenceChangeListener55.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener55.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener60 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener62 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener60.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener55.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
        delegatingPreferenceChangeListener38.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener55);
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler71 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener74 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler71, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", 32);
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener74);
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener76 = null;
        delegatingPreferenceChangeListener25.addDelegate(preferenceChangeListener76);
        org.plista.kornakapi.web.Components components78 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration79 = null; // flaky: components78.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration80 = null; // flaky: components78.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler81 = null; // flaky: components78.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration82 = null; // flaky: components78.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage83 = null; // flaky: components78.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler84 = null; // flaky: components78.scheduler();
        org.plista.kornakapi.core.storage.Storage storage85 = null; // flaky: components78.storage();
        org.plista.kornakapi.core.storage.Storage storage86 = null; // flaky: components78.storage();
        org.plista.kornakapi.core.config.Configuration configuration87 = null; // flaky: components78.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage88 = null; // flaky: components78.storage();
        org.plista.kornakapi.core.config.Configuration configuration89 = null; // flaky: components78.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage90 = null; // flaky: components78.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener91 = null; // flaky: components78.preferenceChangeListener();
        delegatingPreferenceChangeListener25.addDelegate(preferenceChangeListener91);
// flaky:         org.junit.Assert.assertNotNull(components78);
// flaky:         org.junit.Assert.assertNotNull(configuration79);
// flaky:         org.junit.Assert.assertNotNull(configuration80);
        org.junit.Assert.assertNull(trainingScheduler81);
// flaky:         org.junit.Assert.assertNotNull(configuration82);
        org.junit.Assert.assertNull(storage83);
        org.junit.Assert.assertNull(trainingScheduler84);
        org.junit.Assert.assertNull(storage85);
        org.junit.Assert.assertNull(storage86);
// flaky:         org.junit.Assert.assertNotNull(configuration87);
        org.junit.Assert.assertNull(storage88);
// flaky:         org.junit.Assert.assertNotNull(configuration89);
        org.junit.Assert.assertNull(storage90);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener91);
    }

    @Test
    public void test38509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38509");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) recommendServlet5);
        java.lang.String str7 = setPreferenceServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig8 = setPreferenceServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        batchDeleteCandidatesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet11.getServletConfig();
        batchSetPreferencesServlet11.init();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(servletConfig8);
        org.junit.Assert.assertNull(servletConfig15);
    }

    @Test
    public void test38510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38510");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        java.lang.String str10 = setPreferenceServlet4.getServletInfo();
        javax.servlet.ServletConfig servletConfig11 = setPreferenceServlet4.getServletConfig();
        setPreferenceServlet4.destroy();
        javax.servlet.ServletConfig servletConfig13 = setPreferenceServlet4.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = setPreferenceServlet4.getInitParameter("MutablePreference{userID=32, itemID=1, value=-1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(servletConfig11);
        org.junit.Assert.assertNull(servletConfig13);
    }

    @Test
    public void test38511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38511");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList8 = null; // flaky: configuration7.getItembasedRecommenders();
// flaky:         configuration7.setNumProcessorsForTraining(32);
        java.lang.String str11 = null; // flaky: configuration7.getModelDirectory();
// flaky:         configuration7.setModelDirectory("MutablePreference{userID=100, itemID=-1, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList8);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=32, itemID=0, value=35.0}" + "'", str11, "MutablePreference{userID=32, itemID=0, value=35.0}");
    }

    @Test
    public void test38512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38512");
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException12.addSuppressed((java.lang.Throwable) missingParameterException14);
        invalidParameterException10.addSuppressed((java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException10);
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: howMany");
        org.plista.kornakapi.web.MissingParameterException missingParameterException24 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException25 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException24);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException26 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException24);
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException30 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException28.addSuppressed((java.lang.Throwable) missingParameterException30);
        invalidParameterException26.addSuppressed((java.lang.Throwable) missingParameterException30);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException33 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException26);
        org.plista.kornakapi.web.MissingParameterException missingParameterException37 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException37);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException39 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException37);
        invalidParameterException33.addSuppressed((java.lang.Throwable) missingParameterException37);
        org.plista.kornakapi.web.MissingParameterException missingParameterException43 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException44 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException43);
        missingParameterException37.addSuppressed((java.lang.Throwable) invalidParameterException44);
        java.lang.Throwable[] throwableArray46 = missingParameterException37.getSuppressed();
        missingParameterException19.addSuppressed((java.lang.Throwable) missingParameterException37);
        org.plista.kornakapi.web.MissingParameterException missingParameterException52 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException53 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException52);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException54 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException52);
        java.lang.Throwable[] throwableArray55 = missingParameterException52.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException56 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException52);
        missingParameterException37.addSuppressed((java.lang.Throwable) invalidParameterException56);
        invalidParameterException17.addSuppressed((java.lang.Throwable) invalidParameterException56);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException59 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: ", (java.lang.Throwable) invalidParameterException56);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException60 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: batchSize", (java.lang.Throwable) invalidParameterException59);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException61 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=-1.0}", (java.lang.Throwable) invalidParameterException60);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException62 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender", (java.lang.Throwable) invalidParameterException60);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray55);
    }

    @Test
    public void test38513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38513");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        int int6 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setUsesImplicitFeedback(true);
        int int9 = factorizationbasedRecommenderConfig4.getNumberOfIterations();
        double double10 = factorizationbasedRecommenderConfig4.getLambda();
        java.lang.String str11 = factorizationbasedRecommenderConfig4.getRetrainCronExpression();
        factorizationbasedRecommenderConfig4.setNumberOfFeatures((int) (short) -1);
        double double14 = factorizationbasedRecommenderConfig4.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        double double16 = factorizationbasedRecommenderConfig4.getLambda();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test38514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38514");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components8 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components8.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = null; // flaky: components8.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration13 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig14.setSimilarityClass("");
        java.lang.String str17 = itembasedRecommenderConfig14.getName();
        java.lang.String str18 = itembasedRecommenderConfig14.getSimilarityClass();
        itembasedRecommenderConfig14.setName("");
        java.lang.String str21 = itembasedRecommenderConfig14.getSimilarityClass();
// flaky:         configuration13.addItembasedRecommender(itembasedRecommenderConfig14);
        itembasedRecommenderConfig14.setSimilarItemsPerItem((int) '#');
        int int25 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig14);
        configuration0.setNumProcessorsForTraining((int) (byte) 1);
        int int29 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig30 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig30.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer33 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig30);
        itembasedRecommenderConfig30.setRetrainCronExpression("");
        itembasedRecommenderConfig30.setSimilarItemsPerItem(10);
        java.lang.String str38 = itembasedRecommenderConfig30.getName();
        itembasedRecommenderConfig30.setName("");
        int int41 = itembasedRecommenderConfig30.getRetrainAfterPreferenceChanges();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig30);
        configuration0.setNumProcessorsForTraining(10);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertNotNull(components8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(trainingScheduler11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 35 + "'", int25 == 35);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test38515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38515");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig9 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str10 = itembasedRecommenderConfig9.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig9.getSimilarityClass();
        itembasedRecommenderConfig9.setSimilarItemsPerItem((int) (byte) 1);
        java.lang.String str14 = itembasedRecommenderConfig9.getSimilarityClass();
        java.lang.String str15 = itembasedRecommenderConfig9.getSimilarityClass();
        int int16 = itembasedRecommenderConfig9.getSimilarItemsPerItem();
        int int17 = itembasedRecommenderConfig9.getSimilarItemsPerItem();
// flaky:         configuration8.addItembasedRecommender(itembasedRecommenderConfig9);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test38516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38516");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener3);
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components10 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components10.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components10.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = null; // flaky: components10.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler14 = null; // flaky: components10.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener15 = null; // flaky: components10.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration16 = null; // flaky: components10.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener17 = null; // flaky: components10.preferenceChangeListener();
        delegatingPreferenceChangeListener3.addDelegate(preferenceChangeListener17);
// flaky:         delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener22 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener22);
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener28 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener28);
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener28);
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
// flaky:         delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components36 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration37 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration38 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage39 = null; // flaky: components36.storage();
        org.plista.kornakapi.core.storage.Storage storage40 = null; // flaky: components36.storage();
        org.plista.kornakapi.core.config.Configuration configuration41 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage42 = null; // flaky: components36.storage();
        org.plista.kornakapi.core.storage.Storage storage43 = null; // flaky: components36.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener44 = null; // flaky: components36.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener45 = null; // flaky: components36.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler46 = null; // flaky: components36.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener47 = null; // flaky: components36.preferenceChangeListener();
        delegatingPreferenceChangeListener3.addDelegate(preferenceChangeListener47);
// flaky:         delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
// flaky:         org.junit.Assert.assertNotNull(components10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(trainingScheduler13);
        org.junit.Assert.assertNull(trainingScheduler14);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener15);
// flaky:         org.junit.Assert.assertNotNull(configuration16);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener17);
// flaky:         org.junit.Assert.assertNotNull(components36);
// flaky:         org.junit.Assert.assertNotNull(configuration37);
// flaky:         org.junit.Assert.assertNotNull(configuration38);
        org.junit.Assert.assertNull(storage39);
        org.junit.Assert.assertNull(storage40);
// flaky:         org.junit.Assert.assertNotNull(configuration41);
        org.junit.Assert.assertNull(storage42);
        org.junit.Assert.assertNull(storage43);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener44);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener45);
        org.junit.Assert.assertNull(trainingScheduler46);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener47);
    }

    @Test
    public void test38517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38517");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getName();
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("");
        itembasedRecommenderConfig0.setRetrainCronExpression("label");
        java.lang.String str9 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str10 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int12 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "label" + "'", str11, "label");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test38518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38518");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setAlpha((double) (byte) 100);
        java.lang.String str10 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) '#');
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        int int19 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
    }

    @Test
    public void test38519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38519");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
// flaky:         configuration1.setNumProcessorsForTraining(52);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components5 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components5.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components5.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig11 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig11.setSimilarityClass("");
        java.lang.String str14 = itembasedRecommenderConfig11.getName();
        java.lang.String str15 = itembasedRecommenderConfig11.getSimilarityClass();
        itembasedRecommenderConfig11.setName("");
        java.lang.String str18 = itembasedRecommenderConfig11.getSimilarityClass();
// flaky:         configuration10.addItembasedRecommender(itembasedRecommenderConfig11);
        itembasedRecommenderConfig11.setSimilarItemsPerItem((int) (byte) 1);
        itembasedRecommenderConfig11.setSimilarItemsPerItem((int) (short) 100);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig11);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig25 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double26 = factorizationbasedRecommenderConfig25.getAlpha();
        double double27 = factorizationbasedRecommenderConfig25.getLambda();
        int int28 = factorizationbasedRecommenderConfig25.getNumberOfFeatures();
        factorizationbasedRecommenderConfig25.setUsesImplicitFeedback(false);
        int int31 = factorizationbasedRecommenderConfig25.getNumberOfFeatures();
        factorizationbasedRecommenderConfig25.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig25.setLambda((double) 35);
        boolean boolean36 = factorizationbasedRecommenderConfig25.isUsesImplicitFeedback();
        double double37 = factorizationbasedRecommenderConfig25.getLambda();
        int int38 = factorizationbasedRecommenderConfig25.getNumberOfIterations();
        int int39 = factorizationbasedRecommenderConfig25.getNumberOfFeatures();
        double double40 = factorizationbasedRecommenderConfig25.getAlpha();
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig25);
        factorizationbasedRecommenderConfig25.setNumberOfIterations((int) (byte) 0);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
// flaky:         org.junit.Assert.assertNotNull(components5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 35.0d + "'", double37 == 35.0d);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test38520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38520");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener8 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener10 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener10.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener8.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener10);
        delegatingPreferenceChangeListener5.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener8);
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener8.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener22 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener22);
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
    }

    @Test
    public void test38521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38521");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=100, itemID=52, value=1.0}", (int) (short) 1);
    }

    @Test
    public void test38522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38522");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setName("");
        java.lang.String str13 = itembasedRecommenderConfig6.getSimilarityClass();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) (byte) 1);
        itembasedRecommenderConfig6.setSimilarityClass("MutablePreference{userID=100, itemID=0, value=1.0}");
        itembasedRecommenderConfig6.setName("MutablePreference{userID=0, itemID=52, value=-1.0}");
        java.lang.String str21 = itembasedRecommenderConfig6.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer22 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        java.io.File file23 = null;
        org.plista.kornakapi.core.storage.Storage storage24 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender25 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer22.train(file23, storage24, recommender25, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "MutablePreference{userID=100, itemID=0, value=1.0}" + "'", str21, "MutablePreference{userID=100, itemID=0, value=1.0}");
    }

    @Test
    public void test38523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38523");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener10);
        org.junit.Assert.assertNull(trainingScheduler11);
    }

    @Test
    public void test38524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38524");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        java.lang.String str12 = mutableCandidate0.getLabel();
        java.lang.String str13 = mutableCandidate0.getLabel();
        java.lang.String str14 = mutableCandidate0.getLabel();
        java.lang.String str15 = mutableCandidate0.getLabel();
        long long16 = mutableCandidate0.getItemID();
        long long17 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", (long) (byte) -1);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=32, value=-1.0}", 10L);
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}", 10000L);
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: value", (-1L));
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str14, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str15, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 35L + "'", long16 == 35L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 35L + "'", long17 == 35L);
    }

    @Test
    public void test38525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38525");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer7 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double10 = fixedCandidatesIDRescorer1.rescore(32L, (double) 10.0f);
        double double13 = fixedCandidatesIDRescorer1.rescore((long) 32, (-1.0d));
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer14 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double17 = fixedCandidatesIDRescorer1.rescore((long) 0, (double) 97L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 10.0d + "'", double10 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
    }

    @Test
    public void test38526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38526");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair6 = null;
        double double8 = filteringLongPairRescorer5.rescore(longPair6, 52.0d);
        org.apache.mahout.common.LongPair longPair9 = null;
        double double11 = filteringLongPairRescorer5.rescore(longPair9, (double) '#');
        org.apache.mahout.common.LongPair longPair12 = null;
        double double14 = filteringLongPairRescorer5.rescore(longPair12, (double) (short) 10);
        org.apache.mahout.common.LongPair longPair15 = null;
        double double17 = filteringLongPairRescorer5.rescore(longPair15, (double) 32);
        org.apache.mahout.common.LongPair longPair18 = null;
        double double20 = filteringLongPairRescorer5.rescore(longPair18, 10.0d);
        org.apache.mahout.common.LongPair longPair21 = null;
        double double23 = filteringLongPairRescorer5.rescore(longPair21, (double) (byte) 0);
        org.apache.mahout.common.LongPair longPair24 = null;
        double double26 = filteringLongPairRescorer5.rescore(longPair24, (double) 1L);
        org.apache.mahout.common.LongPair longPair27 = null;
        double double29 = filteringLongPairRescorer5.rescore(longPair27, (double) 1L);
        org.apache.mahout.common.LongPair longPair30 = null;
        double double32 = filteringLongPairRescorer5.rescore(longPair30, (double) 32L);
        org.apache.mahout.common.LongPair longPair33 = null;
        double double35 = filteringLongPairRescorer5.rescore(longPair33, (double) 1);
        org.apache.mahout.common.LongPair longPair36 = null;
        double double38 = filteringLongPairRescorer5.rescore(longPair36, (double) 100);
        org.apache.mahout.common.LongPair longPair39 = null;
        double double41 = filteringLongPairRescorer5.rescore(longPair39, (double) 'a');
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 32.0d + "'", double17 == 32.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 10.0d + "'", double20 == 10.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 32.0d + "'", double32 == 32.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 1.0d + "'", double35 == 1.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 100.0d + "'", double38 == 100.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 97.0d + "'", double41 == 97.0d);
    }

    @Test
    public void test38527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38527");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        java.lang.String str10 = mutableCandidate0.getLabel();
        java.lang.String str11 = mutableCandidate0.getLabel();
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemID" + "'", str9, "itemID");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "itemID" + "'", str10, "itemID");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "itemID" + "'", str11, "itemID");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "itemID" + "'", str13, "itemID");
    }

    @Test
    public void test38528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38528");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
// flaky:         configuration8.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration8.getItembasedRecommenders();
// flaky:         configuration8.setNumProcessorsForTraining(0);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
    }

    @Test
    public void test38529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38529");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) '4');
        java.lang.String str5 = configuration0.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components7 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage10 = null; // flaky: components7.storage();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components7.storage();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components7.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList13 = null; // flaky: configuration12.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str15 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str18 = storageConfiguration14.getJdbcUrl();
        java.lang.String str19 = storageConfiguration14.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration14.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration14.getPassword();
// flaky:         configuration12.setStorageConfiguration(storageConfiguration14);
        java.lang.String str23 = null; // flaky: configuration12.getModelDirectory();
        int int24 = 0; // flaky: configuration12.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList25 = null; // flaky: configuration12.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig26 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig26.setSimilarityClass("");
        java.lang.String str29 = itembasedRecommenderConfig26.getName();
        java.lang.String str30 = itembasedRecommenderConfig26.getSimilarityClass();
        itembasedRecommenderConfig26.setName("");
// flaky:         configuration12.addItembasedRecommender(itembasedRecommenderConfig26);
        itembasedRecommenderConfig26.setRetrainAfterPreferenceChanges((int) ' ');
        configuration0.addItembasedRecommender(itembasedRecommenderConfig26);
        java.lang.String str37 = itembasedRecommenderConfig26.getSimilarityClass();
        itembasedRecommenderConfig26.setSimilarityClass("MutablePreference{userID=100, itemID=100, value=97.0}");
        java.lang.String str40 = itembasedRecommenderConfig26.getName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(storage10);
        org.junit.Assert.assertNull(storage11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str23, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test38530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38530");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(trainingScheduler9);
    }

    @Test
    public void test38531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38531");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        int int4 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        int int5 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         configuration2.setModelDirectory("MutablePreference{userID=0, itemID=0, value=10.0}");
        org.plista.kornakapi.web.Components components9 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage10 = null; // flaky: components9.storage();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components9.getConfiguration();
// flaky:         configuration11.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
// flaky:         configuration11.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str17 = storageConfiguration16.getUsername();
// flaky:         configuration11.setStorageConfiguration(storageConfiguration16);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList19 = null; // flaky: configuration11.getItembasedRecommenders();
        int int20 = 0; // flaky: configuration11.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setSimilarityClass("");
        java.lang.String str24 = itembasedRecommenderConfig21.getSimilarityClass();
        itembasedRecommenderConfig21.setName("");
        java.lang.String str27 = itembasedRecommenderConfig21.getName();
        int int28 = itembasedRecommenderConfig21.getSimilarItemsPerItem();
        itembasedRecommenderConfig21.setRetrainCronExpression("howMany");
        int int31 = itembasedRecommenderConfig21.getSimilarItemsPerItem();
        int int32 = itembasedRecommenderConfig21.getSimilarItemsPerItem();
        int int33 = itembasedRecommenderConfig21.getSimilarItemsPerItem();
// flaky:         configuration11.addItembasedRecommender(itembasedRecommenderConfig21);
        java.lang.String str35 = null; // flaky: configuration11.getModelDirectory();
        int int36 = 0; // flaky: configuration11.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig37 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double38 = factorizationbasedRecommenderConfig37.getAlpha();
        double double39 = factorizationbasedRecommenderConfig37.getLambda();
        int int40 = factorizationbasedRecommenderConfig37.getNumberOfFeatures();
        factorizationbasedRecommenderConfig37.setLambda((double) 1);
        double double43 = factorizationbasedRecommenderConfig37.getAlpha();
        factorizationbasedRecommenderConfig37.setRetrainCronExpression("hi!");
        factorizationbasedRecommenderConfig37.setNumberOfIterations((int) (short) 100);
        factorizationbasedRecommenderConfig37.setAlpha((double) (-1.0f));
        factorizationbasedRecommenderConfig37.setNumberOfIterations(0);
        java.lang.String str52 = factorizationbasedRecommenderConfig37.getName();
// flaky:         configuration11.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig37);
        java.lang.String str54 = factorizationbasedRecommenderConfig37.getRetrainCronExpression();
        factorizationbasedRecommenderConfig37.setRetrainCronExpression("");
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig37);
        org.plista.kornakapi.core.config.Configuration configuration58 = new org.plista.kornakapi.core.config.Configuration();
        int int59 = configuration58.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration60 = configuration58.getStorageConfiguration();
        configuration58.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList63 = configuration58.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration64 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str65 = storageConfiguration64.getJdbcDriverClass();
        storageConfiguration64.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str68 = storageConfiguration64.getPassword();
        java.lang.String str69 = storageConfiguration64.getJdbcDriverClass();
        storageConfiguration64.setUsername("hi!");
        storageConfiguration64.setJdbcDriverClass("file");
        configuration58.setStorageConfiguration(storageConfiguration64);
        java.lang.String str75 = storageConfiguration64.getJdbcUrl();
        java.lang.String str76 = storageConfiguration64.getUsername();
        java.lang.String str77 = storageConfiguration64.getPassword();
        java.lang.String str78 = storageConfiguration64.getJdbcDriverClass();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration64);
        java.lang.String str80 = storageConfiguration64.getUsername();
        storageConfiguration64.setPassword("");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str3, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration6);
// flaky:         org.junit.Assert.assertNotNull(components9);
        org.junit.Assert.assertNull(storage10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(str17);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "itemID" + "'", str35, "itemID");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi!" + "'", str54, "hi!");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(storageConfiguration60);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList63);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "hi!" + "'", str76, "hi!");
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "file" + "'", str78, "file");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "hi!" + "'", str80, "hi!");
    }

    @Test
    public void test38532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38532");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        float float8 = mutablePreference0.getValue();
        long long9 = mutablePreference0.getUserID();
        float float10 = mutablePreference0.getValue();
        java.lang.String str11 = mutablePreference0.toString();
        long long12 = mutablePreference0.getUserID();
        long long13 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 100L + "'", long9 == 100L);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.0f + "'", float10 == 0.0f);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str11, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 100L + "'", long12 == 100L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test38533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38533");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration13 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.web.Components components15 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration16 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = null; // flaky: components15.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration19 = null; // flaky: components15.getConfiguration();
// flaky:         configuration19.setNumProcessorsForTraining(0);
        java.lang.String str22 = null; // flaky: configuration19.getModelDirectory();
        int int23 = 0; // flaky: configuration19.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration24 = null; // flaky: configuration19.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = null; // flaky: configuration19.getStorageConfiguration();
        int int26 = 0; // flaky: configuration19.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration27 = null; // flaky: configuration19.getStorageConfiguration();
// flaky:         configuration14.setStorageConfiguration(storageConfiguration27);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList29 = null; // flaky: configuration14.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(storage11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
// flaky:         org.junit.Assert.assertNotNull(components15);
// flaky:         org.junit.Assert.assertNotNull(configuration16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "itemID" + "'", str22, "itemID");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration24);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration27);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList29);
    }

    @Test
    public void test38534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38534");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.destroy();
        setPreferenceServlet0.destroy();
        java.lang.String str8 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        batchDeleteCandidatesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet14 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        java.lang.String str17 = batchSetPreferencesServlet15.getServletInfo();
        java.lang.String str18 = batchSetPreferencesServlet15.getServletInfo();
        batchSetPreferencesServlet15.destroy();
        batchDeleteCandidatesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str22 = recommendServlet21.getServletInfo();
        recommendServlet21.destroy();
        javax.servlet.ServletConfig servletConfig24 = recommendServlet21.getServletConfig();
        batchDeleteCandidatesServlet9.init(servletConfig24);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        javax.servlet.ServletConfig servletConfig27 = setPreferenceServlet0.getServletConfig();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig24);
        org.junit.Assert.assertNotNull(servletConfig27);
    }

    @Test
    public void test38535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38535");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("recommender");
        storageConfiguration0.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str10 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("MutablePreference{userID=0, itemID=0, value=0.0}");
        java.lang.String str13 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration0.getUsername();
        java.lang.String str15 = storageConfiguration0.getJdbcDriverClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str10, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str14, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test38536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38536");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(100);
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.io.File file16 = null;
        org.plista.kornakapi.core.storage.Storage storage17 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender18 = null;
        // The following exception was thrown during execution in test generation
        try {
            factorizationbasedInMemoryTrainer15.train(file16, storage17, recommender18, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test38537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38537");
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet0 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        javax.servlet.ServletConfig servletConfig1 = recommendServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet2 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet2.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet5 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet6 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet5.init((javax.servlet.ServletConfig) batchSetPreferencesServlet6);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) batchSetPreferencesServlet6);
        javax.servlet.ServletConfig servletConfig9 = batchSetPreferencesServlet6.getServletConfig();
        addCandidateServlet2.init(servletConfig9);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet12 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str13 = batchDeleteCandidatesServlet12.getServletInfo();
        java.lang.String str14 = batchDeleteCandidatesServlet12.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet15 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet16 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet17);
        setPreferenceServlet15.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet17);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet20 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet15.init((javax.servlet.ServletConfig) recommendServlet20);
        batchDeleteCandidatesServlet12.init((javax.servlet.ServletConfig) setPreferenceServlet15);
        batchDeleteCandidatesServlet12.destroy();
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet25 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet27 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet26.init((javax.servlet.ServletConfig) batchSetPreferencesServlet27);
        batchDeleteCandidatesServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet27);
        javax.servlet.ServletConfig servletConfig30 = batchSetPreferencesServlet27.getServletConfig();
        batchSetPreferencesServlet27.init();
        batchDeleteCandidatesServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet27);
        addCandidateServlet2.init((javax.servlet.ServletConfig) batchSetPreferencesServlet27);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet34 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet34.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        recommendServlet34.destroy();
        addCandidateServlet2.init((javax.servlet.ServletConfig) recommendServlet34);
        recommendServlet34.destroy();
        recommendServlet0.init((javax.servlet.ServletConfig) recommendServlet34);
        org.junit.Assert.assertNull(servletConfig1);
        org.junit.Assert.assertNull(servletConfig9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(servletConfig30);
    }

    @Test
    public void test38538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38538");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        boolean boolean9 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double12 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        double double16 = factorizationbasedRecommenderConfig14.getLambda();
        int int17 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        java.lang.String str18 = factorizationbasedRecommenderConfig14.getRetrainCronExpression();
        int int19 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        factorizationbasedRecommenderConfig14.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig14.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double24 = factorizationbasedRecommenderConfig14.getLambda();
        factorizationbasedRecommenderConfig14.setAlpha((double) (short) 10);
        factorizationbasedRecommenderConfig14.setNumberOfIterations(100);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        double double30 = factorizationbasedRecommenderConfig14.getAlpha();
        factorizationbasedRecommenderConfig14.setNumberOfIterations(0);
        boolean boolean33 = factorizationbasedRecommenderConfig14.isUsesImplicitFeedback();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test38539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38539");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setNumProcessorsForTraining(0);
        java.lang.String str7 = null; // flaky: configuration4.getModelDirectory();
        int int8 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = null; // flaky: configuration4.getStorageConfiguration();
// flaky:         configuration4.setNumProcessorsForTraining(100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig13 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str14 = itembasedRecommenderConfig13.getSimilarityClass();
        int int15 = itembasedRecommenderConfig13.getSimilarItemsPerItem();
        int int16 = itembasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig13.setSimilarityClass("userID");
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig13);
        itembasedRecommenderConfig13.setSimilarItemsPerItem((int) (short) 10);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "itemID" + "'", str7, "itemID");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test38540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38540");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig5 = batchSetPreferencesServlet2.getServletConfig();
        java.lang.String str6 = batchSetPreferencesServlet2.getServletInfo();
        java.lang.String str7 = batchSetPreferencesServlet2.getServletInfo();
        batchSetPreferencesServlet2.destroy();
        batchSetPreferencesServlet2.destroy();
        batchSetPreferencesServlet2.init();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration11 = batchSetPreferencesServlet2.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test38541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38541");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        javax.servlet.ServletConfig servletConfig3 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig6 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str9 = recommendServlet8.getServletInfo();
        javax.servlet.ServletConfig servletConfig10 = recommendServlet8.getServletConfig();
        java.lang.String str11 = recommendServlet8.getServletInfo();
        javax.servlet.ServletConfig servletConfig12 = recommendServlet8.getServletConfig();
        recommendServlet8.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) recommendServlet8);
        javax.servlet.ServletConfig servletConfig15 = batchDeleteCandidatesServlet0.getServletConfig();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNull(servletConfig6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertNotNull(servletConfig15);
    }

    @Test
    public void test38542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38542");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        int int2 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList3 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = null;
        configuration0.setStorageConfiguration(storageConfiguration4);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = configuration0.getFactorizationbasedRecommenders();
        java.lang.Class<?> wildcardClass7 = factorizationbasedRecommenderConfigList6.getClass();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList3);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test38543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38543");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig2 = trainServlet0.getServletConfig();
        trainServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = trainServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet5 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet6 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet5.init((javax.servlet.ServletConfig) batchSetPreferencesServlet6);
        javax.servlet.ServletConfig servletConfig8 = batchSetPreferencesServlet5.getServletConfig();
        batchSetPreferencesServlet5.init();
        batchSetPreferencesServlet5.init();
        javax.servlet.ServletConfig servletConfig11 = batchSetPreferencesServlet5.getServletConfig();
        trainServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet5);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet14 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        batchDeleteCandidatesServlet13.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        java.lang.String str18 = batchDeleteCandidatesServlet13.getServletInfo();
        batchSetPreferencesServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet13);
        javax.servlet.ServletRequest servletRequest20 = null;
        javax.servlet.ServletResponse servletResponse21 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet13.service(servletRequest20, servletResponse21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig2);
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNotNull(servletConfig8);
        org.junit.Assert.assertNotNull(servletConfig11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test38544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38544");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setJdbcDriverClass("batchSize");
        java.lang.String str12 = storageConfiguration4.getPassword();
        java.lang.String str13 = storageConfiguration4.getJdbcUrl();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig17 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double18 = factorizationbasedRecommenderConfig17.getAlpha();
        double double19 = factorizationbasedRecommenderConfig17.getLambda();
        int int20 = factorizationbasedRecommenderConfig17.getNumberOfFeatures();
        factorizationbasedRecommenderConfig17.setUsesImplicitFeedback(true);
        double double23 = factorizationbasedRecommenderConfig17.getAlpha();
        java.lang.String str24 = factorizationbasedRecommenderConfig17.getRetrainCronExpression();
        int int25 = factorizationbasedRecommenderConfig17.getRetrainAfterPreferenceChanges();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig17);
        factorizationbasedRecommenderConfig17.setRetrainCronExpression("itemID");
        factorizationbasedRecommenderConfig17.setLambda((double) (byte) 0);
        factorizationbasedRecommenderConfig17.setRetrainAfterPreferenceChanges(97);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer33 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig17);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration15);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test38545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38545");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
        java.lang.String str11 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = null; // flaky: configuration1.getStorageConfiguration();
        int int13 = 0; // flaky: configuration1.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str15 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str18 = storageConfiguration14.getPassword();
        java.lang.String str19 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration14.setUsername("org.plista.kornakapi.web.MissingParameterException: itemIDs");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration14);
        org.plista.kornakapi.core.config.Configuration configuration25 = new org.plista.kornakapi.core.config.Configuration();
        int int26 = configuration25.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList27 = configuration25.getItembasedRecommenders();
        configuration25.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: recommender");
        org.plista.kornakapi.web.Components components30 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration31 = null; // flaky: components30.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration32 = null; // flaky: components30.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage33 = null; // flaky: components30.storage();
        org.plista.kornakapi.core.storage.Storage storage34 = null; // flaky: components30.storage();
        org.plista.kornakapi.core.config.Configuration configuration35 = null; // flaky: components30.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList36 = null; // flaky: configuration35.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig37 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig37.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer40 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig37);
        itembasedRecommenderConfig37.setRetrainCronExpression("");
        itembasedRecommenderConfig37.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig37.setRetrainCronExpression("");
// flaky:         configuration35.addItembasedRecommender(itembasedRecommenderConfig37);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer48 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig37);
        int int49 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer50 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig37);
        configuration25.addItembasedRecommender(itembasedRecommenderConfig37);
        int int52 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig37);
        itembasedRecommenderConfig37.setName("file");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "itemID" + "'", str11, "itemID");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration12);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList27);
// flaky:         org.junit.Assert.assertNotNull(components30);
// flaky:         org.junit.Assert.assertNotNull(configuration31);
// flaky:         org.junit.Assert.assertNotNull(configuration32);
        org.junit.Assert.assertNull(storage33);
        org.junit.Assert.assertNull(storage34);
// flaky:         org.junit.Assert.assertNotNull(configuration35);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList36);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
    }

    @Test
    public void test38546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38546");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = null; // flaky: configuration5.getStorageConfiguration();
        org.plista.kornakapi.web.Components components8 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components8.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = null; // flaky: components8.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration13 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig14.setSimilarityClass("");
        java.lang.String str17 = itembasedRecommenderConfig14.getName();
        java.lang.String str18 = itembasedRecommenderConfig14.getSimilarityClass();
        itembasedRecommenderConfig14.setName("");
        java.lang.String str21 = itembasedRecommenderConfig14.getSimilarityClass();
// flaky:         configuration13.addItembasedRecommender(itembasedRecommenderConfig14);
        itembasedRecommenderConfig14.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig14);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig26 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double27 = factorizationbasedRecommenderConfig26.getAlpha();
        double double28 = factorizationbasedRecommenderConfig26.getLambda();
        boolean boolean29 = factorizationbasedRecommenderConfig26.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig26.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig26);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList33 = null; // flaky: configuration5.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration7);
// flaky:         org.junit.Assert.assertNotNull(components8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(trainingScheduler11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList33);
    }

    @Test
    public void test38547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38547");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        java.lang.String str7 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        setPreferenceServlet0.destroy();
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test38548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38548");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration0.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = configuration0.getStorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNotNull(storageConfiguration13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test38549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38549");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener23 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener23.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener25 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener23.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler31 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler31, "org.plista.kornakapi.web.InvalidParameterException: file", (int) (byte) 10);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener34);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener39 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener41 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener39.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener41);
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener46 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener48 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener48.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener48.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener46.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener48);
        delegatingPreferenceChangeListener48.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener48);
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener55 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener55.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener57 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener57.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener57.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener55.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener57);
        delegatingPreferenceChangeListener41.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener57);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener62 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener57.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener67 = null;
        delegatingPreferenceChangeListener57.addDelegate(preferenceChangeListener67);
        delegatingPreferenceChangeListener0.addDelegate(preferenceChangeListener67);
        org.plista.kornakapi.web.Components components70 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration71 = null; // flaky: components70.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration72 = null; // flaky: components70.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage73 = null; // flaky: components70.storage();
        org.plista.kornakapi.core.storage.Storage storage74 = null; // flaky: components70.storage();
        org.plista.kornakapi.core.config.Configuration configuration75 = null; // flaky: components70.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage76 = null; // flaky: components70.storage();
        org.plista.kornakapi.core.config.Configuration configuration77 = null; // flaky: components70.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener78 = null; // flaky: components70.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration79 = null; // flaky: components70.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener80 = null; // flaky: components70.preferenceChangeListener();
        delegatingPreferenceChangeListener0.addDelegate(preferenceChangeListener80);
        // The following exception was thrown during execution in test generation
        try {
            delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(components70);
// flaky:         org.junit.Assert.assertNotNull(configuration71);
// flaky:         org.junit.Assert.assertNotNull(configuration72);
        org.junit.Assert.assertNull(storage73);
        org.junit.Assert.assertNull(storage74);
// flaky:         org.junit.Assert.assertNotNull(configuration75);
        org.junit.Assert.assertNull(storage76);
// flaky:         org.junit.Assert.assertNotNull(configuration77);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener78);
// flaky:         org.junit.Assert.assertNotNull(configuration79);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener80);
    }

    @Test
    public void test38550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38550");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getJdbcDriverClass();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str17 = itembasedRecommenderConfig16.getRetrainCronExpression();
        int int18 = itembasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        java.lang.String str19 = itembasedRecommenderConfig16.getSimilarityClass();
        itembasedRecommenderConfig16.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig16.setRetrainCronExpression("value");
        int int24 = itembasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        int int25 = itembasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig16.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str28 = itembasedRecommenderConfig16.getRetrainCronExpression();
        java.lang.String str29 = itembasedRecommenderConfig16.getSimilarityClass();
        java.lang.String str30 = itembasedRecommenderConfig16.getSimilarityClass();
        int int31 = itembasedRecommenderConfig16.getSimilarItemsPerItem();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig16);
        int int33 = itembasedRecommenderConfig16.getSimilarItemsPerItem();
        itembasedRecommenderConfig16.setSimilarityClass("MutablePreference{userID=0, itemID=10000, value=0.0}");
        int int36 = itembasedRecommenderConfig16.getSimilarItemsPerItem();
        java.lang.String str37 = itembasedRecommenderConfig16.getSimilarityClass();
        java.lang.String str38 = itembasedRecommenderConfig16.getRetrainCronExpression();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "value" + "'", str28, "value");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=0.0}" + "'", str37, "MutablePreference{userID=0, itemID=10000, value=0.0}");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "value" + "'", str38, "value");
    }

    @Test
    public void test38551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38551");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) '4');
        java.lang.String str5 = configuration0.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components7 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage10 = null; // flaky: components7.storage();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components7.storage();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components7.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList13 = null; // flaky: configuration12.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str15 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str18 = storageConfiguration14.getJdbcUrl();
        java.lang.String str19 = storageConfiguration14.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration14.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration14.getPassword();
// flaky:         configuration12.setStorageConfiguration(storageConfiguration14);
        java.lang.String str23 = null; // flaky: configuration12.getModelDirectory();
        int int24 = 0; // flaky: configuration12.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList25 = null; // flaky: configuration12.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig26 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig26.setSimilarityClass("");
        java.lang.String str29 = itembasedRecommenderConfig26.getName();
        java.lang.String str30 = itembasedRecommenderConfig26.getSimilarityClass();
        itembasedRecommenderConfig26.setName("");
// flaky:         configuration12.addItembasedRecommender(itembasedRecommenderConfig26);
        itembasedRecommenderConfig26.setRetrainAfterPreferenceChanges((int) ' ');
        configuration0.addItembasedRecommender(itembasedRecommenderConfig26);
        configuration0.setModelDirectory("MutablePreference{userID=100, itemID=0, value=35.0}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(storage10);
        org.junit.Assert.assertNull(storage11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "itemID" + "'", str23, "itemID");
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test38552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38552");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet3 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet4 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet3.init((javax.servlet.ServletConfig) batchSetPreferencesServlet4);
        batchDeleteCandidatesServlet2.init((javax.servlet.ServletConfig) batchSetPreferencesServlet4);
        javax.servlet.ServletConfig servletConfig7 = batchSetPreferencesServlet4.getServletConfig();
        addCandidateServlet0.init(servletConfig7);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str11 = batchDeleteCandidatesServlet10.getServletInfo();
        java.lang.String str12 = batchDeleteCandidatesServlet10.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet13 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        setPreferenceServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet13.init((javax.servlet.ServletConfig) recommendServlet18);
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) setPreferenceServlet13);
        batchDeleteCandidatesServlet10.destroy();
        batchDeleteCandidatesServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet24 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        batchDeleteCandidatesServlet23.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig28 = batchSetPreferencesServlet25.getServletConfig();
        batchSetPreferencesServlet25.init();
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        addCandidateServlet0.destroy();
        addCandidateServlet0.destroy();
        javax.servlet.ServletRequest servletRequest34 = null;
        javax.servlet.ServletResponse servletResponse35 = null;
        // The following exception was thrown during execution in test generation
        try {
            addCandidateServlet0.service(servletRequest34, servletResponse35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(servletConfig28);
    }

    @Test
    public void test38553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38553");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("itemID", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: label", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException15 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException15);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException15);
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException19.addSuppressed((java.lang.Throwable) missingParameterException21);
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException17);
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException28);
        invalidParameterException24.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException35 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException34);
        missingParameterException28.addSuppressed((java.lang.Throwable) invalidParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("itemID", (java.lang.Throwable) missingParameterException28);
        invalidParameterException9.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException39 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=97, itemID=1, value=97.0}", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=-1, itemID=10, value=-1.0}", (java.lang.Throwable) invalidParameterException39);
    }

    @Test
    public void test38554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38554");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        java.lang.String str8 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet9 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig13 = batchSetPreferencesServlet10.getServletConfig();
        addCandidateServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet10.getServletConfig();
        batchSetPreferencesServlet10.destroy();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        javax.servlet.ServletRequest servletRequest18 = null;
        javax.servlet.ServletResponse servletResponse19 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet10.service(servletRequest18, servletResponse19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig15);
    }

    @Test
    public void test38555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38555");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) -1, (long) (byte) 10, (float) (short) 10);
        long long7 = mutablePreference0.getUserID();
        long long8 = mutablePreference0.getUserID();
        long long9 = mutablePreference0.getItemID();
        long long10 = mutablePreference0.getItemID();
        float float11 = mutablePreference0.getValue();
        long long12 = mutablePreference0.getUserID();
        long long13 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 10.0f + "'", float11 == 10.0f);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
    }

    @Test
    public void test38556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38556");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        long long12 = mutableCandidate0.getItemID();
        long long13 = mutableCandidate0.getItemID();
        java.lang.String str14 = mutableCandidate0.getLabel();
        long long15 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=-1, value=32.0}", (long) (byte) 10);
        java.lang.String str19 = mutableCandidate0.getLabel();
        java.lang.String str20 = mutableCandidate0.getLabel();
        java.lang.String str21 = mutableCandidate0.getLabel();
        java.lang.String str22 = mutableCandidate0.getLabel();
        mutableCandidate0.set("", 0L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 35L + "'", long13 == 35L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str14, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 35L + "'", long15 == 35L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=0, itemID=-1, value=32.0}" + "'", str19, "MutablePreference{userID=0, itemID=-1, value=32.0}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=0, itemID=-1, value=32.0}" + "'", str20, "MutablePreference{userID=0, itemID=-1, value=32.0}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "MutablePreference{userID=0, itemID=-1, value=32.0}" + "'", str21, "MutablePreference{userID=0, itemID=-1, value=32.0}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "MutablePreference{userID=0, itemID=-1, value=32.0}" + "'", str22, "MutablePreference{userID=0, itemID=-1, value=32.0}");
    }

    @Test
    public void test38557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38557");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(1);
        int int10 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: label");
        java.lang.String str13 = itembasedRecommenderConfig0.getRetrainCronExpression();
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=1, itemID=10, value=10000.0}");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(1);
        java.lang.String str18 = itembasedRecommenderConfig0.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer19 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: label" + "'", str18, "org.plista.kornakapi.web.InvalidParameterException: label");
    }

    @Test
    public void test38558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38558");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration1.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcUrl();
        java.lang.String str10 = storageConfiguration4.getJdbcUrl();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str13 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str16 = storageConfiguration12.getPassword();
        java.lang.String str17 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str20 = storageConfiguration12.getJdbcUrl();
        java.lang.String str21 = storageConfiguration12.getUsername();
        java.lang.String str22 = storageConfiguration12.getJdbcDriverClass();
        java.lang.String str23 = storageConfiguration12.getJdbcUrl();
        java.lang.String str24 = storageConfiguration12.getUsername();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration12);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList26 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str21, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str24, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList26);
    }

    @Test
    public void test38559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38559");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("");
        factorizationbasedRecommenderConfig0.setName("");
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '4');
        factorizationbasedRecommenderConfig0.setLambda((double) 52.0f);
        int int13 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test38560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38560");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getUsername();
        java.lang.String str11 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration9.getPassword();
        storageConfiguration9.setJdbcUrl("file");
        configuration0.setStorageConfiguration(storageConfiguration9);
        org.plista.kornakapi.web.Components components16 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components16.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList18 = null; // flaky: configuration17.getFactorizationbasedRecommenders();
        java.lang.String str19 = null; // flaky: configuration17.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList20 = null; // flaky: configuration17.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setName("recommender");
// flaky:         configuration17.addItembasedRecommender(itembasedRecommenderConfig21);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig21);
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=10000, value=0.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig28 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double29 = factorizationbasedRecommenderConfig28.getAlpha();
        double double30 = factorizationbasedRecommenderConfig28.getLambda();
        int int31 = factorizationbasedRecommenderConfig28.getNumberOfFeatures();
        java.lang.String str32 = factorizationbasedRecommenderConfig28.getRetrainCronExpression();
        int int33 = factorizationbasedRecommenderConfig28.getNumberOfFeatures();
        factorizationbasedRecommenderConfig28.setNumberOfIterations((int) (short) 0);
        double double36 = factorizationbasedRecommenderConfig28.getLambda();
        int int37 = factorizationbasedRecommenderConfig28.getNumberOfFeatures();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig28);
        org.plista.kornakapi.web.Components components39 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage40 = null; // flaky: components39.storage();
        org.plista.kornakapi.core.config.Configuration configuration41 = null; // flaky: components39.getConfiguration();
        java.lang.String str42 = null; // flaky: configuration41.getModelDirectory();
        int int43 = 0; // flaky: configuration41.getNumProcessorsForTraining();
        int int44 = 0; // flaky: configuration41.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig45 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str46 = itembasedRecommenderConfig45.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer47 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig45);
        int int48 = itembasedRecommenderConfig45.getSimilarItemsPerItem();
        int int49 = itembasedRecommenderConfig45.getSimilarItemsPerItem();
        itembasedRecommenderConfig45.setRetrainAfterPreferenceChanges(100);
// flaky:         configuration41.addItembasedRecommender(itembasedRecommenderConfig45);
        itembasedRecommenderConfig45.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        itembasedRecommenderConfig45.setSimilarItemsPerItem((int) (short) 1);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig45);
        org.plista.kornakapi.core.storage.Storage storage58 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap59 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap60 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler61 = null;
        org.plista.kornakapi.web.Components components62 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration63 = null; // flaky: components62.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration64 = null; // flaky: components62.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler65 = null; // flaky: components62.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration66 = null; // flaky: components62.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage67 = null; // flaky: components62.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler68 = null; // flaky: components62.scheduler();
        org.plista.kornakapi.core.storage.Storage storage69 = null; // flaky: components62.storage();
        org.plista.kornakapi.core.storage.Storage storage70 = null; // flaky: components62.storage();
        org.plista.kornakapi.core.config.Configuration configuration71 = null; // flaky: components62.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage72 = null; // flaky: components62.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler73 = null; // flaky: components62.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener74 = null; // flaky: components62.preferenceChangeListener();
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration0, storage58, strMap59, strMap60, trainingScheduler61, preferenceChangeListener74);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
// flaky:         org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList18);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "itemID" + "'", str19, "itemID");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList20);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
// flaky:         org.junit.Assert.assertNotNull(components39);
        org.junit.Assert.assertNull(storage40);
// flaky:         org.junit.Assert.assertNotNull(configuration41);
// flaky:         org.junit.Assert.assertEquals("'" + str42 + "' != '" + "itemID" + "'", str42, "itemID");
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
// flaky:         org.junit.Assert.assertNotNull(components62);
// flaky:         org.junit.Assert.assertNotNull(configuration63);
// flaky:         org.junit.Assert.assertNotNull(configuration64);
        org.junit.Assert.assertNull(trainingScheduler65);
// flaky:         org.junit.Assert.assertNotNull(configuration66);
        org.junit.Assert.assertNull(storage67);
        org.junit.Assert.assertNull(trainingScheduler68);
        org.junit.Assert.assertNull(storage69);
        org.junit.Assert.assertNull(storage70);
// flaky:         org.junit.Assert.assertNotNull(configuration71);
        org.junit.Assert.assertNull(storage72);
        org.junit.Assert.assertNull(trainingScheduler73);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener74);
    }

    @Test
    public void test38561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38561");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet11.init();
        java.lang.String str13 = batchAddCandidatesServlet11.getServletInfo();
        javax.servlet.ServletConfig servletConfig14 = batchAddCandidatesServlet11.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str16 = batchDeleteCandidatesServlet15.getServletInfo();
        java.lang.String str17 = batchDeleteCandidatesServlet15.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet18 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet20 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        setPreferenceServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet23 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet18.init((javax.servlet.ServletConfig) recommendServlet23);
        batchDeleteCandidatesServlet15.init((javax.servlet.ServletConfig) setPreferenceServlet18);
        batchAddCandidatesServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchAddCandidatesServlet11);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet28 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet29 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet28.init((javax.servlet.ServletConfig) batchSetPreferencesServlet29);
        java.lang.String str31 = batchSetPreferencesServlet29.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet32 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str33 = batchDeleteCandidatesServlet32.getServletInfo();
        java.lang.String str34 = batchDeleteCandidatesServlet32.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet35 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet36 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet37 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet37);
        setPreferenceServlet35.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet37);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet40 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet35.init((javax.servlet.ServletConfig) recommendServlet40);
        batchDeleteCandidatesServlet32.init((javax.servlet.ServletConfig) setPreferenceServlet35);
        batchDeleteCandidatesServlet32.destroy();
        batchDeleteCandidatesServlet32.init();
        batchDeleteCandidatesServlet32.destroy();
        javax.servlet.ServletConfig servletConfig46 = batchDeleteCandidatesServlet32.getServletConfig();
        batchSetPreferencesServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet32);
        batchDeleteCandidatesServlet32.init();
        batchAddCandidatesServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet32);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet50 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str51 = batchDeleteCandidatesServlet50.getServletInfo();
        java.lang.String str52 = batchDeleteCandidatesServlet50.getServletInfo();
        batchDeleteCandidatesServlet50.destroy();
        batchAddCandidatesServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet50);
        batchAddCandidatesServlet11.init();
        javax.servlet.ServletConfig servletConfig56 = batchAddCandidatesServlet11.getServletConfig();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(servletConfig46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(servletConfig56);
    }

    @Test
    public void test38562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38562");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(1);
        int int10 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str11 = itembasedRecommenderConfig0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test38563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38563");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 1);
        long long6 = mutablePreference0.getUserID();
        java.lang.String str7 = mutablePreference0.toString();
        mutablePreference0.setValue((float) (short) 0);
        mutablePreference0.set((long) (short) 10, (long) ' ', (float) 32L);
        java.lang.String str14 = mutablePreference0.toString();
        mutablePreference0.set((long) (-1), 0L, (float) 35);
        java.lang.String str19 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=10, itemID=32, value=32.0}" + "'", str14, "MutablePreference{userID=10, itemID=32, value=32.0}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=-1, itemID=0, value=35.0}" + "'", str19, "MutablePreference{userID=-1, itemID=0, value=35.0}");
    }

    @Test
    public void test38564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38564");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double6 = factorizationbasedRecommenderConfig5.getAlpha();
        double double7 = factorizationbasedRecommenderConfig5.getLambda();
        int int8 = factorizationbasedRecommenderConfig5.getNumberOfFeatures();
        factorizationbasedRecommenderConfig5.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig5.getAlpha();
        java.lang.String str12 = factorizationbasedRecommenderConfig5.getRetrainCronExpression();
        int int13 = factorizationbasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        int int14 = factorizationbasedRecommenderConfig5.getNumberOfIterations();
        factorizationbasedRecommenderConfig5.setNumberOfFeatures((int) '#');
        double double17 = factorizationbasedRecommenderConfig5.getLambda();
        boolean boolean18 = factorizationbasedRecommenderConfig5.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig5.setUsesImplicitFeedback(false);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        java.lang.String str22 = null; // flaky: configuration4.getModelDirectory();
// flaky:         configuration4.setModelDirectory("userID");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList25 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig26 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double27 = factorizationbasedRecommenderConfig26.getAlpha();
        double double28 = factorizationbasedRecommenderConfig26.getLambda();
        int int29 = factorizationbasedRecommenderConfig26.getNumberOfFeatures();
        factorizationbasedRecommenderConfig26.setUsesImplicitFeedback(false);
        int int32 = factorizationbasedRecommenderConfig26.getNumberOfFeatures();
        factorizationbasedRecommenderConfig26.setLambda((double) 0);
        factorizationbasedRecommenderConfig26.setName("userID");
        int int37 = factorizationbasedRecommenderConfig26.getNumberOfFeatures();
        factorizationbasedRecommenderConfig26.setAlpha((double) 1.0f);
        int int40 = factorizationbasedRecommenderConfig26.getNumberOfIterations();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer41 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig26);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig26);
        java.lang.String str43 = null; // flaky: configuration4.getModelDirectory();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "itemID" + "'", str22, "itemID");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList25);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "userID" + "'", str43, "userID");
    }

    @Test
    public void test38565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38565");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.lang.String str5 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration6 = new org.plista.kornakapi.core.config.Configuration();
        configuration6.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig9 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double10 = factorizationbasedRecommenderConfig9.getAlpha();
        double double11 = factorizationbasedRecommenderConfig9.getLambda();
        configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig9);
        java.lang.String str13 = configuration6.getModelDirectory();
        int int14 = configuration6.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = configuration6.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str17 = storageConfiguration16.getJdbcDriverClass();
        storageConfiguration16.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str20 = storageConfiguration16.getJdbcUrl();
        java.lang.String str21 = storageConfiguration16.getJdbcUrl();
        storageConfiguration16.setJdbcUrl("label");
        configuration6.setStorageConfiguration(storageConfiguration16);
        java.lang.String str25 = storageConfiguration16.getPassword();
        storageConfiguration16.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        configuration0.setStorageConfiguration(storageConfiguration16);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig29 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double30 = factorizationbasedRecommenderConfig29.getAlpha();
        double double31 = factorizationbasedRecommenderConfig29.getLambda();
        int int32 = factorizationbasedRecommenderConfig29.getNumberOfFeatures();
        java.lang.String str33 = factorizationbasedRecommenderConfig29.getRetrainCronExpression();
        int int34 = factorizationbasedRecommenderConfig29.getNumberOfFeatures();
        factorizationbasedRecommenderConfig29.setNumberOfIterations((int) (short) 0);
        boolean boolean37 = factorizationbasedRecommenderConfig29.isUsesImplicitFeedback();
        java.lang.String str38 = factorizationbasedRecommenderConfig29.getRetrainCronExpression();
        double double39 = factorizationbasedRecommenderConfig29.getLambda();
        factorizationbasedRecommenderConfig29.setLambda((double) (byte) -1);
        factorizationbasedRecommenderConfig29.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig29.setLambda((double) 100L);
        int int46 = factorizationbasedRecommenderConfig29.getRetrainAfterPreferenceChanges();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig29);
        factorizationbasedRecommenderConfig29.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        factorizationbasedRecommenderConfig29.setNumberOfFeatures((int) (short) 100);
        double double52 = factorizationbasedRecommenderConfig29.getLambda();
        factorizationbasedRecommenderConfig29.setNumberOfFeatures(10000);
        double double55 = factorizationbasedRecommenderConfig29.getAlpha();
        factorizationbasedRecommenderConfig29.setLambda((double) (short) 100);
        factorizationbasedRecommenderConfig29.setLambda((double) 10.0f);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer60 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig29);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 100.0d + "'", double52 == 100.0d);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test38566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38566");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10000);
        int int12 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file16 = null;
        org.plista.kornakapi.core.storage.Storage storage17 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender18 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer15.train(file16, storage17, recommender18, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test38567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38567");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage10 = null; // flaky: components0.storage();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener9);
        org.junit.Assert.assertNull(storage10);
    }

    @Test
    public void test38568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38568");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str13 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str16 = storageConfiguration12.getJdbcUrl();
        java.lang.String str17 = storageConfiguration12.getJdbcDriverClass();
        java.lang.String str18 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str21 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setPassword("hi!");
        java.lang.String str24 = storageConfiguration12.getPassword();
        java.lang.String str25 = storageConfiguration12.getUsername();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration12);
// flaky:         configuration1.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: howMany");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig29 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str30 = itembasedRecommenderConfig29.getRetrainCronExpression();
        int int31 = itembasedRecommenderConfig29.getRetrainAfterPreferenceChanges();
        java.lang.String str32 = itembasedRecommenderConfig29.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer33 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig29);
        itembasedRecommenderConfig29.setSimilarItemsPerItem((int) (byte) 10);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig29);
        int int37 = 0; // flaky: configuration1.getNumProcessorsForTraining();
// flaky:         configuration1.setModelDirectory("MutablePreference{userID=0, itemID=10000, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "userID" + "'", str3, "userID");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str25, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(str32);
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
    }

    @Test
    public void test38569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38569");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 10);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) 35);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) 100L);
        double double17 = fixedCandidatesIDRescorer1.rescore(100L, 10000.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double21 = fixedCandidatesIDRescorer1.rescore((long) 0, (double) (-1L));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10000.0d + "'", double17 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + (-1.0d) + "'", double21 == (-1.0d));
    }

    @Test
    public void test38570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38570");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
// flaky:         configuration2.setModelDirectory("itemID");
        java.lang.String str5 = null; // flaky: configuration2.getModelDirectory();
// flaky:         configuration2.setModelDirectory("");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str9 = storageConfiguration8.getJdbcDriverClass();
        storageConfiguration8.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str12 = storageConfiguration8.getJdbcUrl();
        java.lang.String str13 = storageConfiguration8.getJdbcDriverClass();
        storageConfiguration8.setJdbcDriverClass("batchSize");
        java.lang.String str16 = storageConfiguration8.getPassword();
        storageConfiguration8.setUsername("batchSize");
// flaky:         configuration2.setStorageConfiguration(storageConfiguration8);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.web.Components components21 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration22 = null; // flaky: components21.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler23 = null; // flaky: components21.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler24 = null; // flaky: components21.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration25 = null; // flaky: components21.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration26 = null; // flaky: components21.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList27 = null; // flaky: configuration26.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration28 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str29 = storageConfiguration28.getJdbcDriverClass();
        storageConfiguration28.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str32 = storageConfiguration28.getJdbcUrl();
        java.lang.String str33 = storageConfiguration28.getJdbcDriverClass();
        java.lang.String str34 = storageConfiguration28.getJdbcDriverClass();
        java.lang.String str35 = storageConfiguration28.getJdbcDriverClass();
// flaky:         configuration26.setStorageConfiguration(storageConfiguration28);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig37 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str38 = itembasedRecommenderConfig37.getRetrainCronExpression();
        int int39 = itembasedRecommenderConfig37.getRetrainAfterPreferenceChanges();
        java.lang.String str40 = itembasedRecommenderConfig37.getSimilarityClass();
        itembasedRecommenderConfig37.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig37.setRetrainCronExpression("value");
        int int45 = itembasedRecommenderConfig37.getRetrainAfterPreferenceChanges();
        int int46 = itembasedRecommenderConfig37.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig37.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str49 = itembasedRecommenderConfig37.getRetrainCronExpression();
        java.lang.String str50 = itembasedRecommenderConfig37.getSimilarityClass();
        java.lang.String str51 = itembasedRecommenderConfig37.getSimilarityClass();
        int int52 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
// flaky:         configuration26.addItembasedRecommender(itembasedRecommenderConfig37);
        int int54 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
        itembasedRecommenderConfig37.setSimilarItemsPerItem(32);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer57 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig37);
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig37);
        itembasedRecommenderConfig37.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: ");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer61 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig37);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "itemID" + "'", str5, "itemID");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration20);
// flaky:         org.junit.Assert.assertNotNull(components21);
// flaky:         org.junit.Assert.assertNotNull(configuration22);
        org.junit.Assert.assertNull(trainingScheduler23);
        org.junit.Assert.assertNull(trainingScheduler24);
// flaky:         org.junit.Assert.assertNotNull(configuration25);
// flaky:         org.junit.Assert.assertNotNull(configuration26);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "value" + "'", str49, "value");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 1 + "'", int52 == 1);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
    }

    @Test
    public void test38571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38571");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet13 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str14 = trainServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet15 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet15.destroy();
        javax.servlet.ServletConfig servletConfig17 = deleteCandidateServlet15.getServletConfig();
        deleteCandidateServlet15.destroy();
        trainServlet13.init((javax.servlet.ServletConfig) deleteCandidateServlet15);
        java.lang.String str20 = trainServlet13.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet13);
        batchDeleteCandidatesServlet0.init();
        java.lang.String str23 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        javax.servlet.ServletConfig servletConfig25 = batchDeleteCandidatesServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext26 = batchDeleteCandidatesServlet0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(servletConfig25);
    }

    @Test
    public void test38572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38572");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) (short) 1);
        double double13 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
    }

    @Test
    public void test38573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38573");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig7.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig7);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        int int19 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        int int21 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer22 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        java.lang.String str23 = itembasedRecommenderConfig7.getSimilarityClass();
        java.lang.String str24 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setSimilarityClass("MutablePreference{userID=10, itemID=-1, value=97.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test38574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38574");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = null; // flaky: configuration5.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration17 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str18 = storageConfiguration17.getJdbcDriverClass();
        storageConfiguration17.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str21 = storageConfiguration17.getPassword();
        java.lang.String str22 = storageConfiguration17.getUsername();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration17);
        storageConfiguration17.setPassword("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=-1, value=32.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str22, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38575");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.init();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str9 = recommendServlet8.getServletInfo();
        recommendServlet8.init();
        recommendServlet8.init();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) recommendServlet8);
        recommendServlet8.init();
        java.lang.String str14 = recommendServlet8.getServletInfo();
        javax.servlet.ServletConfig servletConfig15 = recommendServlet8.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            recommendServlet8.log("MutablePreference{userID=10, itemID=10000, value=-1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(servletConfig15);
    }

    @Test
    public void test38576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38576");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("");
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        int int7 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((-1));
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test38577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38577");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 10);
        factorizationbasedRecommenderConfig0.setName("");
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getName();
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) ' ');
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test38578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38578");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double9 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) -1);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double13 = factorizationbasedRecommenderConfig0.getAlpha();
        double double14 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) 1.0f);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test38579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38579");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        long long12 = mutableCandidate0.getItemID();
        mutableCandidate0.set("userID", (long) '#');
        java.lang.String str16 = mutableCandidate0.getLabel();
        java.lang.String str17 = mutableCandidate0.getLabel();
        java.lang.String str18 = mutableCandidate0.getLabel();
        long long19 = mutableCandidate0.getItemID();
        java.lang.String str20 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "userID" + "'", str16, "userID");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "userID" + "'", str17, "userID");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "userID" + "'", str18, "userID");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 35L + "'", long19 == 35L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "userID" + "'", str20, "userID");
    }

    @Test
    public void test38580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38580");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getName();
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(32);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        java.lang.String str17 = factorizationbasedRecommenderConfig0.getName();
        int int18 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test38581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38581");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.io.File file12 = null;
        org.plista.kornakapi.core.storage.Storage storage13 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender14 = null;
        // The following exception was thrown during execution in test generation
        try {
            factorizationbasedInMemoryTrainer11.train(file12, storage13, recommender14, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test38582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38582");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str13 = itembasedRecommenderConfig12.getRetrainCronExpression();
        itembasedRecommenderConfig12.setSimilarityClass("");
        java.lang.String str16 = itembasedRecommenderConfig12.getSimilarityClass();
        itembasedRecommenderConfig12.setRetrainCronExpression("MutablePreference{userID=100, itemID=0, value=0.0}");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig12);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str21 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str24 = storageConfiguration20.getJdbcUrl();
        java.lang.String str25 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str26 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str27 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str28 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        configuration0.setStorageConfiguration(storageConfiguration20);
        storageConfiguration20.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
        storageConfiguration20.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: howMany");
        storageConfiguration20.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=100, itemID=-1, value=97.0}");
        storageConfiguration20.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: value");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test38583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38583");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("batchSize", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.MissingParameterException missingParameterException9 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException9);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException9);
        org.plista.kornakapi.web.MissingParameterException missingParameterException13 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException15 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException13.addSuppressed((java.lang.Throwable) missingParameterException15);
        invalidParameterException11.addSuppressed((java.lang.Throwable) missingParameterException15);
        java.lang.Throwable[] throwableArray18 = missingParameterException15.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException26);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException28 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException26);
        org.plista.kornakapi.web.MissingParameterException missingParameterException30 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException32 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException30.addSuppressed((java.lang.Throwable) missingParameterException32);
        invalidParameterException28.addSuppressed((java.lang.Throwable) missingParameterException32);
        java.lang.Throwable[] throwableArray35 = missingParameterException32.getSuppressed();
        invalidParameterException22.addSuppressed((java.lang.Throwable) missingParameterException32);
        missingParameterException15.addSuppressed((java.lang.Throwable) invalidParameterException22);
        invalidParameterException5.addSuppressed((java.lang.Throwable) missingParameterException15);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException39 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", (java.lang.Throwable) invalidParameterException5);
        org.plista.kornakapi.web.MissingParameterException missingParameterException44 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException45 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException44);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException44);
        java.lang.Throwable[] throwableArray47 = missingParameterException44.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException44);
        invalidParameterException39.addSuppressed((java.lang.Throwable) missingParameterException44);
        org.plista.kornakapi.web.MissingParameterException missingParameterException54 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException55 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException54);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException56 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException54);
        org.plista.kornakapi.web.MissingParameterException missingParameterException58 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException60 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException58.addSuppressed((java.lang.Throwable) missingParameterException60);
        invalidParameterException56.addSuppressed((java.lang.Throwable) missingParameterException60);
        org.plista.kornakapi.web.MissingParameterException missingParameterException66 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException67 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException66);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException68 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException66);
        org.plista.kornakapi.web.MissingParameterException missingParameterException70 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException72 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException70.addSuppressed((java.lang.Throwable) missingParameterException72);
        invalidParameterException68.addSuppressed((java.lang.Throwable) missingParameterException72);
        missingParameterException60.addSuppressed((java.lang.Throwable) missingParameterException72);
        org.plista.kornakapi.web.MissingParameterException missingParameterException78 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException79 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException78);
        missingParameterException72.addSuppressed((java.lang.Throwable) missingParameterException78);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException81 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException78);
        java.lang.Throwable[] throwableArray82 = invalidParameterException81.getSuppressed();
        missingParameterException44.addSuppressed((java.lang.Throwable) invalidParameterException81);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException84 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=97, value=10.0}", (java.lang.Throwable) missingParameterException44);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray82);
    }

    @Test
    public void test38584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38584");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        java.lang.String str7 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        setPreferenceServlet8.destroy();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        java.lang.String str16 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet17.init();
        java.lang.String str19 = batchAddCandidatesServlet17.getServletInfo();
        javax.servlet.ServletConfig servletConfig20 = batchAddCandidatesServlet17.getServletConfig();
        batchAddCandidatesServlet17.init();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str23 = batchDeleteCandidatesServlet22.getServletInfo();
        batchDeleteCandidatesServlet22.init();
        javax.servlet.ServletConfig servletConfig25 = null;
        batchDeleteCandidatesServlet22.init(servletConfig25);
        javax.servlet.ServletConfig servletConfig27 = batchDeleteCandidatesServlet22.getServletConfig();
        batchDeleteCandidatesServlet22.init();
        javax.servlet.ServletConfig servletConfig29 = batchDeleteCandidatesServlet22.getServletConfig();
        java.lang.String str30 = batchDeleteCandidatesServlet22.getServletInfo();
        batchAddCandidatesServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        javax.servlet.ServletConfig servletConfig32 = batchDeleteCandidatesServlet22.getServletConfig();
        setPreferenceServlet0.init(servletConfig32);
        javax.servlet.ServletConfig servletConfig34 = setPreferenceServlet0.getServletConfig();
        setPreferenceServlet0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = setPreferenceServlet0.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(servletConfig20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(servletConfig27);
        org.junit.Assert.assertNull(servletConfig29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertNull(servletConfig34);
    }

    @Test
    public void test38585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38585");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration13.getPassword();
        java.lang.String str21 = storageConfiguration13.getJdbcDriverClass();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration13);
// flaky:         configuration1.setModelDirectory("value");
        org.plista.kornakapi.web.Components components25 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration26 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration27 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage28 = null; // flaky: components25.storage();
        org.plista.kornakapi.core.storage.Storage storage29 = null; // flaky: components25.storage();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        factorizationbasedRecommenderConfig31.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig31.setNumberOfFeatures((int) (short) 100);
        boolean boolean39 = factorizationbasedRecommenderConfig31.isUsesImplicitFeedback();
// flaky:         configuration30.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        org.plista.kornakapi.web.Components components41 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration42 = null; // flaky: components41.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler43 = null; // flaky: components41.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler44 = null; // flaky: components41.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration45 = null; // flaky: components41.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration46 = null; // flaky: components41.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig47 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig47.setSimilarityClass("");
        java.lang.String str50 = itembasedRecommenderConfig47.getName();
        java.lang.String str51 = itembasedRecommenderConfig47.getSimilarityClass();
        itembasedRecommenderConfig47.setName("");
        java.lang.String str54 = itembasedRecommenderConfig47.getSimilarityClass();
// flaky:         configuration46.addItembasedRecommender(itembasedRecommenderConfig47);
        itembasedRecommenderConfig47.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig47);
        java.lang.String str59 = null; // flaky: configuration30.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig60 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str61 = itembasedRecommenderConfig60.getRetrainCronExpression();
        int int62 = itembasedRecommenderConfig60.getRetrainAfterPreferenceChanges();
        java.lang.String str63 = itembasedRecommenderConfig60.getSimilarityClass();
        itembasedRecommenderConfig60.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig60.setSimilarityClass("");
        int int68 = itembasedRecommenderConfig60.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer69 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig60);
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig60);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig60);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration72 = null; // flaky: configuration1.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList73 = null; // flaky: configuration1.getItembasedRecommenders();
// flaky:         configuration1.setNumProcessorsForTraining(10);
// flaky:         configuration1.setNumProcessorsForTraining((int) (byte) 100);
// flaky:         configuration1.setNumProcessorsForTraining(10000);
        java.lang.String str80 = null; // flaky: configuration1.getModelDirectory();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
// flaky:         org.junit.Assert.assertNotNull(components25);
// flaky:         org.junit.Assert.assertNotNull(configuration26);
// flaky:         org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(storage28);
        org.junit.Assert.assertNull(storage29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertNotNull(components41);
// flaky:         org.junit.Assert.assertNotNull(configuration42);
        org.junit.Assert.assertNull(trainingScheduler43);
        org.junit.Assert.assertNull(trainingScheduler44);
// flaky:         org.junit.Assert.assertNotNull(configuration45);
// flaky:         org.junit.Assert.assertNotNull(configuration46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "value" + "'", str59, "value");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration72);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList73);
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "value" + "'", str80, "value");
    }

    @Test
    public void test38586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38586");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        int int8 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        configuration0.setModelDirectory("");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        boolean boolean19 = factorizationbasedRecommenderConfig16.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig16.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig16.setNumberOfFeatures(10);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer24 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig16);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        configuration0.setModelDirectory("MutablePreference{userID=-1, itemID=97, value=52.0}");
        configuration0.setNumProcessorsForTraining(32);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test38587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38587");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=100, itemID=0, value=0.0}", (int) (short) 1);
    }

    @Test
    public void test38588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38588");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test38589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38589");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
// flaky:         configuration1.setNumProcessorsForTraining(0);
// flaky:         configuration1.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemIDs");
// flaky:         configuration1.setModelDirectory("MutablePreference{userID=0, itemID=-1, value=32.0}");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList9 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList9);
    }

    @Test
    public void test38590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38590");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        boolean boolean7 = factorizationbasedRecommenderConfig4.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig4.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration2.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList12 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.Configuration configuration13 = new org.plista.kornakapi.core.config.Configuration();
        configuration13.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str16 = configuration13.getModelDirectory();
        configuration13.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig19 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double20 = factorizationbasedRecommenderConfig19.getAlpha();
        configuration13.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig19);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration22 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str23 = storageConfiguration22.getUsername();
        java.lang.String str24 = storageConfiguration22.getJdbcDriverClass();
        java.lang.String str25 = storageConfiguration22.getPassword();
        storageConfiguration22.setJdbcUrl("file");
        configuration13.setStorageConfiguration(storageConfiguration22);
        storageConfiguration22.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         configuration2.setStorageConfiguration(storageConfiguration22);
        storageConfiguration22.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=35.0}");
        storageConfiguration22.setJdbcUrl("MutablePreference{userID=-1, itemID=97, value=52.0}");
        storageConfiguration22.setPassword("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}");
        storageConfiguration22.setPassword("MutablePreference{userID=97, itemID=0, value=97.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test38591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38591");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        int int4 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        int int9 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig7.setRetrainCronExpression("value");
        java.lang.String str15 = itembasedRecommenderConfig7.getSimilarityClass();
        java.lang.String str16 = itembasedRecommenderConfig7.getSimilarityClass();
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: itemID");
        int int20 = itembasedRecommenderConfig7.getSimilarItemsPerItem();
        java.lang.String str21 = itembasedRecommenderConfig7.getRetrainCronExpression();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemID" + "'", str21, "org.plista.kornakapi.web.InvalidParameterException: itemID");
    }

    @Test
    public void test38592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38592");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=1, itemID=0, value=10.0}", 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test38593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38593");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        java.lang.String str6 = mutablePreference0.toString();
        mutablePreference0.set((long) '4', (long) ' ', (float) (-1L));
        java.lang.String str11 = mutablePreference0.toString();
        long long12 = mutablePreference0.getItemID();
        long long13 = mutablePreference0.getUserID();
        java.lang.String str14 = mutablePreference0.toString();
        mutablePreference0.setValue(0.0f);
        mutablePreference0.setValue(0.0f);
        mutablePreference0.set(1L, (long) 97, (float) 52);
        long long23 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=52, itemID=32, value=-1.0}" + "'", str11, "MutablePreference{userID=52, itemID=32, value=-1.0}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 32L + "'", long12 == 32L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 52L + "'", long13 == 52L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=52, itemID=32, value=-1.0}" + "'", str14, "MutablePreference{userID=52, itemID=32, value=-1.0}");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 97L + "'", long23 == 97L);
    }

    @Test
    public void test38594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38594");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: label", (long) ' ');
        java.lang.String str13 = mutableCandidate0.getLabel();
        long long14 = mutableCandidate0.getItemID();
        long long15 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemID" + "'", str9, "itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: label" + "'", str13, "org.plista.kornakapi.web.InvalidParameterException: label");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 32L + "'", long15 == 32L);
    }

    @Test
    public void test38595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38595");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getAlpha();
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 10);
        factorizationbasedRecommenderConfig0.setLambda((double) 32);
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test38596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38596");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig2 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str3 = itembasedRecommenderConfig2.getRetrainCronExpression();
        int int4 = itembasedRecommenderConfig2.getRetrainAfterPreferenceChanges();
        java.lang.String str5 = itembasedRecommenderConfig2.getSimilarityClass();
        itembasedRecommenderConfig2.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig2.setSimilarityClass("");
        java.lang.String str10 = itembasedRecommenderConfig2.getSimilarityClass();
        itembasedRecommenderConfig2.setSimilarItemsPerItem((int) ' ');
        itembasedRecommenderConfig2.setSimilarityClass("MutablePreference{userID=-1, itemID=10, value=10.0}");
        itembasedRecommenderConfig2.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig2);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig2);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = configuration0.getStorageConfiguration();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(storageConfiguration19);
    }

    @Test
    public void test38597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38597");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNull(storage9);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener10);
    }

    @Test
    public void test38598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38598");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setJdbcDriverClass("batchSize");
        storageConfiguration7.setPassword("howMany");
        storageConfiguration7.setJdbcUrl("hi!");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList20 = null; // flaky: configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList21 = null; // flaky: configuration5.getItembasedRecommenders();
        java.lang.String str22 = null; // flaky: configuration5.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration23 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList24 = configuration23.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = configuration23.getStorageConfiguration();
        configuration23.setNumProcessorsForTraining((int) (short) 0);
        java.lang.String str28 = configuration23.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration29 = new org.plista.kornakapi.core.config.Configuration();
        configuration29.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig32 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double33 = factorizationbasedRecommenderConfig32.getAlpha();
        double double34 = factorizationbasedRecommenderConfig32.getLambda();
        configuration29.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig32);
        java.lang.String str36 = configuration29.getModelDirectory();
        int int37 = configuration29.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList38 = configuration29.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration39 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str40 = storageConfiguration39.getJdbcDriverClass();
        storageConfiguration39.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str43 = storageConfiguration39.getJdbcUrl();
        java.lang.String str44 = storageConfiguration39.getJdbcUrl();
        storageConfiguration39.setJdbcUrl("label");
        configuration29.setStorageConfiguration(storageConfiguration39);
        java.lang.String str48 = storageConfiguration39.getPassword();
        storageConfiguration39.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        configuration23.setStorageConfiguration(storageConfiguration39);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig52 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double53 = factorizationbasedRecommenderConfig52.getAlpha();
        double double54 = factorizationbasedRecommenderConfig52.getLambda();
        int int55 = factorizationbasedRecommenderConfig52.getNumberOfFeatures();
        java.lang.String str56 = factorizationbasedRecommenderConfig52.getRetrainCronExpression();
        int int57 = factorizationbasedRecommenderConfig52.getNumberOfFeatures();
        factorizationbasedRecommenderConfig52.setNumberOfIterations((int) (short) 0);
        boolean boolean60 = factorizationbasedRecommenderConfig52.isUsesImplicitFeedback();
        java.lang.String str61 = factorizationbasedRecommenderConfig52.getRetrainCronExpression();
        double double62 = factorizationbasedRecommenderConfig52.getLambda();
        factorizationbasedRecommenderConfig52.setLambda((double) (byte) -1);
        factorizationbasedRecommenderConfig52.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig52.setLambda((double) 100L);
        int int69 = factorizationbasedRecommenderConfig52.getRetrainAfterPreferenceChanges();
        configuration23.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig52);
        factorizationbasedRecommenderConfig52.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        factorizationbasedRecommenderConfig52.setNumberOfFeatures((int) (short) 100);
        double double75 = factorizationbasedRecommenderConfig52.getLambda();
        factorizationbasedRecommenderConfig52.setNumberOfFeatures(10000);
        factorizationbasedRecommenderConfig52.setNumberOfFeatures((int) 'a');
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig52);
// flaky:         configuration5.setModelDirectory("MutablePreference{userID=100, itemID=10, value=32.0}");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig83 = null;
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig83);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList20);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "MutablePreference{userID=0, itemID=-1, value=32.0}" + "'", str22, "MutablePreference{userID=0, itemID=-1, value=32.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList24);
        org.junit.Assert.assertNull(storageConfiguration25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 100.0d + "'", double75 == 100.0d);
    }

    @Test
    public void test38599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38599");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.lang.String str5 = null; // flaky: configuration4.getModelDirectory();
        org.plista.kornakapi.web.Components components6 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components6.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components6.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration8.getStorageConfiguration();
// flaky:         configuration4.setStorageConfiguration(storageConfiguration9);
// flaky:         configuration4.setNumProcessorsForTraining((int) (byte) -1);
// flaky:         configuration4.setNumProcessorsForTraining((int) (byte) 100);
        java.lang.Class<?> wildcardClass15 = null; // flaky: configuration4.getClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=100, itemID=10, value=32.0}" + "'", str5, "MutablePreference{userID=100, itemID=10, value=32.0}");
// flaky:         org.junit.Assert.assertNotNull(components6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
// flaky:         org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test38600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38600");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet10 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig14 = batchSetPreferencesServlet11.getServletConfig();
        addCandidateServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig16 = batchSetPreferencesServlet11.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str19 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str20 = batchDeleteCandidatesServlet18.getServletInfo();
        batchDeleteCandidatesServlet18.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str23 = batchDeleteCandidatesServlet22.getServletInfo();
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        java.lang.String str26 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str27 = batchDeleteCandidatesServlet18.getServletInfo();
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertNotNull(servletConfig16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
    }

    @Test
    public void test38601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38601");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components13 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components13.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler15 = null; // flaky: components13.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = null; // flaky: components13.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components13.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration18 = null; // flaky: components13.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList19 = null; // flaky: configuration18.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str21 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str24 = storageConfiguration20.getJdbcUrl();
        java.lang.String str25 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str26 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str27 = storageConfiguration20.getJdbcDriverClass();
// flaky:         configuration18.setStorageConfiguration(storageConfiguration20);
// flaky:         configuration1.setStorageConfiguration(storageConfiguration20);
        java.lang.String str30 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration31 = new org.plista.kornakapi.core.config.Configuration();
        configuration31.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str34 = configuration31.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList35 = configuration31.getItembasedRecommenders();
        configuration31.setNumProcessorsForTraining(100);
        org.plista.kornakapi.web.Components components38 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration39 = null; // flaky: components38.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration40 = null; // flaky: components38.getConfiguration();
        java.lang.String str41 = null; // flaky: configuration40.getModelDirectory();
        int int42 = 0; // flaky: configuration40.getNumProcessorsForTraining();
        int int43 = 0; // flaky: configuration40.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration44 = null; // flaky: configuration40.getStorageConfiguration();
        configuration31.setStorageConfiguration(storageConfiguration44);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig46 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str47 = itembasedRecommenderConfig46.getRetrainCronExpression();
        int int48 = itembasedRecommenderConfig46.getRetrainAfterPreferenceChanges();
        java.lang.String str49 = itembasedRecommenderConfig46.getSimilarityClass();
        itembasedRecommenderConfig46.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig46.setSimilarityClass("");
        int int54 = itembasedRecommenderConfig46.getSimilarItemsPerItem();
        itembasedRecommenderConfig46.setSimilarItemsPerItem((int) (byte) 100);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer57 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig46);
        int int58 = itembasedRecommenderConfig46.getRetrainAfterPreferenceChanges();
        configuration31.addItembasedRecommender(itembasedRecommenderConfig46);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig46);
        itembasedRecommenderConfig46.setSimilarItemsPerItem(100);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=100, itemID=10, value=32.0}" + "'", str3, "MutablePreference{userID=100, itemID=10, value=32.0}");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
// flaky:         org.junit.Assert.assertNotNull(components13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNull(trainingScheduler15);
        org.junit.Assert.assertNull(trainingScheduler16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
// flaky:         org.junit.Assert.assertNotNull(configuration18);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "MutablePreference{userID=100, itemID=10, value=32.0}" + "'", str30, "MutablePreference{userID=100, itemID=10, value=32.0}");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList35);
// flaky:         org.junit.Assert.assertNotNull(components38);
// flaky:         org.junit.Assert.assertNotNull(configuration39);
// flaky:         org.junit.Assert.assertNotNull(configuration40);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "MutablePreference{userID=100, itemID=10, value=32.0}" + "'", str41, "MutablePreference{userID=100, itemID=10, value=32.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
// flaky:         org.junit.Assert.assertTrue("'" + int43 + "' != '" + 100 + "'", int43 == 100);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test38602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38602");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        int int5 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) ' ');
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file9 = null;
        org.plista.kornakapi.core.storage.Storage storage10 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender11 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer8.train(file9, storage10, recommender11, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test38603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38603");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.init();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = batchDeleteCandidatesServlet0.getInitParameter("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig3);
    }

    @Test
    public void test38604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38604");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        mutableCandidate0.set("", (long) (byte) 100);
        java.lang.String str4 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=100, itemID=-1, value=100.0}", 0L);
        long long8 = mutableCandidate0.getItemID();
        java.lang.String str9 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=10000, value=-1.0}", (long) 100);
        java.lang.String str13 = mutableCandidate0.getLabel();
        java.lang.String str14 = mutableCandidate0.getLabel();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=100.0}" + "'", str9, "MutablePreference{userID=100, itemID=-1, value=100.0}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=-1.0}" + "'", str13, "MutablePreference{userID=0, itemID=10000, value=-1.0}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=-1.0}" + "'", str14, "MutablePreference{userID=0, itemID=10000, value=-1.0}");
    }

    @Test
    public void test38605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38605");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        javax.servlet.ServletConfig servletConfig7 = batchDeleteCandidatesServlet4.getServletConfig();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(servletConfig7);
    }

    @Test
    public void test38606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38606");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
// flaky:         configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig34 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str35 = itembasedRecommenderConfig34.getRetrainCronExpression();
        int int36 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
        int int37 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig34);
        itembasedRecommenderConfig34.setSimilarItemsPerItem((int) '4');
        int int41 = itembasedRecommenderConfig34.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig34);
        int int43 = itembasedRecommenderConfig34.getSimilarItemsPerItem();
        java.lang.String str44 = itembasedRecommenderConfig34.getRetrainCronExpression();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test38607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38607");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=10000, itemID=-1, value=32.0}", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test38608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38608");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException10.addSuppressed((java.lang.Throwable) missingParameterException12);
        invalidParameterException8.addSuppressed((java.lang.Throwable) missingParameterException12);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException19);
        invalidParameterException15.addSuppressed((java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.MissingParameterException missingParameterException25 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException26 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException25);
        missingParameterException19.addSuppressed((java.lang.Throwable) invalidParameterException26);
        java.lang.Throwable[] throwableArray28 = missingParameterException19.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10, itemID=100, value=10.0}", (java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=97, itemID=10, value=1.0}", (java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.MissingParameterException missingParameterException39 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException41 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException39.addSuppressed((java.lang.Throwable) missingParameterException41);
        invalidParameterException37.addSuppressed((java.lang.Throwable) missingParameterException41);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException44 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException37);
        org.plista.kornakapi.web.MissingParameterException missingParameterException48 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException48);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException48);
        invalidParameterException44.addSuppressed((java.lang.Throwable) missingParameterException48);
        org.plista.kornakapi.web.MissingParameterException missingParameterException54 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException55 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException54);
        missingParameterException48.addSuppressed((java.lang.Throwable) invalidParameterException55);
        java.lang.Throwable[] throwableArray57 = missingParameterException48.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException62 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException63 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException62);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException64 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException62);
        org.plista.kornakapi.web.MissingParameterException missingParameterException66 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException68 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException66.addSuppressed((java.lang.Throwable) missingParameterException68);
        invalidParameterException64.addSuppressed((java.lang.Throwable) missingParameterException68);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException71 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException64);
        org.plista.kornakapi.web.MissingParameterException missingParameterException75 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException76 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException75);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException77 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException75);
        invalidParameterException71.addSuppressed((java.lang.Throwable) missingParameterException75);
        org.plista.kornakapi.web.MissingParameterException missingParameterException81 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException82 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException81);
        missingParameterException75.addSuppressed((java.lang.Throwable) invalidParameterException82);
        java.lang.Throwable[] throwableArray84 = missingParameterException75.getSuppressed();
        java.lang.Throwable[] throwableArray85 = missingParameterException75.getSuppressed();
        missingParameterException48.addSuppressed((java.lang.Throwable) missingParameterException75);
        java.lang.Throwable[] throwableArray87 = missingParameterException75.getSuppressed();
        invalidParameterException30.addSuppressed((java.lang.Throwable) missingParameterException75);
        org.plista.kornakapi.web.MissingParameterException missingParameterException90 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=35, value=1.0}");
        missingParameterException75.addSuppressed((java.lang.Throwable) missingParameterException90);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray84);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(throwableArray87);
    }

    @Test
    public void test38609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38609");
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet0 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        java.lang.String str1 = deleteCandidateServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig2 = deleteCandidateServlet0.getServletConfig();
        deleteCandidateServlet0.init();
        java.lang.String str4 = deleteCandidateServlet0.getServletInfo();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test38610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38610");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(100);
        factorizationbasedRecommenderConfig0.setLambda((double) 35.0f);
        int int18 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer19 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.io.File file20 = null;
        org.plista.kornakapi.core.storage.Storage storage21 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender22 = null;
        // The following exception was thrown during execution in test generation
        try {
            factorizationbasedInMemoryTrainer19.train(file20, storage21, recommender22, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test38611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38611");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) (byte) 0);
        factorizationbasedRecommenderConfig0.setAlpha((double) ' ');
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setLambda((double) (short) 100);
        double double18 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=0, itemID=97, value=10.0}");
        int int21 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double22 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 32.0d + "'", double22 == 32.0d);
    }

    @Test
    public void test38612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38612");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        java.lang.String str9 = null; // flaky: configuration8.getModelDirectory();
// flaky:         configuration8.setModelDirectory("MutablePreference{userID=52, itemID=97, value=-1.0}");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration8.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "MutablePreference{userID=100, itemID=10, value=32.0}" + "'", str9, "MutablePreference{userID=100, itemID=10, value=32.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
    }

    @Test
    public void test38613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38613");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        java.lang.String str8 = mutablePreference0.toString();
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.set((long) 1, 10000L, 97.0f);
        java.lang.String str14 = mutablePreference0.toString();
        long long15 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str8, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=1, itemID=10000, value=97.0}" + "'", str14, "MutablePreference{userID=1, itemID=10000, value=97.0}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
    }

    @Test
    public void test38614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38614");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("recommender");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: itemID");
        int int7 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 1);
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        java.lang.String str14 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 100);
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=0, itemID=100, value=1.0}");
        int int19 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        java.lang.String str20 = itembasedRecommenderConfig0.getSimilarityClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str14, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 100 + "'", int19 == 100);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=0, itemID=100, value=1.0}" + "'", str20, "MutablePreference{userID=0, itemID=100, value=1.0}");
    }

    @Test
    public void test38615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38615");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) '#');
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        boolean boolean11 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        double double12 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=10, itemID=-1, value=97.0}");
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(52);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test38616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38616");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) -1, (long) (byte) 10, (float) (short) 10);
        mutablePreference0.setValue((float) 10L);
        long long9 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
    }

    @Test
    public void test38617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38617");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(storage8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
    }

    @Test
    public void test38618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38618");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(10);
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 10);
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=10000, itemID=35, value=0.0}");
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 10);
        boolean boolean15 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test38619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38619");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = null; // flaky: configuration7.getStorageConfiguration();
        org.plista.kornakapi.web.Components components9 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components9.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components9.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage12 = null; // flaky: components9.storage();
        org.plista.kornakapi.core.storage.Storage storage13 = null; // flaky: components9.storage();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components9.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = null; // flaky: configuration14.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig16.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer19 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig16);
        itembasedRecommenderConfig16.setRetrainCronExpression("");
        itembasedRecommenderConfig16.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig16.setRetrainCronExpression("");
// flaky:         configuration14.addItembasedRecommender(itembasedRecommenderConfig16);
        int int27 = itembasedRecommenderConfig16.getSimilarItemsPerItem();
// flaky:         configuration7.addItembasedRecommender(itembasedRecommenderConfig16);
        java.lang.String str29 = null; // flaky: configuration7.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig30 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double31 = factorizationbasedRecommenderConfig30.getAlpha();
        double double32 = factorizationbasedRecommenderConfig30.getLambda();
        int int33 = factorizationbasedRecommenderConfig30.getNumberOfFeatures();
        factorizationbasedRecommenderConfig30.setName("");
        double double36 = factorizationbasedRecommenderConfig30.getAlpha();
        java.lang.String str37 = factorizationbasedRecommenderConfig30.getRetrainCronExpression();
        factorizationbasedRecommenderConfig30.setUsesImplicitFeedback(false);
// flaky:         configuration7.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig30);
        org.plista.kornakapi.web.Components components41 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration42 = null; // flaky: components41.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList43 = null; // flaky: configuration42.getItembasedRecommenders();
        java.lang.String str44 = null; // flaky: configuration42.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig45 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double46 = factorizationbasedRecommenderConfig45.getAlpha();
        double double47 = factorizationbasedRecommenderConfig45.getLambda();
        int int48 = factorizationbasedRecommenderConfig45.getNumberOfFeatures();
        java.lang.String str49 = factorizationbasedRecommenderConfig45.getRetrainCronExpression();
        int int50 = factorizationbasedRecommenderConfig45.getNumberOfFeatures();
        factorizationbasedRecommenderConfig45.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig45.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double55 = factorizationbasedRecommenderConfig45.getLambda();
        factorizationbasedRecommenderConfig45.setAlpha((double) (byte) 0);
        double double58 = factorizationbasedRecommenderConfig45.getLambda();
        factorizationbasedRecommenderConfig45.setName("org.plista.kornakapi.web.InvalidParameterException: hi!");
        factorizationbasedRecommenderConfig45.setNumberOfIterations(1);
// flaky:         configuration42.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig45);
        factorizationbasedRecommenderConfig45.setLambda((double) 52);
// flaky:         configuration7.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig45);
        int int67 = 0; // flaky: configuration7.getNumProcessorsForTraining();
        java.lang.String str68 = null; // flaky: configuration7.getModelDirectory();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration8);
// flaky:         org.junit.Assert.assertNotNull(components9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(storage12);
        org.junit.Assert.assertNull(storage13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "MutablePreference{userID=52, itemID=97, value=-1.0}" + "'", str29, "MutablePreference{userID=52, itemID=97, value=-1.0}");
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertNull(str37);
// flaky:         org.junit.Assert.assertNotNull(components41);
// flaky:         org.junit.Assert.assertNotNull(configuration42);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList43);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "MutablePreference{userID=52, itemID=97, value=-1.0}" + "'", str44, "MutablePreference{userID=52, itemID=97, value=-1.0}");
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int67 + "' != '" + 100 + "'", int67 == 100);
// flaky:         org.junit.Assert.assertEquals("'" + str68 + "' != '" + "MutablePreference{userID=52, itemID=97, value=-1.0}" + "'", str68, "MutablePreference{userID=52, itemID=97, value=-1.0}");
    }

    @Test
    public void test38620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38620");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setNumProcessorsForTraining(0);
        java.lang.String str7 = null; // flaky: configuration4.getModelDirectory();
        int int8 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = null; // flaky: configuration4.getStorageConfiguration();
        int int11 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        int int12 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.Configuration configuration13 = new org.plista.kornakapi.core.config.Configuration();
        configuration13.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        configuration13.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        int int20 = configuration13.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList21 = configuration13.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration22 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str23 = storageConfiguration22.getJdbcDriverClass();
        storageConfiguration22.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str26 = storageConfiguration22.getJdbcUrl();
        java.lang.String str27 = storageConfiguration22.getJdbcDriverClass();
        storageConfiguration22.setJdbcDriverClass("batchSize");
        java.lang.String str30 = storageConfiguration22.getPassword();
        storageConfiguration22.setUsername("batchSize");
        java.lang.String str33 = storageConfiguration22.getJdbcUrl();
        storageConfiguration22.setUsername("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration22.setPassword("batchSize");
        java.lang.String str38 = storageConfiguration22.getJdbcDriverClass();
        java.lang.String str39 = storageConfiguration22.getPassword();
        configuration13.setStorageConfiguration(storageConfiguration22);
// flaky:         configuration4.setStorageConfiguration(storageConfiguration22);
        int int42 = 0; // flaky: configuration4.getNumProcessorsForTraining();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=52, itemID=97, value=-1.0}" + "'", str7, "MutablePreference{userID=52, itemID=97, value=-1.0}");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "batchSize" + "'", str38, "batchSize");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "batchSize" + "'", str39, "batchSize");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test38621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38621");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener3);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener10 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener10.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener10.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener10.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener10);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener15.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener15.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        delegatingPreferenceChangeListener15.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler24 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler24, "label", (int) ' ');
        inMemoryPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener15.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener27);
        delegatingPreferenceChangeListener10.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener27);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler31 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler31, "file", (int) (short) 10);
        inMemoryPreferenceChangeListener34.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener10.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener34);
        inMemoryPreferenceChangeListener34.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener34.notifyOfPreferenceChange();
    }

    @Test
    public void test38622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38622");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        long long13 = mutableCandidate0.getItemID();
        java.lang.String str14 = mutableCandidate0.getLabel();
        java.lang.String str15 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "itemID" + "'", str14, "itemID");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "itemID" + "'", str15, "itemID");
    }

    @Test
    public void test38623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38623");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("recommender");
        storageConfiguration0.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str10 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: howMany");
        java.lang.String str13 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=10000, itemID=0, value=100.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str10, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str13, "MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test38624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38624");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList4 = configuration0.getFactorizationbasedRecommenders();
        configuration0.setModelDirectory("MutablePreference{userID=10000, itemID=0, value=100.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList4);
    }

    @Test
    public void test38625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38625");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) 100, (-1L), (float) (short) 100);
        java.lang.String str8 = mutablePreference0.toString();
        long long9 = mutablePreference0.getUserID();
        long long10 = mutablePreference0.getUserID();
        mutablePreference0.setValue(0.0f);
        float float13 = mutablePreference0.getValue();
        java.lang.String str14 = mutablePreference0.toString();
        java.lang.String str15 = mutablePreference0.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=100.0}" + "'", str8, "MutablePreference{userID=100, itemID=-1, value=100.0}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 100L + "'", long9 == 100L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 0.0f + "'", float13 == 0.0f);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=0.0}" + "'", str14, "MutablePreference{userID=100, itemID=-1, value=0.0}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=0.0}" + "'", str15, "MutablePreference{userID=100, itemID=-1, value=0.0}");
    }

    @Test
    public void test38626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38626");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcUrl();
        java.lang.String str6 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setUsername("recommender");
        java.lang.String str9 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("value");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=0, value=97.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test38627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38627");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        java.lang.String str2 = mutablePreference0.toString();
        float float3 = mutablePreference0.getValue();
        float float4 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) 32);
        long long7 = mutablePreference0.getUserID();
        long long8 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str2, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 0.0f + "'", float3 == 0.0f);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test38628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38628");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        java.lang.String str10 = mutableCandidate0.getLabel();
        long long11 = mutableCandidate0.getItemID();
        java.lang.String str12 = mutableCandidate0.getLabel();
        long long13 = mutableCandidate0.getItemID();
        java.lang.String str14 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemID" + "'", str9, "itemID");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "itemID" + "'", str10, "itemID");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "itemID" + "'", str12, "itemID");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10000L + "'", long13 == 10000L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "itemID" + "'", str14, "itemID");
    }

    @Test
    public void test38629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38629");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig5.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        itembasedRecommenderConfig5.setRetrainCronExpression("");
        itembasedRecommenderConfig5.setSimilarItemsPerItem(10);
        java.lang.String str13 = itembasedRecommenderConfig5.getName();
        java.lang.String str14 = itembasedRecommenderConfig5.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig5);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        boolean boolean19 = factorizationbasedRecommenderConfig16.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig16);
        double double21 = factorizationbasedRecommenderConfig16.getAlpha();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        configuration0.setNumProcessorsForTraining((int) '4');
        java.lang.String str25 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=52, value=-1.0}");
        configuration0.setModelDirectory("MutablePreference{userID=32, itemID=97, value=52.0}");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList30 = configuration0.getItembasedRecommenders();
        int int31 = configuration0.getNumProcessorsForTraining();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
    }

    @Test
    public void test38630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38630");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        long long4 = mutablePreference0.getItemID();
        long long5 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (byte) 0, (long) (-1), (float) ' ');
        mutablePreference0.set((long) (short) -1, (long) 0, (float) 10L);
        long long14 = mutablePreference0.getUserID();
        mutablePreference0.setValue(100.0f);
        java.lang.String str17 = mutablePreference0.toString();
        mutablePreference0.set((long) (short) -1, 0L, (float) 10L);
        mutablePreference0.setValue((float) (byte) 10);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=-1, itemID=0, value=100.0}" + "'", str17, "MutablePreference{userID=-1, itemID=0, value=100.0}");
    }

    @Test
    public void test38631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38631");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig19 = batchSetPreferencesServlet16.getServletConfig();
        batchSetPreferencesServlet16.init();
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        batchSetPreferencesServlet16.init();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration23 = batchSetPreferencesServlet16.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(servletConfig19);
    }

    @Test
    public void test38632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38632");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setName("");
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test38633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38633");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
// flaky:         configuration2.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getUsername();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration7);
        java.lang.String str10 = storageConfiguration7.getUsername();
        java.lang.String str11 = storageConfiguration7.getPassword();
        java.lang.String str12 = storageConfiguration7.getUsername();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test38634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38634");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList9 = null; // flaky: configuration8.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig10 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str11 = itembasedRecommenderConfig10.getRetrainCronExpression();
        int int12 = itembasedRecommenderConfig10.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig10.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=10.0}");
        itembasedRecommenderConfig10.setRetrainAfterPreferenceChanges((int) (short) -1);
        java.lang.String str17 = itembasedRecommenderConfig10.getName();
        itembasedRecommenderConfig10.setSimilarItemsPerItem(10);
// flaky:         configuration8.addItembasedRecommender(itembasedRecommenderConfig10);
// flaky:         configuration8.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
// flaky:         configuration8.setNumProcessorsForTraining((int) 'a');
// flaky:         configuration8.setNumProcessorsForTraining((int) (short) -1);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNull(trainingScheduler7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test38635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38635");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setName("");
        java.lang.String str13 = itembasedRecommenderConfig6.getSimilarityClass();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components15 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration16 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler17 = null; // flaky: components15.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = null; // flaky: components15.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration19 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setSimilarityClass("");
        java.lang.String str24 = itembasedRecommenderConfig21.getName();
        java.lang.String str25 = itembasedRecommenderConfig21.getSimilarityClass();
        itembasedRecommenderConfig21.setName("");
        java.lang.String str28 = itembasedRecommenderConfig21.getSimilarityClass();
// flaky:         configuration20.addItembasedRecommender(itembasedRecommenderConfig21);
        itembasedRecommenderConfig21.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig21);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig33 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double34 = factorizationbasedRecommenderConfig33.getAlpha();
        double double35 = factorizationbasedRecommenderConfig33.getLambda();
        int int36 = factorizationbasedRecommenderConfig33.getNumberOfFeatures();
        factorizationbasedRecommenderConfig33.setUsesImplicitFeedback(true);
        double double39 = factorizationbasedRecommenderConfig33.getAlpha();
        java.lang.String str40 = factorizationbasedRecommenderConfig33.getRetrainCronExpression();
        double double41 = factorizationbasedRecommenderConfig33.getLambda();
        java.lang.String str42 = factorizationbasedRecommenderConfig33.getName();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer43 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig33);
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig33);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList45 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList46 = null; // flaky: configuration5.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
// flaky:         org.junit.Assert.assertNotNull(components15);
// flaky:         org.junit.Assert.assertNotNull(configuration16);
        org.junit.Assert.assertNull(trainingScheduler17);
        org.junit.Assert.assertNull(trainingScheduler18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNull(str42);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList45);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList46);
    }

    @Test
    public void test38636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38636");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNull(trainingScheduler9);
    }

    @Test
    public void test38637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38637");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig6.getSimilarityClass();
        int int12 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) (byte) 1);
        java.lang.String str15 = itembasedRecommenderConfig6.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        configuration0.setNumProcessorsForTraining((int) ' ');
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList19 = configuration0.getItembasedRecommenders();
        java.lang.String str20 = configuration0.getModelDirectory();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test38638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38638");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((-1));
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(97);
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setAlpha((double) (byte) -1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 97 + "'", int11 == 97);
    }

    @Test
    public void test38639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38639");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet10 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig14 = batchSetPreferencesServlet11.getServletConfig();
        addCandidateServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig16 = batchSetPreferencesServlet11.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet1.getServletConfig();
        batchSetPreferencesServlet1.destroy();
        batchSetPreferencesServlet1.init();
        java.lang.String str21 = batchSetPreferencesServlet1.getServletInfo();
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertNotNull(servletConfig16);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test38640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38640");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        long long1 = mutablePreference0.getItemID();
        java.lang.String str2 = mutablePreference0.toString();
        java.lang.String str3 = mutablePreference0.toString();
        long long4 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (short) 100);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str2, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test38641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38641");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcUrl();
        java.lang.String str6 = storageConfiguration0.getJdbcUrl();
        java.lang.String str7 = storageConfiguration0.getUsername();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        java.lang.String str10 = storageConfiguration0.getJdbcUrl();
        java.lang.String str11 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str7, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test38642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38642");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 1);
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) -1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 1);
        int int18 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setLambda(35.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test38643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38643");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str4 = itembasedRecommenderConfig0.getName();
        java.lang.String str5 = itembasedRecommenderConfig0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test38644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38644");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig0.setLambda((double) (short) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(32);
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setAlpha((double) 52);
        java.lang.String str17 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setAlpha((double) 10.0f);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test38645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38645");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        boolean boolean6 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig3);
        double double8 = factorizationbasedRecommenderConfig3.getAlpha();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
// flaky:         configuration2.setModelDirectory("MutablePreference{userID=0, itemID=0, value=52.0}");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList12 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.Configuration configuration13 = new org.plista.kornakapi.core.config.Configuration();
        configuration13.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str16 = configuration13.getModelDirectory();
        configuration13.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig19 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double20 = factorizationbasedRecommenderConfig19.getAlpha();
        configuration13.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig19);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration22 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str23 = storageConfiguration22.getUsername();
        java.lang.String str24 = storageConfiguration22.getJdbcDriverClass();
        java.lang.String str25 = storageConfiguration22.getPassword();
        storageConfiguration22.setJdbcUrl("file");
        configuration13.setStorageConfiguration(storageConfiguration22);
        org.plista.kornakapi.web.Components components29 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components29.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList31 = null; // flaky: configuration30.getFactorizationbasedRecommenders();
        java.lang.String str32 = null; // flaky: configuration30.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList33 = null; // flaky: configuration30.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig34 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig34.setName("recommender");
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig34);
        configuration13.addItembasedRecommender(itembasedRecommenderConfig34);
        itembasedRecommenderConfig34.setSimilarItemsPerItem(0);
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig34);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig42 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double43 = factorizationbasedRecommenderConfig42.getAlpha();
        double double44 = factorizationbasedRecommenderConfig42.getLambda();
        int int45 = factorizationbasedRecommenderConfig42.getNumberOfFeatures();
        factorizationbasedRecommenderConfig42.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig42.setNumberOfFeatures((int) (short) 100);
        boolean boolean50 = factorizationbasedRecommenderConfig42.isUsesImplicitFeedback();
        int int51 = factorizationbasedRecommenderConfig42.getNumberOfFeatures();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig42);
        double double53 = factorizationbasedRecommenderConfig42.getLambda();
        factorizationbasedRecommenderConfig42.setLambda((double) 100);
        factorizationbasedRecommenderConfig42.setAlpha(35.0d);
        int int58 = factorizationbasedRecommenderConfig42.getNumberOfIterations();
        double double59 = factorizationbasedRecommenderConfig42.getAlpha();
        java.lang.String str60 = factorizationbasedRecommenderConfig42.getName();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
// flaky:         org.junit.Assert.assertNotNull(components29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str32, "MutablePreference{userID=0, itemID=0, value=52.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList33);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 35.0d + "'", double59 == 35.0d);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test38646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38646");
        org.plista.kornakapi.web.MissingParameterException missingParameterException2 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException3 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=1, itemID=100, value=52.0}", (java.lang.Throwable) missingParameterException2);
    }

    @Test
    public void test38647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38647");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 10);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) 35);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) 100L);
        double double17 = fixedCandidatesIDRescorer1.rescore((long) 0, (double) (-1));
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double22 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 10000);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer23 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer24 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double27 = fixedCandidatesIDRescorer1.rescore(0L, 100.0d);
        double double30 = fixedCandidatesIDRescorer1.rescore((long) 0, (double) (byte) -1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer31 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair32 = null;
        double double34 = filteringLongPairRescorer31.rescore(longPair32, (double) 10L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10000.0d + "'", double22 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 100.0d + "'", double27 == 100.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + (-1.0d) + "'", double30 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 10.0d + "'", double34 == 10.0d);
    }

    @Test
    public void test38648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38648");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components14 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration15 = null; // flaky: components14.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = null; // flaky: components14.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler17 = null; // flaky: components14.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration18 = null; // flaky: components14.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration19 = null; // flaky: components14.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage20 = null; // flaky: components14.storage();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components14.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage22 = null; // flaky: components14.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener23 = null; // flaky: components14.preferenceChangeListener();
        delegatingPreferenceChangeListener9.addDelegate(preferenceChangeListener23);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler26 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler26, "label", (int) '#');
        inMemoryPreferenceChangeListener29.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener29);
// flaky:         org.junit.Assert.assertNotNull(components14);
// flaky:         org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNull(trainingScheduler16);
        org.junit.Assert.assertNull(trainingScheduler17);
// flaky:         org.junit.Assert.assertNotNull(configuration18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertNull(storage20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(storage22);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener23);
    }

    @Test
    public void test38649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38649");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig3 = batchAddCandidatesServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration4 = batchAddCandidatesServlet0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig3);
    }

    @Test
    public void test38650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38650");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair11 = null;
        double double13 = filteringLongPairRescorer10.rescore(longPair11, (double) (short) 100);
        org.apache.mahout.common.LongPair longPair14 = null;
        double double16 = filteringLongPairRescorer10.rescore(longPair14, (double) 1);
        org.apache.mahout.common.LongPair longPair17 = null;
        double double19 = filteringLongPairRescorer10.rescore(longPair17, (double) 10.0f);
        org.apache.mahout.common.LongPair longPair20 = null;
        double double22 = filteringLongPairRescorer10.rescore(longPair20, (double) (byte) 100);
        org.apache.mahout.common.LongPair longPair23 = null;
        double double25 = filteringLongPairRescorer10.rescore(longPair23, (double) 97L);
        org.apache.mahout.common.LongPair longPair26 = null;
        double double28 = filteringLongPairRescorer10.rescore(longPair26, (double) 'a');
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 97.0d + "'", double25 == 97.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 97.0d + "'", double28 == 97.0d);
    }

    @Test
    public void test38651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38651");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 10);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 100.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer13 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double16 = fixedCandidatesIDRescorer1.rescore(32L, (double) (short) 1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer17 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
    }

    @Test
    public void test38652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38652");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(10000);
        factorizationbasedRecommenderConfig0.setAlpha(0.0d);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test38653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38653");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setName("");
        java.lang.String str13 = itembasedRecommenderConfig6.getSimilarityClass();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) '#');
        int int17 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        int int18 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer19 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 35 + "'", int18 == 35);
    }

    @Test
    public void test38654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38654");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=0, itemID=0, value=32.0}");
        java.lang.Throwable[] throwableArray2 = missingParameterException1.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException8);
        java.lang.Throwable[] throwableArray11 = missingParameterException8.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException12);
        java.lang.Throwable[] throwableArray14 = invalidParameterException13.getSuppressed();
        java.lang.Throwable[] throwableArray15 = invalidParameterException13.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray21 = missingParameterException20.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=32.0}", (java.lang.Throwable) invalidParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException35);
        java.lang.Throwable[] throwableArray38 = missingParameterException35.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException39 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException35);
        invalidParameterException30.addSuppressed((java.lang.Throwable) invalidParameterException39);
        org.plista.kornakapi.web.MissingParameterException missingParameterException44 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException45 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException44);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException44);
        java.lang.Throwable[] throwableArray47 = invalidParameterException46.getSuppressed();
        invalidParameterException39.addSuppressed((java.lang.Throwable) invalidParameterException46);
        invalidParameterException24.addSuppressed((java.lang.Throwable) invalidParameterException39);
        invalidParameterException13.addSuppressed((java.lang.Throwable) invalidParameterException24);
        missingParameterException1.addSuppressed((java.lang.Throwable) invalidParameterException13);
        java.lang.String str52 = invalidParameterException13.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: " + "'", str52, "org.plista.kornakapi.web.InvalidParameterException: ");
    }

    @Test
    public void test38655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38655");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = null; // flaky: configuration4.getStorageConfiguration();
        java.lang.String str7 = null; // flaky: storageConfiguration6.getJdbcUrl();
// flaky:         storageConfiguration6.setUsername("value");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test38656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38656");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str4 = storageConfiguration3.getJdbcDriverClass();
        java.lang.String str5 = storageConfiguration3.getUsername();
        storageConfiguration3.setPassword("label");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration3);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig9 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig9.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig9);
        itembasedRecommenderConfig9.setRetrainCronExpression("");
        itembasedRecommenderConfig9.setSimilarItemsPerItem(10);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig9);
        java.lang.String str18 = itembasedRecommenderConfig9.getSimilarityClass();
        itembasedRecommenderConfig9.setSimilarItemsPerItem((int) (short) 1);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig9);
        java.lang.String str22 = null; // flaky: configuration1.getModelDirectory();
        int int23 = 0; // flaky: configuration1.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig24 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double25 = factorizationbasedRecommenderConfig24.getAlpha();
        double double26 = factorizationbasedRecommenderConfig24.getLambda();
        boolean boolean27 = factorizationbasedRecommenderConfig24.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig24.setUsesImplicitFeedback(true);
        double double30 = factorizationbasedRecommenderConfig24.getLambda();
        factorizationbasedRecommenderConfig24.setLambda((double) (-1.0f));
        java.lang.String str33 = factorizationbasedRecommenderConfig24.getName();
        double double34 = factorizationbasedRecommenderConfig24.getAlpha();
        double double35 = factorizationbasedRecommenderConfig24.getLambda();
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig24);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str22, "MutablePreference{userID=0, itemID=0, value=52.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + (-1.0d) + "'", double35 == (-1.0d));
    }

    @Test
    public void test38657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38657");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setLambda((double) '4');
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 0);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(35);
        boolean boolean12 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test38658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38658");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null; // flaky: configuration1.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = configuration6.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList8 = configuration6.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = configuration6.getStorageConfiguration();
        int int10 = configuration6.getNumProcessorsForTraining();
        configuration6.setNumProcessorsForTraining((int) (short) 10);
        java.lang.String str13 = configuration6.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList14 = configuration6.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig15 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double16 = factorizationbasedRecommenderConfig15.getAlpha();
        double double17 = factorizationbasedRecommenderConfig15.getLambda();
        int int18 = factorizationbasedRecommenderConfig15.getNumberOfFeatures();
        factorizationbasedRecommenderConfig15.setUsesImplicitFeedback(false);
        int int21 = factorizationbasedRecommenderConfig15.getNumberOfFeatures();
        factorizationbasedRecommenderConfig15.setLambda((double) 0);
        factorizationbasedRecommenderConfig15.setName("userID");
        factorizationbasedRecommenderConfig15.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: itemID");
        factorizationbasedRecommenderConfig15.setAlpha((double) 0L);
        configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig15);
        factorizationbasedRecommenderConfig15.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file");
        int int33 = factorizationbasedRecommenderConfig15.getNumberOfIterations();
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig15);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer35 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig15);
        java.lang.String str36 = factorizationbasedRecommenderConfig15.getName();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=52.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList8);
        org.junit.Assert.assertNull(storageConfiguration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file" + "'", str36, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file");
    }

    @Test
    public void test38659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38659");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 1);
        long long6 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) (short) 0);
        long long9 = mutablePreference0.getUserID();
        mutablePreference0.set((long) (short) 0, (long) (byte) 0, (float) 0L);
        mutablePreference0.set((long) (short) 10, (long) 'a', (float) 32L);
        long long18 = mutablePreference0.getItemID();
        java.lang.String str19 = mutablePreference0.toString();
        java.lang.String str20 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 97L + "'", long18 == 97L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=10, itemID=97, value=32.0}" + "'", str19, "MutablePreference{userID=10, itemID=97, value=32.0}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=10, itemID=97, value=32.0}" + "'", str20, "MutablePreference{userID=10, itemID=97, value=32.0}");
    }

    @Test
    public void test38660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38660");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        int int16 = 0; // flaky: configuration5.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration17 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str18 = storageConfiguration17.getJdbcDriverClass();
        storageConfiguration17.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str21 = storageConfiguration17.getJdbcUrl();
        java.lang.String str22 = storageConfiguration17.getJdbcUrl();
        java.lang.String str23 = storageConfiguration17.getJdbcUrl();
        java.lang.String str24 = storageConfiguration17.getUsername();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration17);
        org.plista.kornakapi.web.Components components26 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration27 = null; // flaky: components26.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler28 = null; // flaky: components26.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler29 = null; // flaky: components26.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components26.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig31 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str32 = itembasedRecommenderConfig31.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer33 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig31);
        java.lang.String str34 = itembasedRecommenderConfig31.getSimilarityClass();
        itembasedRecommenderConfig31.setRetrainAfterPreferenceChanges((int) (short) 100);
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig31);
        int int38 = itembasedRecommenderConfig31.getSimilarItemsPerItem();
        itembasedRecommenderConfig31.setSimilarItemsPerItem(0);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig31);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration42 = null; // flaky: configuration5.getStorageConfiguration();
// flaky:         storageConfiguration42.setPassword("MutablePreference{userID=0, itemID=0, value=35.0}");
// flaky:         storageConfiguration42.setPassword("MutablePreference{userID=35, itemID=32, value=10.0}");
// flaky:         storageConfiguration42.setPassword("MutablePreference{userID=100, itemID=0, value=35.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str24, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
// flaky:         org.junit.Assert.assertNotNull(components26);
// flaky:         org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(trainingScheduler28);
        org.junit.Assert.assertNull(trainingScheduler29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration42);
    }

    @Test
    public void test38661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38661");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig0.setLambda((double) (short) 1);
        boolean boolean10 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        boolean boolean12 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        double double13 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) (-1L));
        double double16 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) ' ');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
    }

    @Test
    public void test38662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38662");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig0.setSimilarItemsPerItem(100);
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 10);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file17 = null;
        org.plista.kornakapi.core.storage.Storage storage18 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender19 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer16.train(file17, storage18, recommender19, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test38663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38663");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet3 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str4 = batchDeleteCandidatesServlet3.getServletInfo();
        batchDeleteCandidatesServlet3.destroy();
        javax.servlet.ServletConfig servletConfig6 = batchDeleteCandidatesServlet3.getServletConfig();
        batchAddCandidatesServlet0.init(servletConfig6);
        batchAddCandidatesServlet0.init();
        batchAddCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig10 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet11 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet13 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet13);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet12.getServletConfig();
        addCandidateServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        batchSetPreferencesServlet12.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str19 = recommendServlet18.getServletInfo();
        javax.servlet.ServletConfig servletConfig20 = recommendServlet18.getServletConfig();
        java.lang.String str21 = recommendServlet18.getServletInfo();
        batchSetPreferencesServlet12.init((javax.servlet.ServletConfig) recommendServlet18);
        javax.servlet.ServletConfig servletConfig23 = null;
        recommendServlet18.init(servletConfig23);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet25 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet25.init();
        java.lang.String str27 = batchAddCandidatesServlet25.getServletInfo();
        recommendServlet18.init((javax.servlet.ServletConfig) batchAddCandidatesServlet25);
        java.lang.String str29 = recommendServlet18.getServletInfo();
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) recommendServlet18);
        org.plista.kornakapi.web.MissingParameterException missingParameterException33 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=97.0}");
        // The following exception was thrown during execution in test generation
        try {
            batchAddCandidatesServlet0.log("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=52, value=52.0}", (java.lang.Throwable) missingParameterException33);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(servletConfig6);
        org.junit.Assert.assertNull(servletConfig10);
        org.junit.Assert.assertNotNull(servletConfig15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(servletConfig20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test38664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38664");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getJdbcUrl();
        java.lang.String str8 = storageConfiguration0.getUsername();
        storageConfiguration0.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: hi!");
        java.lang.String str11 = storageConfiguration0.getJdbcUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test38665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38665");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 10);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test38666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38666");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("");
        java.lang.String str6 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(52);
        java.lang.String str9 = itembasedRecommenderConfig0.getSimilarityClass();
        int int10 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int11 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test38667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38667");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("");
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((-1));
        int int10 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setAlpha(0.0d);
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double15 = factorizationbasedRecommenderConfig0.getLambda();
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test38668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38668");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(trainingScheduler10);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener11);
    }

    @Test
    public void test38669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38669");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (-1));
        java.lang.String str6 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 0, 10000L, 0.0f);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=-1.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=-1.0}");
    }

    @Test
    public void test38670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38670");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) (short) 0);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (short) 10);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) 100, (double) 1.0f);
        double double15 = fixedCandidatesIDRescorer1.rescore(10000L, (double) 52.0f);
        double double18 = fixedCandidatesIDRescorer1.rescore((long) (byte) 100, (double) 1.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer20 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
    }

    @Test
    public void test38671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38671");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        java.lang.String str5 = batchSetPreferencesServlet2.getServletInfo();
        batchSetPreferencesServlet2.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str8 = batchDeleteCandidatesServlet7.getServletInfo();
        java.lang.String str9 = batchDeleteCandidatesServlet7.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet10 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet11 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet12 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        setPreferenceServlet10.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet15 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet10.init((javax.servlet.ServletConfig) recommendServlet15);
        batchDeleteCandidatesServlet7.init((javax.servlet.ServletConfig) setPreferenceServlet10);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet18.init();
        java.lang.String str20 = batchAddCandidatesServlet18.getServletInfo();
        javax.servlet.ServletConfig servletConfig21 = batchAddCandidatesServlet18.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str23 = batchDeleteCandidatesServlet22.getServletInfo();
        java.lang.String str24 = batchDeleteCandidatesServlet22.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet25 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet27 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet26.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet27);
        setPreferenceServlet25.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet27);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet30 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet25.init((javax.servlet.ServletConfig) recommendServlet30);
        batchDeleteCandidatesServlet22.init((javax.servlet.ServletConfig) setPreferenceServlet25);
        batchAddCandidatesServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        batchDeleteCandidatesServlet7.init((javax.servlet.ServletConfig) batchAddCandidatesServlet18);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet35 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str36 = recommendServlet35.getServletInfo();
        javax.servlet.ServletConfig servletConfig37 = recommendServlet35.getServletConfig();
        javax.servlet.ServletConfig servletConfig38 = recommendServlet35.getServletConfig();
        javax.servlet.ServletConfig servletConfig39 = recommendServlet35.getServletConfig();
        batchAddCandidatesServlet18.init((javax.servlet.ServletConfig) recommendServlet35);
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) recommendServlet35);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext42 = batchSetPreferencesServlet2.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(servletConfig37);
        org.junit.Assert.assertNull(servletConfig38);
        org.junit.Assert.assertNull(servletConfig39);
    }

    @Test
    public void test38672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38672");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=0, value=35.0}");
    }

    @Test
    public void test38673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38673");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getName();
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setAlpha((double) 35L);
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test38674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38674");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getUsername();
        java.lang.String str9 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=97, value=0.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test38675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38675");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 100L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        float float5 = mutablePreference0.getValue();
        long long6 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 100.0f + "'", float5 == 100.0f);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test38676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38676");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        java.lang.String str4 = batchSetPreferencesServlet2.getServletInfo();
        batchSetPreferencesServlet2.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str7 = batchDeleteCandidatesServlet6.getServletInfo();
        java.lang.String str8 = batchDeleteCandidatesServlet6.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet9 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet10 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet10.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        setPreferenceServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet9.init((javax.servlet.ServletConfig) recommendServlet14);
        batchDeleteCandidatesServlet6.init((javax.servlet.ServletConfig) setPreferenceServlet9);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet17 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet18 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet19 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet18.init((javax.servlet.ServletConfig) batchSetPreferencesServlet19);
        javax.servlet.ServletConfig servletConfig21 = batchSetPreferencesServlet18.getServletConfig();
        addCandidateServlet17.init((javax.servlet.ServletConfig) batchSetPreferencesServlet18);
        javax.servlet.ServletConfig servletConfig23 = addCandidateServlet17.getServletConfig();
        batchDeleteCandidatesServlet6.init((javax.servlet.ServletConfig) addCandidateServlet17);
        addCandidateServlet17.destroy();
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) addCandidateServlet17);
        batchSetPreferencesServlet2.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet29 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet29.init();
        java.lang.String str31 = batchAddCandidatesServlet29.getServletInfo();
        javax.servlet.ServletConfig servletConfig32 = batchAddCandidatesServlet29.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str34 = batchDeleteCandidatesServlet33.getServletInfo();
        java.lang.String str35 = batchDeleteCandidatesServlet33.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet36 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet37 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet38 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        setPreferenceServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet41 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet36.init((javax.servlet.ServletConfig) recommendServlet41);
        batchDeleteCandidatesServlet33.init((javax.servlet.ServletConfig) setPreferenceServlet36);
        batchAddCandidatesServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        java.lang.String str46 = batchSetPreferencesServlet2.getServletInfo();
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet2.log("MutablePreference{userID=100, itemID=0, value=10.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(servletConfig21);
        org.junit.Assert.assertNotNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test38677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38677");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        boolean boolean6 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig3);
        double double8 = factorizationbasedRecommenderConfig3.getAlpha();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        double double10 = factorizationbasedRecommenderConfig3.getAlpha();
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig3.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
        factorizationbasedRecommenderConfig3.setNumberOfFeatures((-1));
        factorizationbasedRecommenderConfig3.setLambda(0.0d);
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(false);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test38678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38678");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setModelDirectory("userID");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig8.setSimilarityClass("");
        java.lang.String str11 = itembasedRecommenderConfig8.getName();
        java.lang.String str12 = itembasedRecommenderConfig8.getSimilarityClass();
        itembasedRecommenderConfig8.setName("");
        itembasedRecommenderConfig8.setRetrainCronExpression("label");
        itembasedRecommenderConfig8.setSimilarItemsPerItem(10000);
        itembasedRecommenderConfig8.setRetrainCronExpression("MutablePreference{userID=0, itemID=52, value=-1.0}");
        itembasedRecommenderConfig8.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        itembasedRecommenderConfig8.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: batchSize");
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig8);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig26 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double27 = factorizationbasedRecommenderConfig26.getAlpha();
        double double28 = factorizationbasedRecommenderConfig26.getLambda();
        int int29 = factorizationbasedRecommenderConfig26.getNumberOfFeatures();
        factorizationbasedRecommenderConfig26.setUsesImplicitFeedback(true);
        double double32 = factorizationbasedRecommenderConfig26.getAlpha();
        java.lang.String str33 = factorizationbasedRecommenderConfig26.getRetrainCronExpression();
        int int34 = factorizationbasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
        int int35 = factorizationbasedRecommenderConfig26.getNumberOfIterations();
        factorizationbasedRecommenderConfig26.setNumberOfFeatures((int) '#');
        double double38 = factorizationbasedRecommenderConfig26.getLambda();
        java.lang.String str39 = factorizationbasedRecommenderConfig26.getRetrainCronExpression();
        double double40 = factorizationbasedRecommenderConfig26.getAlpha();
        double double41 = factorizationbasedRecommenderConfig26.getAlpha();
        double double42 = factorizationbasedRecommenderConfig26.getLambda();
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig26);
// flaky:         configuration4.setNumProcessorsForTraining(97);
// flaky:         configuration4.setNumProcessorsForTraining((int) (byte) 10);
// flaky:         configuration4.setModelDirectory("MutablePreference{userID=97, itemID=32, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
    }

    @Test
    public void test38679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38679");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList4 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        int int5 = 0; // flaky: configuration1.getNumProcessorsForTraining();
// flaky:         configuration1.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: label");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str9 = storageConfiguration8.getJdbcDriverClass();
        storageConfiguration8.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str12 = storageConfiguration8.getJdbcUrl();
        java.lang.String str13 = storageConfiguration8.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration8.getJdbcDriverClass();
        java.lang.String str15 = storageConfiguration8.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration8.getJdbcUrl();
        storageConfiguration8.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration8.setUsername("");
        storageConfiguration8.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration8.setJdbcUrl("hi!");
        java.lang.String str25 = storageConfiguration8.getJdbcDriverClass();
        java.lang.String str26 = storageConfiguration8.getJdbcDriverClass();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration8);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=97, itemID=32, value=10.0}" + "'", str3, "MutablePreference{userID=97, itemID=32, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList4);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str25, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str26, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
    }

    @Test
    public void test38680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38680");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getUserID();
        float float4 = mutablePreference0.getValue();
        long long5 = mutablePreference0.getUserID();
        float float6 = mutablePreference0.getValue();
        mutablePreference0.set(0L, 52L, (float) (-1L));
        long long11 = mutablePreference0.getItemID();
        java.lang.String str12 = mutablePreference0.toString();
        mutablePreference0.set(10000L, 35L, (float) (-1L));
        java.lang.String str17 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.0f + "'", float6 == 0.0f);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 52L + "'", long11 == 52L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=0, itemID=52, value=-1.0}" + "'", str12, "MutablePreference{userID=0, itemID=52, value=-1.0}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=10000, itemID=35, value=-1.0}" + "'", str17, "MutablePreference{userID=10000, itemID=35, value=-1.0}");
    }

    @Test
    public void test38681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38681");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getUsername();
        java.lang.String str9 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration0.setJdbcUrl("userID");
        java.lang.String str15 = storageConfiguration0.getUsername();
        java.lang.String str16 = storageConfiguration0.getJdbcUrl();
        java.lang.String str17 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str20 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setPassword("MutablePreference{userID=97, itemID=1, value=100.0}");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=-1.0}");
        storageConfiguration0.setPassword("MutablePreference{userID=0, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str15, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "userID" + "'", str16, "userID");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str17, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str20, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test38682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38682");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        int int6 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.lang.String str16 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setLambda((-1.0d));
        java.lang.String str19 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test38683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38683");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage10 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration11.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(storage10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
    }

    @Test
    public void test38684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38684");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10000);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        double double15 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 1);
        boolean boolean18 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test38685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38685");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException8.addSuppressed((java.lang.Throwable) missingParameterException10);
        invalidParameterException6.addSuppressed((java.lang.Throwable) missingParameterException10);
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException20.addSuppressed((java.lang.Throwable) missingParameterException22);
        invalidParameterException18.addSuppressed((java.lang.Throwable) missingParameterException22);
        missingParameterException10.addSuppressed((java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException28);
        missingParameterException22.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException36);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException36);
        missingParameterException22.addSuppressed((java.lang.Throwable) invalidParameterException38);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException44 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException45 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException44);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException45);
        org.plista.kornakapi.web.MissingParameterException missingParameterException48 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}");
        invalidParameterException46.addSuppressed((java.lang.Throwable) missingParameterException48);
        invalidParameterException40.addSuppressed((java.lang.Throwable) invalidParameterException46);
        java.lang.Throwable[] throwableArray51 = invalidParameterException46.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test38686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38686");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setNumProcessorsForTraining(0);
        java.lang.String str7 = null; // flaky: configuration4.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        java.lang.String str9 = null; // flaky: configuration4.getModelDirectory();
        java.lang.String str10 = null; // flaky: configuration4.getModelDirectory();
// flaky:         configuration4.setModelDirectory("MutablePreference{userID=10000, itemID=-1, value=32.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: label" + "'", str7, "org.plista.kornakapi.web.InvalidParameterException: label");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: label" + "'", str9, "org.plista.kornakapi.web.InvalidParameterException: label");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: label" + "'", str10, "org.plista.kornakapi.web.InvalidParameterException: label");
    }

    @Test
    public void test38687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38687");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage2 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration3 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNull(storage2);
// flaky:         org.junit.Assert.assertNotNull(configuration3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener9);
    }

    @Test
    public void test38688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38688");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException8);
        java.lang.Throwable[] throwableArray10 = invalidParameterException9.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=52, itemID=97, value=-1.0}", (java.lang.Throwable) invalidParameterException9);
        org.plista.kornakapi.web.MissingParameterException missingParameterException18 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException18);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException18);
        java.lang.Throwable[] throwableArray21 = missingParameterException18.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException18);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException32 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException32.addSuppressed((java.lang.Throwable) missingParameterException34);
        invalidParameterException30.addSuppressed((java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException30);
        org.plista.kornakapi.web.MissingParameterException missingParameterException41 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException42 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException41);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException41);
        invalidParameterException37.addSuppressed((java.lang.Throwable) missingParameterException41);
        org.plista.kornakapi.web.MissingParameterException missingParameterException47 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException47);
        missingParameterException41.addSuppressed((java.lang.Throwable) invalidParameterException48);
        java.lang.Throwable[] throwableArray50 = missingParameterException41.getSuppressed();
        invalidParameterException23.addSuppressed((java.lang.Throwable) missingParameterException41);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException52 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=1.0}", (java.lang.Throwable) invalidParameterException23);
        invalidParameterException9.addSuppressed((java.lang.Throwable) invalidParameterException52);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException54 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=32.0}", (java.lang.Throwable) invalidParameterException52);
        missingParameterException1.addSuppressed((java.lang.Throwable) invalidParameterException52);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwableArray50);
    }

    @Test
    public void test38689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38689");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str10 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test38690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38690");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str13 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig14 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str16 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletRequest servletRequest17 = null;
        javax.servlet.ServletResponse servletResponse18 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet0.service(servletRequest17, servletResponse18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test38691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38691");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(97);
        factorizationbasedRecommenderConfig0.setLambda(32.0d);
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str13 = factorizationbasedRecommenderConfig0.getName();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.lang.Class<?> wildcardClass15 = factorizationbasedRecommenderConfig0.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 32.0d + "'", double12 == 32.0d);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test38692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38692");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        double double9 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) '#');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test38693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38693");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setRetrainCronExpression("");
        itembasedRecommenderConfig6.setSimilarItemsPerItem(10);
        java.lang.String str14 = itembasedRecommenderConfig6.getName();
        int int15 = itembasedRecommenderConfig6.getRetrainAfterPreferenceChanges();
        java.lang.String str16 = itembasedRecommenderConfig6.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.core.config.Configuration configuration18 = new org.plista.kornakapi.core.config.Configuration();
        configuration18.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str21 = configuration18.getModelDirectory();
        configuration18.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig24 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double25 = factorizationbasedRecommenderConfig24.getAlpha();
        int int26 = factorizationbasedRecommenderConfig24.getNumberOfFeatures();
        factorizationbasedRecommenderConfig24.setUsesImplicitFeedback(true);
        double double29 = factorizationbasedRecommenderConfig24.getLambda();
        configuration18.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig24);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        factorizationbasedRecommenderConfig31.setUsesImplicitFeedback(true);
        double double37 = factorizationbasedRecommenderConfig31.getAlpha();
        java.lang.String str38 = factorizationbasedRecommenderConfig31.getRetrainCronExpression();
        int int39 = factorizationbasedRecommenderConfig31.getRetrainAfterPreferenceChanges();
        int int40 = factorizationbasedRecommenderConfig31.getNumberOfIterations();
        factorizationbasedRecommenderConfig31.setNumberOfFeatures((int) '#');
        double double43 = factorizationbasedRecommenderConfig31.getLambda();
        boolean boolean44 = factorizationbasedRecommenderConfig31.isUsesImplicitFeedback();
        configuration18.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration47 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str48 = storageConfiguration47.getJdbcDriverClass();
        storageConfiguration47.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str51 = storageConfiguration47.getJdbcUrl();
        java.lang.String str52 = storageConfiguration47.getJdbcDriverClass();
        java.lang.String str53 = storageConfiguration47.getJdbcDriverClass();
        java.lang.String str54 = storageConfiguration47.getJdbcDriverClass();
        java.lang.String str55 = storageConfiguration47.getUsername();
        storageConfiguration47.setUsername("itemIDs");
        java.lang.String str58 = storageConfiguration47.getJdbcUrl();
        configuration0.setStorageConfiguration(storageConfiguration47);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList60 = configuration0.getFactorizationbasedRecommenders();
        int int61 = configuration0.getNumProcessorsForTraining();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str55, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 100 + "'", int61 == 100);
    }

    @Test
    public void test38694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38694");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet0.destroy();
        trainServlet0.destroy();
        java.lang.String str3 = trainServlet0.getServletInfo();
        java.lang.String str4 = trainServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig5 = trainServlet0.getServletConfig();
        java.lang.String str6 = trainServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig7 = trainServlet0.getServletConfig();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(servletConfig7);
    }

    @Test
    public void test38695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38695");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int9 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(10000);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.io.File file13 = null;
        org.plista.kornakapi.core.storage.Storage storage14 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender15 = null;
        // The following exception was thrown during execution in test generation
        try {
            factorizationbasedInMemoryTrainer12.train(file13, storage14, recommender15, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test38696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38696");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double5 = factorizationbasedRecommenderConfig0.getLambda();
        double double6 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getName();
        double double13 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean14 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test38697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38697");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=100, itemID=0, value=97.0}", (int) (byte) 1);
    }

    @Test
    public void test38698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38698");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler4, "MutablePreference{userID=0, itemID=0, value=1.0}", 35);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener7);
        inMemoryPreferenceChangeListener7.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener7.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener7.notifyOfPreferenceChange();
    }

    @Test
    public void test38699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38699");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = null; // flaky: configuration4.getStorageConfiguration();
        int int9 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig10 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double11 = factorizationbasedRecommenderConfig10.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig10);
        factorizationbasedRecommenderConfig10.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig10.setNumberOfIterations((int) '#');
        double double17 = factorizationbasedRecommenderConfig10.getLambda();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig10);
        factorizationbasedRecommenderConfig10.setUsesImplicitFeedback(false);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig10);
        int int22 = factorizationbasedRecommenderConfig10.getNumberOfIterations();
        int int23 = factorizationbasedRecommenderConfig10.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig10.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
        factorizationbasedRecommenderConfig10.setNumberOfIterations((int) '4');
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration6);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration7);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 35 + "'", int22 == 35);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test38700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38700");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        java.lang.String str5 = batchSetPreferencesServlet2.getServletInfo();
        batchSetPreferencesServlet2.init();
        javax.servlet.ServletConfig servletConfig7 = batchSetPreferencesServlet2.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet8 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet9 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet8.init((javax.servlet.ServletConfig) batchSetPreferencesServlet9);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet11 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet11.init();
        setPreferenceServlet11.destroy();
        batchSetPreferencesServlet8.init((javax.servlet.ServletConfig) setPreferenceServlet11);
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) setPreferenceServlet11);
        javax.servlet.ServletConfig servletConfig16 = batchSetPreferencesServlet2.getServletConfig();
        batchSetPreferencesServlet2.init();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet18 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet19 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet20 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet19.init((javax.servlet.ServletConfig) batchSetPreferencesServlet20);
        javax.servlet.ServletConfig servletConfig22 = batchSetPreferencesServlet19.getServletConfig();
        addCandidateServlet18.init((javax.servlet.ServletConfig) batchSetPreferencesServlet19);
        batchSetPreferencesServlet19.destroy();
        java.lang.String str25 = batchSetPreferencesServlet19.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet26 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str27 = trainServlet26.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet28 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet28.destroy();
        javax.servlet.ServletConfig servletConfig30 = deleteCandidateServlet28.getServletConfig();
        deleteCandidateServlet28.destroy();
        trainServlet26.init((javax.servlet.ServletConfig) deleteCandidateServlet28);
        javax.servlet.ServletConfig servletConfig33 = deleteCandidateServlet28.getServletConfig();
        batchSetPreferencesServlet19.init((javax.servlet.ServletConfig) deleteCandidateServlet28);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet36 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str37 = batchDeleteCandidatesServlet36.getServletInfo();
        java.lang.String str38 = batchDeleteCandidatesServlet36.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet39 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet40 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet41 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet40.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet41);
        setPreferenceServlet39.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet41);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet44 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet39.init((javax.servlet.ServletConfig) recommendServlet44);
        batchDeleteCandidatesServlet36.init((javax.servlet.ServletConfig) setPreferenceServlet39);
        batchDeleteCandidatesServlet36.destroy();
        batchDeleteCandidatesServlet35.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet36);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet49 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet50 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet51 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet50.init((javax.servlet.ServletConfig) batchSetPreferencesServlet51);
        batchDeleteCandidatesServlet49.init((javax.servlet.ServletConfig) batchSetPreferencesServlet51);
        javax.servlet.ServletConfig servletConfig54 = batchSetPreferencesServlet51.getServletConfig();
        batchSetPreferencesServlet51.init();
        batchDeleteCandidatesServlet36.init((javax.servlet.ServletConfig) batchSetPreferencesServlet51);
        batchSetPreferencesServlet51.init();
        batchSetPreferencesServlet51.init();
        deleteCandidateServlet28.init((javax.servlet.ServletConfig) batchSetPreferencesServlet51);
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) batchSetPreferencesServlet51);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet61 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet61.init();
        setPreferenceServlet61.init();
        java.lang.String str64 = setPreferenceServlet61.getServletInfo();
        setPreferenceServlet61.init();
        setPreferenceServlet61.destroy();
        setPreferenceServlet61.destroy();
        setPreferenceServlet61.destroy();
        batchSetPreferencesServlet51.init((javax.servlet.ServletConfig) setPreferenceServlet61);
        javax.servlet.ServletRequest servletRequest70 = null;
        javax.servlet.ServletResponse servletResponse71 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet51.service(servletRequest70, servletResponse71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertNotNull(servletConfig16);
        org.junit.Assert.assertNotNull(servletConfig22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(servletConfig30);
        org.junit.Assert.assertNull(servletConfig33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(servletConfig54);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test38701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38701");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration4.getPassword();
        java.lang.String str12 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration4.getPassword();
        storageConfiguration4.setUsername("MutablePreference{userID=100, itemID=0, value=0.0}");
        storageConfiguration4.setPassword("itemID");
        java.lang.String str18 = storageConfiguration4.getUsername();
        configuration0.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str21 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str24 = storageConfiguration20.getJdbcUrl();
        java.lang.String str25 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str26 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        storageConfiguration20.setUsername("");
        configuration0.setStorageConfiguration(storageConfiguration20);
        org.plista.kornakapi.web.Components components32 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration33 = null; // flaky: components32.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration34 = null; // flaky: components32.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage35 = null; // flaky: components32.storage();
        org.plista.kornakapi.core.storage.Storage storage36 = null; // flaky: components32.storage();
        org.plista.kornakapi.core.config.Configuration configuration37 = null; // flaky: components32.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList38 = null; // flaky: configuration37.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig39 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig39.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig39);
        itembasedRecommenderConfig39.setRetrainCronExpression("");
        itembasedRecommenderConfig39.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig39.setRetrainCronExpression("");
// flaky:         configuration37.addItembasedRecommender(itembasedRecommenderConfig39);
        int int50 = itembasedRecommenderConfig39.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig39.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig39);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration54 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig55 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double56 = factorizationbasedRecommenderConfig55.getAlpha();
        double double57 = factorizationbasedRecommenderConfig55.getLambda();
        int int58 = factorizationbasedRecommenderConfig55.getNumberOfFeatures();
        factorizationbasedRecommenderConfig55.setUsesImplicitFeedback(true);
        double double61 = factorizationbasedRecommenderConfig55.getAlpha();
        java.lang.String str62 = factorizationbasedRecommenderConfig55.getRetrainCronExpression();
        int int63 = factorizationbasedRecommenderConfig55.getRetrainAfterPreferenceChanges();
        int int64 = factorizationbasedRecommenderConfig55.getNumberOfIterations();
        factorizationbasedRecommenderConfig55.setNumberOfFeatures((int) '#');
        double double67 = factorizationbasedRecommenderConfig55.getLambda();
        java.lang.String str68 = factorizationbasedRecommenderConfig55.getRetrainCronExpression();
        factorizationbasedRecommenderConfig55.setLambda((double) 52.0f);
        factorizationbasedRecommenderConfig55.setNumberOfIterations((int) (short) -1);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig55);
        double double74 = factorizationbasedRecommenderConfig55.getAlpha();
        factorizationbasedRecommenderConfig55.setUsesImplicitFeedback(true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str18, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
// flaky:         org.junit.Assert.assertNotNull(components32);
// flaky:         org.junit.Assert.assertNotNull(configuration33);
// flaky:         org.junit.Assert.assertNotNull(configuration34);
        org.junit.Assert.assertNull(storage35);
        org.junit.Assert.assertNull(storage36);
// flaky:         org.junit.Assert.assertNotNull(configuration37);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList38);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(storageConfiguration54);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
    }

    @Test
    public void test38702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38702");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        int int8 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        configuration0.setModelDirectory("");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig15 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double16 = factorizationbasedRecommenderConfig15.getAlpha();
        double double17 = factorizationbasedRecommenderConfig15.getLambda();
        int int18 = factorizationbasedRecommenderConfig15.getNumberOfFeatures();
        java.lang.String str19 = factorizationbasedRecommenderConfig15.getRetrainCronExpression();
        factorizationbasedRecommenderConfig15.setNumberOfFeatures((int) 'a');
        factorizationbasedRecommenderConfig15.setRetrainAfterPreferenceChanges((int) (byte) 100);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig15);
        java.lang.String str25 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig26 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double27 = factorizationbasedRecommenderConfig26.getAlpha();
        double double28 = factorizationbasedRecommenderConfig26.getLambda();
        int int29 = factorizationbasedRecommenderConfig26.getNumberOfFeatures();
        factorizationbasedRecommenderConfig26.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig26.setNumberOfFeatures((int) (short) 100);
        boolean boolean34 = factorizationbasedRecommenderConfig26.isUsesImplicitFeedback();
        int int35 = factorizationbasedRecommenderConfig26.getNumberOfIterations();
        int int36 = factorizationbasedRecommenderConfig26.getNumberOfFeatures();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig26);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList38 = configuration0.getFactorizationbasedRecommenders();
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=0, value=32.0}");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration41 = configuration0.getStorageConfiguration();
        int int42 = configuration0.getNumProcessorsForTraining();
        java.lang.String str43 = configuration0.getModelDirectory();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList38);
        org.junit.Assert.assertNull(storageConfiguration41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "MutablePreference{userID=0, itemID=0, value=32.0}" + "'", str43, "MutablePreference{userID=0, itemID=0, value=32.0}");
    }

    @Test
    public void test38703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38703");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNull(storage8);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
    }

    @Test
    public void test38704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38704");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) (byte) 100);
        double double8 = fixedCandidatesIDRescorer1.rescore(10000L, (double) (byte) 0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore(10000L, (double) 10.0f);
        double double15 = fixedCandidatesIDRescorer1.rescore(10L, (double) 1.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer16 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double19 = fixedCandidatesIDRescorer1.rescore((long) 97, (double) (byte) -1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer20 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double23 = fixedCandidatesIDRescorer1.rescore((long) 32, (double) 32);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + (-1.0d) + "'", double19 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 32.0d + "'", double23 == 32.0d);
    }

    @Test
    public void test38705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38705");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = null; // flaky: configuration7.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration7.getStorageConfiguration();
        java.lang.String str10 = null; // flaky: storageConfiguration9.getUsername();
        java.lang.String str11 = null; // flaky: storageConfiguration9.getUsername();
        java.lang.String str12 = null; // flaky: storageConfiguration9.getUsername();
        java.lang.String str13 = null; // flaky: storageConfiguration9.getPassword();
        java.lang.String str14 = null; // flaky: storageConfiguration9.getJdbcUrl();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(trainingScheduler5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str13, "MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test38706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38706");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet3 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet3.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet5 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet6 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet5.init((javax.servlet.ServletConfig) batchSetPreferencesServlet6);
        addCandidateServlet3.init((javax.servlet.ServletConfig) batchSetPreferencesServlet5);
        java.lang.String str9 = batchSetPreferencesServlet5.getServletInfo();
        java.lang.String str10 = batchSetPreferencesServlet5.getServletInfo();
        java.lang.String str11 = batchSetPreferencesServlet5.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet5);
        javax.servlet.ServletRequest servletRequest13 = null;
        javax.servlet.ServletResponse servletResponse14 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet5.service(servletRequest13, servletResponse14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test38707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38707");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components8 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components8.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = null; // flaky: components8.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration13 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig14.setSimilarityClass("");
        java.lang.String str17 = itembasedRecommenderConfig14.getName();
        java.lang.String str18 = itembasedRecommenderConfig14.getSimilarityClass();
        itembasedRecommenderConfig14.setName("");
        java.lang.String str21 = itembasedRecommenderConfig14.getSimilarityClass();
// flaky:         configuration13.addItembasedRecommender(itembasedRecommenderConfig14);
        itembasedRecommenderConfig14.setSimilarItemsPerItem((int) '#');
        int int25 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig14);
        configuration0.setNumProcessorsForTraining((int) (byte) 1);
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file");
        java.lang.String str31 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig32 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str33 = itembasedRecommenderConfig32.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer34 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig32);
        itembasedRecommenderConfig32.setSimilarityClass("recommender");
        itembasedRecommenderConfig32.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: itemID");
        int int39 = itembasedRecommenderConfig32.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer40 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig32);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer41 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig32);
        itembasedRecommenderConfig32.setRetrainAfterPreferenceChanges((int) (byte) 1);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig32);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration45 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str46 = storageConfiguration45.getPassword();
        java.lang.String str47 = storageConfiguration45.getUsername();
        configuration0.setStorageConfiguration(storageConfiguration45);
        configuration0.setModelDirectory("MutablePreference{userID=97, itemID=1, value=0.0}");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig51 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig51.setName("recommender");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer54 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig51);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig51);
        java.lang.String str56 = itembasedRecommenderConfig51.getSimilarityClass();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertNotNull(components8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(trainingScheduler11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 35 + "'", int25 == 35);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file" + "'", str31, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test38708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38708");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=10.0}");
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(1);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) ' ');
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) '#');
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        int int14 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
    }

    @Test
    public void test38709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38709");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        int int2 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int3 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        int int7 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=1, itemID=52, value=52.0}");
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (byte) 0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test38710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38710");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
// flaky:         configuration1.setNumProcessorsForTraining((int) (byte) 1);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList4 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration1.getItembasedRecommenders();
        int int6 = 0; // flaky: configuration1.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components7 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components7.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = null; // flaky: configuration8.getItembasedRecommenders();
        java.lang.String str10 = null; // flaky: configuration8.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = null; // flaky: configuration8.getStorageConfiguration();
// flaky:         configuration8.setNumProcessorsForTraining((int) '#');
// flaky:         configuration8.setModelDirectory("value");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig16.setSimilarityClass("");
        java.lang.String str19 = itembasedRecommenderConfig16.getName();
// flaky:         configuration8.addItembasedRecommender(itembasedRecommenderConfig16);
        itembasedRecommenderConfig16.setRetrainAfterPreferenceChanges(1);
        itembasedRecommenderConfig16.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str25 = itembasedRecommenderConfig16.getRetrainCronExpression();
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig16);
        java.lang.String str27 = itembasedRecommenderConfig16.getSimilarityClass();
        itembasedRecommenderConfig16.setRetrainAfterPreferenceChanges((int) (short) 100);
        itembasedRecommenderConfig16.setSimilarityClass("MutablePreference{userID=10, itemID=-1, value=0.0}");
        itembasedRecommenderConfig16.setName("MutablePreference{userID=0, itemID=52, value=-1.0}");
        int int34 = itembasedRecommenderConfig16.getSimilarItemsPerItem();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
// flaky:         org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=32.0}" + "'", str10, "MutablePreference{userID=10000, itemID=-1, value=32.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str25, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test38711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38711");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig3 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str6 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet7 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        setPreferenceServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet7.init((javax.servlet.ServletConfig) recommendServlet12);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet7);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        batchDeleteCandidatesServlet4.init();
        java.lang.String str17 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str18 = batchDeleteCandidatesServlet4.getServletInfo();
        batchDeleteCandidatesServlet4.init();
        batchDeleteCandidatesServlet4.destroy();
        java.lang.String str21 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str22 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.MissingParameterException missingParameterException29 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException29);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException30);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException32 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException30);
        org.plista.kornakapi.web.MissingParameterException missingParameterException37 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException37);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException39 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException37);
        org.plista.kornakapi.web.MissingParameterException missingParameterException41 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException43 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException41.addSuppressed((java.lang.Throwable) missingParameterException43);
        invalidParameterException39.addSuppressed((java.lang.Throwable) missingParameterException43);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException39);
        org.plista.kornakapi.web.MissingParameterException missingParameterException50 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException51 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException50);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException52 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException50);
        invalidParameterException46.addSuppressed((java.lang.Throwable) missingParameterException50);
        org.plista.kornakapi.web.MissingParameterException missingParameterException58 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException59 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException58);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException60 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException58);
        java.lang.Throwable[] throwableArray61 = missingParameterException58.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException62 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException58);
        missingParameterException50.addSuppressed((java.lang.Throwable) missingParameterException58);
        invalidParameterException32.addSuppressed((java.lang.Throwable) missingParameterException50);
        org.plista.kornakapi.web.MissingParameterException missingParameterException70 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException71 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException70);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException72 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException70);
        java.lang.Throwable[] throwableArray73 = missingParameterException70.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException74 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException70);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException75 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException74);
        missingParameterException50.addSuppressed((java.lang.Throwable) invalidParameterException75);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException77 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender", (java.lang.Throwable) invalidParameterException75);
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet4.log("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException75);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray73);
    }

    @Test
    public void test38712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38712");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = null; // flaky: configuration9.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
    }

    @Test
    public void test38713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38713");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.web.Components components5 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components5.storage();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components5.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = null; // flaky: components5.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components5.getConfiguration();
// flaky:         configuration12.setNumProcessorsForTraining((int) (short) 100);
// flaky:         configuration12.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.plista.kornakapi.web.Components components17 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration18 = null; // flaky: components17.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration19 = null; // flaky: components17.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage20 = null; // flaky: components17.storage();
        org.plista.kornakapi.core.storage.Storage storage21 = null; // flaky: components17.storage();
        org.plista.kornakapi.core.config.Configuration configuration22 = null; // flaky: components17.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList23 = null; // flaky: configuration22.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration24 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str25 = storageConfiguration24.getJdbcDriverClass();
        storageConfiguration24.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str28 = storageConfiguration24.getJdbcUrl();
        java.lang.String str29 = storageConfiguration24.getJdbcDriverClass();
        java.lang.String str30 = storageConfiguration24.getJdbcDriverClass();
        java.lang.String str31 = storageConfiguration24.getPassword();
// flaky:         configuration22.setStorageConfiguration(storageConfiguration24);
        java.lang.String str33 = null; // flaky: configuration22.getModelDirectory();
// flaky:         configuration22.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.web.Components components36 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration37 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler38 = null; // flaky: components36.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener39 = null; // flaky: components36.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler40 = null; // flaky: components36.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration41 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage42 = null; // flaky: components36.storage();
        org.plista.kornakapi.core.config.Configuration configuration43 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration44 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration45 = null; // flaky: configuration44.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig46 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig46.setSimilarityClass("");
        java.lang.String str49 = itembasedRecommenderConfig46.getName();
        java.lang.String str50 = itembasedRecommenderConfig46.getSimilarityClass();
        itembasedRecommenderConfig46.setName("");
        itembasedRecommenderConfig46.setRetrainCronExpression("label");
        itembasedRecommenderConfig46.setSimilarItemsPerItem(10000);
        itembasedRecommenderConfig46.setSimilarItemsPerItem((int) 'a');
        itembasedRecommenderConfig46.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
// flaky:         configuration44.addItembasedRecommender(itembasedRecommenderConfig46);
// flaky:         configuration22.addItembasedRecommender(itembasedRecommenderConfig46);
// flaky:         configuration12.addItembasedRecommender(itembasedRecommenderConfig46);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer64 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig46);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig46);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(components5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(storage9);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(components17);
// flaky:         org.junit.Assert.assertNotNull(configuration18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertNull(storage20);
        org.junit.Assert.assertNull(storage21);
// flaky:         org.junit.Assert.assertNotNull(configuration22);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str33, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         org.junit.Assert.assertNotNull(components36);
// flaky:         org.junit.Assert.assertNotNull(configuration37);
        org.junit.Assert.assertNull(trainingScheduler38);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener39);
        org.junit.Assert.assertNull(trainingScheduler40);
// flaky:         org.junit.Assert.assertNotNull(configuration41);
        org.junit.Assert.assertNull(storage42);
// flaky:         org.junit.Assert.assertNotNull(configuration43);
// flaky:         org.junit.Assert.assertNotNull(configuration44);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration45);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test38714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38714");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet10 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig14 = batchSetPreferencesServlet11.getServletConfig();
        addCandidateServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig16 = batchSetPreferencesServlet11.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet19 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet20 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet19.init((javax.servlet.ServletConfig) batchSetPreferencesServlet20);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) batchSetPreferencesServlet20);
        batchDeleteCandidatesServlet18.destroy();
        javax.servlet.ServletConfig servletConfig24 = batchDeleteCandidatesServlet18.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet26 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet26.init();
        setPreferenceServlet26.init();
        setPreferenceServlet26.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet30 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str31 = batchDeleteCandidatesServlet30.getServletInfo();
        java.lang.String str32 = batchDeleteCandidatesServlet30.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet33 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet34 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet34.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        setPreferenceServlet33.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet38 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet33.init((javax.servlet.ServletConfig) recommendServlet38);
        batchDeleteCandidatesServlet30.init((javax.servlet.ServletConfig) setPreferenceServlet33);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet41 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet42 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet43 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet42.init((javax.servlet.ServletConfig) batchSetPreferencesServlet43);
        javax.servlet.ServletConfig servletConfig45 = batchSetPreferencesServlet42.getServletConfig();
        addCandidateServlet41.init((javax.servlet.ServletConfig) batchSetPreferencesServlet42);
        javax.servlet.ServletConfig servletConfig47 = addCandidateServlet41.getServletConfig();
        batchDeleteCandidatesServlet30.init((javax.servlet.ServletConfig) addCandidateServlet41);
        javax.servlet.ServletConfig servletConfig49 = batchDeleteCandidatesServlet30.getServletConfig();
        setPreferenceServlet26.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) setPreferenceServlet26);
        javax.servlet.ServletConfig servletConfig52 = null;
        batchDeleteCandidatesServlet18.init(servletConfig52);
        javax.servlet.ServletConfig servletConfig54 = batchDeleteCandidatesServlet18.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str55 = batchDeleteCandidatesServlet18.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertNotNull(servletConfig16);
        org.junit.Assert.assertNotNull(servletConfig24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(servletConfig45);
        org.junit.Assert.assertNotNull(servletConfig47);
        org.junit.Assert.assertNotNull(servletConfig49);
        org.junit.Assert.assertNull(servletConfig54);
    }

    @Test
    public void test38715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38715");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("");
        java.lang.String str10 = storageConfiguration0.getJdbcUrl();
        java.lang.String str11 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration0.getUsername();
        storageConfiguration0.setUsername("MutablePreference{userID=0, itemID=0, value=1.0}");
        java.lang.String str15 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=1, itemID=-1, value=35.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str12, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test38716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38716");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener6 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener6.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener8 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener6.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener8);
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener6);
        delegatingPreferenceChangeListener6.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener6.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener6.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener14);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener31 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener29.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener31);
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener29);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler35 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener38 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler35, "label", (int) ' ');
        inMemoryPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener38);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener41 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener43 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener43.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener43);
        delegatingPreferenceChangeListener43.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener43);
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener43);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener49 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener52 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener54 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener52.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener54);
        delegatingPreferenceChangeListener49.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener52);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler58 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener61 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler58, "label", (int) ' ');
        inMemoryPreferenceChangeListener61.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener61);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener64 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener66 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener66);
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener66);
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener49);
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener49);
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
    }

    @Test
    public void test38717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38717");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore(10000L, (double) 0.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer7 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double10 = fixedCandidatesIDRescorer1.rescore(35L, (double) (short) 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test38718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38718");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration13.getPassword();
        java.lang.String str21 = storageConfiguration13.getJdbcDriverClass();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration13);
        java.lang.String str23 = storageConfiguration13.getUsername();
        storageConfiguration13.setUsername("org.plista.kornakapi.web.InvalidParameterException: label");
        java.lang.String str26 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str29 = storageConfiguration13.getPassword();
        storageConfiguration13.setJdbcUrl("MutablePreference{userID=1, itemID=10, value=0.0}");
        java.lang.String str32 = storageConfiguration13.getJdbcDriverClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str3, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str23, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str29, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test38719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38719");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (-1.0f));
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) (-1));
        double double10 = fixedCandidatesIDRescorer1.rescore((long) 'a', 35.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) 52, (double) 32L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double18 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) 1L);
        double double21 = fixedCandidatesIDRescorer1.rescore((long) 100, 1.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer22 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair23 = null;
        double double25 = filteringLongPairRescorer22.rescore(longPair23, (-1.0d));
        org.apache.mahout.common.LongPair longPair26 = null;
        double double28 = filteringLongPairRescorer22.rescore(longPair26, (double) 35L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.0d) + "'", double4 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 35.0d + "'", double10 == 35.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1.0d) + "'", double25 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 35.0d + "'", double28 == 35.0d);
    }

    @Test
    public void test38720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38720");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        java.lang.String str16 = null; // flaky: configuration5.getModelDirectory();
// flaky:         configuration5.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig19 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str20 = itembasedRecommenderConfig19.getSimilarityClass();
        int int21 = itembasedRecommenderConfig19.getSimilarItemsPerItem();
        int int22 = itembasedRecommenderConfig19.getRetrainAfterPreferenceChanges();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig19);
        int int24 = 0; // flaky: configuration5.getNumProcessorsForTraining();
// flaky:         configuration5.setNumProcessorsForTraining(32);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration27 = null; // flaky: configuration5.getStorageConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str16, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration27);
    }

    @Test
    public void test38721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38721");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = new org.plista.kornakapi.core.config.Configuration();
        configuration11.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = configuration11.getStorageConfiguration();
        configuration11.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration17 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str18 = storageConfiguration17.getJdbcDriverClass();
        storageConfiguration17.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str21 = storageConfiguration17.getJdbcUrl();
        java.lang.String str22 = storageConfiguration17.getJdbcUrl();
        java.lang.String str23 = storageConfiguration17.getJdbcUrl();
        storageConfiguration17.setUsername("recommender");
        configuration11.setStorageConfiguration(storageConfiguration17);
        java.lang.String str27 = storageConfiguration17.getJdbcDriverClass();
        storageConfiguration17.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str30 = storageConfiguration17.getJdbcUrl();
// flaky:         configuration10.setStorageConfiguration(storageConfiguration17);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration32 = null; // flaky: configuration10.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList33 = null; // flaky: configuration10.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNull(trainingScheduler9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(storageConfiguration14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str30, "org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration32);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList33);
    }

    @Test
    public void test38722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38722");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        long long4 = mutablePreference0.getUserID();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.set((long) 100, 0L, (float) 10000L);
        mutablePreference0.set((long) (byte) 10, 10000L, (float) (byte) 100);
        long long14 = mutablePreference0.getItemID();
        mutablePreference0.set(97L, 100L, (float) (-1L));
        mutablePreference0.setValue((float) 10000L);
        mutablePreference0.setValue((float) 100L);
        java.lang.String str23 = mutablePreference0.toString();
        long long24 = mutablePreference0.getItemID();
        java.lang.String str25 = mutablePreference0.toString();
        mutablePreference0.set((long) (-1), 0L, (float) '#');
        long long30 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "MutablePreference{userID=97, itemID=100, value=100.0}" + "'", str23, "MutablePreference{userID=97, itemID=100, value=100.0}");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 100L + "'", long24 == 100L);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "MutablePreference{userID=97, itemID=100, value=100.0}" + "'", str25, "MutablePreference{userID=97, itemID=100, value=100.0}");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + (-1L) + "'", long30 == (-1L));
    }

    @Test
    public void test38723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38723");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration10.getJdbcUrl();
        java.lang.String str15 = storageConfiguration10.getJdbcUrl();
        storageConfiguration10.setJdbcUrl("label");
        configuration0.setStorageConfiguration(storageConfiguration10);
        java.lang.String str19 = storageConfiguration10.getUsername();
        java.lang.String str20 = storageConfiguration10.getUsername();
        java.lang.String str21 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setPassword("howMany");
        java.lang.String str24 = storageConfiguration10.getJdbcUrl();
        storageConfiguration10.setPassword("org.plista.kornakapi.web.InvalidParameterException: label");
        storageConfiguration10.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str29 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setPassword("MutablePreference{userID=35, itemID=0, value=52.0}");
        java.lang.String str32 = storageConfiguration10.getUsername();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str19, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str20, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "label" + "'", str24, "label");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str32, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38724");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = factorizationbasedRecommenderConfig3.getName();
        java.lang.String str8 = factorizationbasedRecommenderConfig3.getName();
        java.lang.String str9 = factorizationbasedRecommenderConfig3.getName();
        factorizationbasedRecommenderConfig3.setRetrainAfterPreferenceChanges((int) 'a');
        int int12 = factorizationbasedRecommenderConfig3.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 97 + "'", int12 == 97);
    }

    @Test
    public void test38725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38725");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore(1L, (double) 100);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 35);
        double double10 = fixedCandidatesIDRescorer1.rescore((long) 97, (double) ' ');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = fixedCandidatesIDRescorer1.isFiltered((long) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 100.0d + "'", double4 == 100.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 35.0d + "'", double7 == 35.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 32.0d + "'", double10 == 32.0d);
    }

    @Test
    public void test38726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38726");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException5);
        java.lang.Throwable[] throwableArray8 = missingParameterException5.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException9);
        org.plista.kornakapi.web.MissingParameterException missingParameterException17 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException17);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException17);
        java.lang.Throwable[] throwableArray20 = missingParameterException17.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException17);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException21);
        invalidParameterException10.addSuppressed((java.lang.Throwable) invalidParameterException21);
        org.plista.kornakapi.web.MissingParameterException missingParameterException30 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException30);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException32 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException30);
        java.lang.Throwable[] throwableArray33 = missingParameterException30.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException34 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException30);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException35 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException34);
        org.plista.kornakapi.web.MissingParameterException missingParameterException42 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException42);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException44 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException42);
        java.lang.Throwable[] throwableArray45 = missingParameterException42.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException42);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException47 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException46);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException46);
        invalidParameterException35.addSuppressed((java.lang.Throwable) invalidParameterException46);
        invalidParameterException21.addSuppressed((java.lang.Throwable) invalidParameterException46);
        java.lang.String str51 = invalidParameterException21.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: recommender" + "'", str51, "org.plista.kornakapi.web.InvalidParameterException: recommender");
    }

    @Test
    public void test38727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38727");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        long long5 = mutableCandidate0.getItemID();
        long long6 = mutableCandidate0.getItemID();
        long long7 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
    }

    @Test
    public void test38728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38728");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setAlpha((double) (byte) 100);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        int int11 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int12 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test38729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38729");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray5 = missingParameterException4.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=32.0}", (java.lang.Throwable) invalidParameterException7);
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException12);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException14 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException12);
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException19);
        java.lang.Throwable[] throwableArray22 = missingParameterException19.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException19);
        invalidParameterException14.addSuppressed((java.lang.Throwable) invalidParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException28);
        java.lang.Throwable[] throwableArray31 = invalidParameterException30.getSuppressed();
        invalidParameterException23.addSuppressed((java.lang.Throwable) invalidParameterException30);
        invalidParameterException8.addSuppressed((java.lang.Throwable) invalidParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException40 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException41 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException40);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException42 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException40);
        org.plista.kornakapi.web.MissingParameterException missingParameterException44 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException46 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException44.addSuppressed((java.lang.Throwable) missingParameterException46);
        invalidParameterException42.addSuppressed((java.lang.Throwable) missingParameterException46);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException42);
        org.plista.kornakapi.web.MissingParameterException missingParameterException56 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException57 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException56);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException58 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException56);
        org.plista.kornakapi.web.MissingParameterException missingParameterException60 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException62 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException60.addSuppressed((java.lang.Throwable) missingParameterException62);
        invalidParameterException58.addSuppressed((java.lang.Throwable) missingParameterException62);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException65 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException58);
        org.plista.kornakapi.web.MissingParameterException missingParameterException69 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException70 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException69);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException71 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException69);
        invalidParameterException65.addSuppressed((java.lang.Throwable) missingParameterException69);
        org.plista.kornakapi.web.MissingParameterException missingParameterException74 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException77 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException78 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException77);
        missingParameterException74.addSuppressed((java.lang.Throwable) invalidParameterException78);
        invalidParameterException65.addSuppressed((java.lang.Throwable) missingParameterException74);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException81 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) invalidParameterException65);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException82 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException81);
        invalidParameterException49.addSuppressed((java.lang.Throwable) invalidParameterException82);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException84 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException49);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException85 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=0.0}", (java.lang.Throwable) invalidParameterException84);
        invalidParameterException8.addSuppressed((java.lang.Throwable) invalidParameterException85);
        org.plista.kornakapi.web.MissingParameterException missingParameterException89 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=0, itemID=0, value=32.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException90 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException89);
        invalidParameterException85.addSuppressed((java.lang.Throwable) invalidParameterException90);
        java.lang.String str92 = invalidParameterException85.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str92, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=0, value=0.0}");
    }

    @Test
    public void test38730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38730");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException5.addSuppressed((java.lang.Throwable) missingParameterException7);
        java.lang.Throwable[] throwableArray9 = missingParameterException7.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException10);
        java.lang.Throwable[] throwableArray12 = invalidParameterException11.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException15 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException17 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException15.addSuppressed((java.lang.Throwable) missingParameterException17);
        java.lang.Throwable[] throwableArray19 = missingParameterException17.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException17);
        invalidParameterException11.addSuppressed((java.lang.Throwable) invalidParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=-1.0}", (java.lang.Throwable) invalidParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10, itemID=32, value=10000.0}", (java.lang.Throwable) invalidParameterException20);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test38731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38731");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        java.lang.String str16 = storageConfiguration7.getJdbcUrl();
        storageConfiguration7.setPassword("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        storageConfiguration7.setJdbcUrl("MutablePreference{userID=100, itemID=0, value=0.0}");
        storageConfiguration7.setUsername("file");
        storageConfiguration7.setJdbcUrl("");
        storageConfiguration7.setUsername("MutablePreference{userID=32, itemID=97, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test38732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38732");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) -1);
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) (byte) 10);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setLambda(10000.0d);
        int int18 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test38733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38733");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setJdbcDriverClass("batchSize");
        java.lang.String str12 = storageConfiguration4.getPassword();
        java.lang.String str13 = storageConfiguration4.getJdbcUrl();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration15.getPassword();
        java.lang.String str20 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("hi!");
        storageConfiguration15.setJdbcDriverClass("file");
// flaky:         configuration2.setStorageConfiguration(storageConfiguration15);
        java.lang.String str26 = storageConfiguration15.getJdbcDriverClass();
        java.lang.String str27 = storageConfiguration15.getUsername();
        java.lang.String str28 = storageConfiguration15.getPassword();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str3, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "file" + "'", str26, "file");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test38734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38734");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         storageConfiguration3.setUsername("howMany");
        java.lang.String str6 = null; // flaky: storageConfiguration3.getJdbcDriverClass();
        java.lang.String str7 = null; // flaky: storageConfiguration3.getJdbcDriverClass();
// flaky:         storageConfiguration3.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany");
        java.lang.String str10 = null; // flaky: storageConfiguration3.getJdbcDriverClass();
// flaky:         storageConfiguration3.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=35, itemID=35, value=0.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "file" + "'", str6, "file");
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file" + "'", str7, "file");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
    }

    @Test
    public void test38735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38735");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener27.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener29);
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler34 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener37 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler34, "file", (int) (short) 10);
        delegatingPreferenceChangeListener27.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener37);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler39 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener42 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler39, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=0, value=0.0}", (int) (short) 100);
        delegatingPreferenceChangeListener27.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener42);
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
    }

    @Test
    public void test38736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38736");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair6 = null;
        double double8 = filteringLongPairRescorer5.rescore(longPair6, 52.0d);
        org.apache.mahout.common.LongPair longPair9 = null;
        double double11 = filteringLongPairRescorer5.rescore(longPair9, (double) (short) 0);
        org.apache.mahout.common.LongPair longPair12 = null;
        double double14 = filteringLongPairRescorer5.rescore(longPair12, (double) 'a');
        org.apache.mahout.common.LongPair longPair15 = null;
        double double17 = filteringLongPairRescorer5.rescore(longPair15, (double) 32.0f);
        org.apache.mahout.common.LongPair longPair18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = filteringLongPairRescorer5.isFiltered(longPair18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 97.0d + "'", double14 == 97.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 32.0d + "'", double17 == 32.0d);
    }

    @Test
    public void test38737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38737");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        mutablePreference0.setValue((float) 35);
        long long10 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (byte) 1);
        long long13 = mutablePreference0.getItemID();
        mutablePreference0.set(10000L, 52L, (float) 52L);
        long long18 = mutablePreference0.getUserID();
        long long19 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
    }

    @Test
    public void test38738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38738");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration0.getUsername();
        storageConfiguration0.setUsername("itemIDs");
        java.lang.String str11 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setUsername("MutablePreference{userID=52, itemID=10000, value=32.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test38739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38739");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) (short) 0);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (short) 10);
        double double12 = fixedCandidatesIDRescorer1.rescore(10000L, (double) (byte) 0);
        double double15 = fixedCandidatesIDRescorer1.rescore(1L, 10000.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer16 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double19 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) (short) 100);
        double double22 = fixedCandidatesIDRescorer1.rescore(0L, (double) (byte) 100);
        double double25 = fixedCandidatesIDRescorer1.rescore((long) 32, (double) 10L);
        double double28 = fixedCandidatesIDRescorer1.rescore((long) 0, (double) 'a');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer29 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer30 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10000.0d + "'", double15 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 97.0d + "'", double28 == 97.0d);
    }

    @Test
    public void test38740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38740");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = null; // flaky: configuration9.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig11 = null;
// flaky:         configuration9.addItembasedRecommender(itembasedRecommenderConfig11);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = null; // flaky: configuration9.getStorageConfiguration();
// flaky:         configuration9.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.web.Components components16 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration18 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components16.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList21 = null; // flaky: configuration20.getItembasedRecommenders();
        int int22 = 0; // flaky: configuration20.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration23 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str24 = storageConfiguration23.getJdbcDriverClass();
        storageConfiguration23.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str27 = storageConfiguration23.getJdbcUrl();
        java.lang.String str28 = storageConfiguration23.getJdbcDriverClass();
        java.lang.String str29 = storageConfiguration23.getJdbcDriverClass();
        java.lang.String str30 = storageConfiguration23.getPassword();
        java.lang.String str31 = storageConfiguration23.getUsername();
        storageConfiguration23.setUsername("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str34 = storageConfiguration23.getJdbcDriverClass();
// flaky:         configuration20.setStorageConfiguration(storageConfiguration23);
        org.plista.kornakapi.web.Components components36 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration37 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration38 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler39 = null; // flaky: components36.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration40 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration41 = null; // flaky: configuration40.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration42 = new org.plista.kornakapi.core.config.Configuration();
        int int43 = configuration42.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList44 = configuration42.getItembasedRecommenders();
        int int45 = configuration42.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig46 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str47 = itembasedRecommenderConfig46.getRetrainCronExpression();
        configuration42.addItembasedRecommender(itembasedRecommenderConfig46);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig49 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str50 = itembasedRecommenderConfig49.getRetrainCronExpression();
        itembasedRecommenderConfig49.setSimilarityClass("");
        java.lang.String str53 = itembasedRecommenderConfig49.getSimilarityClass();
        itembasedRecommenderConfig49.setName("label");
        configuration42.addItembasedRecommender(itembasedRecommenderConfig49);
// flaky:         configuration40.addItembasedRecommender(itembasedRecommenderConfig49);
        itembasedRecommenderConfig49.setName("MutablePreference{userID=0, itemID=0, value=0.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer60 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig49);
// flaky:         configuration20.addItembasedRecommender(itembasedRecommenderConfig49);
        itembasedRecommenderConfig49.setRetrainAfterPreferenceChanges((int) 'a');
        itembasedRecommenderConfig49.setSimilarItemsPerItem((int) (byte) 10);
// flaky:         configuration9.addItembasedRecommender(itembasedRecommenderConfig49);
        int int67 = itembasedRecommenderConfig49.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer68 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig49);
        java.lang.String str69 = itembasedRecommenderConfig49.getSimilarityClass();
        itembasedRecommenderConfig49.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=100, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration13);
// flaky:         org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
// flaky:         org.junit.Assert.assertNotNull(configuration18);
        org.junit.Assert.assertNull(trainingScheduler19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList21);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str31, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str34);
// flaky:         org.junit.Assert.assertNotNull(components36);
// flaky:         org.junit.Assert.assertNotNull(configuration37);
// flaky:         org.junit.Assert.assertNotNull(configuration38);
        org.junit.Assert.assertNull(trainingScheduler39);
// flaky:         org.junit.Assert.assertNotNull(configuration40);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test38741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38741");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet3 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) batchSetPreferencesServlet3);
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet6 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet6.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet8 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet9 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        batchDeleteCandidatesServlet8.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        javax.servlet.ServletConfig servletConfig13 = batchSetPreferencesServlet10.getServletConfig();
        addCandidateServlet6.init(servletConfig13);
        addCandidateServlet0.init((javax.servlet.ServletConfig) addCandidateServlet6);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet17 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet18 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet17.init((javax.servlet.ServletConfig) batchSetPreferencesServlet18);
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) batchSetPreferencesServlet18);
        batchDeleteCandidatesServlet16.destroy();
        javax.servlet.ServletConfig servletConfig22 = batchDeleteCandidatesServlet16.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet23 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet24 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig27 = batchSetPreferencesServlet24.getServletConfig();
        addCandidateServlet23.init((javax.servlet.ServletConfig) batchSetPreferencesServlet24);
        batchSetPreferencesServlet24.destroy();
        java.lang.String str30 = batchSetPreferencesServlet24.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet31 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str32 = trainServlet31.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet33 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet33.destroy();
        javax.servlet.ServletConfig servletConfig35 = deleteCandidateServlet33.getServletConfig();
        deleteCandidateServlet33.destroy();
        trainServlet31.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        javax.servlet.ServletConfig servletConfig38 = deleteCandidateServlet33.getServletConfig();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        deleteCandidateServlet33.init();
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        deleteCandidateServlet33.destroy();
        addCandidateServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet44 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet45 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet46 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet45.init((javax.servlet.ServletConfig) batchSetPreferencesServlet46);
        java.lang.String str48 = batchSetPreferencesServlet46.getServletInfo();
        batchSetPreferencesServlet46.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet50 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str51 = batchDeleteCandidatesServlet50.getServletInfo();
        java.lang.String str52 = batchDeleteCandidatesServlet50.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet53 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet54 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet55 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet54.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet55);
        setPreferenceServlet53.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet55);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet58 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet53.init((javax.servlet.ServletConfig) recommendServlet58);
        batchDeleteCandidatesServlet50.init((javax.servlet.ServletConfig) setPreferenceServlet53);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet61 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet62 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet63 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet62.init((javax.servlet.ServletConfig) batchSetPreferencesServlet63);
        javax.servlet.ServletConfig servletConfig65 = batchSetPreferencesServlet62.getServletConfig();
        addCandidateServlet61.init((javax.servlet.ServletConfig) batchSetPreferencesServlet62);
        javax.servlet.ServletConfig servletConfig67 = addCandidateServlet61.getServletConfig();
        batchDeleteCandidatesServlet50.init((javax.servlet.ServletConfig) addCandidateServlet61);
        addCandidateServlet61.destroy();
        batchSetPreferencesServlet46.init((javax.servlet.ServletConfig) addCandidateServlet61);
        batchSetPreferencesServlet46.init();
        batchDeleteCandidatesServlet44.init((javax.servlet.ServletConfig) batchSetPreferencesServlet46);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet73 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet73.init();
        java.lang.String str75 = batchAddCandidatesServlet73.getServletInfo();
        javax.servlet.ServletConfig servletConfig76 = batchAddCandidatesServlet73.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet77 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str78 = batchDeleteCandidatesServlet77.getServletInfo();
        java.lang.String str79 = batchDeleteCandidatesServlet77.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet80 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet81 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet82 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet81.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet82);
        setPreferenceServlet80.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet82);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet85 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet80.init((javax.servlet.ServletConfig) recommendServlet85);
        batchDeleteCandidatesServlet77.init((javax.servlet.ServletConfig) setPreferenceServlet80);
        batchAddCandidatesServlet73.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet77);
        batchSetPreferencesServlet46.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet77);
        java.lang.String str90 = batchDeleteCandidatesServlet77.getServletInfo();
        deleteCandidateServlet33.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet77);
        org.junit.Assert.assertNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig22);
        org.junit.Assert.assertNotNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(servletConfig35);
        org.junit.Assert.assertNull(servletConfig38);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNotNull(servletConfig65);
        org.junit.Assert.assertNotNull(servletConfig67);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertNull(servletConfig76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
    }

    @Test
    public void test38742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38742");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        java.lang.String str15 = batchSetPreferencesServlet1.getServletInfo();
        javax.servlet.ServletRequest servletRequest16 = null;
        javax.servlet.ServletResponse servletResponse17 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet1.service(servletRequest16, servletResponse17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test38743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38743");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet5 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str6 = trainServlet5.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet7 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet7.destroy();
        javax.servlet.ServletConfig servletConfig9 = deleteCandidateServlet7.getServletConfig();
        deleteCandidateServlet7.destroy();
        trainServlet5.init((javax.servlet.ServletConfig) deleteCandidateServlet7);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet12 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet12.init();
        java.lang.String str14 = batchAddCandidatesServlet12.getServletInfo();
        javax.servlet.ServletConfig servletConfig15 = batchAddCandidatesServlet12.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str17 = batchDeleteCandidatesServlet16.getServletInfo();
        java.lang.String str18 = batchDeleteCandidatesServlet16.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet19 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet20 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet20.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        setPreferenceServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet24 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet19.init((javax.servlet.ServletConfig) recommendServlet24);
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) setPreferenceServlet19);
        batchAddCandidatesServlet12.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        batchDeleteCandidatesServlet16.init();
        java.lang.String str29 = batchDeleteCandidatesServlet16.getServletInfo();
        java.lang.String str30 = batchDeleteCandidatesServlet16.getServletInfo();
        trainServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet33 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet33.init();
        java.lang.String str35 = deleteCandidateServlet33.getServletInfo();
        deleteCandidateServlet33.init();
        javax.servlet.ServletConfig servletConfig37 = deleteCandidateServlet33.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet38 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet39 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet40 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet39.init((javax.servlet.ServletConfig) batchSetPreferencesServlet40);
        javax.servlet.ServletConfig servletConfig42 = batchSetPreferencesServlet39.getServletConfig();
        addCandidateServlet38.init((javax.servlet.ServletConfig) batchSetPreferencesServlet39);
        javax.servlet.ServletConfig servletConfig44 = addCandidateServlet38.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet45 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet46 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet47 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet46.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet47);
        setPreferenceServlet45.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet47);
        javax.servlet.ServletConfig servletConfig50 = setPreferenceServlet45.getServletConfig();
        addCandidateServlet38.init((javax.servlet.ServletConfig) setPreferenceServlet45);
        deleteCandidateServlet33.init((javax.servlet.ServletConfig) addCandidateServlet38);
        javax.servlet.ServletConfig servletConfig53 = addCandidateServlet38.getServletConfig();
        java.lang.String str54 = addCandidateServlet38.getServletInfo();
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) addCandidateServlet38);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext56 = addCandidateServlet38.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(servletConfig9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(servletConfig15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(servletConfig37);
        org.junit.Assert.assertNotNull(servletConfig42);
        org.junit.Assert.assertNotNull(servletConfig44);
        org.junit.Assert.assertNotNull(servletConfig50);
        org.junit.Assert.assertNotNull(servletConfig53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test38744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38744");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration3 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(configuration3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNull(storage5);
    }

    @Test
    public void test38745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38745");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setName("");
        java.lang.String str13 = itembasedRecommenderConfig6.getSimilarityClass();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig6);
// flaky:         configuration5.setNumProcessorsForTraining((int) (byte) 10);
        java.lang.String str17 = null; // flaky: configuration5.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig18 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str19 = itembasedRecommenderConfig18.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig18);
        java.lang.String str21 = itembasedRecommenderConfig18.getSimilarityClass();
        itembasedRecommenderConfig18.setRetrainAfterPreferenceChanges((int) (short) 100);
        int int24 = itembasedRecommenderConfig18.getSimilarItemsPerItem();
        int int25 = itembasedRecommenderConfig18.getSimilarItemsPerItem();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig18);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig27 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double28 = factorizationbasedRecommenderConfig27.getAlpha();
        double double29 = factorizationbasedRecommenderConfig27.getLambda();
        int int30 = factorizationbasedRecommenderConfig27.getNumberOfFeatures();
        factorizationbasedRecommenderConfig27.setUsesImplicitFeedback(true);
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig27);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList34 = null; // flaky: configuration5.getItembasedRecommenders();
// flaky:         configuration5.setModelDirectory("MutablePreference{userID=100, itemID=52, value=0.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
// flaky:         org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str17, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList34);
    }

    @Test
    public void test38746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38746");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig8 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double9 = factorizationbasedRecommenderConfig8.getAlpha();
        double double10 = factorizationbasedRecommenderConfig8.getLambda();
        int int11 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        factorizationbasedRecommenderConfig8.setUsesImplicitFeedback(false);
        int int14 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        factorizationbasedRecommenderConfig8.setLambda((double) 0);
        factorizationbasedRecommenderConfig8.setName("userID");
        int int19 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        int int20 = factorizationbasedRecommenderConfig8.getNumberOfIterations();
        factorizationbasedRecommenderConfig8.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig8.setRetrainAfterPreferenceChanges(10);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig8);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig26 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str27 = itembasedRecommenderConfig26.getRetrainCronExpression();
        int int28 = itembasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
        int int29 = itembasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig26);
        int int31 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig32 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double33 = factorizationbasedRecommenderConfig32.getAlpha();
        double double34 = factorizationbasedRecommenderConfig32.getLambda();
        int int35 = factorizationbasedRecommenderConfig32.getNumberOfFeatures();
        java.lang.String str36 = factorizationbasedRecommenderConfig32.getRetrainCronExpression();
        int int37 = factorizationbasedRecommenderConfig32.getNumberOfFeatures();
        factorizationbasedRecommenderConfig32.setNumberOfIterations((int) (short) 0);
        boolean boolean40 = factorizationbasedRecommenderConfig32.isUsesImplicitFeedback();
        java.lang.String str41 = factorizationbasedRecommenderConfig32.getRetrainCronExpression();
        double double42 = factorizationbasedRecommenderConfig32.getLambda();
        factorizationbasedRecommenderConfig32.setLambda((double) (byte) -1);
        factorizationbasedRecommenderConfig32.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig32.setLambda((double) 100L);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig32);
        int int50 = factorizationbasedRecommenderConfig32.getNumberOfFeatures();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test38747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38747");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig11 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str12 = itembasedRecommenderConfig11.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig11);
        itembasedRecommenderConfig11.setSimilarityClass("recommender");
        java.lang.String str16 = itembasedRecommenderConfig11.getSimilarityClass();
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig11);
        itembasedRecommenderConfig11.setSimilarityClass("hi!");
        itembasedRecommenderConfig11.setName("");
        itembasedRecommenderConfig11.setSimilarItemsPerItem((int) (byte) 10);
        itembasedRecommenderConfig11.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "recommender" + "'", str16, "recommender");
    }

    @Test
    public void test38748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38748");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) -1);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig0.setAlpha((double) 97.0f);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) -1);
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 10000);
        int int19 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
    }

    @Test
    public void test38749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38749");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        boolean boolean7 = factorizationbasedRecommenderConfig4.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig4.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration2.getItembasedRecommenders();
        java.lang.String str12 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.web.Components components13 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components13.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler15 = null; // flaky: components13.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = null; // flaky: components13.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components13.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage18 = null; // flaky: components13.storage();
        org.plista.kornakapi.core.storage.Storage storage19 = null; // flaky: components13.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler20 = null; // flaky: components13.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler21 = null; // flaky: components13.scheduler();
        org.plista.kornakapi.core.storage.Storage storage22 = null; // flaky: components13.storage();
        org.plista.kornakapi.core.config.Configuration configuration23 = null; // flaky: components13.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList24 = null; // flaky: configuration23.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig25 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str26 = itembasedRecommenderConfig25.getRetrainCronExpression();
        int int27 = itembasedRecommenderConfig25.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig25.setSimilarItemsPerItem((int) (byte) -1);
        itembasedRecommenderConfig25.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         configuration23.addItembasedRecommender(itembasedRecommenderConfig25);
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig25);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=100, itemID=52, value=0.0}" + "'", str12, "MutablePreference{userID=100, itemID=52, value=0.0}");
// flaky:         org.junit.Assert.assertNotNull(components13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNull(trainingScheduler15);
        org.junit.Assert.assertNull(trainingScheduler16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(storage18);
        org.junit.Assert.assertNull(storage19);
        org.junit.Assert.assertNull(trainingScheduler20);
        org.junit.Assert.assertNull(trainingScheduler21);
        org.junit.Assert.assertNull(storage22);
// flaky:         org.junit.Assert.assertNotNull(configuration23);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test38750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38750");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=52, itemID=32, value=0.0}", (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test38751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38751");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) 100, (-1L), (float) (short) 100);
        long long8 = mutablePreference0.getUserID();
        float float9 = mutablePreference0.getValue();
        float float10 = mutablePreference0.getValue();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 100.0f + "'", float9 == 100.0f);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 100.0f + "'", float10 == 100.0f);
    }

    @Test
    public void test38752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38752");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = null;
        batchDeleteCandidatesServlet0.init(servletConfig3);
        javax.servlet.ServletConfig servletConfig5 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig7 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet9 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet9.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet11 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet12.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet13);
        setPreferenceServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet13);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet16 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet11.init((javax.servlet.ServletConfig) recommendServlet16);
        recommendServlet16.init();
        addCandidateServlet9.init((javax.servlet.ServletConfig) recommendServlet16);
        java.lang.String str20 = addCandidateServlet9.getServletInfo();
        addCandidateServlet9.init();
        javax.servlet.ServletConfig servletConfig22 = addCandidateServlet9.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet23 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet24 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig27 = batchSetPreferencesServlet24.getServletConfig();
        addCandidateServlet23.init((javax.servlet.ServletConfig) batchSetPreferencesServlet24);
        batchSetPreferencesServlet24.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet30 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str31 = recommendServlet30.getServletInfo();
        javax.servlet.ServletConfig servletConfig32 = recommendServlet30.getServletConfig();
        java.lang.String str33 = recommendServlet30.getServletInfo();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) recommendServlet30);
        addCandidateServlet9.init((javax.servlet.ServletConfig) recommendServlet30);
        java.lang.String str36 = recommendServlet30.getServletInfo();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet37 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet37.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet39 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet40 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet39.init((javax.servlet.ServletConfig) batchSetPreferencesServlet40);
        addCandidateServlet37.init((javax.servlet.ServletConfig) batchSetPreferencesServlet39);
        java.lang.String str43 = batchSetPreferencesServlet39.getServletInfo();
        java.lang.String str44 = batchSetPreferencesServlet39.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet45 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str46 = batchDeleteCandidatesServlet45.getServletInfo();
        batchDeleteCandidatesServlet45.init();
        batchDeleteCandidatesServlet45.destroy();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet49 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet49.destroy();
        javax.servlet.ServletConfig servletConfig51 = deleteCandidateServlet49.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet52 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str53 = batchDeleteCandidatesServlet52.getServletInfo();
        java.lang.String str54 = batchDeleteCandidatesServlet52.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet55 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet56 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet57 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet56.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet57);
        setPreferenceServlet55.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet57);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet60 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet55.init((javax.servlet.ServletConfig) recommendServlet60);
        batchDeleteCandidatesServlet52.init((javax.servlet.ServletConfig) setPreferenceServlet55);
        setPreferenceServlet55.destroy();
        deleteCandidateServlet49.init((javax.servlet.ServletConfig) setPreferenceServlet55);
        batchDeleteCandidatesServlet45.init((javax.servlet.ServletConfig) setPreferenceServlet55);
        setPreferenceServlet55.destroy();
        batchSetPreferencesServlet39.init((javax.servlet.ServletConfig) setPreferenceServlet55);
        recommendServlet30.init((javax.servlet.ServletConfig) setPreferenceServlet55);
        java.lang.String str69 = setPreferenceServlet55.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet55);
        setPreferenceServlet55.destroy();
        java.lang.String str72 = setPreferenceServlet55.getServletInfo();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(servletConfig22);
        org.junit.Assert.assertNotNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(servletConfig51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test38753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38753");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) -1);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(0);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setLambda((double) 97.0f);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test38754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38754");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig14);
        factorizationbasedRecommenderConfig14.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig14.setNumberOfIterations((int) '#');
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList22 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration23 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str24 = storageConfiguration23.getJdbcDriverClass();
        storageConfiguration23.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str27 = storageConfiguration23.getJdbcUrl();
        java.lang.String str28 = storageConfiguration23.getJdbcDriverClass();
        storageConfiguration23.setJdbcDriverClass("batchSize");
        storageConfiguration23.setPassword("howMany");
        storageConfiguration23.setJdbcUrl("hi!");
        java.lang.String str35 = storageConfiguration23.getPassword();
        storageConfiguration23.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str38 = storageConfiguration23.getJdbcDriverClass();
        storageConfiguration23.setPassword("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        java.lang.String str41 = storageConfiguration23.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration23);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration43 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.web.Components components44 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration45 = null; // flaky: components44.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration46 = null; // flaky: components44.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage47 = null; // flaky: components44.storage();
        org.plista.kornakapi.core.storage.Storage storage48 = null; // flaky: components44.storage();
        org.plista.kornakapi.core.config.Configuration configuration49 = null; // flaky: components44.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList50 = null; // flaky: configuration49.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration51 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str52 = storageConfiguration51.getJdbcDriverClass();
        storageConfiguration51.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str55 = storageConfiguration51.getJdbcUrl();
        java.lang.String str56 = storageConfiguration51.getJdbcDriverClass();
        java.lang.String str57 = storageConfiguration51.getJdbcDriverClass();
        java.lang.String str58 = storageConfiguration51.getPassword();
// flaky:         configuration49.setStorageConfiguration(storageConfiguration51);
        java.lang.String str60 = null; // flaky: configuration49.getModelDirectory();
// flaky:         configuration49.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig63 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str64 = itembasedRecommenderConfig63.getSimilarityClass();
        int int65 = itembasedRecommenderConfig63.getSimilarItemsPerItem();
        int int66 = itembasedRecommenderConfig63.getRetrainAfterPreferenceChanges();
// flaky:         configuration49.addItembasedRecommender(itembasedRecommenderConfig63);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig68 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double69 = factorizationbasedRecommenderConfig68.getAlpha();
        double double70 = factorizationbasedRecommenderConfig68.getLambda();
        int int71 = factorizationbasedRecommenderConfig68.getNumberOfFeatures();
        java.lang.String str72 = factorizationbasedRecommenderConfig68.getRetrainCronExpression();
        int int73 = factorizationbasedRecommenderConfig68.getNumberOfFeatures();
        java.lang.String str74 = factorizationbasedRecommenderConfig68.getName();
        int int75 = factorizationbasedRecommenderConfig68.getNumberOfIterations();
        java.lang.String str76 = factorizationbasedRecommenderConfig68.getName();
        int int77 = factorizationbasedRecommenderConfig68.getNumberOfFeatures();
// flaky:         configuration49.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig68);
        int int79 = 0; // flaky: configuration49.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components80 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration81 = null; // flaky: components80.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration82 = null; // flaky: components80.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler83 = null; // flaky: components80.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler84 = null; // flaky: components80.scheduler();
        org.plista.kornakapi.core.storage.Storage storage85 = null; // flaky: components80.storage();
        org.plista.kornakapi.core.config.Configuration configuration86 = null; // flaky: components80.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler87 = null; // flaky: components80.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration88 = null; // flaky: components80.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration89 = null; // flaky: configuration88.getStorageConfiguration();
// flaky:         storageConfiguration89.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str92 = null; // flaky: storageConfiguration89.getPassword();
// flaky:         storageConfiguration89.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: label");
// flaky:         configuration49.setStorageConfiguration(storageConfiguration89);
        configuration0.setStorageConfiguration(storageConfiguration89);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "howMany" + "'", str35, "howMany");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "batchSize" + "'", str38, "batchSize");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str41, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertNotNull(storageConfiguration43);
// flaky:         org.junit.Assert.assertNotNull(components44);
// flaky:         org.junit.Assert.assertNotNull(configuration45);
// flaky:         org.junit.Assert.assertNotNull(configuration46);
        org.junit.Assert.assertNull(storage47);
        org.junit.Assert.assertNull(storage48);
// flaky:         org.junit.Assert.assertNotNull(configuration49);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "MutablePreference{userID=100, itemID=52, value=0.0}" + "'", str60, "MutablePreference{userID=100, itemID=52, value=0.0}");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
// flaky:         org.junit.Assert.assertNotNull(components80);
// flaky:         org.junit.Assert.assertNotNull(configuration81);
// flaky:         org.junit.Assert.assertNotNull(configuration82);
        org.junit.Assert.assertNull(trainingScheduler83);
        org.junit.Assert.assertNull(trainingScheduler84);
        org.junit.Assert.assertNull(storage85);
// flaky:         org.junit.Assert.assertNotNull(configuration86);
        org.junit.Assert.assertNull(trainingScheduler87);
// flaky:         org.junit.Assert.assertNotNull(configuration88);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration89);
// flaky:         org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str92, "org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test38755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38755");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        long long1 = mutablePreference0.getItemID();
        java.lang.String str2 = mutablePreference0.toString();
        long long3 = mutablePreference0.getItemID();
        java.lang.String str4 = mutablePreference0.toString();
        float float5 = mutablePreference0.getValue();
        long long6 = mutablePreference0.getUserID();
        long long7 = mutablePreference0.getItemID();
        java.lang.String str8 = mutablePreference0.toString();
        float float9 = mutablePreference0.getValue();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str2, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str8, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9 == 0.0f);
    }

    @Test
    public void test38756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38756");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        java.lang.String str16 = null; // flaky: configuration5.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList17 = null; // flaky: configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList18 = null; // flaky: configuration5.getItembasedRecommenders();
// flaky:         configuration5.setNumProcessorsForTraining((int) (short) 10);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList21 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        java.lang.String str22 = null; // flaky: configuration5.getModelDirectory();
// flaky:         configuration5.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
// flaky:         configuration5.setNumProcessorsForTraining(10);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str16, "org.plista.kornakapi.web.MissingParameterException: itemID");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList17);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList18);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str22, "org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test38757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38757");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration8.getStorageConfiguration();
// flaky:         storageConfiguration9.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str12 = null; // flaky: storageConfiguration9.getPassword();
// flaky:         storageConfiguration9.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: label");
// flaky:         storageConfiguration9.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
// flaky:         storageConfiguration9.setJdbcUrl("MutablePreference{userID=-1, itemID=0, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test38758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38758");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) 'a');
        int int17 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int18 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        java.lang.String str19 = factorizationbasedRecommenderConfig0.getName();
        boolean boolean20 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test38759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38759");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        boolean boolean7 = factorizationbasedRecommenderConfig4.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig4.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration2.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration2.getItembasedRecommenders();
        java.lang.String str13 = null; // flaky: configuration2.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList14 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        int int15 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList14);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration16);
    }

    @Test
    public void test38760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38760");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setAlpha((double) 52);
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setLambda((double) 1.0f);
        int int7 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test38761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38761");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) '4');
        org.plista.kornakapi.core.config.Configuration configuration5 = new org.plista.kornakapi.core.config.Configuration();
        configuration5.setNumProcessorsForTraining((int) (short) 100);
        configuration5.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig10 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str11 = itembasedRecommenderConfig10.getRetrainCronExpression();
        int int12 = itembasedRecommenderConfig10.getRetrainAfterPreferenceChanges();
        java.lang.String str13 = itembasedRecommenderConfig10.getSimilarityClass();
        itembasedRecommenderConfig10.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig10.setRetrainCronExpression("value");
        int int18 = itembasedRecommenderConfig10.getRetrainAfterPreferenceChanges();
        configuration5.addItembasedRecommender(itembasedRecommenderConfig10);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration21 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str22 = storageConfiguration21.getJdbcDriverClass();
        storageConfiguration21.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str25 = storageConfiguration21.getJdbcUrl();
        java.lang.String str26 = storageConfiguration21.getJdbcDriverClass();
        storageConfiguration21.setJdbcDriverClass("batchSize");
        java.lang.String str29 = storageConfiguration21.getPassword();
        storageConfiguration21.setUsername("batchSize");
        java.lang.String str32 = storageConfiguration21.getJdbcUrl();
        storageConfiguration21.setUsername("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration21.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: file");
        configuration0.setStorageConfiguration(storageConfiguration21);
        org.plista.kornakapi.web.Components components38 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage39 = null; // flaky: components38.storage();
        org.plista.kornakapi.core.config.Configuration configuration40 = null; // flaky: components38.getConfiguration();
        java.lang.String str41 = null; // flaky: configuration40.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration42 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str43 = storageConfiguration42.getJdbcDriverClass();
        storageConfiguration42.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str46 = storageConfiguration42.getJdbcUrl();
        java.lang.String str47 = storageConfiguration42.getJdbcDriverClass();
        storageConfiguration42.setJdbcDriverClass("batchSize");
        java.lang.String str50 = storageConfiguration42.getPassword();
        java.lang.String str51 = storageConfiguration42.getJdbcUrl();
// flaky:         configuration40.setStorageConfiguration(storageConfiguration42);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration53 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str54 = storageConfiguration53.getJdbcDriverClass();
        storageConfiguration53.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str57 = storageConfiguration53.getPassword();
        java.lang.String str58 = storageConfiguration53.getJdbcDriverClass();
        storageConfiguration53.setUsername("hi!");
        storageConfiguration53.setJdbcDriverClass("file");
// flaky:         configuration40.setStorageConfiguration(storageConfiguration53);
        storageConfiguration53.setUsername("recommender");
        storageConfiguration53.setPassword("MutablePreference{userID=0, itemID=-1, value=32.0}");
        configuration0.setStorageConfiguration(storageConfiguration53);
        int int69 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration70 = configuration0.getStorageConfiguration();
        storageConfiguration70.setJdbcDriverClass("MutablePreference{userID=35, itemID=35, value=0.0}");
        storageConfiguration70.setUsername("MutablePreference{userID=10, itemID=97, value=100.0}");
        storageConfiguration70.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str32);
// flaky:         org.junit.Assert.assertNotNull(components38);
        org.junit.Assert.assertNull(storage39);
// flaky:         org.junit.Assert.assertNotNull(configuration40);
// flaky:         org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender" + "'", str41, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertNotNull(storageConfiguration70);
    }

    @Test
    public void test38762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38762");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) recommendServlet5);
        recommendServlet5.init();
        java.lang.String str8 = recommendServlet5.getServletInfo();
        recommendServlet5.destroy();
        javax.servlet.ServletConfig servletConfig10 = recommendServlet5.getServletConfig();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(servletConfig10);
    }

    @Test
    public void test38763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38763");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("");
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 100);
        factorizationbasedRecommenderConfig0.setAlpha(1.0d);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test38764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38764");
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.config.Configuration configuration1 = org.plista.kornakapi.core.config.Configuration.fromXML("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=32.0}");
            org.junit.Assert.fail("Expected exception of type com.thoughtworks.xstream.io.StreamException; message:  : only whitespace content allowed before start tag and not o (position: START_DOCUMENT seen o... @1:1) ");
        } catch (com.thoughtworks.xstream.io.StreamException e) {
            // Expected exception.
        }
    }

    @Test
    public void test38765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38765");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList13 = configuration0.getFactorizationbasedRecommenders();
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=0, value=100.0}");
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=97, value=10.0}");
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList13);
    }

    @Test
    public void test38766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38766");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getJdbcDriverClass();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str17 = itembasedRecommenderConfig16.getRetrainCronExpression();
        int int18 = itembasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        java.lang.String str19 = itembasedRecommenderConfig16.getSimilarityClass();
        itembasedRecommenderConfig16.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig16.setRetrainCronExpression("value");
        int int24 = itembasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        int int25 = itembasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig16.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str28 = itembasedRecommenderConfig16.getRetrainCronExpression();
        java.lang.String str29 = itembasedRecommenderConfig16.getSimilarityClass();
        java.lang.String str30 = itembasedRecommenderConfig16.getSimilarityClass();
        int int31 = itembasedRecommenderConfig16.getSimilarItemsPerItem();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig16);
        int int33 = itembasedRecommenderConfig16.getSimilarItemsPerItem();
        itembasedRecommenderConfig16.setSimilarItemsPerItem(32);
        itembasedRecommenderConfig16.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: label");
        java.lang.String str38 = itembasedRecommenderConfig16.getRetrainCronExpression();
        java.lang.String str39 = itembasedRecommenderConfig16.getName();
        java.lang.String str40 = itembasedRecommenderConfig16.getSimilarityClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "value" + "'", str28, "value");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "value" + "'", str38, "value");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: label" + "'", str39, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: label");
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test38767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38767");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        int int3 = configuration0.getNumProcessorsForTraining();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration0.getItembasedRecommenders();
        int int7 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components8 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components8.getConfiguration();
        java.lang.String str11 = null; // flaky: configuration10.getModelDirectory();
        int int12 = 0; // flaky: configuration10.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = null; // flaky: configuration10.getStorageConfiguration();
        configuration0.setStorageConfiguration(storageConfiguration13);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig15 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double16 = factorizationbasedRecommenderConfig15.getAlpha();
        double double17 = factorizationbasedRecommenderConfig15.getLambda();
        int int18 = factorizationbasedRecommenderConfig15.getNumberOfFeatures();
        factorizationbasedRecommenderConfig15.setUsesImplicitFeedback(true);
        double double21 = factorizationbasedRecommenderConfig15.getAlpha();
        java.lang.String str22 = factorizationbasedRecommenderConfig15.getRetrainCronExpression();
        int int23 = factorizationbasedRecommenderConfig15.getRetrainAfterPreferenceChanges();
        boolean boolean24 = factorizationbasedRecommenderConfig15.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig15.setRetrainCronExpression("itemIDs");
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig15);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertNotNull(components8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender" + "'", str11, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration13);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test38768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38768");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.MissingParameterException missingParameterException9 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException11 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException9.addSuppressed((java.lang.Throwable) missingParameterException11);
        invalidParameterException7.addSuppressed((java.lang.Throwable) missingParameterException11);
        org.plista.kornakapi.web.MissingParameterException missingParameterException17 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException17);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException17);
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException23 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException21.addSuppressed((java.lang.Throwable) missingParameterException23);
        invalidParameterException19.addSuppressed((java.lang.Throwable) missingParameterException23);
        missingParameterException11.addSuppressed((java.lang.Throwable) missingParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException29 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException29);
        missingParameterException23.addSuppressed((java.lang.Throwable) missingParameterException29);
        org.plista.kornakapi.web.MissingParameterException missingParameterException36 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException36);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException37);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException39 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException37);
        missingParameterException23.addSuppressed((java.lang.Throwable) invalidParameterException39);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException41 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) missingParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException45 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException45);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException47 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException46);
        org.plista.kornakapi.web.MissingParameterException missingParameterException49 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}");
        invalidParameterException47.addSuppressed((java.lang.Throwable) missingParameterException49);
        invalidParameterException41.addSuppressed((java.lang.Throwable) invalidParameterException47);
        org.plista.kornakapi.web.MissingParameterException missingParameterException55 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException56 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException55);
        java.lang.Throwable[] throwableArray57 = missingParameterException55.getSuppressed();
        java.lang.Throwable[] throwableArray58 = missingParameterException55.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException59 = new org.plista.kornakapi.web.InvalidParameterException("userID", (java.lang.Throwable) missingParameterException55);
        invalidParameterException47.addSuppressed((java.lang.Throwable) missingParameterException55);
        java.lang.Throwable[] throwableArray61 = invalidParameterException47.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException65 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray66 = missingParameterException65.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException67 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException65);
        java.lang.Throwable[] throwableArray68 = invalidParameterException67.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException69 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file", (java.lang.Throwable) invalidParameterException67);
        invalidParameterException47.addSuppressed((java.lang.Throwable) invalidParameterException67);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException71 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10, itemID=97, value=100.0}", (java.lang.Throwable) invalidParameterException47);
        java.lang.Throwable[] throwableArray72 = invalidParameterException71.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test38769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38769");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException10.addSuppressed((java.lang.Throwable) missingParameterException12);
        invalidParameterException8.addSuppressed((java.lang.Throwable) missingParameterException12);
        org.plista.kornakapi.web.MissingParameterException missingParameterException18 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException18);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException18);
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException24 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException22.addSuppressed((java.lang.Throwable) missingParameterException24);
        invalidParameterException20.addSuppressed((java.lang.Throwable) missingParameterException24);
        missingParameterException12.addSuppressed((java.lang.Throwable) missingParameterException24);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException28 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException12);
        org.plista.kornakapi.web.MissingParameterException missingParameterException30 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException32 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException30.addSuppressed((java.lang.Throwable) missingParameterException32);
        invalidParameterException28.addSuppressed((java.lang.Throwable) missingParameterException30);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException35 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: hi!", (java.lang.Throwable) invalidParameterException28);
        java.lang.Throwable[] throwableArray36 = invalidParameterException35.getSuppressed();
        java.lang.Throwable[] throwableArray37 = invalidParameterException35.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException39 = new org.plista.kornakapi.web.MissingParameterException("hi!");
        org.plista.kornakapi.web.MissingParameterException missingParameterException42 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException42);
        java.lang.Throwable[] throwableArray44 = missingParameterException42.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException48 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException48);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException48);
        org.plista.kornakapi.web.MissingParameterException missingParameterException52 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException54 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException52.addSuppressed((java.lang.Throwable) missingParameterException54);
        invalidParameterException50.addSuppressed((java.lang.Throwable) missingParameterException54);
        missingParameterException42.addSuppressed((java.lang.Throwable) missingParameterException54);
        missingParameterException39.addSuppressed((java.lang.Throwable) missingParameterException42);
        java.lang.Throwable[] throwableArray59 = missingParameterException42.getSuppressed();
        invalidParameterException35.addSuppressed((java.lang.Throwable) missingParameterException42);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException61 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=32, value=-1.0}", (java.lang.Throwable) invalidParameterException35);
        org.plista.kornakapi.web.MissingParameterException missingParameterException63 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=0, itemID=0, value=0.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException68 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException69 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException68);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException70 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException68);
        java.lang.Throwable[] throwableArray71 = missingParameterException68.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException72 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException68);
        missingParameterException63.addSuppressed((java.lang.Throwable) missingParameterException68);
        invalidParameterException61.addSuppressed((java.lang.Throwable) missingParameterException63);
        java.lang.Class<?> wildcardClass75 = missingParameterException63.getClass();
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test38770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38770");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig6.getSimilarityClass();
        int int12 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) (byte) 1);
        java.lang.String str15 = itembasedRecommenderConfig6.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList17 = configuration0.getItembasedRecommenders();
        int int18 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str20 = storageConfiguration19.getJdbcDriverClass();
        storageConfiguration19.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str23 = storageConfiguration19.getJdbcUrl();
        java.lang.String str24 = storageConfiguration19.getJdbcDriverClass();
        storageConfiguration19.setJdbcDriverClass("batchSize");
        java.lang.String str27 = storageConfiguration19.getPassword();
        storageConfiguration19.setUsername("batchSize");
        java.lang.String str30 = storageConfiguration19.getJdbcDriverClass();
        storageConfiguration19.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration19.setJdbcDriverClass("howMany");
        storageConfiguration19.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration19.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration19);
        storageConfiguration19.setPassword("MutablePreference{userID=1, itemID=0, value=1.0}");
        storageConfiguration19.setPassword("MutablePreference{userID=97, itemID=100, value=100.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "batchSize" + "'", str30, "batchSize");
    }

    @Test
    public void test38771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38771");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
// flaky:         configuration1.setNumProcessorsForTraining((int) (byte) 1);
// flaky:         configuration1.setModelDirectory("MutablePreference{userID=10000, itemID=32, value=10.0}");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        int int10 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig7.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig7.setLambda((double) (short) 1);
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(true);
        boolean boolean19 = factorizationbasedRecommenderConfig7.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig7.setRetrainAfterPreferenceChanges(10);
        double double22 = factorizationbasedRecommenderConfig7.getAlpha();
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(false);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    }

    @Test
    public void test38772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38772");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
        java.lang.String str11 = null; // flaky: configuration1.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components13 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components13.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration15 = null; // flaky: components13.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = null; // flaky: components13.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components13.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList18 = null; // flaky: configuration17.getItembasedRecommenders();
        int int19 = 0; // flaky: configuration17.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str21 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str24 = storageConfiguration20.getJdbcUrl();
        java.lang.String str25 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str26 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str27 = storageConfiguration20.getPassword();
        java.lang.String str28 = storageConfiguration20.getUsername();
        storageConfiguration20.setUsername("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str31 = storageConfiguration20.getJdbcDriverClass();
// flaky:         configuration17.setStorageConfiguration(storageConfiguration20);
        java.lang.String str33 = null; // flaky: configuration17.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig34 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig34.setSimilarItemsPerItem((int) ' ');
// flaky:         configuration17.addItembasedRecommender(itembasedRecommenderConfig34);
        int int38 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
        java.lang.String str39 = itembasedRecommenderConfig34.getName();
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig34);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer41 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig34);
        java.io.File file42 = null;
        org.plista.kornakapi.core.storage.Storage storage43 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender44 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer41.train(file42, storage43, recommender44, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=10000, itemID=32, value=10.0}" + "'", str11, "MutablePreference{userID=10000, itemID=32, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
// flaky:         org.junit.Assert.assertNotNull(components13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
// flaky:         org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNull(trainingScheduler16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList18);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str28, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str31);
// flaky:         org.junit.Assert.assertEquals("'" + str33 + "' != '" + "MutablePreference{userID=10000, itemID=32, value=10.0}" + "'", str33, "MutablePreference{userID=10000, itemID=32, value=10.0}");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test38773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38773");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet3 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) batchSetPreferencesServlet3);
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet6 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet6.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet8 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet9 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        batchDeleteCandidatesServlet8.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        javax.servlet.ServletConfig servletConfig13 = batchSetPreferencesServlet10.getServletConfig();
        addCandidateServlet6.init(servletConfig13);
        addCandidateServlet0.init((javax.servlet.ServletConfig) addCandidateServlet6);
        addCandidateServlet0.init();
        addCandidateServlet0.destroy();
        javax.servlet.ServletRequest servletRequest18 = null;
        javax.servlet.ServletResponse servletResponse19 = null;
        // The following exception was thrown during execution in test generation
        try {
            addCandidateServlet0.service(servletRequest18, servletResponse19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig13);
    }

    @Test
    public void test38774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38774");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
        int int6 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getUsername();
        storageConfiguration7.setUsername("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str18 = storageConfiguration7.getJdbcDriverClass();
// flaky:         configuration4.setStorageConfiguration(storageConfiguration7);
        java.lang.String str20 = null; // flaky: configuration4.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig21 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double22 = factorizationbasedRecommenderConfig21.getAlpha();
        double double23 = factorizationbasedRecommenderConfig21.getLambda();
        int int24 = factorizationbasedRecommenderConfig21.getNumberOfFeatures();
        factorizationbasedRecommenderConfig21.setUsesImplicitFeedback(true);
        double double27 = factorizationbasedRecommenderConfig21.getAlpha();
        factorizationbasedRecommenderConfig21.setLambda((double) (-1));
        factorizationbasedRecommenderConfig21.setUsesImplicitFeedback(true);
        int int32 = factorizationbasedRecommenderConfig21.getNumberOfIterations();
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig21);
        int int34 = factorizationbasedRecommenderConfig21.getNumberOfIterations();
        double double35 = factorizationbasedRecommenderConfig21.getAlpha();
        double double36 = factorizationbasedRecommenderConfig21.getAlpha();
        factorizationbasedRecommenderConfig21.setUsesImplicitFeedback(false);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str15, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str18);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=10000, itemID=32, value=10.0}" + "'", str20, "MutablePreference{userID=10000, itemID=32, value=10.0}");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
    }

    @Test
    public void test38775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38775");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        boolean boolean12 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test38776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38776");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=52, itemID=10000, value=32.0}", (int) 'a');
    }

    @Test
    public void test38777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38777");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getAlpha();
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(32);
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int10 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean11 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test38778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38778");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("value");
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException10);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException10);
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException14.addSuppressed((java.lang.Throwable) missingParameterException16);
        invalidParameterException12.addSuppressed((java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException12);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) invalidParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException20);
        missingParameterException3.addSuppressed((java.lang.Throwable) invalidParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException3);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=-1.0}", (java.lang.Throwable) missingParameterException3);
        java.lang.Throwable[] throwableArray25 = missingParameterException3.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test38779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38779");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        java.lang.String str5 = mutablePreference0.toString();
        long long6 = mutablePreference0.getItemID();
        float float7 = mutablePreference0.getValue();
        mutablePreference0.set((long) '4', (long) '4', (float) (byte) -1);
        mutablePreference0.setValue((float) (byte) -1);
        mutablePreference0.setValue((float) 0);
        mutablePreference0.set((long) 35, (long) (short) -1, 10.0f);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 1.0f + "'", float7 == 1.0f);
    }

    @Test
    public void test38780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38780");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "itemIDs", 52);
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
    }

    @Test
    public void test38781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38781");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) (byte) -1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer7 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer8 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = fixedCandidatesIDRescorer1.isFiltered(100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + (-1.0d) + "'", double6 == (-1.0d));
    }

    @Test
    public void test38782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38782");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: label");
        boolean boolean17 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: itemID");
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=100.0}");
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test38783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38783");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet13 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str14 = trainServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet15 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet15.destroy();
        javax.servlet.ServletConfig servletConfig17 = deleteCandidateServlet15.getServletConfig();
        deleteCandidateServlet15.destroy();
        trainServlet13.init((javax.servlet.ServletConfig) deleteCandidateServlet15);
        java.lang.String str20 = trainServlet13.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet13);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.init();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = batchDeleteCandidatesServlet0.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test38784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38784");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=100, itemID=0, value=0.0}", (int) ' ');
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
    }

    @Test
    public void test38785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38785");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double11 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha(52.0d);
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getName();
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test38786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38786");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet3 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str4 = batchDeleteCandidatesServlet3.getServletInfo();
        batchDeleteCandidatesServlet3.destroy();
        javax.servlet.ServletConfig servletConfig6 = batchDeleteCandidatesServlet3.getServletConfig();
        batchAddCandidatesServlet0.init(servletConfig6);
        javax.servlet.ServletConfig servletConfig8 = batchAddCandidatesServlet0.getServletConfig();
        batchAddCandidatesServlet0.init();
        batchAddCandidatesServlet0.init();
        batchAddCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig12 = batchAddCandidatesServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            batchAddCandidatesServlet0.log("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=52, value=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(servletConfig6);
        org.junit.Assert.assertNull(servletConfig8);
        org.junit.Assert.assertNull(servletConfig12);
    }

    @Test
    public void test38787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38787");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration8.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = configuration8.getStorageConfiguration();
        configuration8.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList13 = configuration8.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig14.setSimilarityClass("");
        java.lang.String str17 = itembasedRecommenderConfig14.getSimilarityClass();
        itembasedRecommenderConfig14.setRetrainCronExpression("userID");
        configuration8.addItembasedRecommender(itembasedRecommenderConfig14);
        itembasedRecommenderConfig14.setSimilarityClass("MutablePreference{userID=10000, itemID=32, value=10.0}");
        int int23 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
// flaky:         configuration7.addItembasedRecommender(itembasedRecommenderConfig14);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(trainingScheduler6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNull(storageConfiguration10);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test38788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38788");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", 10000L);
        java.lang.String str13 = mutableCandidate0.getLabel();
        java.lang.String str14 = mutableCandidate0.getLabel();
        java.lang.String str15 = mutableCandidate0.getLabel();
        long long16 = mutableCandidate0.getItemID();
        java.lang.String str17 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemID" + "'", str9, "itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str14, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str15, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str17, "org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test38789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38789");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", (long) (byte) -1);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=0.0}", (long) (byte) 10);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=100, value=97.0}", 52L);
        java.lang.String str15 = mutableCandidate0.getLabel();
        long long16 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=52, itemID=97, value=-1.0}", (long) 32);
        java.lang.String str20 = mutableCandidate0.getLabel();
        java.lang.String str21 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str8, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=0, itemID=100, value=97.0}" + "'", str15, "MutablePreference{userID=0, itemID=100, value=97.0}");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 52L + "'", long16 == 52L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=52, itemID=97, value=-1.0}" + "'", str20, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=52, itemID=97, value=-1.0}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=52, itemID=97, value=-1.0}" + "'", str21, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=52, itemID=97, value=-1.0}");
    }

    @Test
    public void test38790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38790");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet0.getServletConfig();
        batchSetPreferencesServlet0.destroy();
        javax.servlet.ServletConfig servletConfig5 = batchSetPreferencesServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = batchSetPreferencesServlet0.getInitParameter("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig3);
        org.junit.Assert.assertNotNull(servletConfig5);
    }

    @Test
    public void test38791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38791");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) (byte) 1);
        double double10 = fixedCandidatesIDRescorer1.rescore((long) 'a', (double) 100.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer13 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair14 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = filteringLongPairRescorer13.isFiltered(longPair14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
    }

    @Test
    public void test38792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38792");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) 'a');
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=0, itemID=0, value=10.0}");
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        java.lang.String str16 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 97 + "'", int15 == 97);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test38793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38793");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) -1);
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) (byte) 10);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setLambda(10000.0d);
        factorizationbasedRecommenderConfig0.setAlpha((double) (short) 10);
        java.lang.String str20 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test38794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38794");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.init();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        javax.servlet.ServletConfig servletConfig8 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str11 = batchDeleteCandidatesServlet10.getServletInfo();
        java.lang.String str12 = batchDeleteCandidatesServlet10.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet13 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        setPreferenceServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet13.init((javax.servlet.ServletConfig) recommendServlet18);
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) setPreferenceServlet13);
        batchDeleteCandidatesServlet10.destroy();
        batchDeleteCandidatesServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str24 = batchDeleteCandidatesServlet23.getServletInfo();
        batchDeleteCandidatesServlet23.destroy();
        javax.servlet.ServletConfig servletConfig26 = batchDeleteCandidatesServlet23.getServletConfig();
        batchDeleteCandidatesServlet9.init(servletConfig26);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet28 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str29 = batchDeleteCandidatesServlet28.getServletInfo();
        batchDeleteCandidatesServlet28.init();
        java.lang.String str31 = batchDeleteCandidatesServlet28.getServletInfo();
        batchDeleteCandidatesServlet28.destroy();
        batchDeleteCandidatesServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet28);
        javax.servlet.ServletConfig servletConfig34 = batchDeleteCandidatesServlet9.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        javax.servlet.ServletConfig servletConfig36 = batchDeleteCandidatesServlet9.getServletConfig();
        org.plista.kornakapi.web.MissingParameterException missingParameterException40 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=52, itemID=52, value=-1.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException46 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException47 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException46);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException46);
        java.lang.Throwable[] throwableArray49 = missingParameterException46.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException46);
        java.lang.Throwable[] throwableArray51 = missingParameterException46.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException52 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=100.0}", (java.lang.Throwable) missingParameterException46);
        missingParameterException40.addSuppressed((java.lang.Throwable) missingParameterException46);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException54 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=1, value=-1.0}", (java.lang.Throwable) missingParameterException46);
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet9.log("", (java.lang.Throwable) missingParameterException46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(servletConfig8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(servletConfig26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNotNull(servletConfig34);
        org.junit.Assert.assertNotNull(servletConfig36);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test38795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38795");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = null;
// flaky:         configuration10.setStorageConfiguration(storageConfiguration11);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(trainingScheduler6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
    }

    @Test
    public void test38796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38796");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) '#');
        itembasedRecommenderConfig0.setName("file");
        int int12 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 1);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) -1);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer21 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file22 = null;
        org.plista.kornakapi.core.storage.Storage storage23 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender24 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer21.train(file22, storage23, recommender24, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 35 + "'", int12 == 35);
    }

    @Test
    public void test38797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38797");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet3 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) batchSetPreferencesServlet3);
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        java.lang.String str6 = batchSetPreferencesServlet2.getServletInfo();
        javax.servlet.ServletConfig servletConfig7 = batchSetPreferencesServlet2.getServletConfig();
        batchSetPreferencesServlet2.destroy();
        java.lang.String str9 = batchSetPreferencesServlet2.getServletInfo();
        java.lang.String str10 = batchSetPreferencesServlet2.getServletInfo();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet11 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str12 = recommendServlet11.getServletInfo();
        javax.servlet.ServletConfig servletConfig13 = recommendServlet11.getServletConfig();
        javax.servlet.ServletConfig servletConfig14 = recommendServlet11.getServletConfig();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet15 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet15.destroy();
        trainServlet15.destroy();
        recommendServlet11.init((javax.servlet.ServletConfig) trainServlet15);
        trainServlet15.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet20 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet20.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str24 = batchDeleteCandidatesServlet23.getServletInfo();
        batchDeleteCandidatesServlet23.init();
        javax.servlet.ServletConfig servletConfig26 = null;
        batchDeleteCandidatesServlet23.init(servletConfig26);
        recommendServlet20.init(servletConfig26);
        java.lang.String str29 = recommendServlet20.getServletInfo();
        trainServlet15.init((javax.servlet.ServletConfig) recommendServlet20);
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) recommendServlet20);
        javax.servlet.ServletConfig servletConfig32 = recommendServlet20.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet33 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet34 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet34.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        setPreferenceServlet33.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet38 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet33.init((javax.servlet.ServletConfig) recommendServlet38);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet40 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str41 = batchDeleteCandidatesServlet40.getServletInfo();
        java.lang.String str42 = batchDeleteCandidatesServlet40.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet43 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet44 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet45 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet44.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet45);
        setPreferenceServlet43.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet45);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet48 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet43.init((javax.servlet.ServletConfig) recommendServlet48);
        batchDeleteCandidatesServlet40.init((javax.servlet.ServletConfig) setPreferenceServlet43);
        setPreferenceServlet33.init((javax.servlet.ServletConfig) setPreferenceServlet43);
        javax.servlet.ServletConfig servletConfig52 = setPreferenceServlet33.getServletConfig();
        javax.servlet.ServletConfig servletConfig53 = setPreferenceServlet33.getServletConfig();
        java.lang.String str54 = setPreferenceServlet33.getServletInfo();
        recommendServlet20.init((javax.servlet.ServletConfig) setPreferenceServlet33);
        setPreferenceServlet33.destroy();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext57 = setPreferenceServlet33.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(servletConfig13);
        org.junit.Assert.assertNull(servletConfig14);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNotNull(servletConfig52);
        org.junit.Assert.assertNotNull(servletConfig53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test38798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38798");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        long long5 = mutableCandidate0.getItemID();
        long long6 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: itemIDs", (long) (byte) -1);
        long long10 = mutableCandidate0.getItemID();
        long long11 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=35.0}", 32L);
        java.lang.String str15 = mutableCandidate0.getLabel();
        java.lang.String str16 = mutableCandidate0.getLabel();
        java.lang.String str17 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=0, itemID=0, value=35.0}" + "'", str15, "MutablePreference{userID=0, itemID=0, value=35.0}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=0, itemID=0, value=35.0}" + "'", str16, "MutablePreference{userID=0, itemID=0, value=35.0}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=0, itemID=0, value=35.0}" + "'", str17, "MutablePreference{userID=0, itemID=0, value=35.0}");
    }

    @Test
    public void test38799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38799");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str8 = recommendServlet7.getServletInfo();
        javax.servlet.ServletConfig servletConfig9 = recommendServlet7.getServletConfig();
        java.lang.String str10 = recommendServlet7.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) recommendServlet7);
        batchSetPreferencesServlet1.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet13 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet14);
        recommendServlet13.destroy();
        java.lang.String str17 = recommendServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str19 = batchDeleteCandidatesServlet18.getServletInfo();
        batchDeleteCandidatesServlet18.init();
        java.lang.String str21 = batchDeleteCandidatesServlet18.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet22.init();
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) batchAddCandidatesServlet22);
        batchDeleteCandidatesServlet18.destroy();
        batchDeleteCandidatesServlet18.init();
        javax.servlet.ServletConfig servletConfig27 = batchDeleteCandidatesServlet18.getServletConfig();
        recommendServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet30 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet31 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet30.init((javax.servlet.ServletConfig) batchSetPreferencesServlet31);
        java.lang.String str33 = batchSetPreferencesServlet31.getServletInfo();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet34 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        batchSetPreferencesServlet31.init((javax.servlet.ServletConfig) recommendServlet34);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) recommendServlet34);
        java.lang.String str37 = recommendServlet34.getServletInfo();
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(servletConfig9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test38800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38800");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
    }

    @Test
    public void test38801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38801");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        batchDeleteCandidatesServlet14.destroy();
        javax.servlet.ServletConfig servletConfig17 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init(servletConfig17);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str20 = recommendServlet19.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) recommendServlet19);
        recommendServlet19.destroy();
        recommendServlet19.init();
        recommendServlet19.init();
        java.lang.String str25 = recommendServlet19.getServletInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration26 = recommendServlet19.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test38802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38802");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test38803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38803");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=0, itemID=97, value=10.0}", 10000);
    }

    @Test
    public void test38804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38804");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        java.lang.String str2 = mutableCandidate0.getLabel();
        mutableCandidate0.set("file", (long) (short) 1);
        long long6 = mutableCandidate0.getItemID();
        java.lang.String str7 = mutableCandidate0.getLabel();
        long long8 = mutableCandidate0.getItemID();
        java.lang.String str9 = mutableCandidate0.getLabel();
        java.lang.String str10 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file" + "'", str7, "file");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file" + "'", str9, "file");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "file" + "'", str10, "file");
    }

    @Test
    public void test38805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38805");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getUserID();
        long long4 = mutablePreference0.getUserID();
        mutablePreference0.set(97L, (long) 1, (float) 97L);
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (byte) 1);
        float float12 = mutablePreference0.getValue();
        long long13 = mutablePreference0.getItemID();
        java.lang.String str14 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=97, itemID=1, value=1.0}" + "'", str14, "MutablePreference{userID=97, itemID=1, value=1.0}");
    }

    @Test
    public void test38806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38806");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
// flaky:         configuration1.setNumProcessorsForTraining((-1));
// flaky:         configuration1.setNumProcessorsForTraining((int) '4');
        org.plista.kornakapi.web.Components components15 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration16 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = null; // flaky: components15.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = null; // flaky: components15.scheduler();
        org.plista.kornakapi.core.storage.Storage storage20 = null; // flaky: components15.storage();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage22 = null; // flaky: components15.storage();
        org.plista.kornakapi.core.config.Configuration configuration23 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration24 = null; // flaky: components15.getConfiguration();
        java.lang.String str25 = null; // flaky: configuration24.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration26 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList27 = configuration26.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration28 = configuration26.getStorageConfiguration();
        org.plista.kornakapi.web.Components components29 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components29.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration31 = null; // flaky: components29.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler32 = null; // flaky: components29.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler33 = null; // flaky: components29.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler34 = null; // flaky: components29.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration35 = null; // flaky: components29.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig36 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str37 = itembasedRecommenderConfig36.getSimilarityClass();
        java.lang.String str38 = itembasedRecommenderConfig36.getSimilarityClass();
        int int39 = itembasedRecommenderConfig36.getRetrainAfterPreferenceChanges();
// flaky:         configuration35.addItembasedRecommender(itembasedRecommenderConfig36);
        java.lang.String str41 = itembasedRecommenderConfig36.getSimilarityClass();
        configuration26.addItembasedRecommender(itembasedRecommenderConfig36);
// flaky:         configuration24.addItembasedRecommender(itembasedRecommenderConfig36);
        itembasedRecommenderConfig36.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: hi!");
        java.lang.String str46 = itembasedRecommenderConfig36.getSimilarityClass();
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig36);
        itembasedRecommenderConfig36.setSimilarItemsPerItem(10);
        int int50 = itembasedRecommenderConfig36.getSimilarItemsPerItem();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
// flaky:         org.junit.Assert.assertNotNull(components15);
// flaky:         org.junit.Assert.assertNotNull(configuration16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
        org.junit.Assert.assertNull(storage20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(storage22);
// flaky:         org.junit.Assert.assertNotNull(configuration23);
// flaky:         org.junit.Assert.assertNotNull(configuration24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "MutablePreference{userID=10000, itemID=32, value=10.0}" + "'", str25, "MutablePreference{userID=10000, itemID=32, value=10.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList27);
        org.junit.Assert.assertNull(storageConfiguration28);
// flaky:         org.junit.Assert.assertNotNull(components29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(configuration31);
        org.junit.Assert.assertNull(trainingScheduler32);
        org.junit.Assert.assertNull(trainingScheduler33);
        org.junit.Assert.assertNull(trainingScheduler34);
// flaky:         org.junit.Assert.assertNotNull(configuration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: hi!" + "'", str46, "org.plista.kornakapi.web.InvalidParameterException: hi!");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
    }

    @Test
    public void test38807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38807");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getRetrainCronExpression();
        int int7 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig5.setRetrainCronExpression("value");
        int int13 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig5);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList15 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig16.setSimilarityClass("");
        java.lang.String str19 = itembasedRecommenderConfig16.getName();
        java.lang.String str20 = itembasedRecommenderConfig16.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig16);
        configuration0.setModelDirectory("MutablePreference{userID=100, itemID=-1, value=100.0}");
        int int24 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig25 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double26 = factorizationbasedRecommenderConfig25.getAlpha();
        double double27 = factorizationbasedRecommenderConfig25.getLambda();
        int int28 = factorizationbasedRecommenderConfig25.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer29 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig25);
        factorizationbasedRecommenderConfig25.setName("recommender");
        boolean boolean32 = factorizationbasedRecommenderConfig25.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig25.setUsesImplicitFeedback(false);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig25);
        configuration0.setNumProcessorsForTraining(100);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test38808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38808");
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet0 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet3 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str4 = batchDeleteCandidatesServlet3.getServletInfo();
        batchDeleteCandidatesServlet3.init();
        javax.servlet.ServletConfig servletConfig6 = null;
        batchDeleteCandidatesServlet3.init(servletConfig6);
        recommendServlet0.init(servletConfig6);
        java.lang.String str9 = recommendServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig10 = recommendServlet0.getServletConfig();
        java.lang.String str11 = recommendServlet0.getServletInfo();
        recommendServlet0.init();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test38809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38809");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarityClass("label");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=0, itemID=10000, value=1.0}");
    }

    @Test
    public void test38810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38810");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        long long1 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 0L);
        mutablePreference0.set((long) (byte) 0, (long) (byte) -1, (float) 0L);
        long long8 = mutablePreference0.getUserID();
        java.lang.String str9 = mutablePreference0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "MutablePreference{userID=0, itemID=-1, value=0.0}" + "'", str9, "MutablePreference{userID=0, itemID=-1, value=0.0}");
    }

    @Test
    public void test38811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38811");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet11 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet13 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet13);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet12.getServletConfig();
        addCandidateServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig17 = addCandidateServlet11.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet11);
        javax.servlet.ServletConfig servletConfig19 = batchDeleteCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet20 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet20.init();
        setPreferenceServlet20.init();
        setPreferenceServlet20.destroy();
        javax.servlet.ServletConfig servletConfig24 = setPreferenceServlet20.getServletConfig();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet25 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str26 = trainServlet25.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet27 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet27.destroy();
        javax.servlet.ServletConfig servletConfig29 = deleteCandidateServlet27.getServletConfig();
        deleteCandidateServlet27.destroy();
        trainServlet25.init((javax.servlet.ServletConfig) deleteCandidateServlet27);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet32 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet32.init();
        java.lang.String str34 = batchAddCandidatesServlet32.getServletInfo();
        javax.servlet.ServletConfig servletConfig35 = batchAddCandidatesServlet32.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet36 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str37 = batchDeleteCandidatesServlet36.getServletInfo();
        java.lang.String str38 = batchDeleteCandidatesServlet36.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet39 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet40 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet41 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet40.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet41);
        setPreferenceServlet39.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet41);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet44 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet39.init((javax.servlet.ServletConfig) recommendServlet44);
        batchDeleteCandidatesServlet36.init((javax.servlet.ServletConfig) setPreferenceServlet39);
        batchAddCandidatesServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet36);
        batchDeleteCandidatesServlet36.init();
        java.lang.String str49 = batchDeleteCandidatesServlet36.getServletInfo();
        java.lang.String str50 = batchDeleteCandidatesServlet36.getServletInfo();
        trainServlet25.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet36);
        setPreferenceServlet20.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet36);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet20);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet54 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str55 = batchDeleteCandidatesServlet54.getServletInfo();
        java.lang.String str56 = batchDeleteCandidatesServlet54.getServletInfo();
        batchDeleteCandidatesServlet54.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet58 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str59 = batchDeleteCandidatesServlet58.getServletInfo();
        batchDeleteCandidatesServlet54.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet58);
        batchDeleteCandidatesServlet58.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet58);
        batchDeleteCandidatesServlet58.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(servletConfig15);
        org.junit.Assert.assertNotNull(servletConfig17);
        org.junit.Assert.assertNotNull(servletConfig19);
        org.junit.Assert.assertNull(servletConfig24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(servletConfig29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(servletConfig35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test38812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38812");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null; // flaky: configuration4.getStorageConfiguration();
        int int6 = 0; // flaky: configuration4.getNumProcessorsForTraining();
// flaky:         configuration4.setModelDirectory("MutablePreference{userID=100, itemID=0, value=100.0}");
        org.plista.kornakapi.web.Components components9 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components9.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components9.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null; // flaky: components9.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = null; // flaky: components9.scheduler();
        org.plista.kornakapi.core.storage.Storage storage14 = null; // flaky: components9.storage();
        org.plista.kornakapi.core.config.Configuration configuration15 = null; // flaky: components9.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = null;
// flaky:         configuration15.addItembasedRecommender(itembasedRecommenderConfig16);
// flaky:         configuration15.setNumProcessorsForTraining((int) (short) 10);
        java.lang.String str20 = null; // flaky: configuration15.getModelDirectory();
// flaky:         configuration15.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
// flaky:         configuration15.setNumProcessorsForTraining(100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = null; // flaky: configuration15.getStorageConfiguration();
// flaky:         configuration4.setStorageConfiguration(storageConfiguration25);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration5);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
// flaky:         org.junit.Assert.assertNotNull(components9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(trainingScheduler12);
        org.junit.Assert.assertNull(trainingScheduler13);
        org.junit.Assert.assertNull(storage14);
// flaky:         org.junit.Assert.assertNotNull(configuration15);
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=100, itemID=0, value=100.0}" + "'", str20, "MutablePreference{userID=100, itemID=0, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration25);
    }

    @Test
    public void test38813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38813");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        java.lang.String str8 = mutablePreference0.toString();
        float float9 = mutablePreference0.getValue();
        mutablePreference0.set((long) (byte) 0, 100L, (float) 10000);
        mutablePreference0.set((long) (short) 100, (long) (-1), 1.0f);
        java.lang.String str18 = mutablePreference0.toString();
        long long19 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str8, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9 == 0.0f);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str18, "MutablePreference{userID=100, itemID=-1, value=1.0}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
    }

    @Test
    public void test38814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38814");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setModelDirectory("userID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str9 = storageConfiguration8.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration8.getUsername();
        storageConfiguration8.setJdbcUrl("");
        java.lang.String str13 = storageConfiguration8.getJdbcDriverClass();
        storageConfiguration8.setUsername("MutablePreference{userID=97, itemID=1, value=97.0}");
// flaky:         configuration4.setStorageConfiguration(storageConfiguration8);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test38815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38815");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        boolean boolean9 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig6);
        int int13 = factorizationbasedRecommenderConfig6.getRetrainAfterPreferenceChanges();
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        boolean boolean17 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig6.setRetrainAfterPreferenceChanges((int) '#');
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test38816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38816");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig6 = addCandidateServlet0.getServletConfig();
        addCandidateServlet0.init();
        addCandidateServlet0.init();
        java.lang.String str9 = addCandidateServlet0.getServletInfo();
        java.lang.String str10 = addCandidateServlet0.getServletInfo();
        java.lang.String str11 = addCandidateServlet0.getServletInfo();
        addCandidateServlet0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext13 = addCandidateServlet0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertNotNull(servletConfig6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test38817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38817");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 100);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=0, itemID=0, value=1.0}");
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.io.File file15 = null;
        org.plista.kornakapi.core.storage.Storage storage16 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender17 = null;
        // The following exception was thrown during execution in test generation
        try {
            factorizationbasedInMemoryTrainer14.train(file15, storage16, recommender17, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test38818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38818");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        long long1 = mutablePreference0.getItemID();
        java.lang.String str2 = mutablePreference0.toString();
        mutablePreference0.setValue((float) (short) 10);
        float float5 = mutablePreference0.getValue();
        java.lang.String str6 = mutablePreference0.toString();
        long long7 = mutablePreference0.getUserID();
        java.lang.String str8 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 1, (long) 10, (float) (short) 0);
        long long13 = mutablePreference0.getUserID();
        float float14 = mutablePreference0.getValue();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str2, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 10.0f + "'", float5 == 10.0f);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=10.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=10.0}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=0, value=10.0}" + "'", str8, "MutablePreference{userID=0, itemID=0, value=10.0}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
    }

    @Test
    public void test38819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38819");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet2 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet3 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        setPreferenceServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet2.init((javax.servlet.ServletConfig) recommendServlet7);
        recommendServlet7.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet7);
        java.lang.String str11 = addCandidateServlet0.getServletInfo();
        addCandidateServlet0.init();
        javax.servlet.ServletConfig servletConfig13 = addCandidateServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet14 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet15.getServletConfig();
        addCandidateServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        batchSetPreferencesServlet15.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str22 = recommendServlet21.getServletInfo();
        javax.servlet.ServletConfig servletConfig23 = recommendServlet21.getServletConfig();
        java.lang.String str24 = recommendServlet21.getServletInfo();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) recommendServlet21);
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet21);
        javax.servlet.ServletRequest servletRequest27 = null;
        javax.servlet.ServletResponse servletResponse28 = null;
        // The following exception was thrown during execution in test generation
        try {
            addCandidateServlet0.service(servletRequest27, servletResponse28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test38820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38820");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        java.lang.String str8 = null; // flaky: configuration5.getModelDirectory();
// flaky:         configuration5.setModelDirectory("MutablePreference{userID=0, itemID=0, value=1.0}");
        int int11 = 0; // flaky: configuration5.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        double double15 = factorizationbasedRecommenderConfig13.getLambda();
        int int16 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(false);
        double double19 = factorizationbasedRecommenderConfig13.getAlpha();
        double double20 = factorizationbasedRecommenderConfig13.getLambda();
        double double21 = factorizationbasedRecommenderConfig13.getAlpha();
        boolean boolean22 = factorizationbasedRecommenderConfig13.isUsesImplicitFeedback();
        double double23 = factorizationbasedRecommenderConfig13.getLambda();
        int int24 = factorizationbasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        double double25 = factorizationbasedRecommenderConfig13.getAlpha();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        double double27 = factorizationbasedRecommenderConfig13.getAlpha();
        factorizationbasedRecommenderConfig13.setAlpha((double) 1);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "userID" + "'", str8, "userID");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test38821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38821");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setRetrainCronExpression("value");
        int int8 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 1);
        int int12 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(100);
        int int15 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int16 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int17 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int18 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        java.lang.String str19 = itembasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "value" + "'", str19, "value");
    }

    @Test
    public void test38822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38822");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener8 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler12, "MutablePreference{userID=0, itemID=0, value=1.0}", 35);
        delegatingPreferenceChangeListener8.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener15);
        inMemoryPreferenceChangeListener15.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener15.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener15);
    }

    @Test
    public void test38823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38823");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=-1, itemID=0, value=100.0}", (int) '4');
    }

    @Test
    public void test38824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38824");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration3 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
// flaky:         org.junit.Assert.assertNotNull(configuration3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(storage9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
    }

    @Test
    public void test38825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38825");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        batchDeleteCandidatesServlet4.init();
        batchDeleteCandidatesServlet4.init();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test38826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38826");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setName("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(100);
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10);
        java.lang.String str13 = itembasedRecommenderConfig0.getSimilarityClass();
        int int14 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int15 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    }

    @Test
    public void test38827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38827");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException4 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException3);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException3);
        java.lang.Throwable[] throwableArray6 = missingParameterException3.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException11 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException11);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException12);
        java.lang.Throwable[] throwableArray14 = invalidParameterException13.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=52, itemID=97, value=-1.0}", (java.lang.Throwable) invalidParameterException13);
        missingParameterException3.addSuppressed((java.lang.Throwable) invalidParameterException15);
        java.lang.Throwable[] throwableArray17 = missingParameterException3.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException25 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray26 = missingParameterException25.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException25);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException28 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) missingParameterException25);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=32.0}", (java.lang.Throwable) invalidParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) invalidParameterException29);
        java.lang.Throwable[] throwableArray31 = invalidParameterException29.getSuppressed();
        java.lang.Throwable[] throwableArray32 = invalidParameterException29.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=10, itemID=100, value=10000.0}");
        java.lang.Throwable[] throwableArray35 = missingParameterException34.getSuppressed();
        invalidParameterException29.addSuppressed((java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10, itemID=1, value=52.0}", (java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.MissingParameterException missingParameterException41 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.Throwable throwable44 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException45 = new org.plista.kornakapi.web.InvalidParameterException("hi!", throwable44);
        org.plista.kornakapi.web.MissingParameterException missingParameterException50 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException51 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException50);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException52 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException50);
        org.plista.kornakapi.web.MissingParameterException missingParameterException54 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException56 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException54.addSuppressed((java.lang.Throwable) missingParameterException56);
        invalidParameterException52.addSuppressed((java.lang.Throwable) missingParameterException56);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException59 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException52);
        invalidParameterException45.addSuppressed((java.lang.Throwable) invalidParameterException59);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException61 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException59);
        missingParameterException41.addSuppressed((java.lang.Throwable) invalidParameterException61);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException63 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10, itemID=-1, value=0.0}", (java.lang.Throwable) missingParameterException41);
        invalidParameterException38.addSuppressed((java.lang.Throwable) missingParameterException41);
        missingParameterException3.addSuppressed((java.lang.Throwable) missingParameterException41);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(throwableArray32);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test38828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38828");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
// flaky:         configuration2.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        factorizationbasedRecommenderConfig7.setNumberOfFeatures((int) (short) 10);
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(false);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        java.lang.String str15 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str17 = storageConfiguration16.getJdbcDriverClass();
        storageConfiguration16.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str20 = storageConfiguration16.getJdbcUrl();
        java.lang.String str21 = storageConfiguration16.getJdbcDriverClass();
        storageConfiguration16.setJdbcDriverClass("batchSize");
        storageConfiguration16.setPassword("howMany");
        java.lang.String str26 = storageConfiguration16.getUsername();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration16);
// flaky:         configuration2.setNumProcessorsForTraining((int) ' ');
        org.plista.kornakapi.web.Components components30 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage31 = null; // flaky: components30.storage();
        org.plista.kornakapi.core.config.Configuration configuration32 = null; // flaky: components30.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration33 = null; // flaky: configuration32.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig34 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double35 = factorizationbasedRecommenderConfig34.getAlpha();
        double double36 = factorizationbasedRecommenderConfig34.getLambda();
        boolean boolean37 = factorizationbasedRecommenderConfig34.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig34.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration32.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig34);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList41 = null; // flaky: configuration32.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList42 = null; // flaky: configuration32.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.Configuration configuration43 = new org.plista.kornakapi.core.config.Configuration();
        configuration43.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str46 = configuration43.getModelDirectory();
        configuration43.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig49 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double50 = factorizationbasedRecommenderConfig49.getAlpha();
        configuration43.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig49);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration52 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str53 = storageConfiguration52.getUsername();
        java.lang.String str54 = storageConfiguration52.getJdbcDriverClass();
        java.lang.String str55 = storageConfiguration52.getPassword();
        storageConfiguration52.setJdbcUrl("file");
        configuration43.setStorageConfiguration(storageConfiguration52);
        storageConfiguration52.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         configuration32.setStorageConfiguration(storageConfiguration52);
        java.lang.String str62 = storageConfiguration52.getJdbcUrl();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration52);
        java.lang.String str64 = storageConfiguration52.getJdbcDriverClass();
        java.lang.String str65 = storageConfiguration52.getUsername();
        java.lang.String str66 = storageConfiguration52.getJdbcUrl();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "itemID" + "'", str15, "itemID");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str26, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
// flaky:         org.junit.Assert.assertNotNull(components30);
        org.junit.Assert.assertNull(storage31);
// flaky:         org.junit.Assert.assertNotNull(configuration32);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList41);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str62, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str66, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test38829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38829");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        factorizationbasedRecommenderConfig3.setLambda((double) 1.0f);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test38830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38830");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
    }

    @Test
    public void test38831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38831");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(trainingScheduler11);
    }

    @Test
    public void test38832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38832");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        int int9 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig7.setSimilarityClass("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem((int) '#');
        java.lang.String str17 = itembasedRecommenderConfig7.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
// flaky:         configuration6.addItembasedRecommender(itembasedRecommenderConfig7);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = null; // flaky: configuration6.getStorageConfiguration();
        java.lang.String str21 = null; // flaky: storageConfiguration20.getUsername();
        java.lang.String str22 = null; // flaky: storageConfiguration20.getJdbcUrl();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str17);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration20);
        org.junit.Assert.assertNull(str21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str22, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test38833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38833");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getAlpha();
        boolean boolean6 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        int int9 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test38834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38834");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str6 = factorizationbasedRecommenderConfig0.getName();
        boolean boolean7 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test38835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38835");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        batchAddCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet3 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet4 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet3.init((javax.servlet.ServletConfig) batchSetPreferencesServlet4);
        javax.servlet.ServletConfig servletConfig6 = batchSetPreferencesServlet4.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet7 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet7.init();
        setPreferenceServlet7.init();
        setPreferenceServlet7.destroy();
        setPreferenceServlet7.destroy();
        batchSetPreferencesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet7);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet13 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet14 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        javax.servlet.ServletConfig servletConfig17 = batchSetPreferencesServlet14.getServletConfig();
        addCandidateServlet13.init((javax.servlet.ServletConfig) batchSetPreferencesServlet14);
        javax.servlet.ServletConfig servletConfig19 = batchSetPreferencesServlet14.getServletConfig();
        batchSetPreferencesServlet4.init((javax.servlet.ServletConfig) batchSetPreferencesServlet14);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet22 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet23 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet22.init((javax.servlet.ServletConfig) batchSetPreferencesServlet23);
        batchDeleteCandidatesServlet21.init((javax.servlet.ServletConfig) batchSetPreferencesServlet23);
        batchDeleteCandidatesServlet21.destroy();
        javax.servlet.ServletConfig servletConfig27 = batchDeleteCandidatesServlet21.getServletConfig();
        batchSetPreferencesServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet29 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet29.init();
        setPreferenceServlet29.init();
        setPreferenceServlet29.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str34 = batchDeleteCandidatesServlet33.getServletInfo();
        java.lang.String str35 = batchDeleteCandidatesServlet33.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet36 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet37 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet38 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        setPreferenceServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet41 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet36.init((javax.servlet.ServletConfig) recommendServlet41);
        batchDeleteCandidatesServlet33.init((javax.servlet.ServletConfig) setPreferenceServlet36);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet44 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet45 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet46 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet45.init((javax.servlet.ServletConfig) batchSetPreferencesServlet46);
        javax.servlet.ServletConfig servletConfig48 = batchSetPreferencesServlet45.getServletConfig();
        addCandidateServlet44.init((javax.servlet.ServletConfig) batchSetPreferencesServlet45);
        javax.servlet.ServletConfig servletConfig50 = addCandidateServlet44.getServletConfig();
        batchDeleteCandidatesServlet33.init((javax.servlet.ServletConfig) addCandidateServlet44);
        javax.servlet.ServletConfig servletConfig52 = batchDeleteCandidatesServlet33.getServletConfig();
        setPreferenceServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        batchDeleteCandidatesServlet21.init((javax.servlet.ServletConfig) setPreferenceServlet29);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str56 = batchAddCandidatesServlet0.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig6);
        org.junit.Assert.assertNotNull(servletConfig17);
        org.junit.Assert.assertNotNull(servletConfig19);
        org.junit.Assert.assertNotNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(servletConfig48);
        org.junit.Assert.assertNotNull(servletConfig50);
        org.junit.Assert.assertNotNull(servletConfig52);
    }

    @Test
    public void test38836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38836");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getName();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test38837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38837");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration0.getStorageConfiguration();
        int int8 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration9.getUsername();
        java.lang.String str12 = storageConfiguration9.getPassword();
        java.lang.String str13 = storageConfiguration9.getJdbcDriverClass();
        storageConfiguration9.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration9.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        storageConfiguration9.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration9);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList21 = configuration0.getFactorizationbasedRecommenders();
        configuration0.setNumProcessorsForTraining((int) (byte) -1);
        org.plista.kornakapi.web.Components components24 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration25 = null; // flaky: components24.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration26 = null; // flaky: components24.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler27 = null; // flaky: components24.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler28 = null; // flaky: components24.scheduler();
        org.plista.kornakapi.core.storage.Storage storage29 = null; // flaky: components24.storage();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components24.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage31 = null; // flaky: components24.storage();
        org.plista.kornakapi.core.config.Configuration configuration32 = null; // flaky: components24.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration33 = null; // flaky: components24.getConfiguration();
// flaky:         configuration33.setNumProcessorsForTraining(0);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig36 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig36.setSimilarityClass("");
        java.lang.String str39 = itembasedRecommenderConfig36.getSimilarityClass();
        itembasedRecommenderConfig36.setName("");
        java.lang.String str42 = itembasedRecommenderConfig36.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer43 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig36);
// flaky:         configuration33.addItembasedRecommender(itembasedRecommenderConfig36);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig36);
        itembasedRecommenderConfig36.setSimilarItemsPerItem((int) '#');
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer48 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig36);
        java.io.File file49 = null;
        org.plista.kornakapi.core.storage.Storage storage50 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender51 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer48.train(file49, storage50, recommender51, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(storageConfiguration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList21);
// flaky:         org.junit.Assert.assertNotNull(components24);
// flaky:         org.junit.Assert.assertNotNull(configuration25);
// flaky:         org.junit.Assert.assertNotNull(configuration26);
        org.junit.Assert.assertNull(trainingScheduler27);
        org.junit.Assert.assertNull(trainingScheduler28);
        org.junit.Assert.assertNull(storage29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertNull(storage31);
// flaky:         org.junit.Assert.assertNotNull(configuration32);
// flaky:         org.junit.Assert.assertNotNull(configuration33);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
    }

    @Test
    public void test38838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38838");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        long long4 = mutablePreference0.getUserID();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.set((long) 100, 0L, (float) 10000L);
        mutablePreference0.set((long) (byte) 10, 10000L, (float) (byte) 100);
        long long14 = mutablePreference0.getItemID();
        mutablePreference0.set(97L, 100L, (float) (-1L));
        mutablePreference0.set((-1L), 0L, (float) '4');
        float float23 = mutablePreference0.getValue();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + float23 + "' != '" + 52.0f + "'", float23 == 52.0f);
    }

    @Test
    public void test38839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38839");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setJdbcDriverClass("batchSize");
        java.lang.String str12 = storageConfiguration4.getPassword();
        java.lang.String str13 = storageConfiguration4.getJdbcUrl();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = null; // flaky: configuration2.getStorageConfiguration();
        int int16 = 0; // flaky: configuration2.getNumProcessorsForTraining();
// flaky:         configuration2.setNumProcessorsForTraining((int) '4');
        org.plista.kornakapi.web.Components components19 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components19.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components19.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler22 = null; // flaky: components19.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration23 = null; // flaky: components19.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig24 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double25 = factorizationbasedRecommenderConfig24.getAlpha();
        double double26 = factorizationbasedRecommenderConfig24.getLambda();
        int int27 = factorizationbasedRecommenderConfig24.getNumberOfFeatures();
        factorizationbasedRecommenderConfig24.setUsesImplicitFeedback(true);
        double double30 = factorizationbasedRecommenderConfig24.getAlpha();
        java.lang.String str31 = factorizationbasedRecommenderConfig24.getRetrainCronExpression();
        int int32 = factorizationbasedRecommenderConfig24.getRetrainAfterPreferenceChanges();
        int int33 = factorizationbasedRecommenderConfig24.getNumberOfIterations();
        factorizationbasedRecommenderConfig24.setNumberOfFeatures((int) '#');
        double double36 = factorizationbasedRecommenderConfig24.getLambda();
        boolean boolean37 = factorizationbasedRecommenderConfig24.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig24.setUsesImplicitFeedback(false);
// flaky:         configuration23.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig24);
        factorizationbasedRecommenderConfig24.setLambda((double) 100L);
        factorizationbasedRecommenderConfig24.setNumberOfIterations((-1));
        double double45 = factorizationbasedRecommenderConfig24.getAlpha();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig24);
        factorizationbasedRecommenderConfig24.setAlpha((double) (byte) 100);
        factorizationbasedRecommenderConfig24.setNumberOfFeatures(35);
        double double51 = factorizationbasedRecommenderConfig24.getAlpha();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
// flaky:         org.junit.Assert.assertNotNull(components19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(trainingScheduler22);
// flaky:         org.junit.Assert.assertNotNull(configuration23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 100.0d + "'", double51 == 100.0d);
    }

    @Test
    public void test38840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38840");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.MissingParameterException missingParameterException9 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException11 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException9.addSuppressed((java.lang.Throwable) missingParameterException11);
        invalidParameterException7.addSuppressed((java.lang.Throwable) missingParameterException11);
        java.lang.Throwable[] throwableArray14 = invalidParameterException7.getSuppressed();
        java.lang.Throwable[] throwableArray15 = invalidParameterException7.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) invalidParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=52, value=1.0}", (java.lang.Throwable) invalidParameterException16);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test38841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38841");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet2 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet3 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        setPreferenceServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet2.init((javax.servlet.ServletConfig) recommendServlet7);
        recommendServlet7.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet7);
        java.lang.String str11 = addCandidateServlet0.getServletInfo();
        addCandidateServlet0.init();
        javax.servlet.ServletConfig servletConfig13 = addCandidateServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet14 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet15.getServletConfig();
        addCandidateServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        batchSetPreferencesServlet15.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str22 = recommendServlet21.getServletInfo();
        javax.servlet.ServletConfig servletConfig23 = recommendServlet21.getServletConfig();
        java.lang.String str24 = recommendServlet21.getServletInfo();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) recommendServlet21);
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet21);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet27 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet27.destroy();
        trainServlet27.destroy();
        java.lang.String str30 = trainServlet27.getServletInfo();
        java.lang.String str31 = trainServlet27.getServletInfo();
        javax.servlet.ServletConfig servletConfig32 = trainServlet27.getServletConfig();
        javax.servlet.ServletConfig servletConfig33 = trainServlet27.getServletConfig();
        trainServlet27.destroy();
        trainServlet27.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) trainServlet27);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet37 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet38 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet40 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str41 = batchDeleteCandidatesServlet40.getServletInfo();
        batchDeleteCandidatesServlet40.init();
        javax.servlet.ServletConfig servletConfig43 = null;
        batchDeleteCandidatesServlet40.init(servletConfig43);
        recommendServlet37.init(servletConfig43);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet46 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet47 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet46.init((javax.servlet.ServletConfig) batchSetPreferencesServlet47);
        javax.servlet.ServletConfig servletConfig49 = batchSetPreferencesServlet46.getServletConfig();
        batchSetPreferencesServlet46.destroy();
        javax.servlet.ServletConfig servletConfig51 = batchSetPreferencesServlet46.getServletConfig();
        batchSetPreferencesServlet46.init();
        recommendServlet37.init((javax.servlet.ServletConfig) batchSetPreferencesServlet46);
        trainServlet27.init((javax.servlet.ServletConfig) batchSetPreferencesServlet46);
        batchSetPreferencesServlet46.destroy();
        batchSetPreferencesServlet46.init();
        batchSetPreferencesServlet46.init();
        batchSetPreferencesServlet46.init();
        java.lang.String str59 = batchSetPreferencesServlet46.getServletInfo();
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertNull(servletConfig33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(servletConfig49);
        org.junit.Assert.assertNotNull(servletConfig51);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test38842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38842");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double12 = factorizationbasedRecommenderConfig6.getAlpha();
        factorizationbasedRecommenderConfig6.setLambda((double) (-1));
        factorizationbasedRecommenderConfig6.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig6);
        double double19 = factorizationbasedRecommenderConfig6.getAlpha();
        double double20 = factorizationbasedRecommenderConfig6.getAlpha();
        double double21 = factorizationbasedRecommenderConfig6.getAlpha();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test38843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38843");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet2 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet3 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        setPreferenceServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet2.init((javax.servlet.ServletConfig) recommendServlet7);
        recommendServlet7.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet7);
        java.lang.String str11 = addCandidateServlet0.getServletInfo();
        addCandidateServlet0.init();
        javax.servlet.ServletConfig servletConfig13 = addCandidateServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet14 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet15.getServletConfig();
        addCandidateServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        batchSetPreferencesServlet15.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str22 = recommendServlet21.getServletInfo();
        javax.servlet.ServletConfig servletConfig23 = recommendServlet21.getServletConfig();
        java.lang.String str24 = recommendServlet21.getServletInfo();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) recommendServlet21);
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet21);
        java.lang.String str27 = recommendServlet21.getServletInfo();
        javax.servlet.ServletConfig servletConfig28 = recommendServlet21.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet29 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet29.init();
        java.lang.String str31 = batchAddCandidatesServlet29.getServletInfo();
        javax.servlet.ServletConfig servletConfig32 = batchAddCandidatesServlet29.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str34 = batchDeleteCandidatesServlet33.getServletInfo();
        java.lang.String str35 = batchDeleteCandidatesServlet33.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet36 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet37 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet38 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        setPreferenceServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet41 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet36.init((javax.servlet.ServletConfig) recommendServlet41);
        batchDeleteCandidatesServlet33.init((javax.servlet.ServletConfig) setPreferenceServlet36);
        batchAddCandidatesServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet45 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str46 = trainServlet45.getServletInfo();
        javax.servlet.ServletConfig servletConfig47 = trainServlet45.getServletConfig();
        batchAddCandidatesServlet29.init(servletConfig47);
        recommendServlet21.init((javax.servlet.ServletConfig) batchAddCandidatesServlet29);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet50 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet50.init();
        setPreferenceServlet50.init();
        setPreferenceServlet50.destroy();
        javax.servlet.ServletConfig servletConfig54 = setPreferenceServlet50.getServletConfig();
        java.lang.String str55 = setPreferenceServlet50.getServletInfo();
        setPreferenceServlet50.init();
        javax.servlet.ServletConfig servletConfig57 = setPreferenceServlet50.getServletConfig();
        setPreferenceServlet50.init();
        javax.servlet.ServletConfig servletConfig59 = setPreferenceServlet50.getServletConfig();
        recommendServlet21.init((javax.servlet.ServletConfig) setPreferenceServlet50);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(servletConfig28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(servletConfig47);
        org.junit.Assert.assertNull(servletConfig54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(servletConfig57);
        org.junit.Assert.assertNull(servletConfig59);
    }

    @Test
    public void test38844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38844");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.web.Components components5 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components5.storage();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components5.storage();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components5.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration10.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig12.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig12);
        itembasedRecommenderConfig12.setRetrainCronExpression("");
        itembasedRecommenderConfig12.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig12.setRetrainCronExpression("");
// flaky:         configuration10.addItembasedRecommender(itembasedRecommenderConfig12);
        int int23 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig12);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig26 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str27 = itembasedRecommenderConfig26.getRetrainCronExpression();
        int int28 = itembasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
        java.lang.String str29 = itembasedRecommenderConfig26.getSimilarityClass();
        itembasedRecommenderConfig26.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig26.setRetrainCronExpression("value");
        int int34 = itembasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
        int int35 = itembasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig26.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str38 = itembasedRecommenderConfig26.getRetrainCronExpression();
        java.lang.String str39 = itembasedRecommenderConfig26.getSimilarityClass();
        java.lang.String str40 = itembasedRecommenderConfig26.getSimilarityClass();
        itembasedRecommenderConfig26.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: file");
        int int43 = itembasedRecommenderConfig26.getSimilarItemsPerItem();
        java.lang.String str44 = itembasedRecommenderConfig26.getRetrainCronExpression();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig26);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer46 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig26);
        itembasedRecommenderConfig26.setSimilarItemsPerItem(32);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(components5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(storage9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "value" + "'", str38, "value");
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "value" + "'", str44, "value");
    }

    @Test
    public void test38845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38845");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
// flaky:         configuration2.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        factorizationbasedRecommenderConfig7.setNumberOfFeatures((int) (short) 10);
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(false);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        java.lang.String str15 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str17 = storageConfiguration16.getJdbcDriverClass();
        storageConfiguration16.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str20 = storageConfiguration16.getJdbcUrl();
        java.lang.String str21 = storageConfiguration16.getJdbcDriverClass();
        storageConfiguration16.setJdbcDriverClass("batchSize");
        storageConfiguration16.setPassword("howMany");
        java.lang.String str26 = storageConfiguration16.getUsername();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration16);
// flaky:         configuration2.setNumProcessorsForTraining((int) ' ');
        org.plista.kornakapi.web.Components components30 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage31 = null; // flaky: components30.storage();
        org.plista.kornakapi.core.config.Configuration configuration32 = null; // flaky: components30.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration33 = null; // flaky: configuration32.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig34 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double35 = factorizationbasedRecommenderConfig34.getAlpha();
        double double36 = factorizationbasedRecommenderConfig34.getLambda();
        boolean boolean37 = factorizationbasedRecommenderConfig34.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig34.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration32.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig34);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList41 = null; // flaky: configuration32.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList42 = null; // flaky: configuration32.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.Configuration configuration43 = new org.plista.kornakapi.core.config.Configuration();
        configuration43.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str46 = configuration43.getModelDirectory();
        configuration43.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig49 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double50 = factorizationbasedRecommenderConfig49.getAlpha();
        configuration43.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig49);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration52 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str53 = storageConfiguration52.getUsername();
        java.lang.String str54 = storageConfiguration52.getJdbcDriverClass();
        java.lang.String str55 = storageConfiguration52.getPassword();
        storageConfiguration52.setJdbcUrl("file");
        configuration43.setStorageConfiguration(storageConfiguration52);
        storageConfiguration52.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         configuration32.setStorageConfiguration(storageConfiguration52);
        java.lang.String str62 = storageConfiguration52.getJdbcUrl();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration52);
        java.lang.String str64 = storageConfiguration52.getJdbcDriverClass();
        java.lang.String str65 = storageConfiguration52.getUsername();
        java.lang.String str66 = storageConfiguration52.getPassword();
        storageConfiguration52.setPassword("MutablePreference{userID=32, itemID=0, value=0.0}");
        storageConfiguration52.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "itemID" + "'", str15, "itemID");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str26, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
// flaky:         org.junit.Assert.assertNotNull(components30);
        org.junit.Assert.assertNull(storage31);
// flaky:         org.junit.Assert.assertNotNull(configuration32);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList41);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str62, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test38846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38846");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=0, itemID=10, value=10.0}", (int) (short) 100);
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
    }

    @Test
    public void test38847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38847");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet2 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet3 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        setPreferenceServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet2.init((javax.servlet.ServletConfig) recommendServlet7);
        recommendServlet7.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet7);
        java.lang.String str11 = addCandidateServlet0.getServletInfo();
        addCandidateServlet0.init();
        javax.servlet.ServletConfig servletConfig13 = addCandidateServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet14 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet15.getServletConfig();
        addCandidateServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        batchSetPreferencesServlet15.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str22 = recommendServlet21.getServletInfo();
        javax.servlet.ServletConfig servletConfig23 = recommendServlet21.getServletConfig();
        java.lang.String str24 = recommendServlet21.getServletInfo();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) recommendServlet21);
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet21);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet27 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet27.init();
        setPreferenceServlet27.init();
        setPreferenceServlet27.destroy();
        javax.servlet.ServletConfig servletConfig31 = setPreferenceServlet27.getServletConfig();
        java.lang.String str32 = setPreferenceServlet27.getServletInfo();
        setPreferenceServlet27.destroy();
        setPreferenceServlet27.destroy();
        addCandidateServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet27);
        javax.servlet.ServletConfig servletConfig36 = addCandidateServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            addCandidateServlet0.log("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: label");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(servletConfig31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNotNull(servletConfig36);
    }

    @Test
    public void test38848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38848");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet10 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig14 = batchSetPreferencesServlet11.getServletConfig();
        addCandidateServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig16 = batchSetPreferencesServlet11.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet19 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet20 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet19.init((javax.servlet.ServletConfig) batchSetPreferencesServlet20);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) batchSetPreferencesServlet20);
        batchDeleteCandidatesServlet18.destroy();
        javax.servlet.ServletConfig servletConfig24 = batchDeleteCandidatesServlet18.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet26 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet27 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet28 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet27.init((javax.servlet.ServletConfig) batchSetPreferencesServlet28);
        javax.servlet.ServletConfig servletConfig30 = batchSetPreferencesServlet27.getServletConfig();
        addCandidateServlet26.init((javax.servlet.ServletConfig) batchSetPreferencesServlet27);
        batchSetPreferencesServlet27.destroy();
        java.lang.String str33 = batchSetPreferencesServlet27.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet34 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet34.init();
        setPreferenceServlet34.init();
        setPreferenceServlet34.destroy();
        javax.servlet.ServletConfig servletConfig38 = setPreferenceServlet34.getServletConfig();
        java.lang.String str39 = setPreferenceServlet34.getServletInfo();
        batchSetPreferencesServlet27.init((javax.servlet.ServletConfig) setPreferenceServlet34);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet41 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet42 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet43 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet42.init((javax.servlet.ServletConfig) batchSetPreferencesServlet43);
        javax.servlet.ServletConfig servletConfig45 = batchSetPreferencesServlet42.getServletConfig();
        addCandidateServlet41.init((javax.servlet.ServletConfig) batchSetPreferencesServlet42);
        batchSetPreferencesServlet42.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet48 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str49 = recommendServlet48.getServletInfo();
        javax.servlet.ServletConfig servletConfig50 = recommendServlet48.getServletConfig();
        java.lang.String str51 = recommendServlet48.getServletInfo();
        batchSetPreferencesServlet42.init((javax.servlet.ServletConfig) recommendServlet48);
        javax.servlet.ServletConfig servletConfig53 = null;
        recommendServlet48.init(servletConfig53);
        batchSetPreferencesServlet27.init((javax.servlet.ServletConfig) recommendServlet48);
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet27);
        java.lang.String str57 = batchSetPreferencesServlet1.getServletInfo();
        batchSetPreferencesServlet1.destroy();
        java.lang.Throwable throwable60 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet1.log("MutablePreference{userID=52, itemID=-1, value=32.0}", throwable60);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertNotNull(servletConfig16);
        org.junit.Assert.assertNotNull(servletConfig24);
        org.junit.Assert.assertNotNull(servletConfig30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(servletConfig38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(servletConfig45);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(servletConfig50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
    }

    @Test
    public void test38849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38849");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str4 = storageConfiguration3.getJdbcDriverClass();
        java.lang.String str5 = storageConfiguration3.getUsername();
        storageConfiguration3.setPassword("label");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration3);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig9 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig9.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig9);
        itembasedRecommenderConfig9.setRetrainCronExpression("");
        itembasedRecommenderConfig9.setSimilarItemsPerItem(10);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig9);
        java.lang.String str18 = itembasedRecommenderConfig9.getSimilarityClass();
        itembasedRecommenderConfig9.setSimilarItemsPerItem((int) (short) 1);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig9);
        java.lang.String str22 = itembasedRecommenderConfig9.getRetrainCronExpression();
        int int23 = itembasedRecommenderConfig9.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig9.setSimilarityClass("MutablePreference{userID=100, itemID=-1, value=100.0}");
        itembasedRecommenderConfig9.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test38850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38850");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setAlpha((double) 97L);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setAlpha((double) 100L);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test38851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38851");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        java.lang.String str6 = mutablePreference0.toString();
        float float7 = mutablePreference0.getValue();
        java.lang.String str8 = mutablePreference0.toString();
        java.lang.String str9 = mutablePreference0.toString();
        long long10 = mutablePreference0.getUserID();
        long long11 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 0.0f + "'", float7 == 0.0f);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str8, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str9, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test38852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38852");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener11);
    }

    @Test
    public void test38853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38853");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: file");
        java.lang.String str11 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=0, value=97.0}");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=35, itemID=10000, value=52.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test38854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38854");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.web.Components components6 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components6.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components6.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components6.storage();
        org.plista.kornakapi.core.storage.Storage storage10 = null; // flaky: components6.storage();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components6.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration11.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration13.getPassword();
// flaky:         configuration11.setStorageConfiguration(storageConfiguration13);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
// flaky:         configuration11.addItembasedRecommender(itembasedRecommenderConfig22);
        java.lang.String str31 = itembasedRecommenderConfig22.getSimilarityClass();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration33 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str34 = storageConfiguration33.getJdbcDriverClass();
        java.lang.String str35 = storageConfiguration33.getUsername();
        storageConfiguration33.setPassword("label");
        storageConfiguration33.setUsername("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration33.setPassword("");
        storageConfiguration33.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: recommender");
        storageConfiguration33.setUsername("MutablePreference{userID=97, itemID=1, value=97.0}");
        java.lang.String str46 = storageConfiguration33.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration33);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList48 = null; // flaky: configuration5.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(components6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(storage9);
        org.junit.Assert.assertNull(storage10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList48);
    }

    @Test
    public void test38855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38855");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        java.lang.String str4 = null; // flaky: storageConfiguration3.getJdbcUrl();
        java.lang.String str5 = null; // flaky: storageConfiguration3.getUsername();
// flaky:         storageConfiguration3.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertNull(str4);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=97, itemID=1, value=97.0}" + "'", str5, "MutablePreference{userID=97, itemID=1, value=97.0}");
    }

    @Test
    public void test38856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38856");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = null;
        batchDeleteCandidatesServlet0.init(servletConfig3);
        javax.servlet.ServletConfig servletConfig5 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig7 = batchDeleteCandidatesServlet0.getServletConfig();
        java.lang.String str8 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet9 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet9.destroy();
        trainServlet9.destroy();
        java.lang.String str12 = trainServlet9.getServletInfo();
        java.lang.String str13 = trainServlet9.getServletInfo();
        javax.servlet.ServletConfig servletConfig14 = trainServlet9.getServletConfig();
        javax.servlet.ServletConfig servletConfig15 = trainServlet9.getServletConfig();
        trainServlet9.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = batchDeleteCandidatesServlet0.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig14);
        org.junit.Assert.assertNull(servletConfig15);
    }

    @Test
    public void test38857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38857");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler12, "label", (int) ' ');
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener15);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler25 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener28 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler25, "label", (int) ' ');
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener28);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener28);
        inMemoryPreferenceChangeListener28.notifyOfPreferenceChange();
    }

    @Test
    public void test38858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38858");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setRetrainCronExpression("value");
        int int8 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 1);
        int int12 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file14 = null;
        org.plista.kornakapi.core.storage.Storage storage15 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer13.train(file14, storage15, recommender16, 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test38859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38859");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        java.lang.String str16 = null; // flaky: configuration5.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList17 = null; // flaky: configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList18 = null; // flaky: configuration5.getItembasedRecommenders();
// flaky:         configuration5.setNumProcessorsForTraining((int) (short) 10);
// flaky:         configuration5.setModelDirectory("MutablePreference{userID=100, itemID=0, value=-1.0}");
        java.lang.String str23 = null; // flaky: configuration5.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration24 = null; // flaky: configuration5.getStorageConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "itemID" + "'", str16, "itemID");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList17);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList18);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "MutablePreference{userID=100, itemID=0, value=-1.0}" + "'", str23, "MutablePreference{userID=100, itemID=0, value=-1.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration24);
    }

    @Test
    public void test38860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38860");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        mutablePreference0.setValue(97.0f);
        long long8 = mutablePreference0.getUserID();
        mutablePreference0.set((long) 'a', (long) 0, (float) 100);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test38861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38861");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException6);
        java.lang.Throwable[] throwableArray9 = invalidParameterException6.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException17 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException17);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException18);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException18);
        org.plista.kornakapi.web.MissingParameterException missingParameterException25 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException26 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException25);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException25);
        org.plista.kornakapi.web.MissingParameterException missingParameterException29 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException31 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException29.addSuppressed((java.lang.Throwable) missingParameterException31);
        invalidParameterException27.addSuppressed((java.lang.Throwable) missingParameterException31);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException34 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException27);
        org.plista.kornakapi.web.MissingParameterException missingParameterException38 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException39 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException38);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException38);
        invalidParameterException34.addSuppressed((java.lang.Throwable) missingParameterException38);
        org.plista.kornakapi.web.MissingParameterException missingParameterException46 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException47 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException46);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException46);
        java.lang.Throwable[] throwableArray49 = missingParameterException46.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException46);
        missingParameterException38.addSuppressed((java.lang.Throwable) missingParameterException46);
        invalidParameterException20.addSuppressed((java.lang.Throwable) missingParameterException38);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException53 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) invalidParameterException20);
        java.lang.Throwable[] throwableArray54 = invalidParameterException20.getSuppressed();
        java.lang.Throwable[] throwableArray55 = invalidParameterException20.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException56 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) invalidParameterException20);
        java.lang.Throwable[] throwableArray57 = invalidParameterException20.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException63 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray64 = missingParameterException63.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException65 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException63);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException66 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) missingParameterException63);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException67 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=32.0}", (java.lang.Throwable) invalidParameterException66);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException68 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) invalidParameterException67);
        invalidParameterException20.addSuppressed((java.lang.Throwable) invalidParameterException67);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException70 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException67);
        invalidParameterException6.addSuppressed((java.lang.Throwable) invalidParameterException70);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException72 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10000, itemID=-1, value=-1.0}", (java.lang.Throwable) invalidParameterException70);
        java.lang.String str73 = invalidParameterException72.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=-1, value=-1.0}" + "'", str73, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=-1, value=-1.0}");
    }

    @Test
    public void test38862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38862");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (byte) 1, (double) (byte) 100);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) '4');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) 97, (double) 'a');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double18 = fixedCandidatesIDRescorer1.rescore(35L, (double) 10000);
        double double21 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 1L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 97.0d + "'", double14 == 97.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10000.0d + "'", double18 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
    }

    @Test
    public void test38863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38863");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        int int1 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        java.lang.String str2 = itembasedRecommenderConfig0.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str4 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int6 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int7 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(35);
        java.lang.String str11 = itembasedRecommenderConfig0.getName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test38864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38864");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.storage.Storage storage6 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap7 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap8 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null;
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration4, storage6, strMap7, strMap8, trainingScheduler9, preferenceChangeListener10);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
    }

    @Test
    public void test38865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38865");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) (byte) 100);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) 97, (double) 32);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double13 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) '4');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer14 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double18 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) 35);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = fixedCandidatesIDRescorer1.isFiltered(10L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 32.0d + "'", double9 == 32.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 35.0d + "'", double18 == 35.0d);
    }

    @Test
    public void test38866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38866");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet5 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet6 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet5.init((javax.servlet.ServletConfig) batchSetPreferencesServlet6);
        java.lang.String str8 = batchSetPreferencesServlet6.getServletInfo();
        java.lang.String str9 = batchSetPreferencesServlet6.getServletInfo();
        batchSetPreferencesServlet6.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet6);
        batchSetPreferencesServlet6.destroy();
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet6.log("MutablePreference{userID=10, itemID=-1, value=100.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test38867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38867");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig13 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str14 = itembasedRecommenderConfig13.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig13);
        java.lang.String str16 = itembasedRecommenderConfig13.getSimilarityClass();
        int int17 = itembasedRecommenderConfig13.getSimilarItemsPerItem();
        itembasedRecommenderConfig13.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=1.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig13);
        itembasedRecommenderConfig13.setName("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         configuration12.addItembasedRecommender(itembasedRecommenderConfig13);
        org.plista.kornakapi.web.Components components24 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage25 = components24.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener26 = components24.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener27 = components24.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage28 = components24.storage();
        org.plista.kornakapi.core.config.Configuration configuration29 = components24.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration30 = null; // flaky: configuration29.getStorageConfiguration();
        java.lang.String str31 = null; // flaky: storageConfiguration30.getPassword();
        java.lang.String str32 = null; // flaky: storageConfiguration30.getJdbcDriverClass();
// flaky:         configuration12.setStorageConfiguration(storageConfiguration30);
// flaky:         storageConfiguration30.setPassword("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=32, itemID=1, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(storage11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(components24);
        org.junit.Assert.assertNull(storage25);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener26);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener27);
        org.junit.Assert.assertNull(storage28);
        org.junit.Assert.assertNotNull(configuration29);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration30);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender" + "'", str31, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: recommender" + "'", str32, "org.plista.kornakapi.web.InvalidParameterException: recommender");
    }

    @Test
    public void test38868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38868");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str4 = storageConfiguration3.getJdbcDriverClass();
        java.lang.String str5 = storageConfiguration3.getUsername();
        storageConfiguration3.setPassword("label");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration3);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig9 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig9.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig9);
        itembasedRecommenderConfig9.setRetrainCronExpression("");
        itembasedRecommenderConfig9.setSimilarItemsPerItem(10);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig9);
        java.lang.String str18 = itembasedRecommenderConfig9.getSimilarityClass();
        itembasedRecommenderConfig9.setSimilarItemsPerItem((int) (short) 1);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig9);
        java.lang.String str22 = null; // flaky: configuration1.getModelDirectory();
        java.lang.String str23 = null; // flaky: configuration1.getModelDirectory();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "MutablePreference{userID=100, itemID=0, value=-1.0}" + "'", str22, "MutablePreference{userID=100, itemID=0, value=-1.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "MutablePreference{userID=100, itemID=0, value=-1.0}" + "'", str23, "MutablePreference{userID=100, itemID=0, value=-1.0}");
    }

    @Test
    public void test38869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38869");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration4.getPassword();
        java.lang.String str12 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration4.getPassword();
        storageConfiguration4.setUsername("MutablePreference{userID=100, itemID=0, value=0.0}");
        storageConfiguration4.setPassword("itemID");
        java.lang.String str18 = storageConfiguration4.getUsername();
        configuration0.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.Configuration configuration20 = new org.plista.kornakapi.core.config.Configuration();
        configuration20.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig23 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double24 = factorizationbasedRecommenderConfig23.getAlpha();
        double double25 = factorizationbasedRecommenderConfig23.getLambda();
        configuration20.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig23);
        java.lang.String str27 = configuration20.getModelDirectory();
        int int28 = configuration20.getNumProcessorsForTraining();
        java.lang.String str29 = configuration20.getModelDirectory();
        int int30 = configuration20.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration31 = configuration20.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration32 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str33 = storageConfiguration32.getJdbcDriverClass();
        storageConfiguration32.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str36 = storageConfiguration32.getJdbcUrl();
        java.lang.String str37 = storageConfiguration32.getJdbcDriverClass();
        java.lang.String str38 = storageConfiguration32.getJdbcDriverClass();
        java.lang.String str39 = storageConfiguration32.getPassword();
        java.lang.String str40 = storageConfiguration32.getJdbcDriverClass();
        java.lang.String str41 = storageConfiguration32.getPassword();
        storageConfiguration32.setUsername("MutablePreference{userID=100, itemID=0, value=0.0}");
        configuration20.setStorageConfiguration(storageConfiguration32);
        storageConfiguration32.setJdbcUrl("");
        configuration0.setStorageConfiguration(storageConfiguration32);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration48 = configuration0.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList49 = configuration0.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str18, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNull(storageConfiguration31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(storageConfiguration48);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList49);
    }

    @Test
    public void test38870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38870");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) -1);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(0);
        boolean boolean10 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int14 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        boolean boolean18 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setAlpha((double) 100L);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test38871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38871");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) 10);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) (-1));
        double double18 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) 10.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double22 = fixedCandidatesIDRescorer1.rescore((long) 'a', (double) 32);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer23 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer24 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair25 = null;
        double double27 = filteringLongPairRescorer24.rescore(longPair25, (-1.0d));
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 32.0d + "'", double22 == 32.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
    }

    @Test
    public void test38872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38872");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig3 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str6 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet7 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        setPreferenceServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet7.init((javax.servlet.ServletConfig) recommendServlet12);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet7);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        batchDeleteCandidatesServlet4.init();
        java.lang.String str17 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str18 = batchDeleteCandidatesServlet4.getServletInfo();
        batchDeleteCandidatesServlet4.destroy();
        batchDeleteCandidatesServlet4.init();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet21 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet22 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet21.init((javax.servlet.ServletConfig) batchSetPreferencesServlet22);
        java.lang.String str24 = batchSetPreferencesServlet22.getServletInfo();
        batchSetPreferencesServlet22.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet26 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str27 = batchDeleteCandidatesServlet26.getServletInfo();
        java.lang.String str28 = batchDeleteCandidatesServlet26.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet29 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet30 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet31 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet30.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet31);
        setPreferenceServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet31);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet34 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet29.init((javax.servlet.ServletConfig) recommendServlet34);
        batchDeleteCandidatesServlet26.init((javax.servlet.ServletConfig) setPreferenceServlet29);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet37 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet38 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet39 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet38.init((javax.servlet.ServletConfig) batchSetPreferencesServlet39);
        javax.servlet.ServletConfig servletConfig41 = batchSetPreferencesServlet38.getServletConfig();
        addCandidateServlet37.init((javax.servlet.ServletConfig) batchSetPreferencesServlet38);
        javax.servlet.ServletConfig servletConfig43 = addCandidateServlet37.getServletConfig();
        batchDeleteCandidatesServlet26.init((javax.servlet.ServletConfig) addCandidateServlet37);
        addCandidateServlet37.destroy();
        batchSetPreferencesServlet22.init((javax.servlet.ServletConfig) addCandidateServlet37);
        addCandidateServlet37.init();
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) addCandidateServlet37);
        addCandidateServlet37.init();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = addCandidateServlet37.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(servletConfig41);
        org.junit.Assert.assertNotNull(servletConfig43);
    }

    @Test
    public void test38873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38873");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getUsername();
        java.lang.String str11 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration9.getPassword();
        storageConfiguration9.setJdbcUrl("file");
        configuration0.setStorageConfiguration(storageConfiguration9);
        org.plista.kornakapi.web.Components components16 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components16.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList18 = null; // flaky: configuration17.getFactorizationbasedRecommenders();
        java.lang.String str19 = null; // flaky: configuration17.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList20 = null; // flaky: configuration17.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setName("recommender");
// flaky:         configuration17.addItembasedRecommender(itembasedRecommenderConfig21);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig21);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str27 = storageConfiguration26.getJdbcDriverClass();
        storageConfiguration26.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str30 = storageConfiguration26.getJdbcUrl();
        java.lang.String str31 = storageConfiguration26.getJdbcDriverClass();
        java.lang.String str32 = storageConfiguration26.getJdbcDriverClass();
        java.lang.String str33 = storageConfiguration26.getJdbcDriverClass();
        java.lang.String str34 = storageConfiguration26.getJdbcUrl();
        java.lang.String str35 = storageConfiguration26.getUsername();
        configuration0.setStorageConfiguration(storageConfiguration26);
        java.lang.String str37 = storageConfiguration26.getPassword();
        storageConfiguration26.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=0.0}");
        java.lang.String str40 = storageConfiguration26.getJdbcDriverClass();
        java.lang.String str41 = storageConfiguration26.getPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
// flaky:         org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList18);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=100, itemID=0, value=-1.0}" + "'", str19, "MutablePreference{userID=100, itemID=0, value=-1.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str35, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test38874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38874");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("MutablePreference{userID=100, itemID=0, value=0.0}");
        java.lang.String str12 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=52.0}");
        java.lang.String str15 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=32.0}");
        java.lang.String str18 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=100, itemID=-1, value=-1.0}");
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=100, itemID=52, value=0.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str18, "MutablePreference{userID=100, itemID=0, value=0.0}");
    }

    @Test
    public void test38875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38875");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        batchDeleteCandidatesServlet2.destroy();
        javax.servlet.ServletConfig servletConfig6 = batchDeleteCandidatesServlet2.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass7 = servletConfig6.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig6);
    }

    @Test
    public void test38876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38876");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
// flaky:         configuration4.setNumProcessorsForTraining((int) (short) 1);
        java.lang.String str8 = null; // flaky: configuration4.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getUsername();
        java.lang.String str11 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration9.getJdbcDriverClass();
// flaky:         configuration4.setStorageConfiguration(storageConfiguration9);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str15 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str18 = storageConfiguration14.getJdbcUrl();
        java.lang.String str19 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setJdbcDriverClass("batchSize");
        storageConfiguration14.setPassword("howMany");
        storageConfiguration14.setJdbcUrl("hi!");
        java.lang.String str26 = storageConfiguration14.getJdbcUrl();
        java.lang.String str27 = storageConfiguration14.getPassword();
        storageConfiguration14.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        java.lang.String str30 = storageConfiguration14.getUsername();
// flaky:         configuration4.setStorageConfiguration(storageConfiguration14);
        org.plista.kornakapi.core.config.Configuration configuration32 = new org.plista.kornakapi.core.config.Configuration();
        int int33 = configuration32.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList34 = configuration32.getItembasedRecommenders();
        int int35 = configuration32.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig36 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str37 = itembasedRecommenderConfig36.getRetrainCronExpression();
        configuration32.addItembasedRecommender(itembasedRecommenderConfig36);
        itembasedRecommenderConfig36.setName("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        java.lang.String str41 = itembasedRecommenderConfig36.getSimilarityClass();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig36);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList43 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=100, itemID=0, value=-1.0}" + "'", str8, "MutablePreference{userID=100, itemID=0, value=-1.0}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi!" + "'", str26, "hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "howMany" + "'", str27, "howMany");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str30, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str41);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList43);
    }

    @Test
    public void test38877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38877");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        java.lang.String str16 = storageConfiguration7.getJdbcUrl();
        storageConfiguration7.setPassword("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        storageConfiguration7.setJdbcUrl("MutablePreference{userID=100, itemID=0, value=0.0}");
        java.lang.String str21 = storageConfiguration7.getUsername();
        storageConfiguration7.setJdbcDriverClass("value");
        storageConfiguration7.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str26 = storageConfiguration7.getUsername();
        storageConfiguration7.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: recommender");
        storageConfiguration7.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: ");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str21, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str26, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38878");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException8.addSuppressed((java.lang.Throwable) missingParameterException10);
        invalidParameterException6.addSuppressed((java.lang.Throwable) missingParameterException10);
        java.lang.Throwable[] throwableArray13 = missingParameterException10.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.MissingParameterException missingParameterException25 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException27 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException25.addSuppressed((java.lang.Throwable) missingParameterException27);
        invalidParameterException23.addSuppressed((java.lang.Throwable) missingParameterException27);
        java.lang.Throwable[] throwableArray30 = missingParameterException27.getSuppressed();
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException27);
        missingParameterException10.addSuppressed((java.lang.Throwable) invalidParameterException17);
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: howMany");
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender", (java.lang.Throwable) missingParameterException34);
        java.lang.Throwable[] throwableArray37 = invalidParameterException36.getSuppressed();
        java.lang.Throwable throwable38 = null;
        // The following exception was thrown during execution in test generation
        try {
            invalidParameterException36.addSuppressed(throwable38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test38879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38879");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getUserID();
        long long4 = mutablePreference0.getUserID();
        long long5 = mutablePreference0.getUserID();
        java.lang.String str6 = mutablePreference0.toString();
        mutablePreference0.set((-1L), (long) (-1), (float) (short) 1);
        mutablePreference0.setValue((-1.0f));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=0.0}");
    }

    @Test
    public void test38880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38880");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet11 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet13 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet13);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet12.getServletConfig();
        addCandidateServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig17 = addCandidateServlet11.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet11);
        addCandidateServlet11.destroy();
        java.lang.String str20 = addCandidateServlet11.getServletInfo();
        addCandidateServlet11.init();
        java.lang.String str22 = addCandidateServlet11.getServletInfo();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(servletConfig15);
        org.junit.Assert.assertNotNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test38881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38881");
        java.lang.Throwable throwable1 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException2 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=97, value=100.0}", throwable1);
    }

    @Test
    public void test38882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38882");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList4 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        int int5 = 0; // flaky: configuration1.getNumProcessorsForTraining();
// flaky:         configuration1.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: label");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
// flaky:         configuration1.setNumProcessorsForTraining((int) (short) 1);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=100, itemID=0, value=-1.0}" + "'", str3, "MutablePreference{userID=100, itemID=0, value=-1.0}");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList4);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
    }

    @Test
    public void test38883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38883");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) 10);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) (-1));
        double double18 = fixedCandidatesIDRescorer1.rescore((long) 0, (double) 32);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer20 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double23 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10);
        double double26 = fixedCandidatesIDRescorer1.rescore((long) '#', 0.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer27 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer28 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 10.0d + "'", double23 == 10.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test38884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38884");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig0.setAlpha((double) ' ');
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setAlpha(52.0d);
        double double23 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 52.0d + "'", double23 == 52.0d);
    }

    @Test
    public void test38885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38885");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        int int4 = 0; // flaky: configuration2.getNumProcessorsForTraining();
// flaky:         configuration2.setNumProcessorsForTraining(10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = null; // flaky: configuration2.getStorageConfiguration();
        java.lang.String str8 = null; // flaky: storageConfiguration7.getJdbcUrl();
// flaky:         storageConfiguration7.setPassword("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
// flaky:         storageConfiguration7.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
// flaky:         storageConfiguration7.setUsername("MutablePreference{userID=100, itemID=0, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: " + "'", str8, "org.plista.kornakapi.web.InvalidParameterException: ");
    }

    @Test
    public void test38886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38886");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet11 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet13 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet13);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet12.getServletConfig();
        addCandidateServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig17 = addCandidateServlet11.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet11);
        javax.servlet.ServletConfig servletConfig19 = batchDeleteCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet20 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet20.init();
        setPreferenceServlet20.init();
        setPreferenceServlet20.destroy();
        javax.servlet.ServletConfig servletConfig24 = setPreferenceServlet20.getServletConfig();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet25 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str26 = trainServlet25.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet27 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet27.destroy();
        javax.servlet.ServletConfig servletConfig29 = deleteCandidateServlet27.getServletConfig();
        deleteCandidateServlet27.destroy();
        trainServlet25.init((javax.servlet.ServletConfig) deleteCandidateServlet27);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet32 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet32.init();
        java.lang.String str34 = batchAddCandidatesServlet32.getServletInfo();
        javax.servlet.ServletConfig servletConfig35 = batchAddCandidatesServlet32.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet36 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str37 = batchDeleteCandidatesServlet36.getServletInfo();
        java.lang.String str38 = batchDeleteCandidatesServlet36.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet39 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet40 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet41 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet40.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet41);
        setPreferenceServlet39.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet41);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet44 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet39.init((javax.servlet.ServletConfig) recommendServlet44);
        batchDeleteCandidatesServlet36.init((javax.servlet.ServletConfig) setPreferenceServlet39);
        batchAddCandidatesServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet36);
        batchDeleteCandidatesServlet36.init();
        java.lang.String str49 = batchDeleteCandidatesServlet36.getServletInfo();
        java.lang.String str50 = batchDeleteCandidatesServlet36.getServletInfo();
        trainServlet25.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet36);
        setPreferenceServlet20.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet36);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet20);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet54 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet55 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet55.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet57 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet58 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet57.init((javax.servlet.ServletConfig) batchSetPreferencesServlet58);
        addCandidateServlet55.init((javax.servlet.ServletConfig) batchSetPreferencesServlet57);
        addCandidateServlet54.init((javax.servlet.ServletConfig) addCandidateServlet55);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet55);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet63 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet64 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet63.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet64);
        recommendServlet63.destroy();
        recommendServlet63.destroy();
        javax.servlet.ServletConfig servletConfig68 = recommendServlet63.getServletConfig();
        addCandidateServlet55.init(servletConfig68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str70 = addCandidateServlet55.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(servletConfig15);
        org.junit.Assert.assertNotNull(servletConfig17);
        org.junit.Assert.assertNotNull(servletConfig19);
        org.junit.Assert.assertNull(servletConfig24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(servletConfig29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(servletConfig35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(servletConfig68);
    }

    @Test
    public void test38887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38887");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException12.addSuppressed((java.lang.Throwable) missingParameterException14);
        invalidParameterException10.addSuppressed((java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.MissingParameterException missingParameterException24 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException24.addSuppressed((java.lang.Throwable) missingParameterException26);
        invalidParameterException22.addSuppressed((java.lang.Throwable) missingParameterException26);
        missingParameterException14.addSuppressed((java.lang.Throwable) missingParameterException26);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("userID", (java.lang.Throwable) missingParameterException26);
        missingParameterException3.addSuppressed((java.lang.Throwable) missingParameterException26);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.MissingParameterException missingParameterException39 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException41 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException39.addSuppressed((java.lang.Throwable) missingParameterException41);
        invalidParameterException37.addSuppressed((java.lang.Throwable) missingParameterException41);
        org.plista.kornakapi.web.MissingParameterException missingParameterException47 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException47);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException47);
        org.plista.kornakapi.web.MissingParameterException missingParameterException51 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException53 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException51.addSuppressed((java.lang.Throwable) missingParameterException53);
        invalidParameterException49.addSuppressed((java.lang.Throwable) missingParameterException53);
        missingParameterException41.addSuppressed((java.lang.Throwable) missingParameterException53);
        org.plista.kornakapi.web.MissingParameterException missingParameterException59 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException60 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException59);
        missingParameterException53.addSuppressed((java.lang.Throwable) missingParameterException59);
        missingParameterException3.addSuppressed((java.lang.Throwable) missingParameterException59);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException63 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=35.0}", (java.lang.Throwable) missingParameterException59);
        org.plista.kornakapi.web.MissingParameterException missingParameterException66 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException68 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException66.addSuppressed((java.lang.Throwable) missingParameterException68);
        java.lang.Throwable[] throwableArray70 = missingParameterException68.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException71 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException68);
        java.lang.Throwable[] throwableArray72 = invalidParameterException71.getSuppressed();
        java.lang.Throwable[] throwableArray73 = invalidParameterException71.getSuppressed();
        invalidParameterException63.addSuppressed((java.lang.Throwable) invalidParameterException71);
        java.lang.Throwable[] throwableArray75 = invalidParameterException71.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException76 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException71);
        java.lang.Throwable[] throwableArray77 = invalidParameterException76.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertNotNull(throwableArray73);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertNotNull(throwableArray77);
    }

    @Test
    public void test38888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38888");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.Throwable[] throwableArray2 = missingParameterException1.getSuppressed();
        java.lang.String str3 = missingParameterException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str3, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
    }

    @Test
    public void test38889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38889");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setRetrainCronExpression("");
        itembasedRecommenderConfig6.setSimilarItemsPerItem(10);
        java.lang.String str14 = itembasedRecommenderConfig6.getName();
        int int15 = itembasedRecommenderConfig6.getRetrainAfterPreferenceChanges();
        java.lang.String str16 = itembasedRecommenderConfig6.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.core.config.Configuration configuration18 = new org.plista.kornakapi.core.config.Configuration();
        configuration18.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str21 = configuration18.getModelDirectory();
        configuration18.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig24 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double25 = factorizationbasedRecommenderConfig24.getAlpha();
        int int26 = factorizationbasedRecommenderConfig24.getNumberOfFeatures();
        factorizationbasedRecommenderConfig24.setUsesImplicitFeedback(true);
        double double29 = factorizationbasedRecommenderConfig24.getLambda();
        configuration18.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig24);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        factorizationbasedRecommenderConfig31.setUsesImplicitFeedback(true);
        double double37 = factorizationbasedRecommenderConfig31.getAlpha();
        java.lang.String str38 = factorizationbasedRecommenderConfig31.getRetrainCronExpression();
        int int39 = factorizationbasedRecommenderConfig31.getRetrainAfterPreferenceChanges();
        int int40 = factorizationbasedRecommenderConfig31.getNumberOfIterations();
        factorizationbasedRecommenderConfig31.setNumberOfFeatures((int) '#');
        double double43 = factorizationbasedRecommenderConfig31.getLambda();
        boolean boolean44 = factorizationbasedRecommenderConfig31.isUsesImplicitFeedback();
        configuration18.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration47 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str48 = storageConfiguration47.getJdbcDriverClass();
        storageConfiguration47.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str51 = storageConfiguration47.getJdbcUrl();
        java.lang.String str52 = storageConfiguration47.getJdbcDriverClass();
        java.lang.String str53 = storageConfiguration47.getJdbcDriverClass();
        java.lang.String str54 = storageConfiguration47.getJdbcDriverClass();
        java.lang.String str55 = storageConfiguration47.getUsername();
        storageConfiguration47.setUsername("itemIDs");
        java.lang.String str58 = storageConfiguration47.getJdbcUrl();
        configuration0.setStorageConfiguration(storageConfiguration47);
        java.lang.String str60 = storageConfiguration47.getPassword();
        storageConfiguration47.setUsername("org.plista.kornakapi.web.MissingParameterException: label");
        java.lang.String str63 = storageConfiguration47.getUsername();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str55, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: label" + "'", str63, "org.plista.kornakapi.web.MissingParameterException: label");
    }

    @Test
    public void test38890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38890");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) (byte) 100);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) 32, (double) 10);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
    }

    @Test
    public void test38891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38891");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) (short) 10);
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getName();
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        java.lang.String str16 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int17 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        double double18 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test38892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38892");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        long long3 = mutablePreference0.getItemID();
        long long4 = mutablePreference0.getUserID();
        long long5 = mutablePreference0.getItemID();
        float float6 = mutablePreference0.getValue();
        java.lang.String str7 = mutablePreference0.toString();
        mutablePreference0.setValue((float) (short) -1);
        mutablePreference0.set((long) (byte) 0, (long) (short) 100, (float) 10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 1.0f + "'", float6 == 1.0f);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=1.0}");
    }

    @Test
    public void test38893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38893");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet2 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet3 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        setPreferenceServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet2.init((javax.servlet.ServletConfig) recommendServlet7);
        recommendServlet7.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet7);
        java.lang.String str11 = addCandidateServlet0.getServletInfo();
        addCandidateServlet0.init();
        javax.servlet.ServletConfig servletConfig13 = addCandidateServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet14 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet15.getServletConfig();
        addCandidateServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        batchSetPreferencesServlet15.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str22 = recommendServlet21.getServletInfo();
        javax.servlet.ServletConfig servletConfig23 = recommendServlet21.getServletConfig();
        java.lang.String str24 = recommendServlet21.getServletInfo();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) recommendServlet21);
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet21);
        java.lang.String str27 = recommendServlet21.getServletInfo();
        java.lang.String str28 = recommendServlet21.getServletInfo();
        javax.servlet.ServletConfig servletConfig29 = recommendServlet21.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext30 = recommendServlet21.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(servletConfig29);
    }

    @Test
    public void test38894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38894");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setRetrainCronExpression("value");
        int int8 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str10 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=10000, itemID=32, value=10.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=97, value=10.0}");
        int int16 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test38895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38895");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
    }

    @Test
    public void test38896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38896");
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet0 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str1 = recommendServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig2 = recommendServlet0.getServletConfig();
        java.lang.String str3 = recommendServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig4 = recommendServlet0.getServletConfig();
        recommendServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str7 = batchDeleteCandidatesServlet6.getServletInfo();
        java.lang.String str8 = batchDeleteCandidatesServlet6.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet9 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet10 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet10.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        setPreferenceServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet9.init((javax.servlet.ServletConfig) recommendServlet14);
        batchDeleteCandidatesServlet6.init((javax.servlet.ServletConfig) setPreferenceServlet9);
        batchDeleteCandidatesServlet6.destroy();
        batchDeleteCandidatesServlet6.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet19 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str20 = trainServlet19.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet21 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet21.destroy();
        javax.servlet.ServletConfig servletConfig23 = deleteCandidateServlet21.getServletConfig();
        deleteCandidateServlet21.destroy();
        trainServlet19.init((javax.servlet.ServletConfig) deleteCandidateServlet21);
        java.lang.String str26 = trainServlet19.getServletInfo();
        batchDeleteCandidatesServlet6.init((javax.servlet.ServletConfig) trainServlet19);
        batchDeleteCandidatesServlet6.init();
        recommendServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        java.lang.String str30 = batchDeleteCandidatesServlet6.getServletInfo();
        java.lang.Class<?> wildcardClass31 = batchDeleteCandidatesServlet6.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test38897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38897");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        java.lang.String str12 = itembasedRecommenderConfig3.getName();
        int int13 = itembasedRecommenderConfig3.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig16.setSimilarityClass("");
        java.lang.String str19 = itembasedRecommenderConfig16.getSimilarityClass();
        itembasedRecommenderConfig16.setRetrainCronExpression("userID");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer22 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig16);
        itembasedRecommenderConfig16.setSimilarItemsPerItem((int) (short) 0);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig16);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str27 = storageConfiguration26.getJdbcDriverClass();
        storageConfiguration26.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str30 = storageConfiguration26.getJdbcUrl();
        java.lang.String str31 = storageConfiguration26.getJdbcDriverClass();
        storageConfiguration26.setJdbcDriverClass("batchSize");
        java.lang.String str34 = storageConfiguration26.getPassword();
        java.lang.String str35 = storageConfiguration26.getJdbcUrl();
        storageConfiguration26.setPassword("org.plista.kornakapi.web.MissingParameterException: file");
        configuration0.setStorageConfiguration(storageConfiguration26);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration39 = null;
        configuration0.setStorageConfiguration(storageConfiguration39);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig41 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double42 = factorizationbasedRecommenderConfig41.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer43 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig41);
        factorizationbasedRecommenderConfig41.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig41.setNumberOfIterations((int) '#');
        double double48 = factorizationbasedRecommenderConfig41.getLambda();
        double double49 = factorizationbasedRecommenderConfig41.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig41);
        factorizationbasedRecommenderConfig41.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig41.setLambda((double) (byte) 10);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
    }

    @Test
    public void test38898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38898");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        java.lang.String str7 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        trainServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        trainServlet0.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet16 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet16.destroy();
        trainServlet16.destroy();
        java.lang.String str19 = trainServlet16.getServletInfo();
        java.lang.String str20 = trainServlet16.getServletInfo();
        trainServlet0.init((javax.servlet.ServletConfig) trainServlet16);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet22 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet23 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet24 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet23.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet24);
        setPreferenceServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet24);
        java.lang.String str27 = setPreferenceServlet22.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet28 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet29 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet30 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        setPreferenceServlet28.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        setPreferenceServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet34 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str35 = batchDeleteCandidatesServlet34.getServletInfo();
        batchDeleteCandidatesServlet34.init();
        batchDeleteCandidatesServlet34.destroy();
        java.lang.String str38 = batchDeleteCandidatesServlet34.getServletInfo();
        batchDeleteCandidatesServlet34.destroy();
        setPreferenceServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet34);
        batchDeleteCandidatesServlet34.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet34);
        batchDeleteCandidatesServlet34.destroy();
        batchDeleteCandidatesServlet34.init();
        java.lang.String str45 = batchDeleteCandidatesServlet34.getServletInfo();
        batchDeleteCandidatesServlet34.init();
        javax.servlet.ServletConfig servletConfig47 = batchDeleteCandidatesServlet34.getServletConfig();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(servletConfig47);
    }

    @Test
    public void test38899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38899");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig6.getSimilarityClass();
        int int12 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) (byte) 1);
        java.lang.String str15 = itembasedRecommenderConfig6.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration17 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str18 = storageConfiguration17.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration17.getUsername();
        storageConfiguration17.setPassword("label");
        java.lang.String str22 = storageConfiguration17.getUsername();
        storageConfiguration17.setPassword("");
        configuration0.setStorageConfiguration(storageConfiguration17);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str27 = storageConfiguration26.getJdbcDriverClass();
        storageConfiguration26.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str30 = storageConfiguration26.getPassword();
        java.lang.String str31 = storageConfiguration26.getJdbcDriverClass();
        storageConfiguration26.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration26.setUsername("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        storageConfiguration26.setUsername("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str38 = storageConfiguration26.getUsername();
        configuration0.setStorageConfiguration(storageConfiguration26);
        storageConfiguration26.setUsername("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=0, value=97.0}");
        java.lang.String str42 = storageConfiguration26.getJdbcUrl();
        java.lang.String str43 = storageConfiguration26.getJdbcUrl();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str38, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test38900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38900");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        java.lang.String str3 = mutableCandidate0.getLabel();
        java.lang.String str4 = mutableCandidate0.getLabel();
        java.lang.String str5 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test38901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38901");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str2 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=1.0}");
        storageConfiguration0.setUsername("recommender");
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getJdbcUrl();
        java.lang.String str9 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setJdbcUrl("userID");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str14 = storageConfiguration0.getJdbcDriverClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str8, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str9, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test38902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38902");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration0.setUsername("");
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration0.setJdbcUrl("hi!");
        storageConfiguration0.setUsername("hi!");
        storageConfiguration0.setPassword("MutablePreference{userID=0, itemID=0, value=100.0}");
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=1, itemID=35, value=52.0}");
        java.lang.String str23 = storageConfiguration0.getJdbcDriverClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str23, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
    }

    @Test
    public void test38903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38903");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 100);
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        double double11 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test38904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38904");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("itemID", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: label", (java.lang.Throwable) invalidParameterException9);
        java.lang.Throwable throwable12 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", throwable12);
        org.plista.kornakapi.web.MissingParameterException missingParameterException17 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException17);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException17);
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException23 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException21.addSuppressed((java.lang.Throwable) missingParameterException23);
        invalidParameterException19.addSuppressed((java.lang.Throwable) missingParameterException23);
        java.lang.Throwable[] throwableArray26 = missingParameterException23.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException29 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException29);
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException35 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.MissingParameterException missingParameterException38 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException40 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException38.addSuppressed((java.lang.Throwable) missingParameterException40);
        invalidParameterException36.addSuppressed((java.lang.Throwable) missingParameterException40);
        java.lang.Throwable[] throwableArray43 = missingParameterException40.getSuppressed();
        invalidParameterException30.addSuppressed((java.lang.Throwable) missingParameterException40);
        missingParameterException23.addSuppressed((java.lang.Throwable) invalidParameterException30);
        invalidParameterException13.addSuppressed((java.lang.Throwable) invalidParameterException30);
        invalidParameterException10.addSuppressed((java.lang.Throwable) invalidParameterException13);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=1, value=-1.0}", (java.lang.Throwable) invalidParameterException13);
        missingParameterException1.addSuppressed((java.lang.Throwable) invalidParameterException13);
        java.lang.String str50 = missingParameterException1.toString();
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str50, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
    }

    @Test
    public void test38905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38905");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration13.getPassword();
        java.lang.String str21 = storageConfiguration13.getJdbcDriverClass();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration13);
// flaky:         configuration1.setModelDirectory("value");
        org.plista.kornakapi.web.Components components25 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration26 = components25.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration27 = components25.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage28 = components25.storage();
        org.plista.kornakapi.core.storage.Storage storage29 = components25.storage();
        org.plista.kornakapi.core.config.Configuration configuration30 = components25.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        factorizationbasedRecommenderConfig31.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig31.setNumberOfFeatures((int) (short) 100);
        boolean boolean39 = factorizationbasedRecommenderConfig31.isUsesImplicitFeedback();
// flaky:         configuration30.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        org.plista.kornakapi.web.Components components41 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration42 = components41.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler43 = components41.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler44 = components41.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration45 = components41.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration46 = components41.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig47 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig47.setSimilarityClass("");
        java.lang.String str50 = itembasedRecommenderConfig47.getName();
        java.lang.String str51 = itembasedRecommenderConfig47.getSimilarityClass();
        itembasedRecommenderConfig47.setName("");
        java.lang.String str54 = itembasedRecommenderConfig47.getSimilarityClass();
// flaky:         configuration46.addItembasedRecommender(itembasedRecommenderConfig47);
        itembasedRecommenderConfig47.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig47);
        java.lang.String str59 = null; // flaky: configuration30.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig60 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str61 = itembasedRecommenderConfig60.getRetrainCronExpression();
        int int62 = itembasedRecommenderConfig60.getRetrainAfterPreferenceChanges();
        java.lang.String str63 = itembasedRecommenderConfig60.getSimilarityClass();
        itembasedRecommenderConfig60.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig60.setSimilarityClass("");
        int int68 = itembasedRecommenderConfig60.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer69 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig60);
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig60);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig60);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration72 = null; // flaky: configuration1.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration73 = null; // flaky: configuration1.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList74 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
// flaky:         configuration1.setNumProcessorsForTraining((int) '4');
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration77 = null; // flaky: configuration1.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration78 = null; // flaky: configuration1.getStorageConfiguration();
// flaky:         storageConfiguration78.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=52, itemID=52, value=-1.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: label" + "'", str3, "org.plista.kornakapi.web.InvalidParameterException: label");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(components25);
        org.junit.Assert.assertNotNull(configuration26);
        org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(storage28);
        org.junit.Assert.assertNull(storage29);
        org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(components41);
        org.junit.Assert.assertNotNull(configuration42);
        org.junit.Assert.assertNull(trainingScheduler43);
        org.junit.Assert.assertNull(trainingScheduler44);
        org.junit.Assert.assertNotNull(configuration45);
        org.junit.Assert.assertNotNull(configuration46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "value" + "'", str59, "value");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration72);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration73);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList74);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration77);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration78);
    }

    @Test
    public void test38906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38906");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig14);
        factorizationbasedRecommenderConfig14.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig14.setNumberOfIterations((int) '#');
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        configuration0.setNumProcessorsForTraining((int) (byte) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration24 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.web.Components components25 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration26 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration27 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler28 = null; // flaky: components25.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler29 = null; // flaky: components25.scheduler();
        org.plista.kornakapi.core.storage.Storage storage30 = null; // flaky: components25.storage();
        org.plista.kornakapi.core.config.Configuration configuration31 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler32 = null; // flaky: components25.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration33 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration34 = null; // flaky: configuration33.getStorageConfiguration();
// flaky:         storageConfiguration34.setUsername("org.plista.kornakapi.web.InvalidParameterException: file");
// flaky:         storageConfiguration34.setJdbcUrl("MutablePreference{userID=1, itemID=32, value=52.0}");
        configuration0.setStorageConfiguration(storageConfiguration34);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(storageConfiguration24);
// flaky:         org.junit.Assert.assertNotNull(components25);
// flaky:         org.junit.Assert.assertNotNull(configuration26);
// flaky:         org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(trainingScheduler28);
        org.junit.Assert.assertNull(trainingScheduler29);
        org.junit.Assert.assertNull(storage30);
// flaky:         org.junit.Assert.assertNotNull(configuration31);
        org.junit.Assert.assertNull(trainingScheduler32);
// flaky:         org.junit.Assert.assertNotNull(configuration33);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration34);
    }

    @Test
    public void test38907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38907");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getRetrainCronExpression();
        int int7 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig5.setRetrainCronExpression("value");
        int int13 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig5);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList15 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig16.setSimilarityClass("");
        java.lang.String str19 = itembasedRecommenderConfig16.getName();
        java.lang.String str20 = itembasedRecommenderConfig16.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig16);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str23 = itembasedRecommenderConfig22.getRetrainCronExpression();
        int int24 = itembasedRecommenderConfig22.getRetrainAfterPreferenceChanges();
        java.lang.String str25 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig22.setRetrainCronExpression("value");
        int int30 = itembasedRecommenderConfig22.getRetrainAfterPreferenceChanges();
        int int31 = itembasedRecommenderConfig22.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str34 = itembasedRecommenderConfig22.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem(35);
        int int38 = itembasedRecommenderConfig22.getSimilarItemsPerItem();
        java.lang.String str39 = itembasedRecommenderConfig22.getRetrainCronExpression();
        itembasedRecommenderConfig22.setRetrainAfterPreferenceChanges((int) (short) 10);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "value" + "'", str34, "value");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 35 + "'", int38 == 35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "value" + "'", str39, "value");
    }

    @Test
    public void test38908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38908");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet11 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet13 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet13);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet12.getServletConfig();
        addCandidateServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig17 = addCandidateServlet11.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet11);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet19 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str20 = trainServlet19.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet21 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet21.destroy();
        javax.servlet.ServletConfig servletConfig23 = deleteCandidateServlet21.getServletConfig();
        deleteCandidateServlet21.destroy();
        trainServlet19.init((javax.servlet.ServletConfig) deleteCandidateServlet21);
        addCandidateServlet11.init((javax.servlet.ServletConfig) trainServlet19);
        trainServlet19.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet28 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet29 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet30 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        setPreferenceServlet28.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        trainServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        javax.servlet.ServletConfig servletConfig34 = batchDeleteCandidatesServlet30.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str36 = batchDeleteCandidatesServlet35.getServletInfo();
        batchDeleteCandidatesServlet35.init();
        javax.servlet.ServletConfig servletConfig38 = null;
        batchDeleteCandidatesServlet35.init(servletConfig38);
        javax.servlet.ServletConfig servletConfig40 = batchDeleteCandidatesServlet35.getServletConfig();
        batchDeleteCandidatesServlet35.init();
        javax.servlet.ServletConfig servletConfig42 = batchDeleteCandidatesServlet35.getServletConfig();
        java.lang.String str43 = batchDeleteCandidatesServlet35.getServletInfo();
        batchDeleteCandidatesServlet30.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet45 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str46 = recommendServlet45.getServletInfo();
        recommendServlet45.init();
        javax.servlet.ServletConfig servletConfig48 = recommendServlet45.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet49 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet50 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet49.init((javax.servlet.ServletConfig) batchSetPreferencesServlet50);
        javax.servlet.ServletConfig servletConfig52 = batchSetPreferencesServlet50.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet53 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet53.init();
        setPreferenceServlet53.init();
        setPreferenceServlet53.destroy();
        setPreferenceServlet53.destroy();
        batchSetPreferencesServlet50.init((javax.servlet.ServletConfig) setPreferenceServlet53);
        javax.servlet.ServletConfig servletConfig59 = batchSetPreferencesServlet50.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet60 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet61 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet62 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet61.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet62);
        setPreferenceServlet60.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet62);
        java.lang.String str65 = setPreferenceServlet60.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet66 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet67 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet68 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet67.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet68);
        setPreferenceServlet66.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet68);
        setPreferenceServlet60.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet68);
        javax.servlet.ServletConfig servletConfig72 = setPreferenceServlet60.getServletConfig();
        batchSetPreferencesServlet50.init(servletConfig72);
        recommendServlet45.init(servletConfig72);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet75 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet76 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet77 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet76.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet77);
        setPreferenceServlet75.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet77);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet80 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet75.init((javax.servlet.ServletConfig) recommendServlet80);
        java.lang.String str82 = setPreferenceServlet75.getServletInfo();
        javax.servlet.ServletConfig servletConfig83 = setPreferenceServlet75.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet84 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet85 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet86 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet85.init((javax.servlet.ServletConfig) batchSetPreferencesServlet86);
        batchDeleteCandidatesServlet84.init((javax.servlet.ServletConfig) batchSetPreferencesServlet86);
        setPreferenceServlet75.init((javax.servlet.ServletConfig) batchSetPreferencesServlet86);
        java.lang.String str90 = batchSetPreferencesServlet86.getServletInfo();
        recommendServlet45.init((javax.servlet.ServletConfig) batchSetPreferencesServlet86);
        batchSetPreferencesServlet86.destroy();
        batchDeleteCandidatesServlet35.init((javax.servlet.ServletConfig) batchSetPreferencesServlet86);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str94 = batchSetPreferencesServlet86.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(servletConfig15);
        org.junit.Assert.assertNotNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertNull(servletConfig34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(servletConfig40);
        org.junit.Assert.assertNull(servletConfig42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(servletConfig48);
        org.junit.Assert.assertNull(servletConfig52);
        org.junit.Assert.assertNotNull(servletConfig59);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNotNull(servletConfig72);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(servletConfig83);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "" + "'", str90, "");
    }

    @Test
    public void test38909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38909");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        double double9 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int12 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test38910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38910");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = configuration0.getItembasedRecommenders();
        configuration0.setNumProcessorsForTraining(100);
        org.plista.kornakapi.web.Components components7 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components7.getConfiguration();
        java.lang.String str10 = null; // flaky: configuration9.getModelDirectory();
        int int11 = 0; // flaky: configuration9.getNumProcessorsForTraining();
        int int12 = 0; // flaky: configuration9.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = null; // flaky: configuration9.getStorageConfiguration();
        configuration0.setStorageConfiguration(storageConfiguration13);
// flaky:         storageConfiguration13.setUsername("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str17 = null; // flaky: storageConfiguration13.getPassword();
        java.lang.String str18 = null; // flaky: storageConfiguration13.getJdbcUrl();
// flaky:         storageConfiguration13.setJdbcDriverClass("MutablePreference{userID=1, itemID=97, value=35.0}");
        java.lang.String str21 = null; // flaky: storageConfiguration13.getJdbcUrl();
        java.lang.String str22 = null; // flaky: storageConfiguration13.getPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
// flaky:         org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "value" + "'", str10, "value");
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration13);
        org.junit.Assert.assertNull(str17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=1, itemID=32, value=52.0}" + "'", str18, "MutablePreference{userID=1, itemID=32, value=52.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "MutablePreference{userID=1, itemID=32, value=52.0}" + "'", str21, "MutablePreference{userID=1, itemID=32, value=52.0}");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test38911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38911");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str8 = recommendServlet7.getServletInfo();
        javax.servlet.ServletConfig servletConfig9 = recommendServlet7.getServletConfig();
        java.lang.String str10 = recommendServlet7.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) recommendServlet7);
        javax.servlet.ServletConfig servletConfig12 = null;
        recommendServlet7.init(servletConfig12);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet14.init();
        java.lang.String str16 = batchAddCandidatesServlet14.getServletInfo();
        recommendServlet7.init((javax.servlet.ServletConfig) batchAddCandidatesServlet14);
        batchAddCandidatesServlet14.init();
        batchAddCandidatesServlet14.init();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration20 = batchAddCandidatesServlet14.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(servletConfig9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test38912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38912");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
// flaky:         configuration2.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getUsername();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration7);
        java.lang.String str10 = null; // flaky: configuration2.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = null; // flaky: configuration2.getStorageConfiguration();
        java.lang.String str13 = null; // flaky: storageConfiguration12.getPassword();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(str8);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "itemID" + "'", str10, "itemID");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test38913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38913");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.web.Components components7 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = components7.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components7.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = components7.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage11 = components7.storage();
        org.plista.kornakapi.core.storage.Storage storage12 = components7.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener13 = components7.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration14 = components7.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig15 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig15.setSimilarityClass("");
        java.lang.String str18 = itembasedRecommenderConfig15.getName();
        java.lang.String str19 = itembasedRecommenderConfig15.getSimilarityClass();
        itembasedRecommenderConfig15.setName("");
        java.lang.String str22 = itembasedRecommenderConfig15.getSimilarityClass();
        itembasedRecommenderConfig15.setRetrainCronExpression("batchSize");
        itembasedRecommenderConfig15.setRetrainAfterPreferenceChanges(100);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer27 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig15);
// flaky:         configuration14.addItembasedRecommender(itembasedRecommenderConfig15);
// flaky:         configuration14.setNumProcessorsForTraining(35);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration31 = null; // flaky: configuration14.getStorageConfiguration();
        java.lang.String str32 = null; // flaky: storageConfiguration31.getUsername();
// flaky:         configuration6.setStorageConfiguration(storageConfiguration31);
// flaky:         storageConfiguration31.setUsername("MutablePreference{userID=-1, itemID=100, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener10);
        org.junit.Assert.assertNull(storage11);
        org.junit.Assert.assertNull(storage12);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test38914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38914");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setRetrainCronExpression("value");
        int int8 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(1);
        itembasedRecommenderConfig0.setName("MutablePreference{userID=52, itemID=97, value=1.0}");
        java.lang.String str14 = itembasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "value" + "'", str14, "value");
    }

    @Test
    public void test38915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38915");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
// flaky:         configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
// flaky:         configuration5.setModelDirectory("MutablePreference{userID=0, itemID=0, value=1.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig36 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double37 = factorizationbasedRecommenderConfig36.getAlpha();
        double double38 = factorizationbasedRecommenderConfig36.getLambda();
        int int39 = factorizationbasedRecommenderConfig36.getNumberOfFeatures();
        factorizationbasedRecommenderConfig36.setUsesImplicitFeedback(true);
        double double42 = factorizationbasedRecommenderConfig36.getAlpha();
        java.lang.String str43 = factorizationbasedRecommenderConfig36.getRetrainCronExpression();
        int int44 = factorizationbasedRecommenderConfig36.getRetrainAfterPreferenceChanges();
        int int45 = factorizationbasedRecommenderConfig36.getNumberOfIterations();
        factorizationbasedRecommenderConfig36.setNumberOfFeatures((int) '#');
        double double48 = factorizationbasedRecommenderConfig36.getLambda();
        factorizationbasedRecommenderConfig36.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig36.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: label");
        factorizationbasedRecommenderConfig36.setUsesImplicitFeedback(false);
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig36);
        boolean boolean56 = factorizationbasedRecommenderConfig36.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig36.setLambda((double) 52);
        java.lang.String str59 = factorizationbasedRecommenderConfig36.getName();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test38916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38916");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet14 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet15.getServletConfig();
        addCandidateServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        batchSetPreferencesServlet15.init();
        java.lang.String str21 = batchSetPreferencesServlet15.getServletInfo();
        batchSetPreferencesServlet15.init();
        batchSetPreferencesServlet15.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet25 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet27 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet26.init((javax.servlet.ServletConfig) batchSetPreferencesServlet27);
        javax.servlet.ServletConfig servletConfig29 = batchSetPreferencesServlet26.getServletConfig();
        addCandidateServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig31 = addCandidateServlet25.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet32 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet33 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet34 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet33.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet34);
        setPreferenceServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet34);
        javax.servlet.ServletConfig servletConfig37 = setPreferenceServlet32.getServletConfig();
        addCandidateServlet25.init((javax.servlet.ServletConfig) setPreferenceServlet32);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet39 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet39.init();
        java.lang.String str41 = batchAddCandidatesServlet39.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet42 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str43 = batchDeleteCandidatesServlet42.getServletInfo();
        batchDeleteCandidatesServlet42.destroy();
        javax.servlet.ServletConfig servletConfig45 = batchDeleteCandidatesServlet42.getServletConfig();
        batchAddCandidatesServlet39.init(servletConfig45);
        batchAddCandidatesServlet39.init();
        addCandidateServlet25.init((javax.servlet.ServletConfig) batchAddCandidatesServlet39);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet25);
        addCandidateServlet25.init();
        javax.servlet.ServletConfig servletConfig51 = null;
        addCandidateServlet25.init(servletConfig51);
        java.lang.String str53 = addCandidateServlet25.getServletInfo();
        java.lang.String str54 = addCandidateServlet25.getServletInfo();
        java.lang.String str55 = addCandidateServlet25.getServletInfo();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(servletConfig29);
        org.junit.Assert.assertNotNull(servletConfig31);
        org.junit.Assert.assertNotNull(servletConfig37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(servletConfig45);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test38917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38917");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList3 = null; // flaky: configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration4.getPassword();
        java.lang.String str12 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration4.getPassword();
        java.lang.String str14 = storageConfiguration4.getJdbcUrl();
        storageConfiguration4.setUsername("org.plista.kornakapi.web.InvalidParameterException: label");
// flaky:         configuration2.setStorageConfiguration(storageConfiguration4);
        java.lang.String str18 = storageConfiguration4.getUsername();
        storageConfiguration4.setUsername("org.plista.kornakapi.web.InvalidParameterException: ");
        storageConfiguration4.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: label" + "'", str18, "org.plista.kornakapi.web.InvalidParameterException: label");
    }

    @Test
    public void test38918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38918");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = null;
        batchDeleteCandidatesServlet0.init(servletConfig3);
        javax.servlet.ServletConfig servletConfig5 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig7 = batchDeleteCandidatesServlet0.getServletConfig();
        java.lang.String str8 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet9 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet9.destroy();
        trainServlet9.destroy();
        java.lang.String str12 = trainServlet9.getServletInfo();
        java.lang.String str13 = trainServlet9.getServletInfo();
        javax.servlet.ServletConfig servletConfig14 = trainServlet9.getServletConfig();
        javax.servlet.ServletConfig servletConfig15 = trainServlet9.getServletConfig();
        trainServlet9.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet9);
        batchDeleteCandidatesServlet0.init();
        java.lang.String str19 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str22 = batchDeleteCandidatesServlet21.getServletInfo();
        java.lang.String str23 = batchDeleteCandidatesServlet21.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet24 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet25 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet26 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet25.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet26);
        setPreferenceServlet24.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet26);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet29 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet24.init((javax.servlet.ServletConfig) recommendServlet29);
        batchDeleteCandidatesServlet21.init((javax.servlet.ServletConfig) setPreferenceServlet24);
        batchDeleteCandidatesServlet21.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet33 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str34 = trainServlet33.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet35 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet35.destroy();
        javax.servlet.ServletConfig servletConfig37 = deleteCandidateServlet35.getServletConfig();
        deleteCandidateServlet35.destroy();
        trainServlet33.init((javax.servlet.ServletConfig) deleteCandidateServlet35);
        javax.servlet.ServletConfig servletConfig40 = deleteCandidateServlet35.getServletConfig();
        batchDeleteCandidatesServlet21.init((javax.servlet.ServletConfig) deleteCandidateServlet35);
        batchDeleteCandidatesServlet21.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet43 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet44 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet43.init((javax.servlet.ServletConfig) batchSetPreferencesServlet44);
        javax.servlet.ServletConfig servletConfig46 = batchSetPreferencesServlet44.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet47 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet47.init();
        setPreferenceServlet47.init();
        setPreferenceServlet47.destroy();
        setPreferenceServlet47.destroy();
        batchSetPreferencesServlet44.init((javax.servlet.ServletConfig) setPreferenceServlet47);
        java.lang.String str53 = batchSetPreferencesServlet44.getServletInfo();
        batchSetPreferencesServlet44.destroy();
        batchSetPreferencesServlet44.init();
        batchDeleteCandidatesServlet21.init((javax.servlet.ServletConfig) batchSetPreferencesServlet44);
        batchDeleteCandidatesServlet21.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet0.log("MutablePreference{userID=10000, itemID=0, value=97.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig14);
        org.junit.Assert.assertNull(servletConfig15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(servletConfig37);
        org.junit.Assert.assertNull(servletConfig40);
        org.junit.Assert.assertNull(servletConfig46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test38919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38919");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarityClass("label");
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (byte) 100);
        int int10 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setName("MutablePreference{userID=10000, itemID=-1, value=-1.0}");
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) '4');
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test38920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38920");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
// flaky:         configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration34 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str35 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str38 = storageConfiguration34.getJdbcUrl();
        java.lang.String str39 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setJdbcDriverClass("batchSize");
        java.lang.String str42 = storageConfiguration34.getPassword();
        storageConfiguration34.setUsername("batchSize");
        java.lang.String str45 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration34);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration49 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str50 = storageConfiguration49.getPassword();
        java.lang.String str51 = storageConfiguration49.getJdbcDriverClass();
        storageConfiguration49.setPassword("");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration49);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig55 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double56 = factorizationbasedRecommenderConfig55.getAlpha();
        double double57 = factorizationbasedRecommenderConfig55.getLambda();
        int int58 = factorizationbasedRecommenderConfig55.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer59 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig55);
        factorizationbasedRecommenderConfig55.setRetrainCronExpression("value");
        factorizationbasedRecommenderConfig55.setRetrainAfterPreferenceChanges((int) (byte) -1);
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig55);
        factorizationbasedRecommenderConfig55.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=35.0}");
        factorizationbasedRecommenderConfig55.setAlpha((double) 35L);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "batchSize" + "'", str45, "batchSize");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test38921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38921");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setLambda((double) '4');
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 0);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("howMany");
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 10);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=1, itemID=32, value=32.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test38922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38922");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        configuration0.setNumProcessorsForTraining((int) (byte) 1);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components6 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components6.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components6.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components6.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components6.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = null; // flaky: configuration10.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = new org.plista.kornakapi.core.config.Configuration();
        int int13 = configuration12.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList14 = configuration12.getItembasedRecommenders();
        int int15 = configuration12.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str17 = itembasedRecommenderConfig16.getRetrainCronExpression();
        configuration12.addItembasedRecommender(itembasedRecommenderConfig16);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig19 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str20 = itembasedRecommenderConfig19.getRetrainCronExpression();
        itembasedRecommenderConfig19.setSimilarityClass("");
        java.lang.String str23 = itembasedRecommenderConfig19.getSimilarityClass();
        itembasedRecommenderConfig19.setName("label");
        configuration12.addItembasedRecommender(itembasedRecommenderConfig19);
// flaky:         configuration10.addItembasedRecommender(itembasedRecommenderConfig19);
        itembasedRecommenderConfig19.setName("MutablePreference{userID=0, itemID=0, value=0.0}");
        itembasedRecommenderConfig19.setSimilarItemsPerItem(1);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig19);
        itembasedRecommenderConfig19.setRetrainCronExpression("MutablePreference{userID=0, itemID=0, value=10000.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(components6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test38923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38923");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str2 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcUrl("");
        storageConfiguration0.setJdbcUrl("");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.InvalidParameterException: file");
        java.lang.String str9 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        java.lang.String str12 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str15 = storageConfiguration0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: file" + "'", str9, "org.plista.kornakapi.web.InvalidParameterException: file");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: file" + "'", str15, "org.plista.kornakapi.web.InvalidParameterException: file");
    }

    @Test
    public void test38924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38924");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) (byte) -1, (double) (byte) -1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, 0.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer13 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer14 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test38925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38925");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
    }

    @Test
    public void test38926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38926");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException7);
        java.lang.Throwable[] throwableArray10 = missingParameterException7.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException11);
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException19);
        java.lang.Throwable[] throwableArray22 = missingParameterException19.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException23);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException25 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException23);
        invalidParameterException12.addSuppressed((java.lang.Throwable) invalidParameterException23);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException23);
        java.lang.Throwable[] throwableArray28 = invalidParameterException27.getSuppressed();
        java.lang.Throwable[] throwableArray29 = invalidParameterException27.getSuppressed();
        java.lang.Throwable[] throwableArray30 = invalidParameterException27.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender", (java.lang.Throwable) invalidParameterException27);
        java.lang.String str32 = invalidParameterException27.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str32, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38927");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        int int4 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration7.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration7);
        java.lang.String str18 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setSimilarityClass("");
        java.lang.String str24 = itembasedRecommenderConfig21.getName();
        java.lang.String str25 = itembasedRecommenderConfig21.getSimilarityClass();
        java.lang.String str26 = itembasedRecommenderConfig21.getSimilarityClass();
        int int27 = itembasedRecommenderConfig21.getSimilarItemsPerItem();
        itembasedRecommenderConfig21.setSimilarItemsPerItem((int) (byte) 10);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig21);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        factorizationbasedRecommenderConfig31.setUsesImplicitFeedback(true);
        double double37 = factorizationbasedRecommenderConfig31.getAlpha();
        java.lang.String str38 = factorizationbasedRecommenderConfig31.getRetrainCronExpression();
        int int39 = factorizationbasedRecommenderConfig31.getRetrainAfterPreferenceChanges();
        int int40 = factorizationbasedRecommenderConfig31.getNumberOfIterations();
        factorizationbasedRecommenderConfig31.setNumberOfFeatures((int) '#');
        double double43 = factorizationbasedRecommenderConfig31.getLambda();
        factorizationbasedRecommenderConfig31.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig31.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: label");
        factorizationbasedRecommenderConfig31.setLambda((double) 100);
        int int50 = factorizationbasedRecommenderConfig31.getNumberOfIterations();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig52 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double53 = factorizationbasedRecommenderConfig52.getAlpha();
        double double54 = factorizationbasedRecommenderConfig52.getLambda();
        int int55 = factorizationbasedRecommenderConfig52.getNumberOfFeatures();
        factorizationbasedRecommenderConfig52.setUsesImplicitFeedback(false);
        double double58 = factorizationbasedRecommenderConfig52.getAlpha();
        double double59 = factorizationbasedRecommenderConfig52.getLambda();
        double double60 = factorizationbasedRecommenderConfig52.getAlpha();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig52);
        java.lang.String str62 = factorizationbasedRecommenderConfig52.getName();
        factorizationbasedRecommenderConfig52.setNumberOfIterations((int) (short) -1);
        factorizationbasedRecommenderConfig52.setUsesImplicitFeedback(false);
        java.lang.String str67 = factorizationbasedRecommenderConfig52.getRetrainCronExpression();
        factorizationbasedRecommenderConfig52.setRetrainAfterPreferenceChanges((int) (byte) -1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test38928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38928");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double5 = factorizationbasedRecommenderConfig0.getLambda();
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setLambda(0.0d);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test38929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38929");
        java.lang.Throwable throwable2 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException3 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=-1, itemID=10, value=0.0}", throwable2);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException4 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=100, value=97.0}", throwable2);
    }

    @Test
    public void test38930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38930");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str10 = storageConfiguration6.getPassword();
        java.lang.String str11 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setUsername("hi!");
        storageConfiguration6.setJdbcDriverClass("file");
        configuration0.setStorageConfiguration(storageConfiguration6);
        storageConfiguration6.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration6.getUsername();
        java.lang.String str20 = storageConfiguration6.getPassword();
        java.lang.String str21 = storageConfiguration6.getJdbcUrl();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test38931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38931");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10);
        java.lang.String str8 = itembasedRecommenderConfig0.getName();
        int int9 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setName("MutablePreference{userID=100, itemID=0, value=0.0}");
        int int12 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=1, itemID=-1, value=10000.0}");
        java.lang.String str15 = itembasedRecommenderConfig0.getName();
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=52, itemID=97, value=-1.0}");
        int int18 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer19 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str15, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
    }

    @Test
    public void test38932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38932");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        int int8 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        double double15 = factorizationbasedRecommenderConfig13.getLambda();
        int int16 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(true);
        double double19 = factorizationbasedRecommenderConfig13.getAlpha();
        java.lang.String str20 = factorizationbasedRecommenderConfig13.getRetrainCronExpression();
        int int21 = factorizationbasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        int int22 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        factorizationbasedRecommenderConfig13.setNumberOfFeatures((int) '#');
        double double25 = factorizationbasedRecommenderConfig13.getLambda();
        boolean boolean26 = factorizationbasedRecommenderConfig13.isUsesImplicitFeedback();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        factorizationbasedRecommenderConfig13.setName("MutablePreference{userID=-1, itemID=10, value=10.0}");
        int int30 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        double double31 = factorizationbasedRecommenderConfig13.getLambda();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer32 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig13);
        factorizationbasedRecommenderConfig13.setAlpha((double) (-1));
        int int35 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        int int36 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 35 + "'", int35 == 35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 35 + "'", int36 == 35);
    }

    @Test
    public void test38933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38933");
        org.plista.kornakapi.web.MissingParameterException missingParameterException2 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException3 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) missingParameterException2);
        java.lang.Throwable[] throwableArray4 = missingParameterException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
    }

    @Test
    public void test38934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38934");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setName("");
        java.lang.String str13 = itembasedRecommenderConfig6.getSimilarityClass();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components15 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration16 = components15.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler17 = components15.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = components15.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration19 = components15.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration20 = components15.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setSimilarityClass("");
        java.lang.String str24 = itembasedRecommenderConfig21.getName();
        java.lang.String str25 = itembasedRecommenderConfig21.getSimilarityClass();
        itembasedRecommenderConfig21.setName("");
        java.lang.String str28 = itembasedRecommenderConfig21.getSimilarityClass();
// flaky:         configuration20.addItembasedRecommender(itembasedRecommenderConfig21);
        itembasedRecommenderConfig21.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig21);
        org.plista.kornakapi.web.Components components33 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration34 = components33.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration35 = components33.getConfiguration();
        java.lang.String str36 = null; // flaky: configuration35.getModelDirectory();
        int int37 = 0; // flaky: configuration35.getNumProcessorsForTraining();
        int int38 = 0; // flaky: configuration35.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration39 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str40 = storageConfiguration39.getJdbcDriverClass();
        storageConfiguration39.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str43 = storageConfiguration39.getJdbcUrl();
        java.lang.String str44 = storageConfiguration39.getJdbcDriverClass();
        java.lang.String str45 = storageConfiguration39.getJdbcDriverClass();
        java.lang.String str46 = storageConfiguration39.getPassword();
        java.lang.String str47 = storageConfiguration39.getUsername();
        java.lang.String str48 = storageConfiguration39.getJdbcDriverClass();
        java.lang.String str49 = storageConfiguration39.getJdbcDriverClass();
        java.lang.String str50 = storageConfiguration39.getJdbcDriverClass();
// flaky:         configuration35.setStorageConfiguration(storageConfiguration39);
        storageConfiguration39.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration39);
        java.lang.String str55 = null; // flaky: configuration5.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig56 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str57 = itembasedRecommenderConfig56.getRetrainCronExpression();
        int int58 = itembasedRecommenderConfig56.getRetrainAfterPreferenceChanges();
        java.lang.String str59 = itembasedRecommenderConfig56.getSimilarityClass();
        itembasedRecommenderConfig56.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig56.setSimilarityClass("");
        int int64 = itembasedRecommenderConfig56.getSimilarItemsPerItem();
        int int65 = itembasedRecommenderConfig56.getSimilarItemsPerItem();
        java.lang.String str66 = itembasedRecommenderConfig56.getSimilarityClass();
        int int67 = itembasedRecommenderConfig56.getSimilarItemsPerItem();
        int int68 = itembasedRecommenderConfig56.getSimilarItemsPerItem();
        itembasedRecommenderConfig56.setRetrainAfterPreferenceChanges((int) (short) 100);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer71 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig56);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig56);
// flaky:         configuration5.setNumProcessorsForTraining(10);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(components15);
// flaky:         org.junit.Assert.assertNotNull(configuration16);
        org.junit.Assert.assertNull(trainingScheduler17);
        org.junit.Assert.assertNull(trainingScheduler18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(components33);
// flaky:         org.junit.Assert.assertNotNull(configuration34);
// flaky:         org.junit.Assert.assertNotNull(configuration35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str36, "MutablePreference{userID=0, itemID=0, value=1.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int37 + "' != '" + 35 + "'", int37 == 35);
// flaky:         org.junit.Assert.assertTrue("'" + int38 + "' != '" + 35 + "'", int38 == 35);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str47, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
// flaky:         org.junit.Assert.assertEquals("'" + str55 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str55, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test38935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38935");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10000);
        int int15 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str19 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        boolean boolean20 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=32, itemID=1, value=-1.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000 + "'", int16 == 10000);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test38936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38936");
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet0 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet0.init();
        deleteCandidateServlet0.destroy();
    }

    @Test
    public void test38937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38937");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setJdbcDriverClass("batchSize");
        storageConfiguration13.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        storageConfiguration13.setJdbcDriverClass("userID");
        configuration0.setStorageConfiguration(storageConfiguration13);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList26 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig27 = null;
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig27);
        org.plista.kornakapi.web.Components components29 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components29.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList31 = null; // flaky: configuration30.getItembasedRecommenders();
        java.lang.String str32 = null; // flaky: configuration30.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig33 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double34 = factorizationbasedRecommenderConfig33.getAlpha();
        double double35 = factorizationbasedRecommenderConfig33.getLambda();
        int int36 = factorizationbasedRecommenderConfig33.getNumberOfFeatures();
        factorizationbasedRecommenderConfig33.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer39 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig33);
// flaky:         configuration30.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig33);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList41 = null; // flaky: configuration30.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration42 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str43 = storageConfiguration42.getJdbcDriverClass();
        storageConfiguration42.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str46 = storageConfiguration42.getJdbcUrl();
        java.lang.String str47 = storageConfiguration42.getJdbcDriverClass();
        java.lang.String str48 = storageConfiguration42.getJdbcDriverClass();
        java.lang.String str49 = storageConfiguration42.getPassword();
        java.lang.String str50 = storageConfiguration42.getJdbcDriverClass();
// flaky:         configuration30.setStorageConfiguration(storageConfiguration42);
        java.lang.String str52 = storageConfiguration42.getUsername();
        java.lang.String str53 = storageConfiguration42.getJdbcDriverClass();
        java.lang.String str54 = storageConfiguration42.getPassword();
        storageConfiguration42.setUsername("MutablePreference{userID=52, itemID=-1, value=32.0}");
        configuration0.setStorageConfiguration(storageConfiguration42);
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        java.lang.String str60 = configuration0.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList61 = configuration0.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList26);
// flaky:         org.junit.Assert.assertNotNull(components29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str32, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str52, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList61);
    }

    @Test
    public void test38938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38938");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
        java.lang.String str10 = storageConfiguration2.getUsername();
        java.lang.String str11 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany");
        storageConfiguration2.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=-1.0}");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
        storageConfiguration2.setUsername("MutablePreference{userID=0, itemID=0, value=52.0}");
        storageConfiguration2.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: recommender");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str10, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test38939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38939");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
// flaky:         configuration4.setNumProcessorsForTraining((int) (byte) 0);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
    }

    @Test
    public void test38940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38940");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet0.destroy();
        trainServlet0.destroy();
        java.lang.String str3 = trainServlet0.getServletInfo();
        java.lang.String str4 = trainServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig5 = trainServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig6 = trainServlet0.getServletConfig();
        java.lang.String str7 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet8 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet9 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet9.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        addCandidateServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        addCandidateServlet8.init((javax.servlet.ServletConfig) addCandidateServlet9);
        trainServlet0.init((javax.servlet.ServletConfig) addCandidateServlet8);
        addCandidateServlet8.destroy();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet18.init();
        java.lang.String str20 = batchAddCandidatesServlet18.getServletInfo();
        javax.servlet.ServletConfig servletConfig21 = batchAddCandidatesServlet18.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str23 = batchDeleteCandidatesServlet22.getServletInfo();
        java.lang.String str24 = batchDeleteCandidatesServlet22.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet25 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet27 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet26.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet27);
        setPreferenceServlet25.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet27);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet30 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet25.init((javax.servlet.ServletConfig) recommendServlet30);
        batchDeleteCandidatesServlet22.init((javax.servlet.ServletConfig) setPreferenceServlet25);
        batchAddCandidatesServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        java.lang.String str34 = batchDeleteCandidatesServlet22.getServletInfo();
        java.lang.String str35 = batchDeleteCandidatesServlet22.getServletInfo();
        batchDeleteCandidatesServlet22.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet37 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet38 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str39 = batchDeleteCandidatesServlet38.getServletInfo();
        java.lang.String str40 = batchDeleteCandidatesServlet38.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet41 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet42 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet43 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet42.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        setPreferenceServlet41.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet46 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet41.init((javax.servlet.ServletConfig) recommendServlet46);
        batchDeleteCandidatesServlet38.init((javax.servlet.ServletConfig) setPreferenceServlet41);
        batchDeleteCandidatesServlet38.destroy();
        batchDeleteCandidatesServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet51 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str52 = batchDeleteCandidatesServlet51.getServletInfo();
        batchDeleteCandidatesServlet51.destroy();
        javax.servlet.ServletConfig servletConfig54 = batchDeleteCandidatesServlet51.getServletConfig();
        batchDeleteCandidatesServlet37.init(servletConfig54);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet56 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str57 = recommendServlet56.getServletInfo();
        batchDeleteCandidatesServlet37.init((javax.servlet.ServletConfig) recommendServlet56);
        recommendServlet56.destroy();
        java.lang.String str60 = recommendServlet56.getServletInfo();
        recommendServlet56.destroy();
        java.lang.String str62 = recommendServlet56.getServletInfo();
        batchDeleteCandidatesServlet22.init((javax.servlet.ServletConfig) recommendServlet56);
        java.lang.String str64 = recommendServlet56.getServletInfo();
        addCandidateServlet8.init((javax.servlet.ServletConfig) recommendServlet56);
        javax.servlet.ServletRequest servletRequest66 = null;
        javax.servlet.ServletResponse servletResponse67 = null;
        // The following exception was thrown during execution in test generation
        try {
            recommendServlet56.service(servletRequest66, servletResponse67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertNull(servletConfig6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(servletConfig54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
    }

    @Test
    public void test38941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38941");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = null; // flaky: configuration1.getStorageConfiguration();
// flaky:         configuration1.setNumProcessorsForTraining((int) '#');
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = null; // flaky: configuration1.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList8 = null; // flaky: configuration1.getItembasedRecommenders();
// flaky:         configuration1.setNumProcessorsForTraining(10000);
        java.lang.String str11 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str13 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str16 = storageConfiguration12.getJdbcUrl();
        java.lang.String str17 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setJdbcUrl("hi!");
        java.lang.String str20 = storageConfiguration12.getPassword();
        storageConfiguration12.setJdbcUrl("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration12.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration12.setJdbcDriverClass("MutablePreference{userID=100, itemID=-1, value=100.0}");
        storageConfiguration12.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str29 = storageConfiguration12.getJdbcUrl();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration12);
        storageConfiguration12.setJdbcDriverClass("MutablePreference{userID=1, itemID=10, value=0.0}");
        java.lang.String str33 = storageConfiguration12.getJdbcDriverClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration7);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList8);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str11, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str29, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "MutablePreference{userID=1, itemID=10, value=0.0}" + "'", str33, "MutablePreference{userID=1, itemID=10, value=0.0}");
    }

    @Test
    public void test38942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38942");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setPassword("value");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setUsername("MutablePreference{userID=100, itemID=0, value=1.0}");
        storageConfiguration0.setUsername("MutablePreference{userID=0, itemID=0, value=10.0}");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: label");
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany");
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration0.setUsername("MutablePreference{userID=100, itemID=97, value=10.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test38943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38943");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage12 = null; // flaky: components0.storage();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(storage9);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener10);
        org.junit.Assert.assertNull(trainingScheduler11);
        org.junit.Assert.assertNull(storage12);
    }

    @Test
    public void test38944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38944");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("");
        factorizationbasedRecommenderConfig0.setName("");
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean11 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test38945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38945");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str16 = batchDeleteCandidatesServlet15.getServletInfo();
        java.lang.String str17 = batchDeleteCandidatesServlet15.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet18 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet20 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        setPreferenceServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet23 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet18.init((javax.servlet.ServletConfig) recommendServlet23);
        batchDeleteCandidatesServlet15.init((javax.servlet.ServletConfig) setPreferenceServlet18);
        batchDeleteCandidatesServlet15.destroy();
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet28 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str29 = batchDeleteCandidatesServlet28.getServletInfo();
        batchDeleteCandidatesServlet28.destroy();
        javax.servlet.ServletConfig servletConfig31 = batchDeleteCandidatesServlet28.getServletConfig();
        batchDeleteCandidatesServlet14.init(servletConfig31);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet33 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str34 = recommendServlet33.getServletInfo();
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) recommendServlet33);
        batchDeleteCandidatesServlet14.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet14);
        batchDeleteCandidatesServlet14.destroy();
        batchDeleteCandidatesServlet14.destroy();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(servletConfig31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test38946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38946");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getPassword();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration0.getJdbcUrl();
        java.lang.String str9 = storageConfiguration0.getUsername();
        java.lang.String str10 = storageConfiguration0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str9, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str10, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38947");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener8 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler12, "label", (int) '#');
        delegatingPreferenceChangeListener8.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener15);
        inMemoryPreferenceChangeListener15.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener15.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener15);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener21 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener21.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener24);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler30 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener33 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler30, "label", (int) ' ');
        inMemoryPreferenceChangeListener33.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener21.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener33);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener36 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener38 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener21.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
    }

    @Test
    public void test38948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38948");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        java.lang.String str5 = mutableCandidate0.getLabel();
        long long6 = mutableCandidate0.getItemID();
        java.lang.String str7 = mutableCandidate0.getLabel();
        java.lang.String str8 = mutableCandidate0.getLabel();
        long long9 = mutableCandidate0.getItemID();
        long long10 = mutableCandidate0.getItemID();
        java.lang.String str11 = mutableCandidate0.getLabel();
        java.lang.String str12 = mutableCandidate0.getLabel();
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=52, value=-1.0}", (long) (short) -1);
        java.lang.String str17 = mutableCandidate0.getLabel();
        mutableCandidate0.set("recommender", 10L);
        long long21 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "itemIDs" + "'", str5, "itemIDs");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "itemIDs" + "'", str7, "itemIDs");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemIDs" + "'", str8, "itemIDs");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "itemIDs" + "'", str11, "itemIDs");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "itemIDs" + "'", str12, "itemIDs");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "itemIDs" + "'", str13, "itemIDs");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=0, itemID=52, value=-1.0}" + "'", str17, "MutablePreference{userID=0, itemID=52, value=-1.0}");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10L + "'", long21 == 10L);
    }

    @Test
    public void test38949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38949");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        int int4 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration7.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration7);
        java.lang.String str18 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setSimilarityClass("");
        java.lang.String str24 = itembasedRecommenderConfig21.getName();
        java.lang.String str25 = itembasedRecommenderConfig21.getSimilarityClass();
        java.lang.String str26 = itembasedRecommenderConfig21.getSimilarityClass();
        int int27 = itembasedRecommenderConfig21.getSimilarItemsPerItem();
        itembasedRecommenderConfig21.setSimilarItemsPerItem((int) (byte) 10);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig21);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        factorizationbasedRecommenderConfig31.setUsesImplicitFeedback(true);
        double double37 = factorizationbasedRecommenderConfig31.getAlpha();
        java.lang.String str38 = factorizationbasedRecommenderConfig31.getRetrainCronExpression();
        int int39 = factorizationbasedRecommenderConfig31.getRetrainAfterPreferenceChanges();
        int int40 = factorizationbasedRecommenderConfig31.getNumberOfIterations();
        factorizationbasedRecommenderConfig31.setNumberOfFeatures((int) '#');
        double double43 = factorizationbasedRecommenderConfig31.getLambda();
        factorizationbasedRecommenderConfig31.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig31.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: label");
        factorizationbasedRecommenderConfig31.setLambda((double) 100);
        int int50 = factorizationbasedRecommenderConfig31.getNumberOfIterations();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig52 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double53 = factorizationbasedRecommenderConfig52.getAlpha();
        double double54 = factorizationbasedRecommenderConfig52.getLambda();
        int int55 = factorizationbasedRecommenderConfig52.getNumberOfFeatures();
        factorizationbasedRecommenderConfig52.setUsesImplicitFeedback(false);
        double double58 = factorizationbasedRecommenderConfig52.getAlpha();
        double double59 = factorizationbasedRecommenderConfig52.getLambda();
        double double60 = factorizationbasedRecommenderConfig52.getAlpha();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig52);
        java.lang.String str62 = factorizationbasedRecommenderConfig52.getName();
        factorizationbasedRecommenderConfig52.setNumberOfFeatures(10000);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test38950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38950");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str9 = itembasedRecommenderConfig8.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig8);
        itembasedRecommenderConfig8.setSimilarityClass("recommender");
        itembasedRecommenderConfig8.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: itemID");
// flaky:         configuration7.addItembasedRecommender(itembasedRecommenderConfig8);
        itembasedRecommenderConfig8.setName("MutablePreference{userID=52, itemID=-1, value=32.0}");
        itembasedRecommenderConfig8.setSimilarityClass("MutablePreference{userID=52, itemID=97, value=-1.0}");
        java.lang.String str20 = itembasedRecommenderConfig8.getSimilarityClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=52, itemID=97, value=-1.0}" + "'", str20, "MutablePreference{userID=52, itemID=97, value=-1.0}");
    }

    @Test
    public void test38951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38951");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) -1, (long) (byte) 10, (float) (short) 10);
        mutablePreference0.set((long) 10000, (long) (short) -1, 0.0f);
        mutablePreference0.setValue((float) (byte) 0);
        float float13 = mutablePreference0.getValue();
        mutablePreference0.setValue(10.0f);
        java.lang.String str16 = mutablePreference0.toString();
        float float17 = mutablePreference0.getValue();
        java.lang.String str18 = mutablePreference0.toString();
        mutablePreference0.setValue((float) (short) 0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 0.0f + "'", float13 == 0.0f);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str16, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str18, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
    }

    @Test
    public void test38952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38952");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(100);
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=-1, itemID=10, value=1.0}");
        boolean boolean11 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setAlpha((double) 97);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test38953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38953");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        float float4 = mutablePreference0.getValue();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.setValue((float) (byte) 10);
        long long8 = mutablePreference0.getUserID();
        float float9 = mutablePreference0.getValue();
        mutablePreference0.set((long) (short) 10, (long) 97, (float) (byte) -1);
        long long14 = mutablePreference0.getItemID();
        java.lang.String str15 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 10.0f + "'", float9 == 10.0f);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 97L + "'", long14 == 97L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=10, itemID=97, value=-1.0}" + "'", str15, "MutablePreference{userID=10, itemID=97, value=-1.0}");
    }

    @Test
    public void test38954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38954");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(10);
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int11 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean12 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=97, itemID=1, value=100.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test38955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38955");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        mutableCandidate0.set("MutablePreference{userID=35, itemID=0, value=-1.0}", 1L);
        long long15 = mutableCandidate0.getItemID();
        java.lang.String str16 = mutableCandidate0.getLabel();
        java.lang.String str17 = mutableCandidate0.getLabel();
        long long18 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=35, itemID=0, value=-1.0}" + "'", str16, "MutablePreference{userID=35, itemID=0, value=-1.0}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=35, itemID=0, value=-1.0}" + "'", str17, "MutablePreference{userID=35, itemID=0, value=-1.0}");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
    }

    @Test
    public void test38956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38956");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) (short) 0);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (short) 10);
        double double12 = fixedCandidatesIDRescorer1.rescore(10000L, (double) (byte) 0);
        double double15 = fixedCandidatesIDRescorer1.rescore(1L, 10000.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer16 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double19 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) (short) 100);
        double double22 = fixedCandidatesIDRescorer1.rescore(0L, (double) (byte) 100);
        double double25 = fixedCandidatesIDRescorer1.rescore((long) 32, (double) 10L);
        double double28 = fixedCandidatesIDRescorer1.rescore((long) 0, (double) 'a');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer29 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = fixedCandidatesIDRescorer1.isFiltered((long) 10000);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10000.0d + "'", double15 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 100.0d + "'", double22 == 100.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 10.0d + "'", double25 == 10.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 97.0d + "'", double28 == 97.0d);
    }

    @Test
    public void test38957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38957");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet8 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str9 = trainServlet8.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet10 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet10.destroy();
        javax.servlet.ServletConfig servletConfig12 = deleteCandidateServlet10.getServletConfig();
        deleteCandidateServlet10.destroy();
        trainServlet8.init((javax.servlet.ServletConfig) deleteCandidateServlet10);
        javax.servlet.ServletConfig servletConfig15 = deleteCandidateServlet10.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) deleteCandidateServlet10);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str19 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str20 = batchDeleteCandidatesServlet18.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet21 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        setPreferenceServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet21.init((javax.servlet.ServletConfig) recommendServlet26);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) setPreferenceServlet21);
        batchDeleteCandidatesServlet18.destroy();
        batchDeleteCandidatesServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet31 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet32 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet33 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet32.init((javax.servlet.ServletConfig) batchSetPreferencesServlet33);
        batchDeleteCandidatesServlet31.init((javax.servlet.ServletConfig) batchSetPreferencesServlet33);
        javax.servlet.ServletConfig servletConfig36 = batchSetPreferencesServlet33.getServletConfig();
        batchSetPreferencesServlet33.init();
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) batchSetPreferencesServlet33);
        batchSetPreferencesServlet33.init();
        batchSetPreferencesServlet33.init();
        deleteCandidateServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet33);
        javax.servlet.ServletConfig servletConfig42 = batchSetPreferencesServlet33.getServletConfig();
        batchSetPreferencesServlet33.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet44 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet44.init();
        setPreferenceServlet44.init();
        setPreferenceServlet44.destroy();
        javax.servlet.ServletConfig servletConfig48 = setPreferenceServlet44.getServletConfig();
        java.lang.String str49 = setPreferenceServlet44.getServletInfo();
        setPreferenceServlet44.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet51 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet52 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet51.init((javax.servlet.ServletConfig) batchSetPreferencesServlet52);
        javax.servlet.ServletConfig servletConfig54 = batchSetPreferencesServlet51.getServletConfig();
        javax.servlet.ServletConfig servletConfig55 = batchSetPreferencesServlet51.getServletConfig();
        setPreferenceServlet44.init((javax.servlet.ServletConfig) batchSetPreferencesServlet51);
        javax.servlet.ServletConfig servletConfig57 = batchSetPreferencesServlet51.getServletConfig();
        batchSetPreferencesServlet33.init((javax.servlet.ServletConfig) batchSetPreferencesServlet51);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = batchSetPreferencesServlet51.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertNull(servletConfig15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig36);
        org.junit.Assert.assertNull(servletConfig42);
        org.junit.Assert.assertNull(servletConfig48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(servletConfig54);
        org.junit.Assert.assertNotNull(servletConfig55);
        org.junit.Assert.assertNotNull(servletConfig57);
    }

    @Test
    public void test38958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38958");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setName("recommender");
        itembasedRecommenderConfig0.setSimilarityClass("howMany");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer5 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file7 = null;
        org.plista.kornakapi.core.storage.Storage storage8 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer6.train(file7, storage8, recommender9, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test38959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38959");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        int int11 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int12 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        double double13 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test38960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38960");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) (byte) 1);
        double double10 = fixedCandidatesIDRescorer1.rescore((long) (byte) 10, (double) 100);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double14 = fixedCandidatesIDRescorer1.rescore(10L, (double) (short) 1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double18 = fixedCandidatesIDRescorer1.rescore((long) '4', (-1.0d));
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = fixedCandidatesIDRescorer1.isFiltered((long) 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + (-1.0d) + "'", double18 == (-1.0d));
    }

    @Test
    public void test38961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38961");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setRetrainAfterPreferenceChanges((int) (short) 100);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        int int12 = itembasedRecommenderConfig5.getSimilarItemsPerItem();
        itembasedRecommenderConfig5.setSimilarItemsPerItem(10000);
        itembasedRecommenderConfig5.setSimilarityClass("MutablePreference{userID=1, itemID=-1, value=35.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test38962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38962");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig6 = batchSetPreferencesServlet1.getServletConfig();
        batchSetPreferencesServlet1.destroy();
        java.lang.String str8 = batchSetPreferencesServlet1.getServletInfo();
        javax.servlet.ServletConfig servletConfig9 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.MissingParameterException missingParameterException18 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException18.addSuppressed((java.lang.Throwable) missingParameterException20);
        invalidParameterException16.addSuppressed((java.lang.Throwable) missingParameterException20);
        java.lang.Throwable[] throwableArray23 = missingParameterException20.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException26);
        org.plista.kornakapi.web.MissingParameterException missingParameterException31 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException32 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException31);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException33 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException31);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException37 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException35.addSuppressed((java.lang.Throwable) missingParameterException37);
        invalidParameterException33.addSuppressed((java.lang.Throwable) missingParameterException37);
        java.lang.Throwable[] throwableArray40 = missingParameterException37.getSuppressed();
        invalidParameterException27.addSuppressed((java.lang.Throwable) missingParameterException37);
        missingParameterException20.addSuppressed((java.lang.Throwable) invalidParameterException27);
        org.plista.kornakapi.web.MissingParameterException missingParameterException46 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException47 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException46);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException47);
        org.plista.kornakapi.web.MissingParameterException missingParameterException50 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}");
        invalidParameterException48.addSuppressed((java.lang.Throwable) missingParameterException50);
        missingParameterException20.addSuppressed((java.lang.Throwable) invalidParameterException48);
        org.plista.kornakapi.web.MissingParameterException missingParameterException54 = new org.plista.kornakapi.web.MissingParameterException("userID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException57 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException59 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException57.addSuppressed((java.lang.Throwable) missingParameterException59);
        java.lang.Throwable[] throwableArray61 = missingParameterException59.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException62 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException59);
        missingParameterException54.addSuppressed((java.lang.Throwable) invalidParameterException62);
        missingParameterException20.addSuppressed((java.lang.Throwable) missingParameterException54);
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet1.log("MutablePreference{userID=10000, itemID=10, value=0.0}", (java.lang.Throwable) missingParameterException20);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertNotNull(servletConfig6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(servletConfig9);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test38963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38963");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration0.getUsername();
        storageConfiguration0.setUsername("itemIDs");
        java.lang.String str11 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.MissingParameterException: file");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=52, itemID=-1, value=32.0}");
        java.lang.String str16 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=0, itemID=-1, value=32.0}");
        java.lang.String str19 = storageConfiguration0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test38964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38964");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException15 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException15);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException15);
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException19.addSuppressed((java.lang.Throwable) missingParameterException21);
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException17);
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException28);
        invalidParameterException24.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException36 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException36);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException36);
        java.lang.Throwable[] throwableArray39 = missingParameterException36.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException36);
        missingParameterException28.addSuppressed((java.lang.Throwable) missingParameterException36);
        invalidParameterException10.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException48 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException48);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException48);
        java.lang.Throwable[] throwableArray51 = missingParameterException48.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException52 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException48);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException53 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException52);
        missingParameterException28.addSuppressed((java.lang.Throwable) invalidParameterException53);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException55 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=32.0}", (java.lang.Throwable) invalidParameterException53);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException56 = new org.plista.kornakapi.web.InvalidParameterException("itemID", (java.lang.Throwable) invalidParameterException53);
        org.plista.kornakapi.web.MissingParameterException missingParameterException61 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException62 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) missingParameterException61);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException63 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender", (java.lang.Throwable) invalidParameterException62);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException64 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) invalidParameterException63);
        invalidParameterException56.addSuppressed((java.lang.Throwable) invalidParameterException63);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException66 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=10, value=10.0}", (java.lang.Throwable) invalidParameterException56);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test38965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38965");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getUsername();
        java.lang.String str9 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration0.setJdbcUrl("userID");
        java.lang.String str15 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration0.setJdbcUrl("");
        java.lang.String str20 = storageConfiguration0.getUsername();
        java.lang.String str21 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str22 = storageConfiguration0.getPassword();
        storageConfiguration0.setPassword("MutablePreference{userID=52, itemID=10000, value=32.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str15, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str20, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test38966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38966");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.MissingParameterException missingParameterException9 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException11 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException9.addSuppressed((java.lang.Throwable) missingParameterException11);
        invalidParameterException7.addSuppressed((java.lang.Throwable) missingParameterException11);
        org.plista.kornakapi.web.MissingParameterException missingParameterException17 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException17);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException17);
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException23 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException21.addSuppressed((java.lang.Throwable) missingParameterException23);
        invalidParameterException19.addSuppressed((java.lang.Throwable) missingParameterException23);
        missingParameterException11.addSuppressed((java.lang.Throwable) missingParameterException23);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) missingParameterException11);
        org.plista.kornakapi.web.MissingParameterException missingParameterException31 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException32 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException31);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException33 = new org.plista.kornakapi.web.InvalidParameterException("itemID", (java.lang.Throwable) missingParameterException31);
        java.lang.Throwable[] throwableArray34 = invalidParameterException33.getSuppressed();
        invalidParameterException27.addSuppressed((java.lang.Throwable) invalidParameterException33);
        org.plista.kornakapi.web.MissingParameterException missingParameterException39 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException39);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException41 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException40);
        org.plista.kornakapi.web.MissingParameterException missingParameterException45 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException45);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException47 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException45);
        java.lang.Throwable[] throwableArray48 = missingParameterException45.getSuppressed();
        java.lang.Throwable[] throwableArray49 = missingParameterException45.getSuppressed();
        java.lang.Throwable[] throwableArray50 = missingParameterException45.getSuppressed();
        invalidParameterException40.addSuppressed((java.lang.Throwable) missingParameterException45);
        invalidParameterException33.addSuppressed((java.lang.Throwable) invalidParameterException40);
        org.plista.kornakapi.web.MissingParameterException missingParameterException54 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        java.lang.Throwable[] throwableArray55 = missingParameterException54.getSuppressed();
        java.lang.Throwable[] throwableArray56 = missingParameterException54.getSuppressed();
        invalidParameterException40.addSuppressed((java.lang.Throwable) missingParameterException54);
        java.lang.Throwable[] throwableArray58 = missingParameterException54.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException59 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file", (java.lang.Throwable) missingParameterException54);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test38967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38967");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        int int6 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) -1);
        boolean boolean10 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=-1.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test38968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38968");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        int int4 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration2.getItembasedRecommenders();
// flaky:         configuration2.setModelDirectory("hi!");
        int int9 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig10 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double11 = factorizationbasedRecommenderConfig10.getAlpha();
        double double12 = factorizationbasedRecommenderConfig10.getLambda();
        int int13 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        java.lang.String str14 = factorizationbasedRecommenderConfig10.getRetrainCronExpression();
        int int15 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        factorizationbasedRecommenderConfig10.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig10.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double20 = factorizationbasedRecommenderConfig10.getLambda();
        factorizationbasedRecommenderConfig10.setAlpha((double) (byte) 0);
        double double23 = factorizationbasedRecommenderConfig10.getLambda();
        factorizationbasedRecommenderConfig10.setAlpha((double) 1.0f);
        factorizationbasedRecommenderConfig10.setNumberOfFeatures((-1));
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig10);
        org.plista.kornakapi.web.Components components29 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration30 = components29.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration31 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str32 = storageConfiguration31.getJdbcDriverClass();
        storageConfiguration31.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str35 = storageConfiguration31.getJdbcUrl();
        java.lang.String str36 = storageConfiguration31.getJdbcDriverClass();
        java.lang.String str37 = storageConfiguration31.getJdbcDriverClass();
        java.lang.String str38 = storageConfiguration31.getPassword();
// flaky:         configuration30.setStorageConfiguration(storageConfiguration31);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig40 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str41 = itembasedRecommenderConfig40.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig40);
        itembasedRecommenderConfig40.setSimilarityClass("recommender");
        java.lang.String str45 = itembasedRecommenderConfig40.getSimilarityClass();
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig40);
        int int47 = itembasedRecommenderConfig40.getSimilarItemsPerItem();
        java.lang.String str48 = itembasedRecommenderConfig40.getSimilarityClass();
        int int49 = itembasedRecommenderConfig40.getRetrainAfterPreferenceChanges();
        int int50 = itembasedRecommenderConfig40.getSimilarItemsPerItem();
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig40);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10000 + "'", int4 == 10000);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000 + "'", int9 == 10000);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNotNull(components29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "recommender" + "'", str45, "recommender");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "recommender" + "'", str48, "recommender");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test38969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38969");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (byte) 1, (long) (byte) 100, (float) (byte) 0);
        long long7 = mutablePreference0.getItemID();
        mutablePreference0.setValue(97.0f);
        mutablePreference0.set((long) (byte) 1, 0L, (float) (short) 0);
        long long14 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
    }

    @Test
    public void test38970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38970");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("hi!");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=10000, itemID=-1, value=-1.0}");
        missingParameterException4.addSuppressed((java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=0, value=97.0}", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=10000, itemID=-1, value=-1.0}", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10, itemID=32, value=32.0}", (java.lang.Throwable) invalidParameterException8);
    }

    @Test
    public void test38971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38971");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener9);
        org.junit.Assert.assertNull(trainingScheduler10);
    }

    @Test
    public void test38972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38972");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList12 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList13 = null; // flaky: configuration1.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList14 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration15.getJdbcUrl();
        java.lang.String str20 = storageConfiguration15.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration15.getJdbcDriverClass();
        java.lang.String str22 = storageConfiguration15.getJdbcDriverClass();
        java.lang.String str23 = storageConfiguration15.getJdbcUrl();
        java.lang.String str24 = storageConfiguration15.getUsername();
        java.lang.String str25 = storageConfiguration15.getPassword();
        storageConfiguration15.setJdbcUrl("file");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration15);
        storageConfiguration15.setPassword("MutablePreference{userID=100, itemID=0, value=0.0}");
        java.lang.String str31 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setJdbcUrl("MutablePreference{userID=1, itemID=35, value=-1.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList12);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList13);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str24, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test38973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38973");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setRetrainAfterPreferenceChanges((int) (short) 100);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = null;
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig12);
// flaky:         configuration4.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList16 = null; // flaky: configuration4.getItembasedRecommenders();
// flaky:         configuration4.setModelDirectory("MutablePreference{userID=0, itemID=0, value=1.0}");
        java.lang.String str19 = null; // flaky: configuration4.getModelDirectory();
// flaky:         configuration4.setNumProcessorsForTraining(52);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList16);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str19, "MutablePreference{userID=0, itemID=0, value=1.0}");
    }

    @Test
    public void test38974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38974");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = configuration0.getStorageConfiguration();
        java.lang.String str7 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str9 = itembasedRecommenderConfig8.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig8);
        itembasedRecommenderConfig8.setSimilarityClass("recommender");
        java.lang.String str13 = itembasedRecommenderConfig8.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig8);
        configuration0.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig17 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str18 = itembasedRecommenderConfig17.getSimilarityClass();
        int int19 = itembasedRecommenderConfig17.getSimilarItemsPerItem();
        int int20 = itembasedRecommenderConfig17.getRetrainAfterPreferenceChanges();
        int int21 = itembasedRecommenderConfig17.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer22 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig17);
        int int23 = itembasedRecommenderConfig17.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig17);
        itembasedRecommenderConfig17.setRetrainAfterPreferenceChanges((int) 'a');
        itembasedRecommenderConfig17.setRetrainAfterPreferenceChanges((int) ' ');
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer29 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig17);
        itembasedRecommenderConfig17.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: ");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer32 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig17);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(storageConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "recommender" + "'", str13, "recommender");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test38975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38975");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str4 = storageConfiguration3.getJdbcDriverClass();
        java.lang.String str5 = storageConfiguration3.getUsername();
        storageConfiguration3.setPassword("label");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration3);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig9 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig9.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig9);
        itembasedRecommenderConfig9.setRetrainCronExpression("");
        itembasedRecommenderConfig9.setSimilarItemsPerItem(10);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig9);
        java.lang.String str18 = itembasedRecommenderConfig9.getSimilarityClass();
        itembasedRecommenderConfig9.setSimilarItemsPerItem((int) (short) 1);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig9);
        java.lang.String str22 = null; // flaky: configuration1.getModelDirectory();
// flaky:         configuration1.setNumProcessorsForTraining(97);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList25 = null; // flaky: configuration1.getItembasedRecommenders();
        int int26 = 0; // flaky: configuration1.getNumProcessorsForTraining();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str22, "MutablePreference{userID=0, itemID=0, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList25);
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 97 + "'", int26 == 97);
    }

    @Test
    public void test38976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38976");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        boolean boolean7 = factorizationbasedRecommenderConfig4.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig4.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration2.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration2.getItembasedRecommenders();
        java.lang.String str13 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        double double16 = factorizationbasedRecommenderConfig14.getLambda();
        int int17 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        factorizationbasedRecommenderConfig14.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig14.setLambda((double) '4');
        factorizationbasedRecommenderConfig14.setRetrainCronExpression("");
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig25 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double26 = factorizationbasedRecommenderConfig25.getAlpha();
        double double27 = factorizationbasedRecommenderConfig25.getLambda();
        boolean boolean28 = factorizationbasedRecommenderConfig25.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig25.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig25.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig25.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: file");
        double double35 = factorizationbasedRecommenderConfig25.getAlpha();
        factorizationbasedRecommenderConfig25.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig25.setLambda((double) 10000.0f);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig25);
        factorizationbasedRecommenderConfig25.setUsesImplicitFeedback(true);
        boolean boolean43 = factorizationbasedRecommenderConfig25.isUsesImplicitFeedback();
        double double44 = factorizationbasedRecommenderConfig25.getLambda();
        double double45 = factorizationbasedRecommenderConfig25.getAlpha();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str13, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 10000.0d + "'", double44 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test38977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38977");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        float float8 = mutablePreference0.getValue();
        float float9 = mutablePreference0.getValue();
        long long10 = mutablePreference0.getItemID();
        float float11 = mutablePreference0.getValue();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9 == 0.0f);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 0.0f + "'", float11 == 0.0f);
    }

    @Test
    public void test38978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38978");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) (short) 0);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (short) 10);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double13 = fixedCandidatesIDRescorer1.rescore(10L, (double) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = fixedCandidatesIDRescorer1.isFiltered((long) 52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test38979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38979");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = null; // flaky: configuration5.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
    }

    @Test
    public void test38980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38980");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("batchSize");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("batchSize");
        java.lang.String str11 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setPassword("MutablePreference{userID=0, itemID=0, value=52.0}");
        java.lang.String str14 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=1.0}");
        storageConfiguration0.setUsername("MutablePreference{userID=1, itemID=97, value=35.0}");
        storageConfiguration0.setPassword("MutablePreference{userID=100, itemID=-1, value=100.0}");
        storageConfiguration0.setPassword("");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=1, itemID=32, value=10.0}");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=35, itemID=0, value=1.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "batchSize" + "'", str11, "batchSize");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "batchSize" + "'", str14, "batchSize");
    }

    @Test
    public void test38981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38981");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null; // flaky: configuration4.getStorageConfiguration();
        int int6 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        int int10 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(true);
        double double13 = factorizationbasedRecommenderConfig7.getAlpha();
        java.lang.String str14 = factorizationbasedRecommenderConfig7.getRetrainCronExpression();
        int int15 = factorizationbasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        boolean boolean16 = factorizationbasedRecommenderConfig7.isUsesImplicitFeedback();
        int int17 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        double double18 = factorizationbasedRecommenderConfig7.getLambda();
        factorizationbasedRecommenderConfig7.setAlpha(52.0d);
        java.lang.String str21 = factorizationbasedRecommenderConfig7.getName();
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
// flaky:         configuration4.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList25 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
// flaky:         configuration4.setModelDirectory("");
        java.lang.String str28 = null; // flaky: configuration4.getModelDirectory();
// flaky:         configuration4.setNumProcessorsForTraining((int) (byte) 10);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        factorizationbasedRecommenderConfig31.setLambda((double) 1);
        int int37 = factorizationbasedRecommenderConfig31.getRetrainAfterPreferenceChanges();
        java.lang.String str38 = factorizationbasedRecommenderConfig31.getRetrainCronExpression();
        factorizationbasedRecommenderConfig31.setUsesImplicitFeedback(false);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer41 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig31);
        int int42 = factorizationbasedRecommenderConfig31.getNumberOfIterations();
        factorizationbasedRecommenderConfig31.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str45 = factorizationbasedRecommenderConfig31.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer46 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig31);
        int int47 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        int int48 = factorizationbasedRecommenderConfig31.getRetrainAfterPreferenceChanges();
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration5);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 97 + "'", int6 == 97);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNull(str21);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList25);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test38982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38982");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = null; // flaky: configuration7.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(trainingScheduler5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
    }

    @Test
    public void test38983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38983");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig0.setLambda((double) 10000L);
        double double17 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 0);
        double double20 = factorizationbasedRecommenderConfig0.getAlpha();
        int int21 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test38984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38984");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
// flaky:         configuration2.setModelDirectory("itemID");
        int int5 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components6 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components6.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components6.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components6.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components6.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration10.getItembasedRecommenders();
// flaky:         configuration10.setNumProcessorsForTraining((int) (short) 1);
        org.plista.kornakapi.core.config.Configuration configuration14 = new org.plista.kornakapi.core.config.Configuration();
        configuration14.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig17 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double18 = factorizationbasedRecommenderConfig17.getAlpha();
        double double19 = factorizationbasedRecommenderConfig17.getLambda();
        configuration14.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig17);
        java.lang.String str21 = configuration14.getModelDirectory();
        int int22 = configuration14.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList23 = configuration14.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration24 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str25 = storageConfiguration24.getJdbcDriverClass();
        storageConfiguration24.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str28 = storageConfiguration24.getJdbcUrl();
        java.lang.String str29 = storageConfiguration24.getJdbcUrl();
        storageConfiguration24.setJdbcUrl("label");
        configuration14.setStorageConfiguration(storageConfiguration24);
        java.lang.String str33 = storageConfiguration24.getPassword();
        storageConfiguration24.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
// flaky:         configuration10.setStorageConfiguration(storageConfiguration24);
        storageConfiguration24.setJdbcDriverClass("MutablePreference{userID=52, itemID=52, value=-1.0}");
// flaky:         configuration2.setStorageConfiguration(storageConfiguration24);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList40 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
// flaky:         org.junit.Assert.assertNotNull(components6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str33);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList40);
    }

    @Test
    public void test38985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38985");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (-1.0f));
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double13 = fixedCandidatesIDRescorer1.rescore((long) 10, (double) (byte) 1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer14 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double17 = fixedCandidatesIDRescorer1.rescore(97L, 0.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair19 = null;
        double double21 = filteringLongPairRescorer18.rescore(longPair19, (double) 32.0f);
        org.apache.mahout.common.LongPair longPair22 = null;
        double double24 = filteringLongPairRescorer18.rescore(longPair22, (double) 35L);
        org.apache.mahout.common.LongPair longPair25 = null;
        double double27 = filteringLongPairRescorer18.rescore(longPair25, 10.0d);
        org.apache.mahout.common.LongPair longPair28 = null;
        double double30 = filteringLongPairRescorer18.rescore(longPair28, 10.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 32.0d + "'", double21 == 32.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 35.0d + "'", double24 == 35.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 10.0d + "'", double27 == 10.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 10.0d + "'", double30 == 10.0d);
    }

    @Test
    public void test38986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38986");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        long long4 = mutableCandidate0.getItemID();
        java.lang.String str5 = mutableCandidate0.getLabel();
        java.lang.String str6 = mutableCandidate0.getLabel();
        java.lang.String str7 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=1.0}", 100L);
        java.lang.String str11 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=10000, itemID=52, value=0.0}", (long) (short) 10);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=32.0}", (long) ' ');
        mutableCandidate0.set("value", (long) 35);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str11, "MutablePreference{userID=0, itemID=0, value=1.0}");
    }

    @Test
    public void test38987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38987");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = null; // flaky: configuration7.getStorageConfiguration();
        org.plista.kornakapi.web.Components components9 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration10 = components9.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str12 = storageConfiguration11.getJdbcDriverClass();
        storageConfiguration11.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str15 = storageConfiguration11.getJdbcUrl();
        java.lang.String str16 = storageConfiguration11.getJdbcDriverClass();
        java.lang.String str17 = storageConfiguration11.getJdbcDriverClass();
        java.lang.String str18 = storageConfiguration11.getPassword();
// flaky:         configuration10.setStorageConfiguration(storageConfiguration11);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig20 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double21 = factorizationbasedRecommenderConfig20.getAlpha();
        double double22 = factorizationbasedRecommenderConfig20.getLambda();
        int int23 = factorizationbasedRecommenderConfig20.getNumberOfFeatures();
        java.lang.String str24 = factorizationbasedRecommenderConfig20.getRetrainCronExpression();
        int int25 = factorizationbasedRecommenderConfig20.getNumberOfFeatures();
        factorizationbasedRecommenderConfig20.setName("MutablePreference{userID=0, itemID=0, value=0.0}");
// flaky:         configuration10.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig20);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList29 = null; // flaky: configuration10.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components30 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration31 = components30.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration32 = components30.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler33 = components30.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler34 = components30.scheduler();
        org.plista.kornakapi.core.storage.Storage storage35 = components30.storage();
        org.plista.kornakapi.core.config.Configuration configuration36 = components30.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage37 = components30.storage();
        org.plista.kornakapi.core.config.Configuration configuration38 = components30.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration39 = components30.getConfiguration();
// flaky:         configuration39.setNumProcessorsForTraining(0);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration42 = null; // flaky: configuration39.getStorageConfiguration();
// flaky:         storageConfiguration42.setJdbcUrl("batchSize");
// flaky:         configuration10.setStorageConfiguration(storageConfiguration42);
// flaky:         storageConfiguration42.setJdbcUrl("userID");
// flaky:         configuration7.setStorageConfiguration(storageConfiguration42);
        org.plista.kornakapi.web.Components components49 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration50 = components49.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList51 = null; // flaky: configuration50.getItembasedRecommenders();
        java.lang.String str52 = null; // flaky: configuration50.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration53 = null; // flaky: configuration50.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig54 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str55 = itembasedRecommenderConfig54.getRetrainCronExpression();
        int int56 = itembasedRecommenderConfig54.getRetrainAfterPreferenceChanges();
        java.lang.String str57 = itembasedRecommenderConfig54.getSimilarityClass();
        itembasedRecommenderConfig54.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig54.setSimilarItemsPerItem((int) '#');
        int int62 = itembasedRecommenderConfig54.getSimilarItemsPerItem();
        itembasedRecommenderConfig54.setSimilarItemsPerItem((int) '4');
// flaky:         configuration50.addItembasedRecommender(itembasedRecommenderConfig54);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig66 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str67 = itembasedRecommenderConfig66.getSimilarityClass();
        int int68 = itembasedRecommenderConfig66.getSimilarItemsPerItem();
        int int69 = itembasedRecommenderConfig66.getRetrainAfterPreferenceChanges();
        int int70 = itembasedRecommenderConfig66.getSimilarItemsPerItem();
        int int71 = itembasedRecommenderConfig66.getRetrainAfterPreferenceChanges();
// flaky:         configuration50.addItembasedRecommender(itembasedRecommenderConfig66);
// flaky:         configuration7.addItembasedRecommender(itembasedRecommenderConfig66);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration8);
        org.junit.Assert.assertNotNull(components9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList29);
        org.junit.Assert.assertNotNull(components30);
        org.junit.Assert.assertNotNull(configuration31);
        org.junit.Assert.assertNotNull(configuration32);
        org.junit.Assert.assertNull(trainingScheduler33);
        org.junit.Assert.assertNull(trainingScheduler34);
        org.junit.Assert.assertNull(storage35);
        org.junit.Assert.assertNotNull(configuration36);
        org.junit.Assert.assertNull(storage37);
        org.junit.Assert.assertNotNull(configuration38);
        org.junit.Assert.assertNotNull(configuration39);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration42);
        org.junit.Assert.assertNotNull(components49);
        org.junit.Assert.assertNotNull(configuration50);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList51);
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "itemID" + "'", str52, "itemID");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 35 + "'", int62 == 35);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test38988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38988");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        java.lang.String str5 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=10000, itemID=-1, value=-1.0}", (long) 10000);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=1, itemID=-1, value=35.0}", 52L);
        java.lang.String str12 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "label" + "'", str5, "label");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=1, itemID=-1, value=35.0}" + "'", str12, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=1, itemID=-1, value=35.0}");
    }

    @Test
    public void test38989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38989");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList3 = null; // flaky: configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        java.lang.String str8 = factorizationbasedRecommenderConfig4.getRetrainCronExpression();
        int int9 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        java.lang.String str10 = factorizationbasedRecommenderConfig4.getName();
        factorizationbasedRecommenderConfig4.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        double double13 = factorizationbasedRecommenderConfig4.getAlpha();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(97);
        factorizationbasedRecommenderConfig4.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=-1.0}");
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = null; // flaky: configuration2.getStorageConfiguration();
        java.lang.String str20 = null; // flaky: storageConfiguration19.getJdbcDriverClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test38990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38990");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        int int3 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig4 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str5 = itembasedRecommenderConfig4.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig4);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        itembasedRecommenderConfig7.setSimilarityClass("");
        java.lang.String str11 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setName("label");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig7);
        org.plista.kornakapi.core.config.Configuration configuration15 = new org.plista.kornakapi.core.config.Configuration();
        int int16 = configuration15.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList17 = configuration15.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig18 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig18.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer21 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig18);
        itembasedRecommenderConfig18.setRetrainCronExpression("");
        itembasedRecommenderConfig18.setSimilarItemsPerItem(10);
        java.lang.String str26 = itembasedRecommenderConfig18.getName();
        java.lang.String str27 = itembasedRecommenderConfig18.getName();
        int int28 = itembasedRecommenderConfig18.getSimilarItemsPerItem();
        configuration15.addItembasedRecommender(itembasedRecommenderConfig18);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList30 = configuration15.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig31 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig31.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer34 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig31);
        itembasedRecommenderConfig31.setRetrainCronExpression("");
        itembasedRecommenderConfig31.setName("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        itembasedRecommenderConfig31.setSimilarItemsPerItem((int) (byte) 100);
        java.lang.String str41 = itembasedRecommenderConfig31.getRetrainCronExpression();
        int int42 = itembasedRecommenderConfig31.getSimilarItemsPerItem();
        configuration15.addItembasedRecommender(itembasedRecommenderConfig31);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig31);
        configuration0.setNumProcessorsForTraining(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList17);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList30);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
    }

    @Test
    public void test38991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38991");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet14.init();
        java.lang.String str16 = batchAddCandidatesServlet14.getServletInfo();
        javax.servlet.ServletConfig servletConfig17 = batchAddCandidatesServlet14.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str19 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str20 = batchDeleteCandidatesServlet18.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet21 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        setPreferenceServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet21.init((javax.servlet.ServletConfig) recommendServlet26);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) setPreferenceServlet21);
        batchAddCandidatesServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        java.lang.String str30 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str31 = batchDeleteCandidatesServlet18.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str34 = batchDeleteCandidatesServlet33.getServletInfo();
        java.lang.String str35 = batchDeleteCandidatesServlet33.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet36 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet37 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet38 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        setPreferenceServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet41 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet36.init((javax.servlet.ServletConfig) recommendServlet41);
        batchDeleteCandidatesServlet33.init((javax.servlet.ServletConfig) setPreferenceServlet36);
        batchDeleteCandidatesServlet33.destroy();
        batchDeleteCandidatesServlet33.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet46 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str47 = trainServlet46.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet48 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet48.destroy();
        javax.servlet.ServletConfig servletConfig50 = deleteCandidateServlet48.getServletConfig();
        deleteCandidateServlet48.destroy();
        trainServlet46.init((javax.servlet.ServletConfig) deleteCandidateServlet48);
        java.lang.String str53 = trainServlet46.getServletInfo();
        batchDeleteCandidatesServlet33.init((javax.servlet.ServletConfig) trainServlet46);
        java.lang.String str55 = trainServlet46.getServletInfo();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet56 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str57 = recommendServlet56.getServletInfo();
        javax.servlet.ServletConfig servletConfig58 = recommendServlet56.getServletConfig();
        trainServlet46.init((javax.servlet.ServletConfig) recommendServlet56);
        recommendServlet56.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) recommendServlet56);
        javax.servlet.ServletConfig servletConfig62 = recommendServlet56.getServletConfig();
        java.lang.String str63 = recommendServlet56.getServletInfo();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(servletConfig50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertNull(servletConfig58);
        org.junit.Assert.assertNull(servletConfig62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
    }

    @Test
    public void test38992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38992");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        int int16 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        java.lang.String str17 = factorizationbasedRecommenderConfig6.getName();
        factorizationbasedRecommenderConfig6.setLambda(1.0d);
        factorizationbasedRecommenderConfig6.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test38993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38993");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        java.lang.String str4 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null;
// flaky:         configuration1.setStorageConfiguration(storageConfiguration5);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        int int10 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        java.lang.String str11 = factorizationbasedRecommenderConfig7.getRetrainCronExpression();
        int int12 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setNumberOfIterations((int) (short) 0);
        boolean boolean15 = factorizationbasedRecommenderConfig7.isUsesImplicitFeedback();
        java.lang.String str16 = factorizationbasedRecommenderConfig7.getRetrainCronExpression();
        int int17 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        int int18 = factorizationbasedRecommenderConfig7.getNumberOfIterations();
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        factorizationbasedRecommenderConfig7.setLambda((double) 0.0f);
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(false);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "itemID" + "'", str4, "itemID");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test38994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38994");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException1.addSuppressed((java.lang.Throwable) missingParameterException3);
        java.lang.Throwable[] throwableArray5 = missingParameterException3.getSuppressed();
        java.lang.Throwable[] throwableArray6 = missingParameterException3.getSuppressed();
        java.lang.Throwable throwable8 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("hi!", throwable8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.MissingParameterException missingParameterException18 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException18.addSuppressed((java.lang.Throwable) missingParameterException20);
        invalidParameterException16.addSuppressed((java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException16);
        invalidParameterException9.addSuppressed((java.lang.Throwable) invalidParameterException23);
        missingParameterException3.addSuppressed((java.lang.Throwable) invalidParameterException9);
        org.plista.kornakapi.web.MissingParameterException missingParameterException29 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException31 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException29.addSuppressed((java.lang.Throwable) missingParameterException31);
        java.lang.Throwable[] throwableArray33 = missingParameterException31.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException34 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException31);
        java.lang.Throwable[] throwableArray35 = invalidParameterException34.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("itemID", (java.lang.Throwable) invalidParameterException34);
        missingParameterException3.addSuppressed((java.lang.Throwable) invalidParameterException34);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test38995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38995");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getJdbcDriverClass();
        storageConfiguration9.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str13 = storageConfiguration9.getJdbcUrl();
        java.lang.String str14 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str15 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration9.getPassword();
        java.lang.String str17 = storageConfiguration9.getUsername();
        java.lang.String str18 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration9.getPassword();
        java.lang.String str20 = storageConfiguration9.getPassword();
        java.lang.String str21 = storageConfiguration9.getPassword();
        storageConfiguration9.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: hi!");
// flaky:         configuration8.setStorageConfiguration(storageConfiguration9);
        storageConfiguration9.setJdbcDriverClass("MutablePreference{userID=10, itemID=100, value=10.0}");
        java.lang.String str27 = storageConfiguration9.getJdbcUrl();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str17, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: hi!" + "'", str27, "org.plista.kornakapi.web.InvalidParameterException: hi!");
    }

    @Test
    public void test38996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38996");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("value");
        java.lang.String str17 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 0);
        factorizationbasedRecommenderConfig0.setAlpha((-1.0d));
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        java.lang.String str26 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "value" + "'", str17, "value");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "value" + "'", str26, "value");
    }

    @Test
    public void test38997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38997");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer4 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 35);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) (short) 1);
        double double14 = fixedCandidatesIDRescorer1.rescore(10L, (double) (short) 100);
        double double17 = fixedCandidatesIDRescorer1.rescore(32L, (double) 10);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 35.0d + "'", double8 == 35.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
    }

    @Test
    public void test38998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38998");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", 0L);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=1.0}", (long) 0);
        long long11 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=97, value=-1.0}", (long) (short) 100);
        java.lang.String str15 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=0, itemID=97, value=-1.0}" + "'", str15, "MutablePreference{userID=0, itemID=97, value=-1.0}");
    }

    @Test
    public void test38999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test38999");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: ", (long) (short) 1);
        long long15 = mutableCandidate0.getItemID();
        long long16 = mutableCandidate0.getItemID();
        long long17 = mutableCandidate0.getItemID();
        long long18 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
    }

    @Test
    public void test39000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest77.test39000");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap7 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap8 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null;
        org.plista.kornakapi.web.Components components10 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration11 = components10.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = components10.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage13 = components10.storage();
        org.plista.kornakapi.core.storage.Storage storage14 = components10.storage();
        org.plista.kornakapi.core.config.Configuration configuration15 = components10.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration16 = components10.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage17 = components10.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = components10.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration19 = components10.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler20 = components10.scheduler();
        org.plista.kornakapi.core.storage.Storage storage21 = components10.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener22 = components10.preferenceChangeListener();
// flaky:         preferenceChangeListener22.notifyOfPreferenceChange();
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration5, storage6, strMap7, strMap8, trainingScheduler9, preferenceChangeListener22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(components10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(storage13);
        org.junit.Assert.assertNull(storage14);
// flaky:         org.junit.Assert.assertNotNull(configuration15);
// flaky:         org.junit.Assert.assertNotNull(configuration16);
        org.junit.Assert.assertNull(storage17);
        org.junit.Assert.assertNull(trainingScheduler18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertNull(trainingScheduler20);
        org.junit.Assert.assertNull(storage21);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener22);
    }
}
