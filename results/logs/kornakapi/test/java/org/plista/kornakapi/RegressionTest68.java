package org.plista.kornakapi;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest68 {

    public static boolean debug = false;

    @Test
    public void test34001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34001");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double11 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha(52.0d);
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 1);
        boolean boolean17 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer19 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.lang.String str20 = factorizationbasedRecommenderConfig0.getName();
        int int21 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int22 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
    }

    @Test
    public void test34002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34002");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet3 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) batchSetPreferencesServlet3);
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet6 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet6.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet8 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet9 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        batchDeleteCandidatesServlet8.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        javax.servlet.ServletConfig servletConfig13 = batchSetPreferencesServlet10.getServletConfig();
        addCandidateServlet6.init(servletConfig13);
        addCandidateServlet0.init((javax.servlet.ServletConfig) addCandidateServlet6);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet17 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet18 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet17.init((javax.servlet.ServletConfig) batchSetPreferencesServlet18);
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) batchSetPreferencesServlet18);
        batchDeleteCandidatesServlet16.destroy();
        javax.servlet.ServletConfig servletConfig22 = batchDeleteCandidatesServlet16.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet23 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet24 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig27 = batchSetPreferencesServlet24.getServletConfig();
        addCandidateServlet23.init((javax.servlet.ServletConfig) batchSetPreferencesServlet24);
        batchSetPreferencesServlet24.destroy();
        java.lang.String str30 = batchSetPreferencesServlet24.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet31 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str32 = trainServlet31.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet33 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet33.destroy();
        javax.servlet.ServletConfig servletConfig35 = deleteCandidateServlet33.getServletConfig();
        deleteCandidateServlet33.destroy();
        trainServlet31.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        javax.servlet.ServletConfig servletConfig38 = deleteCandidateServlet33.getServletConfig();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        deleteCandidateServlet33.init();
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        deleteCandidateServlet33.destroy();
        addCandidateServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str45 = addCandidateServlet0.getInitParameter("org.plista.kornakapi.web.InvalidParameterException: recommender");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig22);
        org.junit.Assert.assertNotNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(servletConfig35);
        org.junit.Assert.assertNull(servletConfig38);
    }

    @Test
    public void test34003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34003");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage12 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage13 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler15 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNull(trainingScheduler6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener11);
        org.junit.Assert.assertNull(storage12);
        org.junit.Assert.assertNull(storage13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNull(trainingScheduler15);
    }

    @Test
    public void test34004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34004");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration8.getStorageConfiguration();
        java.lang.String str10 = null; // flaky: configuration8.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = null; // flaky: configuration8.getStorageConfiguration();
        java.lang.String str12 = null; // flaky: storageConfiguration11.getJdbcDriverClass();
        java.lang.String str13 = null; // flaky: storageConfiguration11.getUsername();
// flaky:         storageConfiguration11.setPassword("MutablePreference{userID=100, itemID=35, value=97.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=32.0}" + "'", str10, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=32.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test34005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34005");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str2 = storageConfiguration0.getUsername();
        java.lang.String str3 = storageConfiguration0.getPassword();
        java.lang.String str4 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str5 = storageConfiguration0.getPassword();
        java.lang.String str6 = storageConfiguration0.getPassword();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test34006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34006");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration3 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(configuration3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(storage8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
    }

    @Test
    public void test34007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34007");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        float float3 = mutablePreference0.getValue();
        java.lang.String str4 = mutablePreference0.toString();
        mutablePreference0.setValue((float) 97L);
        java.lang.String str7 = mutablePreference0.toString();
        long long8 = mutablePreference0.getItemID();
        float float9 = mutablePreference0.getValue();
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 1.0f + "'", float3 == 1.0f);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=97.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=97.0}");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 97.0f + "'", float9 == 97.0f);
    }

    @Test
    public void test34008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34008");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(trainingScheduler6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(trainingScheduler9);
    }

    @Test
    public void test34009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34009");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str6 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        factorizationbasedRecommenderConfig0.setLambda(1.0d);
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=0, itemID=0, value=1.0}");
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 100);
        double double17 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }

    @Test
    public void test34010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34010");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (-1));
        long long6 = mutablePreference0.getUserID();
        long long7 = mutablePreference0.getItemID();
        float float8 = mutablePreference0.getValue();
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (byte) 1, (long) ' ', 52.0f);
        long long14 = mutablePreference0.getItemID();
        mutablePreference0.set((long) 1, (long) (byte) 1, (float) 100);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + (-1.0f) + "'", float8 == (-1.0f));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
    }

    @Test
    public void test34011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34011");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList13 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("MutablePreference{userID=-1, itemID=52, value=10.0}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList13);
    }

    @Test
    public void test34012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34012");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components18 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage19 = null; // flaky: components18.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener20 = null; // flaky: components18.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener21 = null; // flaky: components18.preferenceChangeListener();
// flaky:         preferenceChangeListener21.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate(preferenceChangeListener21);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener27.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener29);
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components35 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage36 = null; // flaky: components35.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener37 = null; // flaky: components35.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener38 = null; // flaky: components35.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener39 = null; // flaky: components35.preferenceChangeListener();
        delegatingPreferenceChangeListener27.addDelegate(preferenceChangeListener39);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener41 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler45 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener48 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler45, "label", (int) '#');
        delegatingPreferenceChangeListener41.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener48);
        delegatingPreferenceChangeListener27.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener41);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener41);
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener52 = null;
        delegatingPreferenceChangeListener41.addDelegate(preferenceChangeListener52);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener54 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener56 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener54.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener56);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener59 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener59.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener61 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener61.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener61.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener59.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener61);
        delegatingPreferenceChangeListener61.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler66 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener69 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler66, "label", (int) ' ');
        delegatingPreferenceChangeListener61.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener69);
        delegatingPreferenceChangeListener54.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener61);
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener74 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener74.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener76 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener76.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener74.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener76);
        delegatingPreferenceChangeListener76.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener76.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler81 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener84 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler81, "label", (int) ' ');
        delegatingPreferenceChangeListener76.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener84);
        delegatingPreferenceChangeListener76.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener76.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener76.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener54.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener76);
        delegatingPreferenceChangeListener76.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener76.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener76.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener76);
// flaky:         org.junit.Assert.assertNotNull(components18);
        org.junit.Assert.assertNull(storage19);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener20);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener21);
// flaky:         org.junit.Assert.assertNotNull(components35);
        org.junit.Assert.assertNull(storage36);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener37);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener38);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener39);
    }

    @Test
    public void test34013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34013");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarityClass("label");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(52);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (byte) 100);
    }

    @Test
    public void test34014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34014");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setRetrainCronExpression("");
        itembasedRecommenderConfig6.setSimilarItemsPerItem(10);
        java.lang.String str14 = itembasedRecommenderConfig6.getName();
        itembasedRecommenderConfig6.setName("");
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig18 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str19 = itembasedRecommenderConfig18.getRetrainCronExpression();
        int int20 = itembasedRecommenderConfig18.getRetrainAfterPreferenceChanges();
        java.lang.String str21 = itembasedRecommenderConfig18.getSimilarityClass();
        itembasedRecommenderConfig18.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig18.setSimilarityClass("");
        itembasedRecommenderConfig18.setSimilarItemsPerItem(1);
        java.lang.String str28 = itembasedRecommenderConfig18.getSimilarityClass();
        int int29 = itembasedRecommenderConfig18.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer30 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig18);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig18);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList32 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
// flaky:         configuration5.setNumProcessorsForTraining((int) (short) -1);
        org.plista.kornakapi.web.Components components35 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration36 = null; // flaky: components35.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration37 = null; // flaky: components35.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage38 = null; // flaky: components35.storage();
        org.plista.kornakapi.core.storage.Storage storage39 = null; // flaky: components35.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener40 = null; // flaky: components35.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration41 = null; // flaky: components35.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig42 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double43 = factorizationbasedRecommenderConfig42.getAlpha();
        double double44 = factorizationbasedRecommenderConfig42.getLambda();
        int int45 = factorizationbasedRecommenderConfig42.getNumberOfFeatures();
        factorizationbasedRecommenderConfig42.setUsesImplicitFeedback(true);
        double double48 = factorizationbasedRecommenderConfig42.getAlpha();
// flaky:         configuration41.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig42);
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig42);
        int int51 = 0; // flaky: configuration5.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig52 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double53 = factorizationbasedRecommenderConfig52.getAlpha();
        double double54 = factorizationbasedRecommenderConfig52.getLambda();
        boolean boolean55 = factorizationbasedRecommenderConfig52.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer56 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig52);
        double double57 = factorizationbasedRecommenderConfig52.getAlpha();
        int int58 = factorizationbasedRecommenderConfig52.getNumberOfFeatures();
        factorizationbasedRecommenderConfig52.setNumberOfIterations(32);
        boolean boolean61 = factorizationbasedRecommenderConfig52.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig52.setNumberOfIterations((int) ' ');
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer64 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig52);
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig52);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList32);
// flaky:         org.junit.Assert.assertNotNull(components35);
// flaky:         org.junit.Assert.assertNotNull(configuration36);
// flaky:         org.junit.Assert.assertNotNull(configuration37);
        org.junit.Assert.assertNull(storage38);
        org.junit.Assert.assertNull(storage39);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener40);
// flaky:         org.junit.Assert.assertNotNull(configuration41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test34015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34015");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getRetrainCronExpression();
        int int7 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig5.setRetrainCronExpression("value");
        int int13 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig5);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList15 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig16.setSimilarityClass("");
        java.lang.String str19 = itembasedRecommenderConfig16.getName();
        java.lang.String str20 = itembasedRecommenderConfig16.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig16);
        configuration0.setModelDirectory("MutablePreference{userID=100, itemID=-1, value=100.0}");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList24 = configuration0.getFactorizationbasedRecommenders();
        configuration0.setNumProcessorsForTraining(100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration27 = configuration0.getStorageConfiguration();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList24);
        org.junit.Assert.assertNull(storageConfiguration27);
    }

    @Test
    public void test34016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34016");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet16.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        java.lang.String str20 = batchSetPreferencesServlet16.getServletInfo();
        javax.servlet.ServletConfig servletConfig21 = batchSetPreferencesServlet16.getServletConfig();
        batchSetPreferencesServlet16.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = batchSetPreferencesServlet16.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig21);
    }

    @Test
    public void test34017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34017");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (-1.0f));
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double13 = fixedCandidatesIDRescorer1.rescore((long) 10, (double) (byte) 1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer14 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double17 = fixedCandidatesIDRescorer1.rescore(97L, 0.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair19 = null;
        double double21 = filteringLongPairRescorer18.rescore(longPair19, (double) 32.0f);
        org.apache.mahout.common.LongPair longPair22 = null;
        double double24 = filteringLongPairRescorer18.rescore(longPair22, (double) (byte) 0);
        org.apache.mahout.common.LongPair longPair25 = null;
        double double27 = filteringLongPairRescorer18.rescore(longPair25, (double) 35L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 32.0d + "'", double21 == 32.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 35.0d + "'", double27 == 35.0d);
    }

    @Test
    public void test34018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34018");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
// flaky:         configuration4.setNumProcessorsForTraining(100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str9 = storageConfiguration8.getJdbcDriverClass();
        storageConfiguration8.setPassword("value");
        java.lang.String str12 = storageConfiguration8.getJdbcUrl();
        storageConfiguration8.setUsername("MutablePreference{userID=100, itemID=0, value=1.0}");
        java.lang.String str15 = storageConfiguration8.getJdbcUrl();
// flaky:         configuration4.setStorageConfiguration(storageConfiguration8);
        java.lang.String str17 = storageConfiguration8.getPassword();
        storageConfiguration8.setPassword("MutablePreference{userID=52, itemID=52, value=-1.0}");
        storageConfiguration8.setJdbcUrl("MutablePreference{userID=10000, itemID=97, value=0.0}");
        storageConfiguration8.setJdbcUrl("MutablePreference{userID=10000, itemID=1, value=97.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "value" + "'", str17, "value");
    }

    @Test
    public void test34019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34019");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig13);
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig13.setNumberOfIterations((int) '#');
        double double20 = factorizationbasedRecommenderConfig13.getLambda();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer21 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig13);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(true);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer25 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig13);
        int int26 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        int int27 = factorizationbasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig13.setLambda((double) 52.0f);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 35 + "'", int26 == 35);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test34020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34020");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("batchSize");
        storageConfiguration0.setPassword("howMany");
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str12 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=-1, itemID=0, value=100.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "howMany" + "'", str12, "howMany");
    }

    @Test
    public void test34021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34021");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getUsername();
        java.lang.String str9 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: recommender");
        storageConfiguration0.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str15 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setPassword("MutablePreference{userID=32, itemID=1, value=-1.0}");
        java.lang.String str18 = storageConfiguration0.getJdbcDriverClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: recommender" + "'", str15, "org.plista.kornakapi.web.InvalidParameterException: recommender");
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test34022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34022");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        int int6 = factorizationbasedRecommenderConfig3.getNumberOfFeatures();
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(true);
        double double9 = factorizationbasedRecommenderConfig3.getAlpha();
        java.lang.String str10 = factorizationbasedRecommenderConfig3.getRetrainCronExpression();
        int int11 = factorizationbasedRecommenderConfig3.getRetrainAfterPreferenceChanges();
        boolean boolean12 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        int int13 = factorizationbasedRecommenderConfig3.getNumberOfIterations();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig15 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig15.setName("recommender");
        itembasedRecommenderConfig15.setSimilarityClass("howMany");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig15);
        java.lang.String str21 = itembasedRecommenderConfig15.getSimilarityClass();
        java.lang.String str22 = itembasedRecommenderConfig15.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "howMany" + "'", str21, "howMany");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test34023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34023");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("batchSize");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("batchSize");
        java.lang.String str11 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration0.setJdbcUrl("userID");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "batchSize" + "'", str11, "batchSize");
    }

    @Test
    public void test34024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34024");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener23 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener23.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener25 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener23.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler31 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler31, "org.plista.kornakapi.web.InvalidParameterException: file", (int) (byte) 10);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener34);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener36 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener38 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener43 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener43.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener45 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener43.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener45);
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener45);
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener53 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener55 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener55.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener53.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener55);
        delegatingPreferenceChangeListener55.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener55.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener60 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener62 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener60.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener55.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
        delegatingPreferenceChangeListener38.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener55);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
    }

    @Test
    public void test34025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34025");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        javax.servlet.ServletConfig servletConfig7 = deleteCandidateServlet2.getServletConfig();
        javax.servlet.ServletConfig servletConfig8 = null;
        deleteCandidateServlet2.init(servletConfig8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str11 = batchDeleteCandidatesServlet10.getServletInfo();
        java.lang.String str12 = batchDeleteCandidatesServlet10.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet13 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        setPreferenceServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet13.init((javax.servlet.ServletConfig) recommendServlet18);
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) setPreferenceServlet13);
        batchDeleteCandidatesServlet10.destroy();
        batchDeleteCandidatesServlet10.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet23 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str24 = trainServlet23.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet25 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet25.destroy();
        javax.servlet.ServletConfig servletConfig27 = deleteCandidateServlet25.getServletConfig();
        deleteCandidateServlet25.destroy();
        trainServlet23.init((javax.servlet.ServletConfig) deleteCandidateServlet25);
        java.lang.String str30 = trainServlet23.getServletInfo();
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) trainServlet23);
        java.lang.String str32 = trainServlet23.getServletInfo();
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) trainServlet23);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet34 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet34.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet36 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet37 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet38 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        setPreferenceServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet41 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet36.init((javax.servlet.ServletConfig) recommendServlet41);
        recommendServlet41.init();
        addCandidateServlet34.init((javax.servlet.ServletConfig) recommendServlet41);
        java.lang.String str45 = addCandidateServlet34.getServletInfo();
        addCandidateServlet34.init();
        javax.servlet.ServletConfig servletConfig47 = addCandidateServlet34.getServletConfig();
        java.lang.String str48 = addCandidateServlet34.getServletInfo();
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) addCandidateServlet34);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet50 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str51 = recommendServlet50.getServletInfo();
        javax.servlet.ServletConfig servletConfig52 = recommendServlet50.getServletConfig();
        java.lang.String str53 = recommendServlet50.getServletInfo();
        javax.servlet.ServletConfig servletConfig54 = recommendServlet50.getServletConfig();
        javax.servlet.ServletConfig servletConfig55 = recommendServlet50.getServletConfig();
        deleteCandidateServlet2.init(servletConfig55);
        javax.servlet.ServletConfig servletConfig57 = deleteCandidateServlet2.getServletConfig();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(servletConfig47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(servletConfig52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertNull(servletConfig54);
        org.junit.Assert.assertNull(servletConfig55);
        org.junit.Assert.assertNull(servletConfig57);
    }

    @Test
    public void test34026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34026");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        java.lang.String str10 = batchSetPreferencesServlet1.getServletInfo();
        batchSetPreferencesServlet1.destroy();
        javax.servlet.ServletConfig servletConfig12 = batchSetPreferencesServlet1.getServletConfig();
        javax.servlet.ServletConfig servletConfig13 = batchSetPreferencesServlet1.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration14 = batchSetPreferencesServlet1.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(servletConfig12);
        org.junit.Assert.assertNotNull(servletConfig13);
    }

    @Test
    public void test34027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34027");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = null; // flaky: configuration9.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components11 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components11.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = null; // flaky: components11.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler14 = null; // flaky: components11.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration15 = null; // flaky: components11.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration16 = null; // flaky: components11.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener17 = null; // flaky: components11.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration18 = null; // flaky: components11.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = null; // flaky: configuration18.getStorageConfiguration();
// flaky:         storageConfiguration19.setPassword("MutablePreference{userID=0, itemID=0, value=32.0}");
// flaky:         configuration9.setStorageConfiguration(storageConfiguration19);
        int int23 = 0; // flaky: configuration9.getNumProcessorsForTraining();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
// flaky:         org.junit.Assert.assertNotNull(components11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(trainingScheduler13);
        org.junit.Assert.assertNull(trainingScheduler14);
// flaky:         org.junit.Assert.assertNotNull(configuration15);
// flaky:         org.junit.Assert.assertNotNull(configuration16);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener17);
// flaky:         org.junit.Assert.assertNotNull(configuration18);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration19);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    }

    @Test
    public void test34028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34028");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = null; // flaky: configuration8.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig10 = null;
// flaky:         configuration8.addItembasedRecommender(itembasedRecommenderConfig10);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig12.setSimilarityClass("");
        java.lang.String str15 = itembasedRecommenderConfig12.getName();
        java.lang.String str16 = itembasedRecommenderConfig12.getSimilarityClass();
        java.lang.String str17 = itembasedRecommenderConfig12.getSimilarityClass();
        int int18 = itembasedRecommenderConfig12.getSimilarItemsPerItem();
        itembasedRecommenderConfig12.setSimilarItemsPerItem((int) (byte) 1);
        itembasedRecommenderConfig12.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        itembasedRecommenderConfig12.setName("");
        int int25 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
// flaky:         configuration8.addItembasedRecommender(itembasedRecommenderConfig12);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNull(trainingScheduler7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test34029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34029");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("batchSize");
        storageConfiguration0.setPassword("howMany");
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str12 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str15 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=100, itemID=10, value=-1.0}");
        java.lang.String str18 = storageConfiguration0.getJdbcUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "howMany" + "'", str12, "howMany");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "howMany" + "'", str15, "howMany");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
    }

    @Test
    public void test34030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34030");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 100);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=0, itemID=0, value=1.0}");
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        factorizationbasedRecommenderConfig0.setLambda(0.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test34031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34031");
        org.plista.kornakapi.web.MissingParameterException missingParameterException2 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException2.addSuppressed((java.lang.Throwable) missingParameterException4);
        java.lang.Throwable[] throwableArray6 = missingParameterException2.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException2);
        java.lang.Throwable[] throwableArray8 = missingParameterException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray8);
    }

    @Test
    public void test34032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34032");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("label", (-1L));
        long long17 = mutableCandidate0.getItemID();
        java.lang.String str18 = mutableCandidate0.getLabel();
        java.lang.String str19 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", (long) (byte) 0);
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: hi!", 52L);
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=1, itemID=10, value=10000.0}", (long) 0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "itemID" + "'", str13, "itemID");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "label" + "'", str18, "label");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "label" + "'", str19, "label");
    }

    @Test
    public void test34033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34033");
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet0 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str1 = recommendServlet0.getServletInfo();
        recommendServlet0.init();
        recommendServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        java.lang.String str7 = setPreferenceServlet4.getServletInfo();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        recommendServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        java.lang.String str11 = recommendServlet0.getServletInfo();
        recommendServlet0.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test34034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34034");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        javax.servlet.ServletConfig servletConfig7 = setPreferenceServlet0.getServletConfig();
        java.lang.String str8 = setPreferenceServlet0.getServletInfo();
        java.lang.String str9 = setPreferenceServlet0.getServletInfo();
        java.lang.String str10 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=0, value=97.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("itemID", (java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: label", (java.lang.Throwable) invalidParameterException21);
        java.lang.Throwable throwable24 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException25 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", throwable24);
        org.plista.kornakapi.web.MissingParameterException missingParameterException29 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException29);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException29);
        org.plista.kornakapi.web.MissingParameterException missingParameterException33 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException33.addSuppressed((java.lang.Throwable) missingParameterException35);
        invalidParameterException31.addSuppressed((java.lang.Throwable) missingParameterException35);
        java.lang.Throwable[] throwableArray38 = missingParameterException35.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException41 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException42 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException41);
        org.plista.kornakapi.web.MissingParameterException missingParameterException46 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException47 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException46);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException46);
        org.plista.kornakapi.web.MissingParameterException missingParameterException50 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException52 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException50.addSuppressed((java.lang.Throwable) missingParameterException52);
        invalidParameterException48.addSuppressed((java.lang.Throwable) missingParameterException52);
        java.lang.Throwable[] throwableArray55 = missingParameterException52.getSuppressed();
        invalidParameterException42.addSuppressed((java.lang.Throwable) missingParameterException52);
        missingParameterException35.addSuppressed((java.lang.Throwable) invalidParameterException42);
        invalidParameterException25.addSuppressed((java.lang.Throwable) invalidParameterException42);
        invalidParameterException22.addSuppressed((java.lang.Throwable) invalidParameterException25);
        missingParameterException14.addSuppressed((java.lang.Throwable) invalidParameterException25);
        java.lang.Throwable[] throwableArray61 = missingParameterException14.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            setPreferenceServlet0.log("MutablePreference{userID=0, itemID=10000, value=100.0}", (java.lang.Throwable) missingParameterException14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test34035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34035");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        long long12 = mutableCandidate0.getItemID();
        mutableCandidate0.set("userID", (long) '#');
        java.lang.String str16 = mutableCandidate0.getLabel();
        java.lang.String str17 = mutableCandidate0.getLabel();
        java.lang.String str18 = mutableCandidate0.getLabel();
        java.lang.String str19 = mutableCandidate0.getLabel();
        long long20 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: batchSize", (long) (byte) 0);
        long long24 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "userID" + "'", str16, "userID");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "userID" + "'", str17, "userID");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "userID" + "'", str18, "userID");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "userID" + "'", str19, "userID");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 35L + "'", long20 == 35L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test34036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34036");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) (short) 100);
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((-1));
        factorizationbasedRecommenderConfig0.setLambda((double) 10.0f);
        java.lang.String str20 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setAlpha(100.0d);
        factorizationbasedRecommenderConfig0.setAlpha((double) 10.0f);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test34037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34037");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) -1, (long) (byte) 10, (float) (short) 10);
        mutablePreference0.set((long) 10000, (long) (short) -1, 0.0f);
        mutablePreference0.setValue((float) (byte) 0);
        float float13 = mutablePreference0.getValue();
        mutablePreference0.setValue(10.0f);
        java.lang.String str16 = mutablePreference0.toString();
        float float17 = mutablePreference0.getValue();
        java.lang.String str18 = mutablePreference0.toString();
        mutablePreference0.setValue((float) 10000L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 0.0f + "'", float13 == 0.0f);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str16, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str18, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
    }

    @Test
    public void test34038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34038");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        long long5 = mutableCandidate0.getItemID();
        long long6 = mutableCandidate0.getItemID();
        long long7 = mutableCandidate0.getItemID();
        long long8 = mutableCandidate0.getItemID();
        java.lang.String str9 = mutableCandidate0.getLabel();
        java.lang.String str10 = mutableCandidate0.getLabel();
        mutableCandidate0.set("hi!", 35L);
        long long14 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "label" + "'", str9, "label");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "label" + "'", str10, "label");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
    }

    @Test
    public void test34039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34039");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        float float5 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) 10000);
        long long8 = mutablePreference0.getUserID();
        long long9 = mutablePreference0.getItemID();
        long long10 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 97L);
        mutablePreference0.setValue((float) '4');
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 1.0f + "'", float5 == 1.0f);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test34040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34040");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        storageConfiguration7.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=-1.0}");
        storageConfiguration7.setJdbcDriverClass("itemIDs");
        storageConfiguration7.setJdbcUrl("batchSize");
        java.lang.String str22 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str23 = storageConfiguration7.getPassword();
        storageConfiguration7.setJdbcUrl("howMany");
        java.lang.String str26 = storageConfiguration7.getPassword();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "itemIDs" + "'", str22, "itemIDs");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test34041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34041");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=10.0}");
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) -1);
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=100, itemID=10, value=-1.0}");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: file");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test34042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34042");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig7.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig7);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        java.lang.String str19 = itembasedRecommenderConfig7.getRetrainCronExpression();
        itembasedRecommenderConfig7.setSimilarityClass("itemID");
        itembasedRecommenderConfig7.setRetrainAfterPreferenceChanges((int) (byte) 0);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test34043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34043");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) '4');
        java.lang.String str5 = configuration0.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components7 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage10 = null; // flaky: components7.storage();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components7.storage();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components7.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList13 = null; // flaky: configuration12.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str15 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str18 = storageConfiguration14.getJdbcUrl();
        java.lang.String str19 = storageConfiguration14.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration14.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration14.getPassword();
// flaky:         configuration12.setStorageConfiguration(storageConfiguration14);
        java.lang.String str23 = null; // flaky: configuration12.getModelDirectory();
        int int24 = 0; // flaky: configuration12.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList25 = null; // flaky: configuration12.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig26 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig26.setSimilarityClass("");
        java.lang.String str29 = itembasedRecommenderConfig26.getName();
        java.lang.String str30 = itembasedRecommenderConfig26.getSimilarityClass();
        itembasedRecommenderConfig26.setName("");
// flaky:         configuration12.addItembasedRecommender(itembasedRecommenderConfig26);
        itembasedRecommenderConfig26.setRetrainAfterPreferenceChanges((int) ' ');
        configuration0.addItembasedRecommender(itembasedRecommenderConfig26);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig37 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double38 = factorizationbasedRecommenderConfig37.getAlpha();
        double double39 = factorizationbasedRecommenderConfig37.getLambda();
        int int40 = factorizationbasedRecommenderConfig37.getNumberOfFeatures();
        factorizationbasedRecommenderConfig37.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer43 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig37);
        int int44 = factorizationbasedRecommenderConfig37.getNumberOfIterations();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig37);
        factorizationbasedRecommenderConfig37.setRetrainAfterPreferenceChanges((int) (short) -1);
        int int48 = factorizationbasedRecommenderConfig37.getNumberOfFeatures();
        int int49 = factorizationbasedRecommenderConfig37.getNumberOfFeatures();
        java.lang.String str50 = factorizationbasedRecommenderConfig37.getName();
        factorizationbasedRecommenderConfig37.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(storage10);
        org.junit.Assert.assertNull(storage11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
// flaky:         org.junit.Assert.assertEquals("'" + str23 + "' != '" + "MutablePreference{userID=32, itemID=1, value=32.0}" + "'", str23, "MutablePreference{userID=32, itemID=1, value=32.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test34044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34044");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList9 = null; // flaky: configuration8.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList10 = null; // flaky: configuration8.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList9);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList10);
    }

    @Test
    public void test34045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34045");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("itemIDs");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException12.addSuppressed((java.lang.Throwable) missingParameterException14);
        invalidParameterException10.addSuppressed((java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.MissingParameterException missingParameterException24 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException24.addSuppressed((java.lang.Throwable) missingParameterException26);
        invalidParameterException22.addSuppressed((java.lang.Throwable) missingParameterException26);
        missingParameterException14.addSuppressed((java.lang.Throwable) missingParameterException26);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("userID", (java.lang.Throwable) missingParameterException26);
        missingParameterException3.addSuppressed((java.lang.Throwable) missingParameterException26);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.MissingParameterException missingParameterException39 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException41 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException39.addSuppressed((java.lang.Throwable) missingParameterException41);
        invalidParameterException37.addSuppressed((java.lang.Throwable) missingParameterException41);
        org.plista.kornakapi.web.MissingParameterException missingParameterException47 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException47);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException47);
        org.plista.kornakapi.web.MissingParameterException missingParameterException51 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException53 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException51.addSuppressed((java.lang.Throwable) missingParameterException53);
        invalidParameterException49.addSuppressed((java.lang.Throwable) missingParameterException53);
        missingParameterException41.addSuppressed((java.lang.Throwable) missingParameterException53);
        org.plista.kornakapi.web.MissingParameterException missingParameterException59 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException60 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException59);
        missingParameterException53.addSuppressed((java.lang.Throwable) missingParameterException59);
        missingParameterException3.addSuppressed((java.lang.Throwable) missingParameterException59);
        missingParameterException1.addSuppressed((java.lang.Throwable) missingParameterException59);
        org.plista.kornakapi.web.MissingParameterException missingParameterException68 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException69 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException68);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException70 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException68);
        org.plista.kornakapi.web.MissingParameterException missingParameterException75 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException76 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException75);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException77 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException75);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException78 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs", (java.lang.Throwable) invalidParameterException77);
        java.lang.Throwable[] throwableArray79 = invalidParameterException77.getSuppressed();
        invalidParameterException70.addSuppressed((java.lang.Throwable) invalidParameterException77);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException81 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) invalidParameterException70);
        missingParameterException1.addSuppressed((java.lang.Throwable) invalidParameterException70);
        java.lang.Throwable[] throwableArray83 = missingParameterException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray83);
    }

    @Test
    public void test34046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34046");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setModelDirectory("userID");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig8.setSimilarityClass("");
        java.lang.String str11 = itembasedRecommenderConfig8.getName();
        java.lang.String str12 = itembasedRecommenderConfig8.getSimilarityClass();
        itembasedRecommenderConfig8.setName("");
        itembasedRecommenderConfig8.setRetrainCronExpression("label");
        itembasedRecommenderConfig8.setSimilarItemsPerItem(10000);
        itembasedRecommenderConfig8.setRetrainCronExpression("MutablePreference{userID=0, itemID=52, value=-1.0}");
        itembasedRecommenderConfig8.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        itembasedRecommenderConfig8.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: batchSize");
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig8);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig26 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double27 = factorizationbasedRecommenderConfig26.getAlpha();
        double double28 = factorizationbasedRecommenderConfig26.getLambda();
        int int29 = factorizationbasedRecommenderConfig26.getNumberOfFeatures();
        factorizationbasedRecommenderConfig26.setUsesImplicitFeedback(true);
        double double32 = factorizationbasedRecommenderConfig26.getAlpha();
        java.lang.String str33 = factorizationbasedRecommenderConfig26.getRetrainCronExpression();
        int int34 = factorizationbasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
        int int35 = factorizationbasedRecommenderConfig26.getNumberOfIterations();
        factorizationbasedRecommenderConfig26.setNumberOfFeatures((int) '#');
        double double38 = factorizationbasedRecommenderConfig26.getLambda();
        java.lang.String str39 = factorizationbasedRecommenderConfig26.getRetrainCronExpression();
        double double40 = factorizationbasedRecommenderConfig26.getAlpha();
        double double41 = factorizationbasedRecommenderConfig26.getAlpha();
        double double42 = factorizationbasedRecommenderConfig26.getLambda();
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig26);
// flaky:         configuration4.setNumProcessorsForTraining(97);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration46 = null; // flaky: configuration4.getStorageConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration46);
    }

    @Test
    public void test34047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34047");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=35, itemID=97, value=-1.0}", (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test34048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34048");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str4 = storageConfiguration3.getJdbcDriverClass();
        java.lang.String str5 = storageConfiguration3.getUsername();
        storageConfiguration3.setPassword("label");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration3);
// flaky:         configuration1.setNumProcessorsForTraining(10);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str13 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str16 = storageConfiguration12.getJdbcUrl();
        java.lang.String str17 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setJdbcDriverClass("batchSize");
        java.lang.String str20 = storageConfiguration12.getPassword();
        java.lang.String str21 = storageConfiguration12.getJdbcUrl();
        storageConfiguration12.setPassword("org.plista.kornakapi.web.MissingParameterException: file");
        storageConfiguration12.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=1.0}");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration12);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration27 = null; // flaky: configuration1.getStorageConfiguration();
// flaky:         configuration1.setModelDirectory("MutablePreference{userID=10000, itemID=-1, value=0.0}");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration30 = null; // flaky: configuration1.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration31 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str32 = storageConfiguration31.getJdbcDriverClass();
        storageConfiguration31.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str35 = storageConfiguration31.getJdbcUrl();
        java.lang.String str36 = storageConfiguration31.getJdbcDriverClass();
        storageConfiguration31.setJdbcUrl("hi!");
        java.lang.String str39 = storageConfiguration31.getPassword();
        storageConfiguration31.setJdbcUrl("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration31.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration31.setJdbcDriverClass("MutablePreference{userID=100, itemID=-1, value=100.0}");
        java.lang.String str46 = storageConfiguration31.getUsername();
        storageConfiguration31.setJdbcUrl("MutablePreference{userID=10, itemID=100, value=10.0}");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration31);
        java.lang.String str50 = storageConfiguration31.getPassword();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration27);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str46, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str50, "MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test34049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34049");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = null; // flaky: configuration4.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = null; // flaky: configuration4.getItembasedRecommenders();
        java.lang.String str10 = null; // flaky: configuration4.getModelDirectory();
        java.lang.String str11 = null; // flaky: configuration4.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration4.getItembasedRecommenders();
// flaky:         configuration4.setModelDirectory("MutablePreference{userID=32, itemID=1, value=1.0}");
        org.plista.kornakapi.web.Components components15 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration16 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage18 = null; // flaky: components15.storage();
        org.plista.kornakapi.core.storage.Storage storage19 = null; // flaky: components15.storage();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig21 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double22 = factorizationbasedRecommenderConfig21.getAlpha();
        double double23 = factorizationbasedRecommenderConfig21.getLambda();
        int int24 = factorizationbasedRecommenderConfig21.getNumberOfFeatures();
        factorizationbasedRecommenderConfig21.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig21.setNumberOfFeatures((int) (short) 100);
        boolean boolean29 = factorizationbasedRecommenderConfig21.isUsesImplicitFeedback();
// flaky:         configuration20.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig21);
        org.plista.kornakapi.web.Components components31 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration32 = null; // flaky: components31.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler33 = null; // flaky: components31.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler34 = null; // flaky: components31.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration35 = null; // flaky: components31.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration36 = null; // flaky: components31.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig37 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig37.setSimilarityClass("");
        java.lang.String str40 = itembasedRecommenderConfig37.getName();
        java.lang.String str41 = itembasedRecommenderConfig37.getSimilarityClass();
        itembasedRecommenderConfig37.setName("");
        java.lang.String str44 = itembasedRecommenderConfig37.getSimilarityClass();
// flaky:         configuration36.addItembasedRecommender(itembasedRecommenderConfig37);
        itembasedRecommenderConfig37.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration20.addItembasedRecommender(itembasedRecommenderConfig37);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig49 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str50 = itembasedRecommenderConfig49.getRetrainCronExpression();
        int int51 = itembasedRecommenderConfig49.getRetrainAfterPreferenceChanges();
        int int52 = itembasedRecommenderConfig49.getRetrainAfterPreferenceChanges();
// flaky:         configuration20.addItembasedRecommender(itembasedRecommenderConfig49);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig54 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig54.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer57 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig54);
        itembasedRecommenderConfig54.setRetrainCronExpression("");
        itembasedRecommenderConfig54.setName("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str62 = itembasedRecommenderConfig54.getSimilarityClass();
        itembasedRecommenderConfig54.setSimilarItemsPerItem(100);
        int int65 = itembasedRecommenderConfig54.getRetrainAfterPreferenceChanges();
// flaky:         configuration20.addItembasedRecommender(itembasedRecommenderConfig54);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig54);
        int int68 = itembasedRecommenderConfig54.getRetrainAfterPreferenceChanges();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration6);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration7);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration8);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=0.0}" + "'", str10, "MutablePreference{userID=10000, itemID=-1, value=0.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=0.0}" + "'", str11, "MutablePreference{userID=10000, itemID=-1, value=0.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
// flaky:         org.junit.Assert.assertNotNull(components15);
// flaky:         org.junit.Assert.assertNotNull(configuration16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(storage18);
        org.junit.Assert.assertNull(storage19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
// flaky:         org.junit.Assert.assertNotNull(components31);
// flaky:         org.junit.Assert.assertNotNull(configuration32);
        org.junit.Assert.assertNull(trainingScheduler33);
        org.junit.Assert.assertNull(trainingScheduler34);
// flaky:         org.junit.Assert.assertNotNull(configuration35);
// flaky:         org.junit.Assert.assertNotNull(configuration36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test34050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34050");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = new org.plista.kornakapi.core.config.Configuration();
        configuration7.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str10 = configuration7.getModelDirectory();
        configuration7.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setPassword("itemIDs");
        configuration7.setStorageConfiguration(storageConfiguration13);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList18 = configuration7.getItembasedRecommenders();
        configuration7.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig21 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double22 = factorizationbasedRecommenderConfig21.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer23 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig21);
        factorizationbasedRecommenderConfig21.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig21.setNumberOfIterations((int) '#');
        configuration7.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig21);
        factorizationbasedRecommenderConfig21.setRetrainAfterPreferenceChanges(35);
        factorizationbasedRecommenderConfig21.setNumberOfIterations((int) ' ');
        double double33 = factorizationbasedRecommenderConfig21.getLambda();
// flaky:         configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig21);
        factorizationbasedRecommenderConfig21.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig21.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig21.setNumberOfFeatures((int) (short) 10);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList18);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
    }

    @Test
    public void test34051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34051");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer4 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 100, (double) 'a');
        double double10 = fixedCandidatesIDRescorer1.rescore((long) 35, 0.0d);
        double double13 = fixedCandidatesIDRescorer1.rescore((long) (byte) 10, 1.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer14 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double17 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 35L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double21 = fixedCandidatesIDRescorer1.rescore((long) (short) -1, 0.0d);
        double double24 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 100);
        double double27 = fixedCandidatesIDRescorer1.rescore(0L, (double) ' ');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer28 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 97.0d + "'", double7 == 97.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 35.0d + "'", double17 == 35.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 100.0d + "'", double24 == 100.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 32.0d + "'", double27 == 32.0d);
    }

    @Test
    public void test34052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34052");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        java.lang.String str12 = mutableCandidate0.getLabel();
        long long13 = mutableCandidate0.getItemID();
        long long14 = mutableCandidate0.getItemID();
        java.lang.String str15 = mutableCandidate0.getLabel();
        java.lang.String str16 = mutableCandidate0.getLabel();
        java.lang.String str17 = mutableCandidate0.getLabel();
        long long18 = mutableCandidate0.getItemID();
        java.lang.String str19 = mutableCandidate0.getLabel();
        long long20 = mutableCandidate0.getItemID();
        long long21 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 35L + "'", long13 == 35L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str15, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str16, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str17, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 35L + "'", long18 == 35L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str19, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 35L + "'", long20 == 35L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 35L + "'", long21 == 35L);
    }

    @Test
    public void test34053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34053");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        java.lang.String str10 = null; // flaky: configuration9.getModelDirectory();
        org.plista.kornakapi.web.Components components11 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components11.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList13 = null; // flaky: configuration12.getItembasedRecommenders();
        java.lang.String str14 = null; // flaky: configuration12.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = null; // flaky: configuration12.getStorageConfiguration();
// flaky:         configuration12.setNumProcessorsForTraining((int) '#');
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList18 = null; // flaky: configuration12.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = null; // flaky: configuration12.getStorageConfiguration();
        org.plista.kornakapi.web.Components components20 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components20.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler22 = null; // flaky: components20.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler23 = null; // flaky: components20.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration24 = null; // flaky: components20.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig25 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str26 = itembasedRecommenderConfig25.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer27 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig25);
        java.lang.String str28 = itembasedRecommenderConfig25.getSimilarityClass();
        itembasedRecommenderConfig25.setRetrainAfterPreferenceChanges((int) (short) 100);
// flaky:         configuration24.addItembasedRecommender(itembasedRecommenderConfig25);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig32 = null;
// flaky:         configuration24.addItembasedRecommender(itembasedRecommenderConfig32);
// flaky:         configuration24.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration36 = null; // flaky: configuration24.getStorageConfiguration();
        java.lang.String str37 = null; // flaky: storageConfiguration36.getJdbcDriverClass();
// flaky:         configuration12.setStorageConfiguration(storageConfiguration36);
// flaky:         configuration9.setStorageConfiguration(storageConfiguration36);
        java.lang.String str40 = null; // flaky: configuration9.getModelDirectory();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(storage8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=32, itemID=1, value=1.0}" + "'", str10, "MutablePreference{userID=32, itemID=1, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(components11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=32, itemID=1, value=1.0}" + "'", str14, "MutablePreference{userID=32, itemID=1, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration15);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList18);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration19);
// flaky:         org.junit.Assert.assertNotNull(components20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(trainingScheduler22);
        org.junit.Assert.assertNull(trainingScheduler23);
// flaky:         org.junit.Assert.assertNotNull(configuration24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str28);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration36);
// flaky:         org.junit.Assert.assertEquals("'" + str37 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=100.0}" + "'", str37, "MutablePreference{userID=100, itemID=-1, value=100.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str40, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
    }

    @Test
    public void test34054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34054");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.set((long) 32, (long) (short) 1, (float) 97L);
        mutablePreference0.setValue((float) (-1L));
        long long12 = mutablePreference0.getItemID();
        long long13 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 10);
        long long16 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
    }

    @Test
    public void test34055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34055");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        java.lang.String str4 = mutableCandidate0.getLabel();
        java.lang.String str5 = mutableCandidate0.getLabel();
        java.lang.String str6 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=10, itemID=-1, value=0.0}", 32L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test34056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34056");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double6 = factorizationbasedRecommenderConfig5.getAlpha();
        double double7 = factorizationbasedRecommenderConfig5.getLambda();
        int int8 = factorizationbasedRecommenderConfig5.getNumberOfFeatures();
        factorizationbasedRecommenderConfig5.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig5.getAlpha();
        java.lang.String str12 = factorizationbasedRecommenderConfig5.getRetrainCronExpression();
        int int13 = factorizationbasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        int int14 = factorizationbasedRecommenderConfig5.getNumberOfIterations();
        factorizationbasedRecommenderConfig5.setNumberOfFeatures((int) '#');
        double double17 = factorizationbasedRecommenderConfig5.getLambda();
        boolean boolean18 = factorizationbasedRecommenderConfig5.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig5.setUsesImplicitFeedback(false);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        java.lang.String str22 = null; // flaky: configuration4.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration23 = new org.plista.kornakapi.core.config.Configuration();
        int int24 = configuration23.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = configuration23.getStorageConfiguration();
        configuration23.setNumProcessorsForTraining((int) '4');
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig28 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig28.setSimilarityClass("");
        java.lang.String str31 = itembasedRecommenderConfig28.getName();
        java.lang.String str32 = itembasedRecommenderConfig28.getSimilarityClass();
        itembasedRecommenderConfig28.setName("");
        java.lang.String str35 = itembasedRecommenderConfig28.getSimilarityClass();
        itembasedRecommenderConfig28.setRetrainCronExpression("batchSize");
        configuration23.addItembasedRecommender(itembasedRecommenderConfig28);
        itembasedRecommenderConfig28.setSimilarItemsPerItem(10000);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig28);
// flaky:         configuration4.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str22, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(storageConfiguration25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test34057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34057");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
// flaky:         configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig34 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str35 = itembasedRecommenderConfig34.getRetrainCronExpression();
        int int36 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
        int int37 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig34);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig39 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig39.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig39);
        itembasedRecommenderConfig39.setRetrainCronExpression("");
        itembasedRecommenderConfig39.setName("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str47 = itembasedRecommenderConfig39.getSimilarityClass();
        itembasedRecommenderConfig39.setSimilarItemsPerItem(100);
        int int50 = itembasedRecommenderConfig39.getRetrainAfterPreferenceChanges();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig39);
        itembasedRecommenderConfig39.setSimilarItemsPerItem((-1));
        int int54 = itembasedRecommenderConfig39.getSimilarItemsPerItem();
        int int55 = itembasedRecommenderConfig39.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig39.setSimilarItemsPerItem(0);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test34058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34058");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str12 = storageConfiguration11.getJdbcDriverClass();
        storageConfiguration11.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str15 = storageConfiguration11.getJdbcUrl();
        java.lang.String str16 = storageConfiguration11.getJdbcUrl();
        java.lang.String str17 = storageConfiguration11.getJdbcUrl();
        storageConfiguration11.setUsername("recommender");
        java.lang.String str20 = storageConfiguration11.getJdbcDriverClass();
        configuration0.setStorageConfiguration(storageConfiguration11);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList22 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig23 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        int int24 = itembasedRecommenderConfig23.getSimilarItemsPerItem();
        java.lang.String str25 = itembasedRecommenderConfig23.getName();
        itembasedRecommenderConfig23.setName("MutablePreference{userID=0, itemID=0, value=1.0}");
        itembasedRecommenderConfig23.setName("MutablePreference{userID=0, itemID=0, value=32.0}");
        java.lang.String str30 = itembasedRecommenderConfig23.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig23);
        int int32 = configuration0.getNumProcessorsForTraining();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
    }

    @Test
    public void test34059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34059");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.lang.String str6 = null; // flaky: configuration5.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        int int8 = 0; // flaky: configuration5.getNumProcessorsForTraining();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file" + "'", str6, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 35 + "'", int8 == 35);
    }

    @Test
    public void test34060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34060");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = null; // flaky: configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str6 = storageConfiguration5.getJdbcDriverClass();
        storageConfiguration5.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str9 = storageConfiguration5.getJdbcUrl();
        java.lang.String str10 = storageConfiguration5.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration5.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration5.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration5.getJdbcUrl();
        java.lang.String str14 = storageConfiguration5.getUsername();
        java.lang.String str15 = storageConfiguration5.getPassword();
        storageConfiguration5.setJdbcUrl("file");
        java.lang.String str18 = storageConfiguration5.getJdbcUrl();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration5);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig20 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str21 = itembasedRecommenderConfig20.getRetrainCronExpression();
        int int22 = itembasedRecommenderConfig20.getRetrainAfterPreferenceChanges();
        java.lang.String str23 = itembasedRecommenderConfig20.getSimilarityClass();
        itembasedRecommenderConfig20.setSimilarityClass("MutablePreference{userID=100, itemID=0, value=0.0}");
        itembasedRecommenderConfig20.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=0.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer28 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig20);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer29 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig20);
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig20);
        org.plista.kornakapi.core.config.Configuration configuration31 = new org.plista.kornakapi.core.config.Configuration();
        configuration31.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig34 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig34.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer37 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig34);
        itembasedRecommenderConfig34.setRetrainCronExpression("");
        itembasedRecommenderConfig34.setSimilarItemsPerItem(10);
        java.lang.String str42 = itembasedRecommenderConfig34.getName();
        configuration31.addItembasedRecommender(itembasedRecommenderConfig34);
        java.lang.String str44 = configuration31.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig45 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str46 = itembasedRecommenderConfig45.getSimilarityClass();
        java.lang.String str47 = itembasedRecommenderConfig45.getSimilarityClass();
        int int48 = itembasedRecommenderConfig45.getRetrainAfterPreferenceChanges();
        int int49 = itembasedRecommenderConfig45.getSimilarItemsPerItem();
        configuration31.addItembasedRecommender(itembasedRecommenderConfig45);
        itembasedRecommenderConfig45.setSimilarItemsPerItem(10000);
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig45);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig54 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double55 = factorizationbasedRecommenderConfig54.getAlpha();
        double double56 = factorizationbasedRecommenderConfig54.getLambda();
        int int57 = factorizationbasedRecommenderConfig54.getNumberOfFeatures();
        factorizationbasedRecommenderConfig54.setLambda((double) 1);
        factorizationbasedRecommenderConfig54.setUsesImplicitFeedback(false);
        double double62 = factorizationbasedRecommenderConfig54.getAlpha();
        factorizationbasedRecommenderConfig54.setNumberOfFeatures(10000);
        factorizationbasedRecommenderConfig54.setAlpha(0.0d);
        factorizationbasedRecommenderConfig54.setLambda((double) (short) 10);
        double double69 = factorizationbasedRecommenderConfig54.getAlpha();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig54);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration71 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str14, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file" + "'", str18, "file");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration71);
    }

    @Test
    public void test34061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34061");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = new org.plista.kornakapi.core.config.Configuration();
        int int7 = configuration6.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList8 = configuration6.getItembasedRecommenders();
        int int9 = configuration6.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig10 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str11 = itembasedRecommenderConfig10.getRetrainCronExpression();
        configuration6.addItembasedRecommender(itembasedRecommenderConfig10);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig13 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str14 = itembasedRecommenderConfig13.getRetrainCronExpression();
        itembasedRecommenderConfig13.setSimilarityClass("");
        java.lang.String str17 = itembasedRecommenderConfig13.getSimilarityClass();
        itembasedRecommenderConfig13.setName("label");
        configuration6.addItembasedRecommender(itembasedRecommenderConfig13);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig13);
        itembasedRecommenderConfig13.setName("MutablePreference{userID=0, itemID=0, value=0.0}");
        itembasedRecommenderConfig13.setName("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str26 = itembasedRecommenderConfig13.getName();
        java.lang.String str27 = itembasedRecommenderConfig13.getSimilarityClass();
        java.lang.String str28 = itembasedRecommenderConfig13.getName();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str26, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str28, "MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test34062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34062");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        java.lang.String str7 = null; // flaky: configuration6.getModelDirectory();
        java.lang.String str8 = null; // flaky: configuration6.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration6.getStorageConfiguration();
// flaky:         storageConfiguration9.setPassword("MutablePreference{userID=100, itemID=-1, value=0.0}");
// flaky:         storageConfiguration9.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file" + "'", str7, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file" + "'", str8, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
    }

    @Test
    public void test34063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34063");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) (byte) 100);
        double double8 = fixedCandidatesIDRescorer1.rescore(10000L, (double) (byte) 0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test34064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34064");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        java.lang.String str7 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        trainServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        javax.servlet.ServletConfig servletConfig15 = null;
        setPreferenceServlet8.init(servletConfig15);
        java.lang.String str17 = setPreferenceServlet8.getServletInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = setPreferenceServlet8.getInitParameter("MutablePreference{userID=10000, itemID=0, value=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test34065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34065");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((-1.0d));
        java.lang.String str13 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) '4');
        double double16 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setLambda(0.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
    }

    @Test
    public void test34066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34066");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) -1);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(0);
        factorizationbasedRecommenderConfig0.setAlpha((double) (-1));
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        boolean boolean13 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test34067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34067");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getRetrainCronExpression();
        int int7 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig5.setRetrainCronExpression("value");
        int int13 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig5);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList15 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        int int19 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        factorizationbasedRecommenderConfig16.setUsesImplicitFeedback(true);
        double double22 = factorizationbasedRecommenderConfig16.getAlpha();
        java.lang.String str23 = factorizationbasedRecommenderConfig16.getRetrainCronExpression();
        java.lang.String str24 = factorizationbasedRecommenderConfig16.getRetrainCronExpression();
        factorizationbasedRecommenderConfig16.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig16.setLambda((double) (byte) 100);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        factorizationbasedRecommenderConfig16.setUsesImplicitFeedback(true);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test34068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34068");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler12, "label", (int) ' ');
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener15);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener25 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener37 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener37);
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener42 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener44 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener42.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener44);
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener37.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener44);
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener37);
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener52 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener54 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener52.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener54);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener57 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener57.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener59 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener59.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener59.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener57.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener59);
        delegatingPreferenceChangeListener59.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler64 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener67 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler64, "label", (int) ' ');
        delegatingPreferenceChangeListener59.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener67);
        delegatingPreferenceChangeListener52.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener59);
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener52);
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler72 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener75 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler72, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}", (int) (short) 10);
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener75);
    }

    @Test
    public void test34069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34069");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setModelDirectory("userID");
// flaky:         configuration4.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration10.getJdbcUrl();
        java.lang.String str15 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setJdbcUrl("hi!");
        java.lang.String str18 = storageConfiguration10.getPassword();
        storageConfiguration10.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: file");
        java.lang.String str21 = storageConfiguration10.getPassword();
        storageConfiguration10.setJdbcDriverClass("file");
// flaky:         configuration4.setStorageConfiguration(storageConfiguration10);
        org.plista.kornakapi.web.Components components25 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage26 = null; // flaky: components25.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener27 = null; // flaky: components25.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener28 = null; // flaky: components25.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler29 = null; // flaky: components25.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration31 = null; // flaky: components25.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList32 = null; // flaky: configuration31.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig33 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig33.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer36 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig33);
        itembasedRecommenderConfig33.setRetrainCronExpression("");
        itembasedRecommenderConfig33.setSimilarItemsPerItem(10);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer41 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig33);
        java.lang.String str42 = itembasedRecommenderConfig33.getSimilarityClass();
        itembasedRecommenderConfig33.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str45 = itembasedRecommenderConfig33.getSimilarityClass();
        itembasedRecommenderConfig33.setSimilarItemsPerItem(97);
// flaky:         configuration31.addItembasedRecommender(itembasedRecommenderConfig33);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig33);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
// flaky:         org.junit.Assert.assertNotNull(components25);
        org.junit.Assert.assertNull(storage26);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener27);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener28);
        org.junit.Assert.assertNull(trainingScheduler29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(configuration31);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList32);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test34070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34070");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNull(trainingScheduler5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener10);
        org.junit.Assert.assertNull(storage11);
        org.junit.Assert.assertNull(trainingScheduler12);
    }

    @Test
    public void test34071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34071");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration0.getStorageConfiguration();
        int int8 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration9.getUsername();
        java.lang.String str12 = storageConfiguration9.getPassword();
        java.lang.String str13 = storageConfiguration9.getJdbcDriverClass();
        storageConfiguration9.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration9.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        storageConfiguration9.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration9);
        int int21 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig22 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double23 = factorizationbasedRecommenderConfig22.getAlpha();
        double double24 = factorizationbasedRecommenderConfig22.getLambda();
        int int25 = factorizationbasedRecommenderConfig22.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer26 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig22);
        factorizationbasedRecommenderConfig22.setName("recommender");
        boolean boolean29 = factorizationbasedRecommenderConfig22.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig22.setUsesImplicitFeedback(false);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig22);
        configuration0.setModelDirectory("MutablePreference{userID=1, itemID=10, value=10000.0}");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(storageConfiguration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test34072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34072");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", (long) (byte) -1);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=0.0}", (long) (byte) 10);
        long long12 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}", 0L);
        java.lang.String str16 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str8, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}" + "'", str16, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}");
    }

    @Test
    public void test34073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34073");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig8 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double9 = factorizationbasedRecommenderConfig8.getAlpha();
        double double10 = factorizationbasedRecommenderConfig8.getLambda();
        int int11 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        factorizationbasedRecommenderConfig8.setUsesImplicitFeedback(false);
        int int14 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        factorizationbasedRecommenderConfig8.setLambda((double) 0);
        factorizationbasedRecommenderConfig8.setName("userID");
        int int19 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        int int20 = factorizationbasedRecommenderConfig8.getNumberOfIterations();
        factorizationbasedRecommenderConfig8.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig8.setRetrainAfterPreferenceChanges(10);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig8);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig26 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str27 = itembasedRecommenderConfig26.getRetrainCronExpression();
        int int28 = itembasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
        int int29 = itembasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig26);
        java.lang.String str31 = null; // flaky: configuration4.getModelDirectory();
        java.lang.String str32 = null; // flaky: configuration4.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration33 = null; // flaky: configuration4.getStorageConfiguration();
// flaky:         storageConfiguration33.setPassword("");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "itemID" + "'", str31, "itemID");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "itemID" + "'", str32, "itemID");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration33);
    }

    @Test
    public void test34074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34074");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str10 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double11 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean12 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 100);
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test34075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34075");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener3);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener12 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener12.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener12.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener14);
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener21 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener21);
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener21);
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener28 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener30 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener30.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener30.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener28.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener30);
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener30);
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components37 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener38 = null; // flaky: components37.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage39 = null; // flaky: components37.storage();
        org.plista.kornakapi.core.storage.Storage storage40 = null; // flaky: components37.storage();
        org.plista.kornakapi.core.storage.Storage storage41 = null; // flaky: components37.storage();
        org.plista.kornakapi.core.storage.Storage storage42 = null; // flaky: components37.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener43 = null; // flaky: components37.preferenceChangeListener();
        delegatingPreferenceChangeListener14.addDelegate(preferenceChangeListener43);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener14);
// flaky:         delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener48 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener48.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener48.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener51 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener53 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener51.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener53);
        delegatingPreferenceChangeListener48.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener51);
        delegatingPreferenceChangeListener48.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener48.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener48.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener60 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener62 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener60.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener67 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener67.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener69 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener69.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener69.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener67.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener69);
        delegatingPreferenceChangeListener69.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener69);
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener76 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener76.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener78 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener78.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener78.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener76.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener78);
        delegatingPreferenceChangeListener62.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener78);
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components85 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener86 = null; // flaky: components85.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage87 = null; // flaky: components85.storage();
        org.plista.kornakapi.core.storage.Storage storage88 = null; // flaky: components85.storage();
        org.plista.kornakapi.core.storage.Storage storage89 = null; // flaky: components85.storage();
        org.plista.kornakapi.core.storage.Storage storage90 = null; // flaky: components85.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener91 = null; // flaky: components85.preferenceChangeListener();
        delegatingPreferenceChangeListener62.addDelegate(preferenceChangeListener91);
        delegatingPreferenceChangeListener48.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
// flaky:         delegatingPreferenceChangeListener48.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener48.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener48.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener48);
// flaky:         org.junit.Assert.assertNotNull(components37);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener38);
        org.junit.Assert.assertNull(storage39);
        org.junit.Assert.assertNull(storage40);
        org.junit.Assert.assertNull(storage41);
        org.junit.Assert.assertNull(storage42);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener43);
// flaky:         org.junit.Assert.assertNotNull(components85);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener86);
        org.junit.Assert.assertNull(storage87);
        org.junit.Assert.assertNull(storage88);
        org.junit.Assert.assertNull(storage89);
        org.junit.Assert.assertNull(storage90);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener91);
    }

    @Test
    public void test34076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34076");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration0.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList12 = configuration0.getFactorizationbasedRecommenders();
        configuration0.setNumProcessorsForTraining(100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = configuration0.getStorageConfiguration();
        java.lang.Class<?> wildcardClass16 = configuration0.getClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList12);
        org.junit.Assert.assertNotNull(storageConfiguration15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test34077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34077");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(32);
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        boolean boolean12 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) -1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 10);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test34078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34078");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str15 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str18 = storageConfiguration14.getJdbcUrl();
        java.lang.String str19 = storageConfiguration14.getJdbcUrl();
        storageConfiguration14.setPassword("MutablePreference{userID=0, itemID=0, value=1.0}");
        configuration0.setStorageConfiguration(storageConfiguration14);
        org.plista.kornakapi.core.config.Configuration configuration23 = new org.plista.kornakapi.core.config.Configuration();
        configuration23.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str26 = configuration23.getModelDirectory();
        configuration23.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration29 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str30 = storageConfiguration29.getJdbcDriverClass();
        storageConfiguration29.setPassword("itemIDs");
        configuration23.setStorageConfiguration(storageConfiguration29);
        java.lang.String str34 = storageConfiguration29.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration29);
        java.lang.String str36 = configuration0.getModelDirectory();
        int int37 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration38 = null;
        configuration0.setStorageConfiguration(storageConfiguration38);
        configuration0.setModelDirectory("MutablePreference{userID=10000, itemID=0, value=32.0}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "itemIDs" + "'", str34, "itemIDs");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str36, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
    }

    @Test
    public void test34079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34079");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        java.lang.String str1 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet3 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str4 = batchDeleteCandidatesServlet3.getServletInfo();
        java.lang.String str5 = batchDeleteCandidatesServlet3.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet6 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet8 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet8);
        setPreferenceServlet6.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet8);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet11 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet6.init((javax.servlet.ServletConfig) recommendServlet11);
        batchDeleteCandidatesServlet3.init((javax.servlet.ServletConfig) setPreferenceServlet6);
        batchDeleteCandidatesServlet3.destroy();
        batchDeleteCandidatesServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet3);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str17 = batchDeleteCandidatesServlet16.getServletInfo();
        batchDeleteCandidatesServlet16.destroy();
        javax.servlet.ServletConfig servletConfig19 = batchDeleteCandidatesServlet16.getServletConfig();
        batchDeleteCandidatesServlet2.init(servletConfig19);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str22 = recommendServlet21.getServletInfo();
        batchDeleteCandidatesServlet2.init((javax.servlet.ServletConfig) recommendServlet21);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) recommendServlet21);
        javax.servlet.ServletConfig servletConfig25 = null;
        batchAddCandidatesServlet0.init(servletConfig25);
        batchAddCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet28 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str29 = batchDeleteCandidatesServlet28.getServletInfo();
        java.lang.String str30 = batchDeleteCandidatesServlet28.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet31 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet32 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        setPreferenceServlet31.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet36 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet31.init((javax.servlet.ServletConfig) recommendServlet36);
        batchDeleteCandidatesServlet28.init((javax.servlet.ServletConfig) setPreferenceServlet31);
        batchDeleteCandidatesServlet28.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet40 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str41 = trainServlet40.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet42 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet42.destroy();
        javax.servlet.ServletConfig servletConfig44 = deleteCandidateServlet42.getServletConfig();
        deleteCandidateServlet42.destroy();
        trainServlet40.init((javax.servlet.ServletConfig) deleteCandidateServlet42);
        javax.servlet.ServletConfig servletConfig47 = deleteCandidateServlet42.getServletConfig();
        batchDeleteCandidatesServlet28.init((javax.servlet.ServletConfig) deleteCandidateServlet42);
        batchDeleteCandidatesServlet28.init();
        java.lang.String str50 = batchDeleteCandidatesServlet28.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet51 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet52 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet53 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet52.init((javax.servlet.ServletConfig) batchSetPreferencesServlet53);
        batchDeleteCandidatesServlet51.init((javax.servlet.ServletConfig) batchSetPreferencesServlet53);
        batchDeleteCandidatesServlet51.destroy();
        javax.servlet.ServletConfig servletConfig57 = batchDeleteCandidatesServlet51.getServletConfig();
        batchDeleteCandidatesServlet28.init(servletConfig57);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet28);
        javax.servlet.ServletConfig servletConfig60 = batchAddCandidatesServlet0.getServletConfig();
        batchAddCandidatesServlet0.init();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNull(servletConfig44);
        org.junit.Assert.assertNull(servletConfig47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(servletConfig57);
        org.junit.Assert.assertNotNull(servletConfig60);
    }

    @Test
    public void test34080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34080");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(trainingScheduler11);
    }

    @Test
    public void test34081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34081");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) 10);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) (-1));
        double double18 = fixedCandidatesIDRescorer1.rescore((long) 0, (double) 32);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer20 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer21 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double24 = fixedCandidatesIDRescorer1.rescore(0L, (double) 32.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer25 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 32.0d + "'", double24 == 32.0d);
    }

    @Test
    public void test34082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34082");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        int int4 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         configuration2.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig8 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double9 = factorizationbasedRecommenderConfig8.getAlpha();
        double double10 = factorizationbasedRecommenderConfig8.getLambda();
        boolean boolean11 = factorizationbasedRecommenderConfig8.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig8);
        int int13 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        factorizationbasedRecommenderConfig8.setAlpha(100.0d);
        int int16 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig8);
        java.lang.String str18 = factorizationbasedRecommenderConfig8.getName();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig8);
        int int20 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration21 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration5);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(str18);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration21);
    }

    @Test
    public void test34083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34083");
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.config.Configuration configuration1 = org.plista.kornakapi.core.config.Configuration.fromXML("MutablePreference{userID=100, itemID=-1, value=0.0}");
            org.junit.Assert.fail("Expected exception of type com.thoughtworks.xstream.io.StreamException; message:  : only whitespace content allowed before start tag and not M (position: START_DOCUMENT seen M... @1:1) ");
        } catch (com.thoughtworks.xstream.io.StreamException e) {
            // Expected exception.
        }
    }

    @Test
    public void test34084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34084");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10000);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        boolean boolean14 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test34085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34085");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        mutablePreference0.setValue((float) (byte) 1);
        float float10 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) 10000);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 1.0f + "'", float10 == 1.0f);
    }

    @Test
    public void test34086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34086");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        int int2 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int3 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int4 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int5 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=10.0}");
        itembasedRecommenderConfig0.setSimilarityClass("value");
        java.lang.String str10 = itembasedRecommenderConfig0.getRetrainCronExpression();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(100);
        itembasedRecommenderConfig0.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (byte) 1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test34087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34087");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
// flaky:         configuration1.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setJdbcDriverClass("batchSize");
        java.lang.String str21 = storageConfiguration13.getPassword();
        storageConfiguration13.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str24 = storageConfiguration13.getPassword();
        storageConfiguration13.setPassword("MutablePreference{userID=0, itemID=0, value=100.0}");
        java.lang.String str27 = storageConfiguration13.getPassword();
        java.lang.String str28 = storageConfiguration13.getUsername();
        java.lang.String str29 = storageConfiguration13.getJdbcUrl();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration13);
// flaky:         configuration1.setNumProcessorsForTraining(100);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str27, "MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str28, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test34088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34088");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        mutablePreference0.setValue((float) 35);
        mutablePreference0.set((long) (short) 1, (long) (short) -1, (-1.0f));
        mutablePreference0.set((long) (byte) 0, (long) (byte) 1, 10000.0f);
        long long18 = mutablePreference0.getUserID();
        java.lang.String str19 = mutablePreference0.toString();
        java.lang.String str20 = mutablePreference0.toString();
        java.lang.String str21 = mutablePreference0.toString();
        mutablePreference0.set((long) 10, (long) (short) 100, (float) 32);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=0, itemID=1, value=10000.0}" + "'", str19, "MutablePreference{userID=0, itemID=1, value=10000.0}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=0, itemID=1, value=10000.0}" + "'", str20, "MutablePreference{userID=0, itemID=1, value=10000.0}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "MutablePreference{userID=0, itemID=1, value=10000.0}" + "'", str21, "MutablePreference{userID=0, itemID=1, value=10000.0}");
    }

    @Test
    public void test34089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34089");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig5 = batchSetPreferencesServlet2.getServletConfig();
        java.lang.String str6 = batchSetPreferencesServlet2.getServletInfo();
        java.lang.String str7 = batchSetPreferencesServlet2.getServletInfo();
        java.lang.String str8 = batchSetPreferencesServlet2.getServletInfo();
        javax.servlet.ServletConfig servletConfig9 = batchSetPreferencesServlet2.getServletConfig();
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(servletConfig9);
    }

    @Test
    public void test34090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34090");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=0, itemID=10, value=1.0}");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str1);
    }

    @Test
    public void test34091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34091");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 10);
        factorizationbasedRecommenderConfig0.setName("");
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getName();
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) 97.0f);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test34092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34092");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet12 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet13 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet14 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet13.init((javax.servlet.ServletConfig) batchSetPreferencesServlet14);
        javax.servlet.ServletConfig servletConfig16 = batchSetPreferencesServlet13.getServletConfig();
        addCandidateServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet13);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet12);
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet20 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet21 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet20.init((javax.servlet.ServletConfig) batchSetPreferencesServlet21);
        javax.servlet.ServletConfig servletConfig23 = batchSetPreferencesServlet20.getServletConfig();
        javax.servlet.ServletConfig servletConfig24 = batchSetPreferencesServlet20.getServletConfig();
        java.lang.String str25 = batchSetPreferencesServlet20.getServletInfo();
        batchSetPreferencesServlet20.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet20);
        batchSetPreferencesServlet20.init();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(servletConfig16);
        org.junit.Assert.assertNotNull(servletConfig23);
        org.junit.Assert.assertNotNull(servletConfig24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test34093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34093");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = configuration0.getFactorizationbasedRecommenders();
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=0, value=32.0}");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = configuration0.getFactorizationbasedRecommenders();
        int int9 = configuration0.getNumProcessorsForTraining();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test34094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34094");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) invalidParameterException8);
        java.lang.Throwable[] throwableArray12 = invalidParameterException11.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test34095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34095");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("batchSize");
        storageConfiguration0.setUsername("recommender");
        java.lang.String str10 = storageConfiguration0.getUsername();
        java.lang.String str11 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=10, itemID=32, value=10000.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "recommender" + "'", str10, "recommender");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test34096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34096");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet3 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) batchSetPreferencesServlet3);
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        java.lang.String str6 = batchSetPreferencesServlet2.getServletInfo();
        javax.servlet.ServletConfig servletConfig7 = batchSetPreferencesServlet2.getServletConfig();
        batchSetPreferencesServlet2.destroy();
        java.lang.String str9 = batchSetPreferencesServlet2.getServletInfo();
        java.lang.String str10 = batchSetPreferencesServlet2.getServletInfo();
        batchSetPreferencesServlet2.init();
        javax.servlet.ServletRequest servletRequest12 = null;
        javax.servlet.ServletResponse servletResponse13 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet2.service(servletRequest12, servletResponse13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test34097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34097");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        int int4 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration2.getItembasedRecommenders();
// flaky:         configuration2.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str9 = itembasedRecommenderConfig8.getRetrainCronExpression();
        int int10 = itembasedRecommenderConfig8.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig8.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str13 = itembasedRecommenderConfig8.getSimilarityClass();
        java.lang.String str14 = itembasedRecommenderConfig8.getRetrainCronExpression();
        itembasedRecommenderConfig8.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: howMany");
        int int17 = itembasedRecommenderConfig8.getSimilarItemsPerItem();
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig8);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str20 = storageConfiguration19.getJdbcDriverClass();
        storageConfiguration19.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str23 = storageConfiguration19.getJdbcUrl();
        java.lang.String str24 = storageConfiguration19.getJdbcDriverClass();
        storageConfiguration19.setJdbcDriverClass("batchSize");
        storageConfiguration19.setPassword("howMany");
        storageConfiguration19.setJdbcUrl("hi!");
        java.lang.String str31 = storageConfiguration19.getPassword();
        storageConfiguration19.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str34 = storageConfiguration19.getPassword();
        storageConfiguration19.setUsername("MutablePreference{userID=100, itemID=-1, value=100.0}");
        java.lang.String str37 = storageConfiguration19.getJdbcDriverClass();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration19);
        org.plista.kornakapi.web.Components components39 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener40 = null; // flaky: components39.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage41 = null; // flaky: components39.storage();
        org.plista.kornakapi.core.config.Configuration configuration42 = null; // flaky: components39.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration43 = null; // flaky: configuration42.getStorageConfiguration();
// flaky:         storageConfiguration43.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany");
// flaky:         configuration2.setStorageConfiguration(storageConfiguration43);
// flaky:         storageConfiguration43.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=100, value=97.0}");
        java.lang.String str49 = null; // flaky: storageConfiguration43.getJdbcUrl();
        java.lang.String str50 = null; // flaky: storageConfiguration43.getUsername();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=52.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 100 + "'", int4 == 100);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str14, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "howMany" + "'", str31, "howMany");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "howMany" + "'", str34, "howMany");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "batchSize" + "'", str37, "batchSize");
// flaky:         org.junit.Assert.assertNotNull(components39);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener40);
        org.junit.Assert.assertNull(storage41);
// flaky:         org.junit.Assert.assertNotNull(configuration42);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration43);
// flaky:         org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=100, value=97.0}" + "'", str49, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=100, value=97.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=100.0}" + "'", str50, "MutablePreference{userID=100, itemID=-1, value=100.0}");
    }

    @Test
    public void test34098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34098");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=100, itemID=0, value=0.0}");
        int int7 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str8 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        int int11 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test34099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34099");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: file");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file11 = null;
        org.plista.kornakapi.core.storage.Storage storage12 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender13 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer10.train(file11, storage12, recommender13, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test34100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34100");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.MissingParameterException missingParameterException9 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException11 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException9.addSuppressed((java.lang.Throwable) missingParameterException11);
        invalidParameterException7.addSuppressed((java.lang.Throwable) missingParameterException11);
        org.plista.kornakapi.web.MissingParameterException missingParameterException17 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException17);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException17);
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException23 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException21.addSuppressed((java.lang.Throwable) missingParameterException23);
        invalidParameterException19.addSuppressed((java.lang.Throwable) missingParameterException23);
        missingParameterException11.addSuppressed((java.lang.Throwable) missingParameterException23);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException11);
        org.plista.kornakapi.web.MissingParameterException missingParameterException29 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException31 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException29.addSuppressed((java.lang.Throwable) missingParameterException31);
        invalidParameterException27.addSuppressed((java.lang.Throwable) missingParameterException29);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException34 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: hi!", (java.lang.Throwable) invalidParameterException27);
        java.lang.Throwable[] throwableArray35 = invalidParameterException34.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException39 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException39);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException41 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException39);
        org.plista.kornakapi.web.MissingParameterException missingParameterException43 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException45 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException43.addSuppressed((java.lang.Throwable) missingParameterException45);
        invalidParameterException41.addSuppressed((java.lang.Throwable) missingParameterException45);
        java.lang.Throwable[] throwableArray48 = missingParameterException45.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException51 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException52 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException51);
        org.plista.kornakapi.web.MissingParameterException missingParameterException56 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException57 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException56);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException58 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException56);
        org.plista.kornakapi.web.MissingParameterException missingParameterException60 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException62 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException60.addSuppressed((java.lang.Throwable) missingParameterException62);
        invalidParameterException58.addSuppressed((java.lang.Throwable) missingParameterException62);
        java.lang.Throwable[] throwableArray65 = missingParameterException62.getSuppressed();
        invalidParameterException52.addSuppressed((java.lang.Throwable) missingParameterException62);
        missingParameterException45.addSuppressed((java.lang.Throwable) invalidParameterException52);
        org.plista.kornakapi.web.MissingParameterException missingParameterException71 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException72 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException71);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException73 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException72);
        org.plista.kornakapi.web.MissingParameterException missingParameterException75 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}");
        invalidParameterException73.addSuppressed((java.lang.Throwable) missingParameterException75);
        missingParameterException45.addSuppressed((java.lang.Throwable) invalidParameterException73);
        invalidParameterException34.addSuppressed((java.lang.Throwable) missingParameterException45);
        java.lang.Throwable[] throwableArray79 = missingParameterException45.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwableArray79);
    }

    @Test
    public void test34101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34101");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        long long5 = mutablePreference0.getUserID();
        long long6 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) 32L);
        java.lang.String str9 = mutablePreference0.toString();
        mutablePreference0.setValue((float) (byte) 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "MutablePreference{userID=0, itemID=0, value=32.0}" + "'", str9, "MutablePreference{userID=0, itemID=0, value=32.0}");
    }

    @Test
    public void test34102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34102");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        factorizationbasedRecommenderConfig7.setNumberOfIterations((int) (short) 10);
        factorizationbasedRecommenderConfig7.setName("");
// flaky:         configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        java.lang.String str14 = factorizationbasedRecommenderConfig7.getRetrainCronExpression();
        int int15 = factorizationbasedRecommenderConfig7.getNumberOfIterations();
        factorizationbasedRecommenderConfig7.setNumberOfFeatures(100);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
    }

    @Test
    public void test34103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34103");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.web.Components components7 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components7.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components7.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig13 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig13.setSimilarityClass("");
        java.lang.String str16 = itembasedRecommenderConfig13.getName();
        java.lang.String str17 = itembasedRecommenderConfig13.getSimilarityClass();
        itembasedRecommenderConfig13.setName("");
        java.lang.String str20 = itembasedRecommenderConfig13.getSimilarityClass();
// flaky:         configuration12.addItembasedRecommender(itembasedRecommenderConfig13);
        itembasedRecommenderConfig13.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration6.addItembasedRecommender(itembasedRecommenderConfig13);
        itembasedRecommenderConfig13.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: ");
        java.lang.String str27 = itembasedRecommenderConfig13.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer28 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig13);
        int int29 = itembasedRecommenderConfig13.getSimilarItemsPerItem();
        itembasedRecommenderConfig13.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=10, itemID=100, value=10000.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(trainingScheduler10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
    }

    @Test
    public void test34104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34104");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) (byte) 10, (double) (byte) 10);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair10 = null;
        double double12 = filteringLongPairRescorer9.rescore(longPair10, (double) 10);
        org.apache.mahout.common.LongPair longPair13 = null;
        double double15 = filteringLongPairRescorer9.rescore(longPair13, 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test34105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34105");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        long long8 = mutableCandidate0.getItemID();
        java.lang.String str9 = mutableCandidate0.getLabel();
        java.lang.String str10 = mutableCandidate0.getLabel();
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", 100L);
        long long16 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10000L + "'", long8 == 10000L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemID" + "'", str9, "itemID");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "itemID" + "'", str10, "itemID");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10000L + "'", long12 == 10000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
    }

    @Test
    public void test34106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34106");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        java.lang.String str4 = batchSetPreferencesServlet2.getServletInfo();
        batchSetPreferencesServlet2.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str7 = batchDeleteCandidatesServlet6.getServletInfo();
        java.lang.String str8 = batchDeleteCandidatesServlet6.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet9 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet10 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet10.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        setPreferenceServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet9.init((javax.servlet.ServletConfig) recommendServlet14);
        batchDeleteCandidatesServlet6.init((javax.servlet.ServletConfig) setPreferenceServlet9);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet17 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet18 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet19 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet18.init((javax.servlet.ServletConfig) batchSetPreferencesServlet19);
        javax.servlet.ServletConfig servletConfig21 = batchSetPreferencesServlet18.getServletConfig();
        addCandidateServlet17.init((javax.servlet.ServletConfig) batchSetPreferencesServlet18);
        javax.servlet.ServletConfig servletConfig23 = addCandidateServlet17.getServletConfig();
        batchDeleteCandidatesServlet6.init((javax.servlet.ServletConfig) addCandidateServlet17);
        addCandidateServlet17.destroy();
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) addCandidateServlet17);
        batchSetPreferencesServlet2.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet29 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str30 = batchDeleteCandidatesServlet29.getServletInfo();
        java.lang.String str31 = batchDeleteCandidatesServlet29.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet32 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet33 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet34 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet33.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet34);
        setPreferenceServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet34);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet37 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet32.init((javax.servlet.ServletConfig) recommendServlet37);
        batchDeleteCandidatesServlet29.init((javax.servlet.ServletConfig) setPreferenceServlet32);
        batchDeleteCandidatesServlet29.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet41 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str42 = trainServlet41.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet43 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet43.destroy();
        javax.servlet.ServletConfig servletConfig45 = deleteCandidateServlet43.getServletConfig();
        deleteCandidateServlet43.destroy();
        trainServlet41.init((javax.servlet.ServletConfig) deleteCandidateServlet43);
        javax.servlet.ServletConfig servletConfig48 = deleteCandidateServlet43.getServletConfig();
        batchDeleteCandidatesServlet29.init((javax.servlet.ServletConfig) deleteCandidateServlet43);
        batchDeleteCandidatesServlet29.init();
        java.lang.String str51 = batchDeleteCandidatesServlet29.getServletInfo();
        javax.servlet.ServletConfig servletConfig52 = batchDeleteCandidatesServlet29.getServletConfig();
        batchDeleteCandidatesServlet29.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet29);
        java.lang.String str55 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str56 = batchDeleteCandidatesServlet0.getServletInfo();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(servletConfig21);
        org.junit.Assert.assertNotNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(servletConfig45);
        org.junit.Assert.assertNull(servletConfig48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(servletConfig52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test34107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34107");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        mutablePreference0.setValue((float) '4');
        long long5 = mutablePreference0.getUserID();
        mutablePreference0.setValue(100.0f);
        long long8 = mutablePreference0.getItemID();
        long long9 = mutablePreference0.getItemID();
        long long10 = mutablePreference0.getItemID();
        long long11 = mutablePreference0.getUserID();
        java.lang.String str12 = mutablePreference0.toString();
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str12, "MutablePreference{userID=0, itemID=0, value=100.0}");
    }

    @Test
    public void test34108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34108");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
// flaky:         configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer34 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig22);
        java.io.File file35 = null;
        org.plista.kornakapi.core.storage.Storage storage36 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender37 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer34.train(file35, storage36, recommender37, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test34109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34109");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
// flaky:         configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig34 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str35 = itembasedRecommenderConfig34.getRetrainCronExpression();
        int int36 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
        int int37 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig34);
        int int39 = 0; // flaky: configuration5.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList40 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        int int41 = 0; // flaky: configuration5.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.Configuration configuration42 = new org.plista.kornakapi.core.config.Configuration();
        configuration42.setNumProcessorsForTraining((int) (short) 100);
        configuration42.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig47 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str48 = itembasedRecommenderConfig47.getRetrainCronExpression();
        int int49 = itembasedRecommenderConfig47.getRetrainAfterPreferenceChanges();
        java.lang.String str50 = itembasedRecommenderConfig47.getSimilarityClass();
        itembasedRecommenderConfig47.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig47.setRetrainCronExpression("value");
        int int55 = itembasedRecommenderConfig47.getRetrainAfterPreferenceChanges();
        configuration42.addItembasedRecommender(itembasedRecommenderConfig47);
        java.lang.String str57 = itembasedRecommenderConfig47.getSimilarityClass();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig47);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList59 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig60 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str61 = itembasedRecommenderConfig60.getSimilarityClass();
        java.lang.String str62 = itembasedRecommenderConfig60.getSimilarityClass();
        itembasedRecommenderConfig60.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig60.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig60);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList40);
// flaky:         org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(str57);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test34110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34110");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = null; // flaky: configuration5.getStorageConfiguration();
        java.lang.String str9 = null; // flaky: configuration5.getModelDirectory();
// flaky:         configuration5.setModelDirectory("MutablePreference{userID=0, itemID=0, value=1.0}");
        org.plista.kornakapi.web.Components components12 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage13 = null; // flaky: components12.storage();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components12.getConfiguration();
// flaky:         configuration14.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig17 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
// flaky:         configuration14.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig17);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig19 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double20 = factorizationbasedRecommenderConfig19.getAlpha();
        double double21 = factorizationbasedRecommenderConfig19.getLambda();
        factorizationbasedRecommenderConfig19.setNumberOfFeatures((int) (short) 10);
        factorizationbasedRecommenderConfig19.setUsesImplicitFeedback(false);
// flaky:         configuration14.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig19);
        java.lang.String str27 = null; // flaky: configuration14.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration28 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str29 = storageConfiguration28.getJdbcDriverClass();
        storageConfiguration28.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str32 = storageConfiguration28.getJdbcUrl();
        java.lang.String str33 = storageConfiguration28.getJdbcDriverClass();
        storageConfiguration28.setJdbcDriverClass("batchSize");
        storageConfiguration28.setPassword("howMany");
        java.lang.String str38 = storageConfiguration28.getUsername();
// flaky:         configuration14.setStorageConfiguration(storageConfiguration28);
// flaky:         configuration14.setNumProcessorsForTraining((int) ' ');
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig42 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double43 = factorizationbasedRecommenderConfig42.getAlpha();
        int int44 = factorizationbasedRecommenderConfig42.getNumberOfFeatures();
        factorizationbasedRecommenderConfig42.setUsesImplicitFeedback(true);
        double double47 = factorizationbasedRecommenderConfig42.getLambda();
        factorizationbasedRecommenderConfig42.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig42.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration14.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig42);
        boolean boolean53 = factorizationbasedRecommenderConfig42.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig42.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig42.setNumberOfFeatures(10000);
        java.lang.String str58 = factorizationbasedRecommenderConfig42.getName();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig42);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str9, "MutablePreference{userID=0, itemID=0, value=52.0}");
// flaky:         org.junit.Assert.assertNotNull(components12);
        org.junit.Assert.assertNull(storage13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "itemID" + "'", str27, "itemID");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str38, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(str58);
    }

    @Test
    public void test34111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34111");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(storage8);
    }

    @Test
    public void test34112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34112");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        java.lang.String str10 = mutableCandidate0.getLabel();
        long long11 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: recommender", (long) (-1));
        java.lang.String str15 = mutableCandidate0.getLabel();
        java.lang.String str16 = mutableCandidate0.getLabel();
        java.lang.String str17 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemID" + "'", str9, "itemID");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "itemID" + "'", str10, "itemID");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: recommender" + "'", str15, "org.plista.kornakapi.web.InvalidParameterException: recommender");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: recommender" + "'", str16, "org.plista.kornakapi.web.InvalidParameterException: recommender");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: recommender" + "'", str17, "org.plista.kornakapi.web.InvalidParameterException: recommender");
    }

    @Test
    public void test34113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34113");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        long long14 = mutableCandidate0.getItemID();
        long long15 = mutableCandidate0.getItemID();
        long long16 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (long) 1);
        mutableCandidate0.set("MutablePreference{userID=100, itemID=0, value=0.0}", 0L);
        long long23 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 35L + "'", long15 == 35L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 35L + "'", long16 == 35L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
    }

    @Test
    public void test34114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34114");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setModelDirectory("userID");
// flaky:         configuration4.setModelDirectory("itemID");
        int int9 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration10.getJdbcUrl();
        java.lang.String str15 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("recommender");
        storageConfiguration10.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str20 = storageConfiguration10.getPassword();
        storageConfiguration10.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: howMany");
// flaky:         configuration4.setStorageConfiguration(storageConfiguration10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration24 = null; // flaky: configuration4.getStorageConfiguration();
        java.lang.String str25 = null; // flaky: storageConfiguration24.getUsername();
// flaky:         storageConfiguration24.setPassword("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
// flaky:         storageConfiguration24.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10, itemID=100, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str20, "MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "recommender" + "'", str25, "recommender");
    }

    @Test
    public void test34115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34115");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
// flaky:         configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration34 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str35 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str38 = storageConfiguration34.getJdbcUrl();
        java.lang.String str39 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setJdbcDriverClass("batchSize");
        java.lang.String str42 = storageConfiguration34.getPassword();
        storageConfiguration34.setUsername("batchSize");
        java.lang.String str45 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration34);
        storageConfiguration34.setPassword("");
        storageConfiguration34.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=100.0}");
        java.lang.String str53 = storageConfiguration34.getJdbcUrl();
        storageConfiguration34.setPassword("MutablePreference{userID=0, itemID=10, value=10.0}");
        storageConfiguration34.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: label");
        java.lang.String str58 = storageConfiguration34.getJdbcUrl();
        java.lang.String str59 = storageConfiguration34.getPassword();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "batchSize" + "'", str45, "batchSize");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "MutablePreference{userID=0, itemID=10, value=10.0}" + "'", str59, "MutablePreference{userID=0, itemID=10, value=10.0}");
    }

    @Test
    public void test34116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34116");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = null; // flaky: configuration1.getStorageConfiguration();
// flaky:         configuration1.setNumProcessorsForTraining((int) '#');
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList8 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig9 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str10 = itembasedRecommenderConfig9.getRetrainCronExpression();
        int int11 = itembasedRecommenderConfig9.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig9.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig9);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration4);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test34117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34117");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig4.setNumberOfFeatures((int) (byte) 1);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        boolean boolean13 = factorizationbasedRecommenderConfig4.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig4.setAlpha(97.0d);
        factorizationbasedRecommenderConfig4.setNumberOfFeatures(35);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test34118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34118");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getUsername();
        java.lang.String str2 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str3 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getUsername();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setPassword("");
        java.lang.String str9 = storageConfiguration0.getJdbcDriverClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test34119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34119");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) -1);
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) (byte) 10);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(1);
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test34120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34120");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        int int10 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(true);
        double double13 = factorizationbasedRecommenderConfig7.getAlpha();
// flaky:         configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
// flaky:         configuration6.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList17 = null; // flaky: configuration6.getFactorizationbasedRecommenders();
        int int18 = 0; // flaky: configuration6.getNumProcessorsForTraining();
        int int19 = 0; // flaky: configuration6.getNumProcessorsForTraining();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test34121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34121");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        java.lang.String str8 = factorizationbasedRecommenderConfig4.getRetrainCronExpression();
        int int9 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig4.setNumberOfIterations((int) '4');
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        int int15 = factorizationbasedRecommenderConfig4.getNumberOfIterations();
        factorizationbasedRecommenderConfig4.setRetrainAfterPreferenceChanges(0);
        boolean boolean18 = factorizationbasedRecommenderConfig4.isUsesImplicitFeedback();
        java.lang.String str19 = factorizationbasedRecommenderConfig4.getRetrainCronExpression();
        factorizationbasedRecommenderConfig4.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig4.setLambda((double) 97L);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test34122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34122");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        boolean boolean6 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig3);
        double double8 = factorizationbasedRecommenderConfig3.getAlpha();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        double double10 = factorizationbasedRecommenderConfig3.getAlpha();
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(true);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig3);
        int int14 = factorizationbasedRecommenderConfig3.getRetrainAfterPreferenceChanges();
        java.lang.String str15 = factorizationbasedRecommenderConfig3.getName();
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig3.setLambda((double) (-1.0f));
        factorizationbasedRecommenderConfig3.setRetrainAfterPreferenceChanges((int) '#');
        int int22 = factorizationbasedRecommenderConfig3.getRetrainAfterPreferenceChanges();
        java.lang.String str23 = factorizationbasedRecommenderConfig3.getName();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 35 + "'", int22 == 35);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test34123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34123");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(35);
        boolean boolean15 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str16 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setAlpha((double) 52.0f);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test34124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34124");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        java.lang.String str16 = batchDeleteCandidatesServlet14.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet17 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet19 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        setPreferenceServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet17.init((javax.servlet.ServletConfig) recommendServlet22);
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) setPreferenceServlet17);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet25 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet27 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet26.init((javax.servlet.ServletConfig) batchSetPreferencesServlet27);
        javax.servlet.ServletConfig servletConfig29 = batchSetPreferencesServlet26.getServletConfig();
        addCandidateServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig31 = addCandidateServlet25.getServletConfig();
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) addCandidateServlet25);
        javax.servlet.ServletConfig servletConfig33 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet14);
        batchDeleteCandidatesServlet14.init();
        org.plista.kornakapi.web.MissingParameterException missingParameterException41 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException42 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException41);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException41);
        org.plista.kornakapi.web.MissingParameterException missingParameterException48 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException48);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException48);
        java.lang.Throwable[] throwableArray51 = missingParameterException48.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException52 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException48);
        invalidParameterException43.addSuppressed((java.lang.Throwable) invalidParameterException52);
        java.lang.Throwable[] throwableArray54 = invalidParameterException52.getSuppressed();
        java.lang.Throwable[] throwableArray55 = invalidParameterException52.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException56 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) invalidParameterException52);
        java.lang.Throwable throwable58 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException59 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", throwable58);
        java.lang.Throwable[] throwableArray60 = invalidParameterException59.getSuppressed();
        invalidParameterException56.addSuppressed((java.lang.Throwable) invalidParameterException59);
        org.plista.kornakapi.web.MissingParameterException missingParameterException65 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException66 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException65);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException67 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=10.0}", (java.lang.Throwable) invalidParameterException66);
        org.plista.kornakapi.web.MissingParameterException missingParameterException76 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException77 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException76);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException78 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException76);
        org.plista.kornakapi.web.MissingParameterException missingParameterException80 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException82 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException80.addSuppressed((java.lang.Throwable) missingParameterException82);
        invalidParameterException78.addSuppressed((java.lang.Throwable) missingParameterException82);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException85 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException78);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException86 = new org.plista.kornakapi.web.InvalidParameterException("value", (java.lang.Throwable) invalidParameterException85);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException87 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", (java.lang.Throwable) invalidParameterException86);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException88 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException87);
        java.lang.Throwable[] throwableArray89 = invalidParameterException88.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException90 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=35.0}", (java.lang.Throwable) invalidParameterException88);
        invalidParameterException66.addSuppressed((java.lang.Throwable) invalidParameterException88);
        invalidParameterException56.addSuppressed((java.lang.Throwable) invalidParameterException88);
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet14.log("MutablePreference{userID=-1, itemID=10, value=100.0}", (java.lang.Throwable) invalidParameterException56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(servletConfig29);
        org.junit.Assert.assertNotNull(servletConfig31);
        org.junit.Assert.assertNotNull(servletConfig33);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray89);
    }

    @Test
    public void test34125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34125");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10000);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        double double15 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 1);
        boolean boolean18 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        double double19 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test34126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34126");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        boolean boolean6 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig3);
        double double8 = factorizationbasedRecommenderConfig3.getAlpha();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        double double10 = factorizationbasedRecommenderConfig3.getAlpha();
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(true);
        int int13 = factorizationbasedRecommenderConfig3.getNumberOfIterations();
        factorizationbasedRecommenderConfig3.setLambda((double) 1L);
        int int16 = factorizationbasedRecommenderConfig3.getNumberOfIterations();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test34127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34127");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        mutableCandidate0.set("", 100L);
        java.lang.String str6 = mutableCandidate0.getLabel();
        long long7 = mutableCandidate0.getItemID();
        long long8 = mutableCandidate0.getItemID();
        java.lang.String str9 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=100.0}", (long) (short) 0);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test34128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34128");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        boolean boolean6 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig3);
        double double8 = factorizationbasedRecommenderConfig3.getAlpha();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        double double10 = factorizationbasedRecommenderConfig3.getAlpha();
        factorizationbasedRecommenderConfig3.setAlpha((double) (byte) 10);
        factorizationbasedRecommenderConfig3.setNumberOfFeatures(100);
        factorizationbasedRecommenderConfig3.setName("org.plista.kornakapi.web.MissingParameterException: recommender");
        int int17 = factorizationbasedRecommenderConfig3.getNumberOfIterations();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test34129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34129");
        org.plista.kornakapi.core.config.Configuration configuration0 = null;
        org.plista.kornakapi.core.storage.Storage storage1 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap2 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap3 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null;
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener11 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener11);
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener28 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener28);
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener33 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener33.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener35);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener28.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener35);
        delegatingPreferenceChangeListener11.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener28);
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener44 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener46 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener44.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener46);
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener51 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener53 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener51.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener53);
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener46.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener53);
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener60 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener62 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener60.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
        delegatingPreferenceChangeListener46.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
        delegatingPreferenceChangeListener11.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener46);
        org.plista.kornakapi.web.Components components68 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration69 = null; // flaky: components68.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration70 = null; // flaky: components68.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler71 = null; // flaky: components68.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration72 = null; // flaky: components68.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage73 = null; // flaky: components68.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener74 = null; // flaky: components68.preferenceChangeListener();
        delegatingPreferenceChangeListener11.addDelegate(preferenceChangeListener74);
        delegatingPreferenceChangeListener5.addDelegate(preferenceChangeListener74);
// flaky:         delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler78 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener81 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler78, "MutablePreference{userID=0, itemID=52, value=-1.0}", (int) (short) 100);
        delegatingPreferenceChangeListener5.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener81);
        inMemoryPreferenceChangeListener81.notifyOfPreferenceChange();
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration0, storage1, strMap2, strMap3, trainingScheduler4, (org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener81);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(components68);
// flaky:         org.junit.Assert.assertNotNull(configuration69);
// flaky:         org.junit.Assert.assertNotNull(configuration70);
        org.junit.Assert.assertNull(trainingScheduler71);
// flaky:         org.junit.Assert.assertNotNull(configuration72);
        org.junit.Assert.assertNull(storage73);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener74);
    }

    @Test
    public void test34130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34130");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = null; // flaky: configuration9.getItembasedRecommenders();
// flaky:         configuration9.setNumProcessorsForTraining((int) ' ');
// flaky:         configuration9.setModelDirectory("label");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = null; // flaky: configuration9.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList16 = null; // flaky: configuration9.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList17 = null; // flaky: configuration9.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList16);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList17);
    }

    @Test
    public void test34131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34131");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener3);
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener11 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener11);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener17 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener17);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener23 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener23.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener23.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener28 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener28);
        delegatingPreferenceChangeListener23.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler32 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler32, "label", (int) ' ');
        inMemoryPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener23.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener35);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener38 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener40 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener40);
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener23.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener40);
        delegatingPreferenceChangeListener11.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener40);
        org.plista.kornakapi.web.Components components46 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener47 = null; // flaky: components46.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage48 = null; // flaky: components46.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler49 = null; // flaky: components46.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener50 = null; // flaky: components46.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener51 = null; // flaky: components46.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener52 = null; // flaky: components46.preferenceChangeListener();
        delegatingPreferenceChangeListener40.addDelegate(preferenceChangeListener52);
        org.plista.kornakapi.web.Components components54 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration55 = null; // flaky: components54.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration56 = null; // flaky: components54.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage57 = null; // flaky: components54.storage();
        org.plista.kornakapi.core.storage.Storage storage58 = null; // flaky: components54.storage();
        org.plista.kornakapi.core.config.Configuration configuration59 = null; // flaky: components54.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage60 = null; // flaky: components54.storage();
        org.plista.kornakapi.core.config.Configuration configuration61 = null; // flaky: components54.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler62 = null; // flaky: components54.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration63 = null; // flaky: components54.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler64 = null; // flaky: components54.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener65 = null; // flaky: components54.preferenceChangeListener();
        delegatingPreferenceChangeListener40.addDelegate(preferenceChangeListener65);
        // The following exception was thrown during execution in test generation
        try {
            preferenceChangeListener65.notifyOfPreferenceChange();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
// flaky:         org.junit.Assert.assertNotNull(components46);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener47);
        org.junit.Assert.assertNull(storage48);
        org.junit.Assert.assertNull(trainingScheduler49);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener50);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener51);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener52);
// flaky:         org.junit.Assert.assertNotNull(components54);
// flaky:         org.junit.Assert.assertNotNull(configuration55);
// flaky:         org.junit.Assert.assertNotNull(configuration56);
        org.junit.Assert.assertNull(storage57);
        org.junit.Assert.assertNull(storage58);
// flaky:         org.junit.Assert.assertNotNull(configuration59);
        org.junit.Assert.assertNull(storage60);
// flaky:         org.junit.Assert.assertNotNull(configuration61);
        org.junit.Assert.assertNull(trainingScheduler62);
// flaky:         org.junit.Assert.assertNotNull(configuration63);
        org.junit.Assert.assertNull(trainingScheduler64);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener65);
    }

    @Test
    public void test34132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34132");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null;
        configuration0.setStorageConfiguration(storageConfiguration5);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = configuration0.getFactorizationbasedRecommenders();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.web.Components components10 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components10.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration11.getItembasedRecommenders();
        java.lang.String str13 = null; // flaky: configuration11.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        double double16 = factorizationbasedRecommenderConfig14.getLambda();
        int int17 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        factorizationbasedRecommenderConfig14.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig14);
// flaky:         configuration11.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        boolean boolean22 = factorizationbasedRecommenderConfig14.isUsesImplicitFeedback();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList24 = configuration0.getFactorizationbasedRecommenders();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertNotNull(components10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "label" + "'", str13, "label");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList24);
    }

    @Test
    public void test34133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34133");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer7 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double10 = fixedCandidatesIDRescorer1.rescore((long) (short) -1, (double) (short) 100);
        double double13 = fixedCandidatesIDRescorer1.rescore(97L, (double) 35.0f);
        double double16 = fixedCandidatesIDRescorer1.rescore((long) (byte) 1, (double) (-1.0f));
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer17 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double20 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, 32.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer21 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer22 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 35.0d + "'", double13 == 35.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + (-1.0d) + "'", double16 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 32.0d + "'", double20 == 32.0d);
    }

    @Test
    public void test34134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34134");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components5 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components5.getConfiguration();
        java.lang.String str8 = null; // flaky: configuration7.getModelDirectory();
        int int9 = 0; // flaky: configuration7.getNumProcessorsForTraining();
        int int10 = 0; // flaky: configuration7.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str12 = storageConfiguration11.getJdbcDriverClass();
        storageConfiguration11.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str15 = storageConfiguration11.getJdbcUrl();
        java.lang.String str16 = storageConfiguration11.getJdbcDriverClass();
        java.lang.String str17 = storageConfiguration11.getJdbcDriverClass();
        java.lang.String str18 = storageConfiguration11.getPassword();
        java.lang.String str19 = storageConfiguration11.getUsername();
        java.lang.String str20 = storageConfiguration11.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration11.getJdbcDriverClass();
        java.lang.String str22 = storageConfiguration11.getJdbcDriverClass();
// flaky:         configuration7.setStorageConfiguration(storageConfiguration11);
        storageConfiguration11.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration11);
// flaky:         configuration1.setModelDirectory("MutablePreference{userID=0, itemID=10000, value=-1.0}");
        java.lang.String str29 = null; // flaky: configuration1.getModelDirectory();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "label" + "'", str3, "label");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
// flaky:         org.junit.Assert.assertNotNull(components5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "label" + "'", str8, "label");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str19, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=-1.0}" + "'", str29, "MutablePreference{userID=0, itemID=10000, value=-1.0}");
    }

    @Test
    public void test34135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34135");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null; // flaky: configuration4.getStorageConfiguration();
        int int6 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        int int10 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(true);
        double double13 = factorizationbasedRecommenderConfig7.getAlpha();
        java.lang.String str14 = factorizationbasedRecommenderConfig7.getRetrainCronExpression();
        int int15 = factorizationbasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        boolean boolean16 = factorizationbasedRecommenderConfig7.isUsesImplicitFeedback();
        int int17 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        double double18 = factorizationbasedRecommenderConfig7.getLambda();
        factorizationbasedRecommenderConfig7.setAlpha(52.0d);
        java.lang.String str21 = factorizationbasedRecommenderConfig7.getName();
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        factorizationbasedRecommenderConfig7.setNumberOfFeatures((int) (byte) -1);
        factorizationbasedRecommenderConfig7.setLambda((double) 100L);
        int int27 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        boolean boolean28 = factorizationbasedRecommenderConfig7.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig7.setRetrainAfterPreferenceChanges((int) '#');
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration5);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 32 + "'", int6 == 32);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
    }

    @Test
    public void test34136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34136");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        java.lang.String str1 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str3 = batchDeleteCandidatesServlet2.getServletInfo();
        java.lang.String str4 = batchDeleteCandidatesServlet2.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet5 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet6 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet6.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet7);
        setPreferenceServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet7);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet10 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet5.init((javax.servlet.ServletConfig) recommendServlet10);
        batchDeleteCandidatesServlet2.init((javax.servlet.ServletConfig) setPreferenceServlet5);
        batchDeleteCandidatesServlet2.destroy();
        batchDeleteCandidatesServlet2.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet15 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str16 = trainServlet15.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet17 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet17.destroy();
        javax.servlet.ServletConfig servletConfig19 = deleteCandidateServlet17.getServletConfig();
        deleteCandidateServlet17.destroy();
        trainServlet15.init((javax.servlet.ServletConfig) deleteCandidateServlet17);
        java.lang.String str22 = trainServlet15.getServletInfo();
        batchDeleteCandidatesServlet2.init((javax.servlet.ServletConfig) trainServlet15);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet24 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet24.init();
        java.lang.String str26 = batchAddCandidatesServlet24.getServletInfo();
        batchAddCandidatesServlet24.init();
        java.lang.String str28 = batchAddCandidatesServlet24.getServletInfo();
        batchAddCandidatesServlet24.init();
        batchAddCandidatesServlet24.init();
        batchAddCandidatesServlet24.init();
        trainServlet15.init((javax.servlet.ServletConfig) batchAddCandidatesServlet24);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = trainServlet15.getInitParameter("MutablePreference{userID=1, itemID=35, value=52.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test34137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34137");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 10);
        java.lang.String str10 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=32, itemID=0, value=-1.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test34138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34138");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        float float8 = mutablePreference0.getValue();
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (short) 100);
        mutablePreference0.setValue((float) 10);
        long long14 = mutablePreference0.getItemID();
        float float15 = mutablePreference0.getValue();
        java.lang.String str16 = mutablePreference0.toString();
        java.lang.String str17 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 10.0f + "'", float15 == 10.0f);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=100, itemID=0, value=10.0}" + "'", str16, "MutablePreference{userID=100, itemID=0, value=10.0}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=100, itemID=0, value=10.0}" + "'", str17, "MutablePreference{userID=100, itemID=0, value=10.0}");
    }

    @Test
    public void test34139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34139");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        long long1 = mutablePreference0.getItemID();
        java.lang.String str2 = mutablePreference0.toString();
        mutablePreference0.setValue((float) (short) 10);
        float float5 = mutablePreference0.getValue();
        java.lang.String str6 = mutablePreference0.toString();
        java.lang.String str7 = mutablePreference0.toString();
        java.lang.String str8 = mutablePreference0.toString();
        mutablePreference0.setValue((float) (short) 10);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str2, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 10.0f + "'", float5 == 10.0f);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=10.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=10.0}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=10.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=10.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=0, value=10.0}" + "'", str8, "MutablePreference{userID=0, itemID=0, value=10.0}");
    }

    @Test
    public void test34140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34140");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 100);
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(1);
        boolean boolean12 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        double double13 = factorizationbasedRecommenderConfig0.getAlpha();
        double double14 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 10);
        double double19 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test34141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34141");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=1, itemID=-1, value=35.0}", 97);
    }

    @Test
    public void test34142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34142");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        java.lang.String str4 = batchSetPreferencesServlet2.getServletInfo();
        batchSetPreferencesServlet2.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str7 = batchDeleteCandidatesServlet6.getServletInfo();
        java.lang.String str8 = batchDeleteCandidatesServlet6.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet9 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet10 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet10.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        setPreferenceServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet9.init((javax.servlet.ServletConfig) recommendServlet14);
        batchDeleteCandidatesServlet6.init((javax.servlet.ServletConfig) setPreferenceServlet9);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet17 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet18 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet19 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet18.init((javax.servlet.ServletConfig) batchSetPreferencesServlet19);
        javax.servlet.ServletConfig servletConfig21 = batchSetPreferencesServlet18.getServletConfig();
        addCandidateServlet17.init((javax.servlet.ServletConfig) batchSetPreferencesServlet18);
        javax.servlet.ServletConfig servletConfig23 = addCandidateServlet17.getServletConfig();
        batchDeleteCandidatesServlet6.init((javax.servlet.ServletConfig) addCandidateServlet17);
        addCandidateServlet17.destroy();
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) addCandidateServlet17);
        batchSetPreferencesServlet2.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet29 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet29.init();
        java.lang.String str31 = batchAddCandidatesServlet29.getServletInfo();
        javax.servlet.ServletConfig servletConfig32 = batchAddCandidatesServlet29.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str34 = batchDeleteCandidatesServlet33.getServletInfo();
        java.lang.String str35 = batchDeleteCandidatesServlet33.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet36 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet37 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet38 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        setPreferenceServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet41 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet36.init((javax.servlet.ServletConfig) recommendServlet41);
        batchDeleteCandidatesServlet33.init((javax.servlet.ServletConfig) setPreferenceServlet36);
        batchAddCandidatesServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        batchDeleteCandidatesServlet33.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = batchDeleteCandidatesServlet33.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(servletConfig21);
        org.junit.Assert.assertNotNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test34143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34143");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (byte) -1);
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=0, itemID=0, value=35.0}");
        int int9 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test34144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34144");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) (short) -1);
        double double10 = fixedCandidatesIDRescorer1.rescore((long) (byte) 10, (double) 35L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) 97, (double) 10000);
        double double17 = fixedCandidatesIDRescorer1.rescore((long) 100, 97.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 35.0d + "'", double10 == 35.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10000.0d + "'", double14 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
    }

    @Test
    public void test34145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34145");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig14);
        factorizationbasedRecommenderConfig14.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig14.setNumberOfIterations((int) '#');
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        configuration0.setNumProcessorsForTraining((int) (byte) 10);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig24 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig24.setSimilarityClass("");
        java.lang.String str27 = itembasedRecommenderConfig24.getName();
        java.lang.String str28 = itembasedRecommenderConfig24.getSimilarityClass();
        itembasedRecommenderConfig24.setName("");
        itembasedRecommenderConfig24.setRetrainCronExpression("label");
        int int33 = itembasedRecommenderConfig24.getSimilarItemsPerItem();
        itembasedRecommenderConfig24.setSimilarItemsPerItem((int) '4');
        configuration0.addItembasedRecommender(itembasedRecommenderConfig24);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList37 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration38 = configuration0.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList39 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList40 = configuration0.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList37);
        org.junit.Assert.assertNotNull(storageConfiguration38);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList39);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList40);
    }

    @Test
    public void test34146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34146");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException6);
        java.lang.Throwable[] throwableArray8 = missingParameterException6.getSuppressed();
        java.lang.Throwable[] throwableArray9 = missingParameterException6.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("userID", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=-1, value=32.0}", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=1, value=-1.0}", (java.lang.Throwable) invalidParameterException11);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10000, itemID=-1, value=-1.0}", (java.lang.Throwable) invalidParameterException11);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test34147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34147");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setPassword("howMany");
        java.lang.String str9 = storageConfiguration0.getUsername();
        storageConfiguration0.setUsername("label");
        java.lang.String str12 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("MutablePreference{userID=100, itemID=52, value=0.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str9, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "howMany" + "'", str13, "howMany");
    }

    @Test
    public void test34148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34148");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        mutableCandidate0.set("", (long) (byte) 100);
        mutableCandidate0.set("", 10L);
        long long7 = mutableCandidate0.getItemID();
        long long8 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
    }

    @Test
    public void test34149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34149");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(storage8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
    }

    @Test
    public void test34150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34150");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.lang.String str5 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration6 = new org.plista.kornakapi.core.config.Configuration();
        configuration6.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig9 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double10 = factorizationbasedRecommenderConfig9.getAlpha();
        double double11 = factorizationbasedRecommenderConfig9.getLambda();
        configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig9);
        java.lang.String str13 = configuration6.getModelDirectory();
        int int14 = configuration6.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = configuration6.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str17 = storageConfiguration16.getJdbcDriverClass();
        storageConfiguration16.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str20 = storageConfiguration16.getJdbcUrl();
        java.lang.String str21 = storageConfiguration16.getJdbcUrl();
        storageConfiguration16.setJdbcUrl("label");
        configuration6.setStorageConfiguration(storageConfiguration16);
        java.lang.String str25 = storageConfiguration16.getPassword();
        storageConfiguration16.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        configuration0.setStorageConfiguration(storageConfiguration16);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig29 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double30 = factorizationbasedRecommenderConfig29.getAlpha();
        double double31 = factorizationbasedRecommenderConfig29.getLambda();
        int int32 = factorizationbasedRecommenderConfig29.getNumberOfFeatures();
        java.lang.String str33 = factorizationbasedRecommenderConfig29.getRetrainCronExpression();
        int int34 = factorizationbasedRecommenderConfig29.getNumberOfFeatures();
        factorizationbasedRecommenderConfig29.setNumberOfIterations((int) (short) 0);
        boolean boolean37 = factorizationbasedRecommenderConfig29.isUsesImplicitFeedback();
        java.lang.String str38 = factorizationbasedRecommenderConfig29.getRetrainCronExpression();
        double double39 = factorizationbasedRecommenderConfig29.getLambda();
        factorizationbasedRecommenderConfig29.setLambda((double) (byte) -1);
        factorizationbasedRecommenderConfig29.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig29.setLambda((double) 100L);
        int int46 = factorizationbasedRecommenderConfig29.getRetrainAfterPreferenceChanges();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig29);
        int int48 = factorizationbasedRecommenderConfig29.getRetrainAfterPreferenceChanges();
        int int49 = factorizationbasedRecommenderConfig29.getRetrainAfterPreferenceChanges();
        java.lang.String str50 = factorizationbasedRecommenderConfig29.getRetrainCronExpression();
        double double51 = factorizationbasedRecommenderConfig29.getAlpha();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
    }

    @Test
    public void test34151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34151");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        java.lang.String str8 = mutablePreference0.toString();
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.set((long) 1, 10000L, 97.0f);
        float float14 = mutablePreference0.getValue();
        java.lang.String str15 = mutablePreference0.toString();
        long long16 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str8, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 97.0f + "'", float14 == 97.0f);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=1, itemID=10000, value=97.0}" + "'", str15, "MutablePreference{userID=1, itemID=10000, value=97.0}");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 10000L + "'", long16 == 10000L);
    }

    @Test
    public void test34152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34152");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        java.lang.String str12 = mutableCandidate0.getLabel();
        long long13 = mutableCandidate0.getItemID();
        long long14 = mutableCandidate0.getItemID();
        long long15 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "itemID" + "'", str12, "itemID");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
    }

    @Test
    public void test34153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34153");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str2 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=1.0}");
        storageConfiguration0.setUsername("recommender");
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getPassword();
        java.lang.String str9 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=10000.0}");
        storageConfiguration0.setUsername("MutablePreference{userID=0, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "recommender" + "'", str9, "recommender");
    }

    @Test
    public void test34154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34154");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
    }

    @Test
    public void test34155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34155");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setModelDirectory("userID");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig8.setSimilarityClass("");
        java.lang.String str11 = itembasedRecommenderConfig8.getName();
        java.lang.String str12 = itembasedRecommenderConfig8.getSimilarityClass();
        itembasedRecommenderConfig8.setName("");
        itembasedRecommenderConfig8.setRetrainCronExpression("label");
        itembasedRecommenderConfig8.setSimilarItemsPerItem(10000);
        itembasedRecommenderConfig8.setRetrainCronExpression("MutablePreference{userID=0, itemID=52, value=-1.0}");
        itembasedRecommenderConfig8.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        itembasedRecommenderConfig8.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: batchSize");
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig8);
        int int26 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        int int27 = 0; // flaky: configuration4.getNumProcessorsForTraining();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
// flaky:         org.junit.Assert.assertTrue("'" + int26 + "' != '" + 32 + "'", int26 == 32);
// flaky:         org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
    }

    @Test
    public void test34156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34156");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet15 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet17 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet16.init((javax.servlet.ServletConfig) batchSetPreferencesServlet17);
        javax.servlet.ServletConfig servletConfig19 = batchSetPreferencesServlet16.getServletConfig();
        addCandidateServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        batchSetPreferencesServlet16.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str23 = recommendServlet22.getServletInfo();
        javax.servlet.ServletConfig servletConfig24 = recommendServlet22.getServletConfig();
        java.lang.String str25 = recommendServlet22.getServletInfo();
        batchSetPreferencesServlet16.init((javax.servlet.ServletConfig) recommendServlet22);
        javax.servlet.ServletConfig servletConfig27 = null;
        recommendServlet22.init(servletConfig27);
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) recommendServlet22);
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet30 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet30.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) deleteCandidateServlet30);
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet33 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        java.lang.String str34 = deleteCandidateServlet33.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet35 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet36 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet35.init((javax.servlet.ServletConfig) batchSetPreferencesServlet36);
        javax.servlet.ServletConfig servletConfig38 = batchSetPreferencesServlet36.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet39 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet39.init();
        setPreferenceServlet39.init();
        setPreferenceServlet39.destroy();
        setPreferenceServlet39.destroy();
        batchSetPreferencesServlet36.init((javax.servlet.ServletConfig) setPreferenceServlet39);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet45 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet46 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet47 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet46.init((javax.servlet.ServletConfig) batchSetPreferencesServlet47);
        javax.servlet.ServletConfig servletConfig49 = batchSetPreferencesServlet46.getServletConfig();
        addCandidateServlet45.init((javax.servlet.ServletConfig) batchSetPreferencesServlet46);
        javax.servlet.ServletConfig servletConfig51 = batchSetPreferencesServlet46.getServletConfig();
        batchSetPreferencesServlet36.init((javax.servlet.ServletConfig) batchSetPreferencesServlet46);
        batchSetPreferencesServlet36.destroy();
        deleteCandidateServlet33.init((javax.servlet.ServletConfig) batchSetPreferencesServlet36);
        java.lang.String str55 = batchSetPreferencesServlet36.getServletInfo();
        javax.servlet.ServletConfig servletConfig56 = batchSetPreferencesServlet36.getServletConfig();
        batchSetPreferencesServlet36.init();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet58 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        java.lang.String str59 = deleteCandidateServlet58.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet60 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet61 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet60.init((javax.servlet.ServletConfig) batchSetPreferencesServlet61);
        javax.servlet.ServletConfig servletConfig63 = batchSetPreferencesServlet61.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet64 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet64.init();
        setPreferenceServlet64.init();
        setPreferenceServlet64.destroy();
        setPreferenceServlet64.destroy();
        batchSetPreferencesServlet61.init((javax.servlet.ServletConfig) setPreferenceServlet64);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet70 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet71 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet72 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet71.init((javax.servlet.ServletConfig) batchSetPreferencesServlet72);
        javax.servlet.ServletConfig servletConfig74 = batchSetPreferencesServlet71.getServletConfig();
        addCandidateServlet70.init((javax.servlet.ServletConfig) batchSetPreferencesServlet71);
        javax.servlet.ServletConfig servletConfig76 = batchSetPreferencesServlet71.getServletConfig();
        batchSetPreferencesServlet61.init((javax.servlet.ServletConfig) batchSetPreferencesServlet71);
        batchSetPreferencesServlet61.destroy();
        deleteCandidateServlet58.init((javax.servlet.ServletConfig) batchSetPreferencesServlet61);
        deleteCandidateServlet58.destroy();
        batchSetPreferencesServlet36.init((javax.servlet.ServletConfig) deleteCandidateServlet58);
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) deleteCandidateServlet58);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration83 = batchSetPreferencesServlet1.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(servletConfig24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(servletConfig38);
        org.junit.Assert.assertNotNull(servletConfig49);
        org.junit.Assert.assertNotNull(servletConfig51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(servletConfig56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(servletConfig63);
        org.junit.Assert.assertNotNull(servletConfig74);
        org.junit.Assert.assertNotNull(servletConfig76);
    }

    @Test
    public void test34157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34157");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = null; // flaky: configuration4.getStorageConfiguration();
        java.lang.String str7 = null; // flaky: storageConfiguration6.getPassword();
// flaky:         storageConfiguration6.setPassword("MutablePreference{userID=100, itemID=-1, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test34158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34158");
        org.plista.kornakapi.web.MissingParameterException missingParameterException2 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: howMany");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.MissingParameterException missingParameterException11 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException13 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException11.addSuppressed((java.lang.Throwable) missingParameterException13);
        invalidParameterException9.addSuppressed((java.lang.Throwable) missingParameterException13);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException9);
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException20);
        invalidParameterException16.addSuppressed((java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException26);
        missingParameterException20.addSuppressed((java.lang.Throwable) invalidParameterException27);
        java.lang.Throwable[] throwableArray29 = missingParameterException20.getSuppressed();
        missingParameterException2.addSuppressed((java.lang.Throwable) missingParameterException20);
        java.lang.Throwable[] throwableArray31 = missingParameterException2.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException32 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=52, itemID=97, value=1.0}", (java.lang.Throwable) missingParameterException2);
        java.lang.String str33 = missingParameterException2.toString();
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany" + "'", str33, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany");
    }

    @Test
    public void test34159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34159");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("value");
        java.lang.String str17 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) 'a');
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "value" + "'", str17, "value");
    }

    @Test
    public void test34160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34160");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener12 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(trainingScheduler11);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener12);
    }

    @Test
    public void test34161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34161");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setRetrainCronExpression("");
        itembasedRecommenderConfig6.setSimilarItemsPerItem(10);
        java.lang.String str14 = itembasedRecommenderConfig6.getName();
        int int15 = itembasedRecommenderConfig6.getRetrainAfterPreferenceChanges();
        java.lang.String str16 = itembasedRecommenderConfig6.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        java.lang.String str18 = itembasedRecommenderConfig6.getSimilarityClass();
        int int19 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        itembasedRecommenderConfig6.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: file");
        int int22 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
    }

    @Test
    public void test34162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34162");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        long long5 = mutableCandidate0.getItemID();
        long long6 = mutableCandidate0.getItemID();
        long long7 = mutableCandidate0.getItemID();
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=32, itemID=32, value=10000.0}", (long) (short) 100);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "label" + "'", str8, "label");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "label" + "'", str9, "label");
    }

    @Test
    public void test34163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34163");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = configuration0.getFactorizationbasedRecommenders();
        java.lang.String str9 = configuration0.getModelDirectory();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test34164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34164");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException5.addSuppressed((java.lang.Throwable) missingParameterException7);
        java.lang.Throwable[] throwableArray9 = missingParameterException7.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException10);
        java.lang.Throwable[] throwableArray12 = invalidParameterException11.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=1.0}", (java.lang.Throwable) invalidParameterException11);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException14 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10000, itemID=-1, value=0.0}", (java.lang.Throwable) invalidParameterException11);
        java.lang.Throwable throwable16 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("hi!", throwable16);
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException26.addSuppressed((java.lang.Throwable) missingParameterException28);
        invalidParameterException24.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException24);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException35);
        invalidParameterException31.addSuppressed((java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.MissingParameterException missingParameterException40 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException43 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException44 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException43);
        missingParameterException40.addSuppressed((java.lang.Throwable) invalidParameterException44);
        invalidParameterException31.addSuppressed((java.lang.Throwable) missingParameterException40);
        org.plista.kornakapi.web.MissingParameterException missingParameterException49 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException49);
        org.plista.kornakapi.web.MissingParameterException missingParameterException54 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException55 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException54);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException56 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException54);
        org.plista.kornakapi.web.MissingParameterException missingParameterException58 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException60 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException58.addSuppressed((java.lang.Throwable) missingParameterException60);
        invalidParameterException56.addSuppressed((java.lang.Throwable) missingParameterException60);
        java.lang.Throwable[] throwableArray63 = missingParameterException60.getSuppressed();
        invalidParameterException50.addSuppressed((java.lang.Throwable) missingParameterException60);
        missingParameterException40.addSuppressed((java.lang.Throwable) invalidParameterException50);
        java.lang.Throwable[] throwableArray66 = invalidParameterException50.getSuppressed();
        java.lang.Throwable[] throwableArray67 = invalidParameterException50.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException71 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException73 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException71.addSuppressed((java.lang.Throwable) missingParameterException73);
        java.lang.Throwable[] throwableArray75 = missingParameterException73.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException76 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException73);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException77 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException76);
        invalidParameterException50.addSuppressed((java.lang.Throwable) invalidParameterException77);
        invalidParameterException17.addSuppressed((java.lang.Throwable) invalidParameterException77);
        invalidParameterException14.addSuppressed((java.lang.Throwable) invalidParameterException17);
        org.plista.kornakapi.web.MissingParameterException missingParameterException82 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=-1, value=100.0}");
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException82);
        java.lang.String str84 = missingParameterException82.toString();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(throwableArray75);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=100, itemID=-1, value=100.0}" + "'", str84, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=100, itemID=-1, value=100.0}");
    }

    @Test
    public void test34165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34165");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        java.lang.String str7 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        trainServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str16 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.init();
        batchDeleteCandidatesServlet15.destroy();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet19 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet19.destroy();
        javax.servlet.ServletConfig servletConfig21 = deleteCandidateServlet19.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str23 = batchDeleteCandidatesServlet22.getServletInfo();
        java.lang.String str24 = batchDeleteCandidatesServlet22.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet25 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet27 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet26.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet27);
        setPreferenceServlet25.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet27);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet30 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet25.init((javax.servlet.ServletConfig) recommendServlet30);
        batchDeleteCandidatesServlet22.init((javax.servlet.ServletConfig) setPreferenceServlet25);
        setPreferenceServlet25.destroy();
        deleteCandidateServlet19.init((javax.servlet.ServletConfig) setPreferenceServlet25);
        batchDeleteCandidatesServlet15.init((javax.servlet.ServletConfig) setPreferenceServlet25);
        setPreferenceServlet25.destroy();
        setPreferenceServlet8.init((javax.servlet.ServletConfig) setPreferenceServlet25);
        javax.servlet.ServletConfig servletConfig38 = setPreferenceServlet25.getServletConfig();
        setPreferenceServlet25.init();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(servletConfig21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(servletConfig38);
    }

    @Test
    public void test34166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34166");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(52);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test34167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34167");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet3 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str4 = batchDeleteCandidatesServlet3.getServletInfo();
        java.lang.String str5 = batchDeleteCandidatesServlet3.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet6 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet8 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet8);
        setPreferenceServlet6.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet8);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet11 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet6.init((javax.servlet.ServletConfig) recommendServlet11);
        batchDeleteCandidatesServlet3.init((javax.servlet.ServletConfig) setPreferenceServlet6);
        batchDeleteCandidatesServlet3.destroy();
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet3);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str17 = batchDeleteCandidatesServlet16.getServletInfo();
        java.lang.String str18 = batchDeleteCandidatesServlet16.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet19 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet20 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet20.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        setPreferenceServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet24 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet19.init((javax.servlet.ServletConfig) recommendServlet24);
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) setPreferenceServlet19);
        batchDeleteCandidatesServlet16.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet28 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str29 = trainServlet28.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet30 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet30.destroy();
        javax.servlet.ServletConfig servletConfig32 = deleteCandidateServlet30.getServletConfig();
        deleteCandidateServlet30.destroy();
        trainServlet28.init((javax.servlet.ServletConfig) deleteCandidateServlet30);
        javax.servlet.ServletConfig servletConfig35 = deleteCandidateServlet30.getServletConfig();
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) deleteCandidateServlet30);
        java.lang.String str37 = deleteCandidateServlet30.getServletInfo();
        deleteCandidateServlet30.destroy();
        batchDeleteCandidatesServlet3.init((javax.servlet.ServletConfig) deleteCandidateServlet30);
        javax.servlet.ServletConfig servletConfig40 = deleteCandidateServlet30.getServletConfig();
        deleteCandidateServlet30.destroy();
        deleteCandidateServlet30.init();
        // The following exception was thrown during execution in test generation
        try {
            deleteCandidateServlet30.log("MutablePreference{userID=100, itemID=10, value=-1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertNull(servletConfig35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(servletConfig40);
    }

    @Test
    public void test34168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34168");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        boolean boolean7 = factorizationbasedRecommenderConfig4.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig4.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        factorizationbasedRecommenderConfig4.setName("org.plista.kornakapi.web.MissingParameterException: file");
        java.lang.String str13 = factorizationbasedRecommenderConfig4.getName();
        java.lang.String str14 = factorizationbasedRecommenderConfig4.getName();
        factorizationbasedRecommenderConfig4.setLambda((double) '#');
        factorizationbasedRecommenderConfig4.setUsesImplicitFeedback(false);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: file" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: file");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: file" + "'", str14, "org.plista.kornakapi.web.MissingParameterException: file");
    }

    @Test
    public void test34169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34169");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig0.setLambda((double) (short) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(32);
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test34170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34170");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) '#');
        java.lang.String str10 = itembasedRecommenderConfig0.getName();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(100);
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (byte) 1);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file16 = null;
        org.plista.kornakapi.core.storage.Storage storage17 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender18 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer15.train(file16, storage17, recommender18, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test34171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34171");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 100);
        int int6 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int7 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=32, itemID=-1, value=100.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file12 = null;
        org.plista.kornakapi.core.storage.Storage storage13 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender14 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer11.train(file12, storage13, recommender14, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test34172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34172");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        java.lang.String str5 = mutableCandidate0.getLabel();
        long long6 = mutableCandidate0.getItemID();
        java.lang.String str7 = mutableCandidate0.getLabel();
        java.lang.String str8 = mutableCandidate0.getLabel();
        long long9 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=35.0}", 52L);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}", 100L);
        long long16 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=52, itemID=97, value=-1.0}", (long) 52);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "itemIDs" + "'", str5, "itemIDs");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "itemIDs" + "'", str7, "itemIDs");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemIDs" + "'", str8, "itemIDs");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
    }

    @Test
    public void test34173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34173");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair11 = null;
        double double13 = filteringLongPairRescorer10.rescore(longPair11, (double) (short) 100);
        org.apache.mahout.common.LongPair longPair14 = null;
        double double16 = filteringLongPairRescorer10.rescore(longPair14, (double) 1);
        org.apache.mahout.common.LongPair longPair17 = null;
        double double19 = filteringLongPairRescorer10.rescore(longPair17, (double) 1);
        org.apache.mahout.common.LongPair longPair20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = filteringLongPairRescorer10.isFiltered(longPair20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
    }

    @Test
    public void test34174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34174");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) (short) 100);
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((-1));
        factorizationbasedRecommenderConfig0.setLambda((double) 10.0f);
        factorizationbasedRecommenderConfig0.setAlpha((double) 10L);
        int int22 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) 52.0f);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test34175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34175");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (-1));
        long long6 = mutablePreference0.getUserID();
        long long7 = mutablePreference0.getItemID();
        float float8 = mutablePreference0.getValue();
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 32);
        java.lang.String str12 = mutablePreference0.toString();
        float float13 = mutablePreference0.getValue();
        float float14 = mutablePreference0.getValue();
        mutablePreference0.set((long) ' ', 32L, (float) ' ');
        java.lang.String str19 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + (-1.0f) + "'", float8 == (-1.0f));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=0, itemID=0, value=32.0}" + "'", str12, "MutablePreference{userID=0, itemID=0, value=32.0}");
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 32.0f + "'", float13 == 32.0f);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 32.0f + "'", float14 == 32.0f);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=32, itemID=32, value=32.0}" + "'", str19, "MutablePreference{userID=32, itemID=32, value=32.0}");
    }

    @Test
    public void test34176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34176");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=0, value=1.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        int int6 = factorizationbasedRecommenderConfig3.getNumberOfFeatures();
        java.lang.String str7 = factorizationbasedRecommenderConfig3.getRetrainCronExpression();
        factorizationbasedRecommenderConfig3.setNumberOfIterations((int) (short) 100);
        int int10 = factorizationbasedRecommenderConfig3.getNumberOfIterations();
        factorizationbasedRecommenderConfig3.setAlpha((double) (short) 100);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        configuration0.setNumProcessorsForTraining((int) (byte) -1);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = null;
        configuration0.setStorageConfiguration(storageConfiguration16);
        configuration0.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList20 = configuration0.getFactorizationbasedRecommenders();
        java.lang.String str21 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.storage.Storage storage22 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap23 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap24 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler25 = null;
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener28 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener28);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener32 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener32.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener32.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener34);
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener34);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration0, storage22, strMap23, strMap24, trainingScheduler25, (org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str21, "MutablePreference{userID=0, itemID=0, value=1.0}");
    }

    @Test
    public void test34177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34177");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        mutablePreference0.setValue((float) '4');
        mutablePreference0.set((long) (short) 1, (long) (byte) 10, (float) 10000);
        long long9 = mutablePreference0.getUserID();
        mutablePreference0.set((long) 10000, (long) 10, (float) 35L);
        long long14 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) '#');
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
    }

    @Test
    public void test34178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34178");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = null; // flaky: configuration5.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str9 = storageConfiguration8.getJdbcDriverClass();
        storageConfiguration8.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str12 = storageConfiguration8.getJdbcUrl();
        java.lang.String str13 = storageConfiguration8.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration8.getJdbcDriverClass();
        java.lang.String str15 = storageConfiguration8.getPassword();
        java.lang.String str16 = storageConfiguration8.getUsername();
        java.lang.String str17 = storageConfiguration8.getJdbcDriverClass();
        java.lang.String str18 = storageConfiguration8.getJdbcDriverClass();
        storageConfiguration8.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: recommender");
        storageConfiguration8.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration8);
        java.lang.String str24 = null; // flaky: configuration5.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str26 = storageConfiguration25.getJdbcDriverClass();
        storageConfiguration25.setPassword("value");
        java.lang.String str29 = storageConfiguration25.getJdbcUrl();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration25);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        java.lang.String str35 = factorizationbasedRecommenderConfig31.getRetrainCronExpression();
        factorizationbasedRecommenderConfig31.setNumberOfFeatures((int) 'a');
        factorizationbasedRecommenderConfig31.setRetrainAfterPreferenceChanges((int) (byte) 100);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer40 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig31);
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        org.plista.kornakapi.core.config.Configuration configuration42 = new org.plista.kornakapi.core.config.Configuration();
        configuration42.setModelDirectory("MutablePreference{userID=0, itemID=0, value=1.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig45 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double46 = factorizationbasedRecommenderConfig45.getAlpha();
        double double47 = factorizationbasedRecommenderConfig45.getLambda();
        int int48 = factorizationbasedRecommenderConfig45.getNumberOfFeatures();
        java.lang.String str49 = factorizationbasedRecommenderConfig45.getRetrainCronExpression();
        factorizationbasedRecommenderConfig45.setNumberOfIterations((int) (short) 100);
        int int52 = factorizationbasedRecommenderConfig45.getNumberOfIterations();
        factorizationbasedRecommenderConfig45.setAlpha((double) (short) 100);
        configuration42.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig45);
        java.lang.String str56 = configuration42.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig57 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double58 = factorizationbasedRecommenderConfig57.getAlpha();
        double double59 = factorizationbasedRecommenderConfig57.getLambda();
        int int60 = factorizationbasedRecommenderConfig57.getNumberOfFeatures();
        factorizationbasedRecommenderConfig57.setUsesImplicitFeedback(true);
        double double63 = factorizationbasedRecommenderConfig57.getAlpha();
        java.lang.String str64 = factorizationbasedRecommenderConfig57.getRetrainCronExpression();
        int int65 = factorizationbasedRecommenderConfig57.getRetrainAfterPreferenceChanges();
        int int66 = factorizationbasedRecommenderConfig57.getNumberOfIterations();
        factorizationbasedRecommenderConfig57.setNumberOfFeatures((int) '#');
        double double69 = factorizationbasedRecommenderConfig57.getLambda();
        java.lang.String str70 = factorizationbasedRecommenderConfig57.getRetrainCronExpression();
        double double71 = factorizationbasedRecommenderConfig57.getAlpha();
        double double72 = factorizationbasedRecommenderConfig57.getAlpha();
        configuration42.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig57);
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig57);
        int int75 = factorizationbasedRecommenderConfig57.getNumberOfFeatures();
        java.lang.Class<?> wildcardClass76 = factorizationbasedRecommenderConfig57.getClass();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str16, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=97, value=52.0}" + "'", str24, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=97, value=52.0}");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 100 + "'", int52 == 100);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str56, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 35 + "'", int75 == 35);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test34179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34179");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(10000);
        factorizationbasedRecommenderConfig0.setLambda((double) (-1L));
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test34180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34180");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getRetrainCronExpression();
        int int7 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig5.setRetrainCronExpression("value");
        int int13 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig5);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList15 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig16.setSimilarityClass("");
        java.lang.String str19 = itembasedRecommenderConfig16.getName();
        java.lang.String str20 = itembasedRecommenderConfig16.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig16);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str23 = itembasedRecommenderConfig22.getRetrainCronExpression();
        int int24 = itembasedRecommenderConfig22.getRetrainAfterPreferenceChanges();
        java.lang.String str25 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig22.setRetrainCronExpression("value");
        int int30 = itembasedRecommenderConfig22.getRetrainAfterPreferenceChanges();
        int int31 = itembasedRecommenderConfig22.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str34 = itembasedRecommenderConfig22.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem(35);
        int int38 = itembasedRecommenderConfig22.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (short) 100);
        int int41 = itembasedRecommenderConfig22.getSimilarItemsPerItem();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "value" + "'", str34, "value");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
    }

    @Test
    public void test34181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34181");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        long long4 = mutablePreference0.getUserID();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.set((long) 100, 0L, (float) 10000L);
        mutablePreference0.set((long) (byte) 10, 10000L, (float) (byte) 100);
        float float14 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) 97);
        mutablePreference0.setValue((float) 52L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 100.0f + "'", float14 == 100.0f);
    }

    @Test
    public void test34182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34182");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) -1);
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(52);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
    }

    @Test
    public void test34183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34183");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: file", (long) (short) 100);
        mutableCandidate0.set("MutablePreference{userID=100, itemID=0, value=0.0}", (long) 1);
        java.lang.String str7 = mutableCandidate0.getLabel();
        long long8 = mutableCandidate0.getItemID();
        long long9 = mutableCandidate0.getItemID();
        java.lang.String str10 = mutableCandidate0.getLabel();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str7, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str10, "MutablePreference{userID=100, itemID=0, value=0.0}");
    }

    @Test
    public void test34184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34184");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int7 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setAlpha(100.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test34185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34185");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        configuration0.setModelDirectory("userID");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        int int10 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig7.setNumberOfFeatures((int) (byte) 1);
        factorizationbasedRecommenderConfig7.setLambda((double) 100);
        int int17 = factorizationbasedRecommenderConfig7.getNumberOfIterations();
        factorizationbasedRecommenderConfig7.setNumberOfIterations(35);
        boolean boolean20 = factorizationbasedRecommenderConfig7.isUsesImplicitFeedback();
        int int21 = factorizationbasedRecommenderConfig7.getNumberOfIterations();
        boolean boolean22 = factorizationbasedRecommenderConfig7.isUsesImplicitFeedback();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 35 + "'", int21 == 35);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test34186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34186");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getAlpha();
        boolean boolean6 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 10);
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test34187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34187");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        int int4 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        java.lang.String str7 = configuration0.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList8 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig9 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double10 = factorizationbasedRecommenderConfig9.getAlpha();
        double double11 = factorizationbasedRecommenderConfig9.getLambda();
        int int12 = factorizationbasedRecommenderConfig9.getNumberOfFeatures();
        factorizationbasedRecommenderConfig9.setUsesImplicitFeedback(false);
        int int15 = factorizationbasedRecommenderConfig9.getNumberOfFeatures();
        factorizationbasedRecommenderConfig9.setLambda((double) 0);
        factorizationbasedRecommenderConfig9.setName("userID");
        factorizationbasedRecommenderConfig9.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: itemID");
        factorizationbasedRecommenderConfig9.setAlpha((double) 0L);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig9);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig25 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig25.setSimilarityClass("");
        java.lang.String str28 = itembasedRecommenderConfig25.getSimilarityClass();
        itembasedRecommenderConfig25.setRetrainCronExpression("userID");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig25);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer32 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig25);
        itembasedRecommenderConfig25.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        itembasedRecommenderConfig25.setSimilarityClass("MutablePreference{userID=97, itemID=97, value=32.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test34188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34188");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        int int3 = configuration0.getNumProcessorsForTraining();
        int int4 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = configuration0.getStorageConfiguration();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig8.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig8);
        itembasedRecommenderConfig8.setRetrainCronExpression("");
        itembasedRecommenderConfig8.setSimilarItemsPerItem(10);
        java.lang.String str16 = itembasedRecommenderConfig8.getName();
        int int17 = itembasedRecommenderConfig8.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig8.setName("MutablePreference{userID=100, itemID=0, value=0.0}");
        int int20 = itembasedRecommenderConfig8.getSimilarItemsPerItem();
        itembasedRecommenderConfig8.setSimilarityClass("MutablePreference{userID=1, itemID=-1, value=10000.0}");
        itembasedRecommenderConfig8.setRetrainAfterPreferenceChanges((int) 'a');
        configuration0.addItembasedRecommender(itembasedRecommenderConfig8);
        itembasedRecommenderConfig8.setRetrainCronExpression("MutablePreference{userID=1, itemID=100, value=52.0}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(storageConfiguration5);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
    }

    @Test
    public void test34189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34189");
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.config.Configuration configuration1 = org.plista.kornakapi.core.config.Configuration.fromXML("org.plista.kornakapi.web.MissingParameterException: value");
            org.junit.Assert.fail("Expected exception of type com.thoughtworks.xstream.io.StreamException; message:  : only whitespace content allowed before start tag and not o (position: START_DOCUMENT seen o... @1:1) ");
        } catch (com.thoughtworks.xstream.io.StreamException e) {
            // Expected exception.
        }
    }

    @Test
    public void test34190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34190");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig0.setLambda((double) (short) 1);
        boolean boolean10 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        boolean boolean12 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        double double13 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) (-1L));
        factorizationbasedRecommenderConfig0.setLambda((double) 10000L);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) 'a');
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=97, itemID=97, value=52.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
    }

    @Test
    public void test34191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34191");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        java.lang.String str6 = mutablePreference0.toString();
        mutablePreference0.set((long) (short) 1, (long) (-1), (float) 0);
        mutablePreference0.set(97L, (long) (short) 1, (float) 1);
        long long15 = mutablePreference0.getUserID();
        mutablePreference0.set((long) 'a', 1L, (float) (short) 10);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 97L + "'", long15 == 97L);
    }

    @Test
    public void test34192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34192");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        java.lang.String str7 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        trainServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        trainServlet0.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet16 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet16.destroy();
        trainServlet16.destroy();
        java.lang.String str19 = trainServlet16.getServletInfo();
        java.lang.String str20 = trainServlet16.getServletInfo();
        trainServlet0.init((javax.servlet.ServletConfig) trainServlet16);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet22 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet23 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet24 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet23.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet24);
        setPreferenceServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet24);
        java.lang.String str27 = setPreferenceServlet22.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet28 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet29 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet30 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        setPreferenceServlet28.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        setPreferenceServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet34 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str35 = batchDeleteCandidatesServlet34.getServletInfo();
        batchDeleteCandidatesServlet34.init();
        batchDeleteCandidatesServlet34.destroy();
        java.lang.String str38 = batchDeleteCandidatesServlet34.getServletInfo();
        batchDeleteCandidatesServlet34.destroy();
        setPreferenceServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet34);
        batchDeleteCandidatesServlet34.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet34);
        batchDeleteCandidatesServlet34.destroy();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet44 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet44.init();
        java.lang.String str46 = deleteCandidateServlet44.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet47 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet47.init();
        setPreferenceServlet47.init();
        setPreferenceServlet47.destroy();
        javax.servlet.ServletConfig servletConfig51 = setPreferenceServlet47.getServletConfig();
        java.lang.String str52 = setPreferenceServlet47.getServletInfo();
        setPreferenceServlet47.init();
        javax.servlet.ServletConfig servletConfig54 = setPreferenceServlet47.getServletConfig();
        java.lang.String str55 = setPreferenceServlet47.getServletInfo();
        deleteCandidateServlet44.init((javax.servlet.ServletConfig) setPreferenceServlet47);
        batchDeleteCandidatesServlet34.init((javax.servlet.ServletConfig) deleteCandidateServlet44);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(servletConfig51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(servletConfig54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
    }

    @Test
    public void test34193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34193");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 10);
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test34194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34194");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage9 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig11 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double12 = factorizationbasedRecommenderConfig11.getAlpha();
        double double13 = factorizationbasedRecommenderConfig11.getLambda();
        int int14 = factorizationbasedRecommenderConfig11.getNumberOfFeatures();
        factorizationbasedRecommenderConfig11.setUsesImplicitFeedback(true);
        double double17 = factorizationbasedRecommenderConfig11.getAlpha();
        java.lang.String str18 = factorizationbasedRecommenderConfig11.getRetrainCronExpression();
        int int19 = factorizationbasedRecommenderConfig11.getRetrainAfterPreferenceChanges();
        boolean boolean20 = factorizationbasedRecommenderConfig11.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig11.setRetrainAfterPreferenceChanges(1);
        double double23 = factorizationbasedRecommenderConfig11.getAlpha();
// flaky:         configuration10.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig11);
        java.lang.String str25 = null; // flaky: configuration10.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str27 = storageConfiguration26.getJdbcDriverClass();
        java.lang.String str28 = storageConfiguration26.getUsername();
        java.lang.String str29 = storageConfiguration26.getPassword();
// flaky:         configuration10.setStorageConfiguration(storageConfiguration26);
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(storage9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=97, value=52.0}" + "'", str25, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=97, value=52.0}");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test34195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34195");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("recommender");
        storageConfiguration0.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str10 = storageConfiguration0.getPassword();
        java.lang.String str11 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setPassword("itemID");
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=-1.0}");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=10000, itemID=52, value=0.0}");
        storageConfiguration0.setPassword("MutablePreference{userID=35, itemID=10000, value=32.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str10, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test34196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34196");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration0.getStorageConfiguration();
        int int8 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration9.getUsername();
        java.lang.String str12 = storageConfiguration9.getPassword();
        java.lang.String str13 = storageConfiguration9.getJdbcDriverClass();
        storageConfiguration9.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration9.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        storageConfiguration9.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration9);
        int int21 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining(10);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(storageConfiguration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
    }

    @Test
    public void test34197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34197");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig4.setNumberOfFeatures((int) (byte) 1);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = null; // flaky: configuration1.getStorageConfiguration();
// flaky:         configuration1.setModelDirectory("MutablePreference{userID=0, itemID=10000, value=0.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        int int19 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        java.lang.String str20 = factorizationbasedRecommenderConfig16.getRetrainCronExpression();
        int int21 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        java.lang.String str22 = factorizationbasedRecommenderConfig16.getName();
        int int23 = factorizationbasedRecommenderConfig16.getNumberOfIterations();
        factorizationbasedRecommenderConfig16.setNumberOfIterations(0);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        java.lang.String str27 = null; // flaky: configuration1.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList28 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=97, value=52.0}" + "'", str3, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=97, value=52.0}");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration13);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
// flaky:         org.junit.Assert.assertEquals("'" + str27 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=0.0}" + "'", str27, "MutablePreference{userID=0, itemID=10000, value=0.0}");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList28);
    }

    @Test
    public void test34198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34198");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        java.lang.String str16 = null; // flaky: configuration5.getModelDirectory();
        int int17 = 0; // flaky: configuration5.getNumProcessorsForTraining();
// flaky:         configuration5.setModelDirectory("label");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig20 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double21 = factorizationbasedRecommenderConfig20.getAlpha();
        double double22 = factorizationbasedRecommenderConfig20.getLambda();
        int int23 = factorizationbasedRecommenderConfig20.getNumberOfFeatures();
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(true);
        double double26 = factorizationbasedRecommenderConfig20.getAlpha();
        java.lang.String str27 = factorizationbasedRecommenderConfig20.getRetrainCronExpression();
        java.lang.String str28 = factorizationbasedRecommenderConfig20.getRetrainCronExpression();
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig20.setNumberOfIterations((int) '4');
        factorizationbasedRecommenderConfig20.setNumberOfIterations((int) (short) 0);
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig20);
        org.plista.kornakapi.web.Components components36 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration37 = components36.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration38 = components36.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage39 = components36.storage();
        org.plista.kornakapi.core.storage.Storage storage40 = components36.storage();
        org.plista.kornakapi.core.config.Configuration configuration41 = components36.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig42 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double43 = factorizationbasedRecommenderConfig42.getAlpha();
        double double44 = factorizationbasedRecommenderConfig42.getLambda();
        int int45 = factorizationbasedRecommenderConfig42.getNumberOfFeatures();
        factorizationbasedRecommenderConfig42.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig42.setNumberOfFeatures((int) (short) 100);
        boolean boolean50 = factorizationbasedRecommenderConfig42.isUsesImplicitFeedback();
// flaky:         configuration41.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig42);
        org.plista.kornakapi.web.Components components52 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration53 = components52.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler54 = components52.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler55 = components52.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration56 = components52.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration57 = components52.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig58 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig58.setSimilarityClass("");
        java.lang.String str61 = itembasedRecommenderConfig58.getName();
        java.lang.String str62 = itembasedRecommenderConfig58.getSimilarityClass();
        itembasedRecommenderConfig58.setName("");
        java.lang.String str65 = itembasedRecommenderConfig58.getSimilarityClass();
// flaky:         configuration57.addItembasedRecommender(itembasedRecommenderConfig58);
        itembasedRecommenderConfig58.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration41.addItembasedRecommender(itembasedRecommenderConfig58);
        java.lang.String str70 = null; // flaky: configuration41.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig71 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str72 = itembasedRecommenderConfig71.getRetrainCronExpression();
        int int73 = itembasedRecommenderConfig71.getRetrainAfterPreferenceChanges();
        java.lang.String str74 = itembasedRecommenderConfig71.getSimilarityClass();
        itembasedRecommenderConfig71.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig71.setSimilarityClass("");
        int int79 = itembasedRecommenderConfig71.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer80 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig71);
// flaky:         configuration41.addItembasedRecommender(itembasedRecommenderConfig71);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig71);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer83 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig71);
        itembasedRecommenderConfig71.setSimilarityClass("MutablePreference{userID=-1, itemID=0, value=10.0}");
        itembasedRecommenderConfig71.setRetrainCronExpression("MutablePreference{userID=32, itemID=32, value=10000.0}");
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=0.0}" + "'", str16, "MutablePreference{userID=0, itemID=10000, value=0.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(components36);
// flaky:         org.junit.Assert.assertNotNull(configuration37);
// flaky:         org.junit.Assert.assertNotNull(configuration38);
        org.junit.Assert.assertNull(storage39);
        org.junit.Assert.assertNull(storage40);
// flaky:         org.junit.Assert.assertNotNull(configuration41);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(components52);
// flaky:         org.junit.Assert.assertNotNull(configuration53);
        org.junit.Assert.assertNull(trainingScheduler54);
        org.junit.Assert.assertNull(trainingScheduler55);
// flaky:         org.junit.Assert.assertNotNull(configuration56);
// flaky:         org.junit.Assert.assertNotNull(configuration57);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
// flaky:         org.junit.Assert.assertEquals("'" + str70 + "' != '" + "label" + "'", str70, "label");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test34199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34199");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        long long12 = mutableCandidate0.getItemID();
        mutableCandidate0.set("userID", (long) '#');
        java.lang.String str16 = mutableCandidate0.getLabel();
        long long17 = mutableCandidate0.getItemID();
        long long18 = mutableCandidate0.getItemID();
        long long19 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "userID" + "'", str16, "userID");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 35L + "'", long17 == 35L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 35L + "'", long18 == 35L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 35L + "'", long19 == 35L);
    }

    @Test
    public void test34200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34200");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
// flaky:         configuration4.setModelDirectory("userID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str16 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setPassword("hi!");
        java.lang.String str19 = storageConfiguration7.getPassword();
        java.lang.String str20 = storageConfiguration7.getUsername();
        java.lang.String str21 = storageConfiguration7.getJdbcUrl();
        storageConfiguration7.setUsername("org.plista.kornakapi.web.MissingParameterException: itemID");
// flaky:         configuration4.setStorageConfiguration(storageConfiguration7);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig25 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double26 = factorizationbasedRecommenderConfig25.getAlpha();
        double double27 = factorizationbasedRecommenderConfig25.getLambda();
        int int28 = factorizationbasedRecommenderConfig25.getNumberOfFeatures();
        factorizationbasedRecommenderConfig25.setUsesImplicitFeedback(true);
        double double31 = factorizationbasedRecommenderConfig25.getAlpha();
        java.lang.String str32 = factorizationbasedRecommenderConfig25.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer33 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig25);
        factorizationbasedRecommenderConfig25.setNumberOfFeatures((int) (short) -1);
        factorizationbasedRecommenderConfig25.setLambda((double) 52.0f);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig25);
        factorizationbasedRecommenderConfig25.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=-1.0}");
        factorizationbasedRecommenderConfig25.setAlpha(0.0d);
        factorizationbasedRecommenderConfig25.setAlpha((double) 35L);
        factorizationbasedRecommenderConfig25.setLambda((double) 10.0f);
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str20, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test34201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34201");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        java.lang.String str3 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str6 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet7 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        setPreferenceServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet7.init((javax.servlet.ServletConfig) recommendServlet12);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet7);
        batchDeleteCandidatesServlet4.destroy();
        batchDeleteCandidatesServlet4.init();
        batchDeleteCandidatesServlet4.destroy();
        javax.servlet.ServletConfig servletConfig18 = batchDeleteCandidatesServlet4.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        batchSetPreferencesServlet1.init();
        javax.servlet.ServletConfig servletConfig21 = batchSetPreferencesServlet1.getServletConfig();
        batchSetPreferencesServlet1.init();
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet1.log("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertNotNull(servletConfig21);
    }

    @Test
    public void test34202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34202");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        java.lang.String str2 = mutablePreference0.toString();
        float float3 = mutablePreference0.getValue();
        mutablePreference0.set((long) (byte) 100, (long) 1, 52.0f);
        mutablePreference0.set(1L, 97L, (float) '4');
        mutablePreference0.set(0L, (-1L), (float) 32);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str2, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 0.0f + "'", float3 == 0.0f);
    }

    @Test
    public void test34203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34203");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: howMany");
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 10);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        boolean boolean15 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setLambda((double) 10000L);
        double double18 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10000.0d + "'", double18 == 10000.0d);
    }

    @Test
    public void test34204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34204");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainCronExpression("userID");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) '#');
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=100, itemID=-1, value=100.0}");
        java.lang.String str11 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) '#');
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file15 = null;
        org.plista.kornakapi.core.storage.Storage storage16 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender17 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer14.train(file15, storage16, recommender17, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=100.0}" + "'", str11, "MutablePreference{userID=100, itemID=-1, value=100.0}");
    }

    @Test
    public void test34205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34205");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) '4');
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: howMany");
        boolean boolean14 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test34206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34206");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=100, itemID=0, value=1.0}", (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test34207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34207");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        java.lang.String str5 = configuration0.getModelDirectory();
        org.plista.kornakapi.web.Components components6 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage7 = components6.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = components6.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration8.getStorageConfiguration();
// flaky:         storageConfiguration9.setUsername("howMany");
        java.lang.String str12 = null; // flaky: storageConfiguration9.getJdbcDriverClass();
        configuration0.setStorageConfiguration(storageConfiguration9);
        java.lang.String str14 = configuration0.getModelDirectory();
        org.plista.kornakapi.web.Components components15 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage16 = components15.storage();
        org.plista.kornakapi.core.config.Configuration configuration17 = components15.getConfiguration();
        java.lang.String str18 = null; // flaky: configuration17.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = null; // flaky: configuration17.getStorageConfiguration();
        java.lang.String str20 = null; // flaky: storageConfiguration19.getJdbcDriverClass();
        java.lang.String str21 = null; // flaky: storageConfiguration19.getJdbcUrl();
        configuration0.setStorageConfiguration(storageConfiguration19);
// flaky:         storageConfiguration19.setUsername("");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(components6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(components15);
        org.junit.Assert.assertNull(storage16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "userID" + "'", str18, "userID");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test34208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34208");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 100);
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(1);
        boolean boolean12 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        double double13 = factorizationbasedRecommenderConfig0.getAlpha();
        double double14 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 10);
        java.lang.String str19 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test34209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34209");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        int int4 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration7.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration7);
        java.lang.String str18 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        configuration0.setModelDirectory("MutablePreference{userID=52, itemID=32, value=-1.0}");
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList25 = configuration0.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList25);
    }

    @Test
    public void test34210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34210");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        java.lang.String str5 = configuration0.getModelDirectory();
        org.plista.kornakapi.web.Components components6 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage7 = components6.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = components6.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration8.getStorageConfiguration();
// flaky:         storageConfiguration9.setUsername("howMany");
        java.lang.String str12 = null; // flaky: storageConfiguration9.getJdbcDriverClass();
        configuration0.setStorageConfiguration(storageConfiguration9);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        double double16 = factorizationbasedRecommenderConfig14.getLambda();
        int int17 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        java.lang.String str18 = factorizationbasedRecommenderConfig14.getRetrainCronExpression();
        int int19 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        factorizationbasedRecommenderConfig14.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig14.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double24 = factorizationbasedRecommenderConfig14.getLambda();
        factorizationbasedRecommenderConfig14.setAlpha((double) (short) 10);
        factorizationbasedRecommenderConfig14.setNumberOfIterations(100);
        boolean boolean29 = factorizationbasedRecommenderConfig14.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig14.setNumberOfFeatures((int) (byte) 0);
        int int32 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        factorizationbasedRecommenderConfig14.setNumberOfFeatures(32);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(components6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test34211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34211");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        boolean boolean6 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig3);
        double double8 = factorizationbasedRecommenderConfig3.getAlpha();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
// flaky:         configuration2.setModelDirectory("MutablePreference{userID=0, itemID=0, value=52.0}");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList12 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.Configuration configuration13 = new org.plista.kornakapi.core.config.Configuration();
        configuration13.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str16 = configuration13.getModelDirectory();
        configuration13.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig19 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double20 = factorizationbasedRecommenderConfig19.getAlpha();
        configuration13.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig19);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration22 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str23 = storageConfiguration22.getUsername();
        java.lang.String str24 = storageConfiguration22.getJdbcDriverClass();
        java.lang.String str25 = storageConfiguration22.getPassword();
        storageConfiguration22.setJdbcUrl("file");
        configuration13.setStorageConfiguration(storageConfiguration22);
        org.plista.kornakapi.web.Components components29 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration30 = components29.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList31 = null; // flaky: configuration30.getFactorizationbasedRecommenders();
        java.lang.String str32 = null; // flaky: configuration30.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList33 = null; // flaky: configuration30.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig34 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig34.setName("recommender");
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig34);
        configuration13.addItembasedRecommender(itembasedRecommenderConfig34);
        itembasedRecommenderConfig34.setSimilarItemsPerItem(0);
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig34);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig42 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double43 = factorizationbasedRecommenderConfig42.getAlpha();
        double double44 = factorizationbasedRecommenderConfig42.getLambda();
        int int45 = factorizationbasedRecommenderConfig42.getNumberOfFeatures();
        factorizationbasedRecommenderConfig42.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig42.setNumberOfFeatures((int) (short) 100);
        boolean boolean50 = factorizationbasedRecommenderConfig42.isUsesImplicitFeedback();
        int int51 = factorizationbasedRecommenderConfig42.getNumberOfFeatures();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig42);
        double double53 = factorizationbasedRecommenderConfig42.getLambda();
        factorizationbasedRecommenderConfig42.setLambda((double) 100);
        double double56 = factorizationbasedRecommenderConfig42.getAlpha();
        factorizationbasedRecommenderConfig42.setName("MutablePreference{userID=52, itemID=32, value=-1.0}");
        factorizationbasedRecommenderConfig42.setRetrainAfterPreferenceChanges(1);
        factorizationbasedRecommenderConfig42.setLambda((double) (-1L));
        double double63 = factorizationbasedRecommenderConfig42.getLambda();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(components29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str32, "MutablePreference{userID=0, itemID=0, value=52.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList33);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + (-1.0d) + "'", double63 == (-1.0d));
    }

    @Test
    public void test34212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34212");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
// flaky:         configuration5.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
    }

    @Test
    public void test34213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34213");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage11 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration12 = components0.getConfiguration();
// flaky:         configuration12.setNumProcessorsForTraining((int) (byte) 1);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = null; // flaky: configuration12.getItembasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(preferenceChangeListener10);
        org.junit.Assert.assertNull(storage11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
    }

    @Test
    public void test34214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34214");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=0, itemID=97, value=10.0}");
        factorizationbasedRecommenderConfig0.setAlpha((double) 10);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 0);
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getName();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=0, itemID=97, value=10.0}" + "'", str15, "MutablePreference{userID=0, itemID=97, value=10.0}");
    }

    @Test
    public void test34215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34215");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet3 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str4 = batchDeleteCandidatesServlet3.getServletInfo();
        java.lang.String str5 = batchDeleteCandidatesServlet3.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet6 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet8 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet8);
        setPreferenceServlet6.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet8);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet11 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet6.init((javax.servlet.ServletConfig) recommendServlet11);
        batchDeleteCandidatesServlet3.init((javax.servlet.ServletConfig) setPreferenceServlet6);
        batchDeleteCandidatesServlet3.destroy();
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet3);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        javax.servlet.ServletConfig servletConfig17 = batchDeleteCandidatesServlet16.getServletConfig();
        batchDeleteCandidatesServlet16.destroy();
        javax.servlet.ServletConfig servletConfig19 = batchDeleteCandidatesServlet16.getServletConfig();
        batchDeleteCandidatesServlet16.destroy();
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        javax.servlet.ServletConfig servletConfig22 = batchAddCandidatesServlet0.getServletConfig();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertNotNull(servletConfig22);
    }

    @Test
    public void test34216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34216");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.setValue(0.0f);
        java.lang.String str6 = mutablePreference0.toString();
        mutablePreference0.set((long) '4', 0L, (-1.0f));
        mutablePreference0.set(0L, 0L, (float) 35L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=0.0}");
    }

    @Test
    public void test34217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34217");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler12, "label", (int) ' ');
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener15);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener25 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener37 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener37);
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener42 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener44 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener42.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener44);
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener37.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener44);
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener37);
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener54 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener56 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener54.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener56);
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener62 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener64 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener64);
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener69 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener69.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener71 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener69.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener71);
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener71);
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components80 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage81 = components80.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener82 = components80.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener83 = components80.preferenceChangeListener();
        preferenceChangeListener83.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.addDelegate(preferenceChangeListener83);
        delegatingPreferenceChangeListener56.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener64);
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener56);
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        org.junit.Assert.assertNotNull(components80);
        org.junit.Assert.assertNull(storage81);
        org.junit.Assert.assertNotNull(preferenceChangeListener82);
        org.junit.Assert.assertNotNull(preferenceChangeListener83);
    }

    @Test
    public void test34218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34218");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarityClass("label");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(52);
        itembasedRecommenderConfig0.setRetrainCronExpression("recommender");
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 100);
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (byte) 10);
        java.lang.String str16 = itembasedRecommenderConfig0.getName();
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 1);
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=100, itemID=0, value=1.0}");
        java.lang.String str21 = itembasedRecommenderConfig0.getSimilarityClass();
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "label" + "'", str21, "label");
    }

    @Test
    public void test34219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34219");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
// flaky:         configuration9.setNumProcessorsForTraining(52);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration9.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components13 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = components13.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration15 = components13.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = components13.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration17 = components13.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList18 = null; // flaky: configuration17.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = null; // flaky: configuration17.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = null; // flaky: configuration17.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration21 = null; // flaky: configuration17.getStorageConfiguration();
        int int22 = 0; // flaky: configuration17.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig23 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double24 = factorizationbasedRecommenderConfig23.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer25 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig23);
        factorizationbasedRecommenderConfig23.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig23.setNumberOfIterations((int) '#');
        double double30 = factorizationbasedRecommenderConfig23.getLambda();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer31 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig23);
        factorizationbasedRecommenderConfig23.setUsesImplicitFeedback(false);
// flaky:         configuration17.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig23);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList35 = null; // flaky: configuration17.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig36 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig36.setSimilarityClass("");
        java.lang.String str39 = itembasedRecommenderConfig36.getName();
        java.lang.String str40 = itembasedRecommenderConfig36.getSimilarityClass();
        itembasedRecommenderConfig36.setName("");
        java.lang.String str43 = itembasedRecommenderConfig36.getSimilarityClass();
        int int44 = itembasedRecommenderConfig36.getRetrainAfterPreferenceChanges();
// flaky:         configuration17.addItembasedRecommender(itembasedRecommenderConfig36);
// flaky:         configuration9.addItembasedRecommender(itembasedRecommenderConfig36);
        itembasedRecommenderConfig36.setSimilarItemsPerItem((int) (short) 1);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer49 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig36);
        itembasedRecommenderConfig36.setSimilarItemsPerItem(1);
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNotNull(components13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
// flaky:         org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNull(trainingScheduler16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList18);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration19);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration20);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration21);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test34220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34220");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
// flaky:         configuration4.setModelDirectory("userID");
// flaky:         configuration4.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration10.getJdbcUrl();
        java.lang.String str15 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setJdbcUrl("hi!");
        java.lang.String str18 = storageConfiguration10.getPassword();
        storageConfiguration10.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: file");
        java.lang.String str21 = storageConfiguration10.getPassword();
        storageConfiguration10.setJdbcDriverClass("file");
// flaky:         configuration4.setStorageConfiguration(storageConfiguration10);
        storageConfiguration10.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        java.lang.String str27 = storageConfiguration10.getUsername();
        java.lang.String str28 = storageConfiguration10.getJdbcDriverClass();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str27, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "file" + "'", str28, "file");
    }

    @Test
    public void test34221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34221");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) (byte) 10);
        double double10 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (short) 100);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) (short) -1, 1.0d);
        double double18 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) 0.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = filteringLongPairRescorer19.isFiltered(longPair20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 1.0d + "'", double15 == 1.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test34222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34222");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str3 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.init();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test34223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34223");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) recommendServlet5);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str8 = batchDeleteCandidatesServlet7.getServletInfo();
        java.lang.String str9 = batchDeleteCandidatesServlet7.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet10 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet11 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet12 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        setPreferenceServlet10.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet15 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet10.init((javax.servlet.ServletConfig) recommendServlet15);
        batchDeleteCandidatesServlet7.init((javax.servlet.ServletConfig) setPreferenceServlet10);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet10);
        javax.servlet.ServletConfig servletConfig19 = setPreferenceServlet0.getServletConfig();
        java.lang.String str20 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        recommendServlet21.destroy();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet23 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet24 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig27 = batchSetPreferencesServlet24.getServletConfig();
        addCandidateServlet23.init((javax.servlet.ServletConfig) batchSetPreferencesServlet24);
        batchSetPreferencesServlet24.destroy();
        java.lang.String str30 = batchSetPreferencesServlet24.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet31 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet31.init();
        setPreferenceServlet31.init();
        setPreferenceServlet31.destroy();
        javax.servlet.ServletConfig servletConfig35 = setPreferenceServlet31.getServletConfig();
        java.lang.String str36 = setPreferenceServlet31.getServletInfo();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) setPreferenceServlet31);
        recommendServlet21.init((javax.servlet.ServletConfig) setPreferenceServlet31);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet39 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet40 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet41 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet40.init((javax.servlet.ServletConfig) batchSetPreferencesServlet41);
        batchDeleteCandidatesServlet39.init((javax.servlet.ServletConfig) batchSetPreferencesServlet41);
        java.lang.String str44 = batchSetPreferencesServlet41.getServletInfo();
        batchSetPreferencesServlet41.destroy();
        batchSetPreferencesServlet41.destroy();
        setPreferenceServlet31.init((javax.servlet.ServletConfig) batchSetPreferencesServlet41);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet31);
        javax.servlet.ServletConfig servletConfig49 = setPreferenceServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig50 = setPreferenceServlet0.getServletConfig();
        setPreferenceServlet0.destroy();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(servletConfig35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNotNull(servletConfig49);
        org.junit.Assert.assertNotNull(servletConfig50);
    }

    @Test
    public void test34224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34224");
        org.plista.kornakapi.core.config.Configuration configuration0 = null;
        org.plista.kornakapi.core.storage.Storage storage1 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap2 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap3 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener8 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler5, "label", (int) '#');
        inMemoryPreferenceChangeListener8.notifyOfPreferenceChange();
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration0, storage1, strMap2, strMap3, trainingScheduler4, (org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test34225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34225");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage9 = components0.storage();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNull(trainingScheduler7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(storage9);
    }

    @Test
    public void test34226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34226");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
// flaky:         configuration1.setNumProcessorsForTraining((int) (byte) 1);
        org.plista.kornakapi.core.config.Configuration configuration4 = new org.plista.kornakapi.core.config.Configuration();
        configuration4.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        java.lang.String str11 = configuration4.getModelDirectory();
        int int12 = configuration4.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList13 = configuration4.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList14 = configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration15.getJdbcUrl();
        java.lang.String str20 = storageConfiguration15.getJdbcUrl();
        java.lang.String str21 = storageConfiguration15.getJdbcUrl();
        storageConfiguration15.setUsername("recommender");
        java.lang.String str24 = storageConfiguration15.getJdbcDriverClass();
        configuration4.setStorageConfiguration(storageConfiguration15);
        org.plista.kornakapi.web.Components components26 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration27 = components26.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler28 = components26.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler29 = components26.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration30 = components26.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration31 = components26.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList32 = null; // flaky: configuration31.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration33 = null; // flaky: configuration31.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration34 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str35 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str38 = storageConfiguration34.getJdbcUrl();
        java.lang.String str39 = storageConfiguration34.getJdbcDriverClass();
        java.lang.String str40 = storageConfiguration34.getJdbcDriverClass();
        java.lang.String str41 = storageConfiguration34.getPassword();
        java.lang.String str42 = storageConfiguration34.getUsername();
        java.lang.String str43 = storageConfiguration34.getJdbcDriverClass();
        java.lang.String str44 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: recommender");
        storageConfiguration34.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         configuration31.setStorageConfiguration(storageConfiguration34);
        configuration4.setStorageConfiguration(storageConfiguration34);
// flaky:         configuration1.setStorageConfiguration(storageConfiguration34);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig52 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double53 = factorizationbasedRecommenderConfig52.getAlpha();
        double double54 = factorizationbasedRecommenderConfig52.getLambda();
        int int55 = factorizationbasedRecommenderConfig52.getNumberOfFeatures();
        factorizationbasedRecommenderConfig52.setLambda((double) 1);
        double double58 = factorizationbasedRecommenderConfig52.getAlpha();
        factorizationbasedRecommenderConfig52.setRetrainCronExpression("hi!");
        factorizationbasedRecommenderConfig52.setLambda((double) '#');
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig52);
        factorizationbasedRecommenderConfig52.setAlpha((-1.0d));
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList13);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(components26);
// flaky:         org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(trainingScheduler28);
        org.junit.Assert.assertNull(trainingScheduler29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(configuration31);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList32);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str42, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
    }

    @Test
    public void test34227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34227");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getUserID();
        long long4 = mutablePreference0.getUserID();
        mutablePreference0.set(97L, (long) 1, (float) 97L);
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (byte) 1);
        mutablePreference0.set((long) '#', (long) (short) 0, (float) (-1L));
        mutablePreference0.setValue((float) 97L);
        mutablePreference0.set(1L, (long) 35, (float) '4');
        mutablePreference0.set((long) (short) 0, 0L, (float) (byte) 100);
        long long26 = mutablePreference0.getUserID();
        java.lang.String str27 = mutablePreference0.toString();
        float float28 = mutablePreference0.getValue();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) 'a');
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str27, "MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertTrue("'" + float28 + "' != '" + 100.0f + "'", float28 == 100.0f);
    }

    @Test
    public void test34228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34228");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = components0.preferenceChangeListener();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNotNull(preferenceChangeListener7);
    }

    @Test
    public void test34229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34229");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10000);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getName();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(100);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test34230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34230");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration6.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList8 = null; // flaky: configuration6.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList9 = null; // flaky: configuration6.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig10 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double11 = factorizationbasedRecommenderConfig10.getAlpha();
        double double12 = factorizationbasedRecommenderConfig10.getLambda();
        int int13 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        factorizationbasedRecommenderConfig10.setName("");
        factorizationbasedRecommenderConfig10.setName("");
        int int18 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        factorizationbasedRecommenderConfig10.setNumberOfFeatures((int) '4');
        factorizationbasedRecommenderConfig10.setLambda((double) 52.0f);
        int int23 = factorizationbasedRecommenderConfig10.getRetrainAfterPreferenceChanges();
// flaky:         configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig10);
        double double25 = factorizationbasedRecommenderConfig10.getAlpha();
        factorizationbasedRecommenderConfig10.setLambda((double) 35L);
        factorizationbasedRecommenderConfig10.setNumberOfIterations((int) (short) 10);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList8);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test34231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34231");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.lang.String str9 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration10.getJdbcUrl();
        java.lang.String str15 = storageConfiguration10.getJdbcUrl();
        storageConfiguration10.setPassword("MutablePreference{userID=0, itemID=0, value=1.0}");
        configuration0.setStorageConfiguration(storageConfiguration10);
        storageConfiguration10.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration10.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: batchSize");
        java.lang.String str23 = storageConfiguration10.getUsername();
        storageConfiguration10.setJdbcDriverClass("MutablePreference{userID=52, itemID=52, value=-1.0}");
        java.lang.String str26 = storageConfiguration10.getJdbcDriverClass();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str23, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "MutablePreference{userID=52, itemID=52, value=-1.0}" + "'", str26, "MutablePreference{userID=52, itemID=52, value=-1.0}");
    }

    @Test
    public void test34232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34232");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet4 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet4.destroy();
        javax.servlet.ServletConfig servletConfig6 = deleteCandidateServlet4.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str8 = batchDeleteCandidatesServlet7.getServletInfo();
        java.lang.String str9 = batchDeleteCandidatesServlet7.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet10 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet11 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet12 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        setPreferenceServlet10.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet15 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet10.init((javax.servlet.ServletConfig) recommendServlet15);
        batchDeleteCandidatesServlet7.init((javax.servlet.ServletConfig) setPreferenceServlet10);
        setPreferenceServlet10.destroy();
        deleteCandidateServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet10);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet10);
        batchDeleteCandidatesServlet0.destroy();
        javax.servlet.ServletConfig servletConfig22 = batchDeleteCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet23 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet24 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig27 = batchSetPreferencesServlet24.getServletConfig();
        addCandidateServlet23.init((javax.servlet.ServletConfig) batchSetPreferencesServlet24);
        batchSetPreferencesServlet24.init();
        java.lang.String str30 = batchSetPreferencesServlet24.getServletInfo();
        batchSetPreferencesServlet24.init();
        batchSetPreferencesServlet24.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet24);
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet0.log("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=35, itemID=35, value=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(servletConfig22);
        org.junit.Assert.assertNotNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test34233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34233");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int7 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 100);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=1, itemID=-1, value=10.0}");
        factorizationbasedRecommenderConfig0.setLambda((double) 10);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test34234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34234");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str2 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcUrl("");
        storageConfiguration0.setJdbcUrl("hi!");
        storageConfiguration0.setUsername("MutablePreference{userID=35, itemID=97, value=52.0}");
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10, itemID=1, value=52.0}");
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=32, itemID=1, value=1.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test34235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34235");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        java.lang.String str3 = batchSetPreferencesServlet1.getServletInfo();
        java.lang.String str4 = batchSetPreferencesServlet1.getServletInfo();
        batchSetPreferencesServlet1.destroy();
        javax.servlet.ServletConfig servletConfig6 = batchSetPreferencesServlet1.getServletConfig();
        batchSetPreferencesServlet1.init();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(servletConfig6);
    }

    @Test
    public void test34236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34236");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
// flaky:         configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.web.Components components34 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage35 = components34.storage();
        org.plista.kornakapi.core.config.Configuration configuration36 = components34.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig37 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double38 = factorizationbasedRecommenderConfig37.getAlpha();
        double double39 = factorizationbasedRecommenderConfig37.getLambda();
        boolean boolean40 = factorizationbasedRecommenderConfig37.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer41 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig37);
        double double42 = factorizationbasedRecommenderConfig37.getAlpha();
// flaky:         configuration36.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig37);
        double double44 = factorizationbasedRecommenderConfig37.getAlpha();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig37);
// flaky:         configuration5.setModelDirectory("MutablePreference{userID=-1, itemID=0, value=52.0}");
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(components34);
        org.junit.Assert.assertNull(storage35);
// flaky:         org.junit.Assert.assertNotNull(configuration36);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
    }

    @Test
    public void test34237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34237");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration12 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList13 = null; // flaky: configuration12.getItembasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNotNull(preferenceChangeListener9);
        org.junit.Assert.assertNotNull(preferenceChangeListener10);
        org.junit.Assert.assertNull(trainingScheduler11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList13);
    }

    @Test
    public void test34238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34238");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray5 = missingParameterException4.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.MissingParameterException missingParameterException9 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray10 = missingParameterException9.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException9);
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=0.0}", (java.lang.Throwable) invalidParameterException17);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: howMany", (java.lang.Throwable) invalidParameterException17);
        invalidParameterException11.addSuppressed((java.lang.Throwable) invalidParameterException19);
        missingParameterException4.addSuppressed((java.lang.Throwable) invalidParameterException11);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=52, itemID=97, value=1.0}", (java.lang.Throwable) missingParameterException4);
        java.lang.Throwable[] throwableArray24 = missingParameterException4.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test34239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34239");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration0.getStorageConfiguration();
        storageConfiguration11.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration11.getPassword();
        storageConfiguration11.setUsername("howMany");
        storageConfiguration11.setJdbcUrl("value");
        java.lang.String str19 = storageConfiguration11.getJdbcUrl();
        storageConfiguration11.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=52, itemID=97, value=1.0}");
        storageConfiguration11.setPassword("MutablePreference{userID=32, itemID=0, value=0.0}");
        storageConfiguration11.setJdbcUrl("MutablePreference{userID=32, itemID=1, value=1.0}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "itemIDs" + "'", str14, "itemIDs");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "value" + "'", str19, "value");
    }

    @Test
    public void test34240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34240");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        boolean boolean7 = factorizationbasedRecommenderConfig4.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig4.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str13 = itembasedRecommenderConfig12.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig12);
        int int15 = itembasedRecommenderConfig12.getSimilarItemsPerItem();
        java.lang.String str16 = itembasedRecommenderConfig12.getSimilarityClass();
        java.lang.String str17 = itembasedRecommenderConfig12.getSimilarityClass();
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig12);
        itembasedRecommenderConfig12.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer21 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig12);
        java.lang.String str22 = itembasedRecommenderConfig12.getSimilarityClass();
        int int23 = itembasedRecommenderConfig12.getSimilarItemsPerItem();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str22, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test34241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34241");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        long long5 = mutablePreference0.getUserID();
        long long6 = mutablePreference0.getUserID();
        java.lang.String str7 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) -1, 52L, 10.0f);
        float float12 = mutablePreference0.getValue();
        java.lang.String str13 = mutablePreference0.toString();
        float float14 = mutablePreference0.getValue();
        long long15 = mutablePreference0.getUserID();
        java.lang.String str16 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 10.0f + "'", float12 == 10.0f);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=-1, itemID=52, value=10.0}" + "'", str13, "MutablePreference{userID=-1, itemID=52, value=10.0}");
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 10.0f + "'", float14 == 10.0f);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=-1, itemID=52, value=10.0}" + "'", str16, "MutablePreference{userID=-1, itemID=52, value=10.0}");
    }

    @Test
    public void test34242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34242");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = null;
        batchDeleteCandidatesServlet0.init(servletConfig3);
        batchDeleteCandidatesServlet0.destroy();
        java.lang.String str6 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig7 = batchDeleteCandidatesServlet0.getServletConfig();
        java.lang.String str8 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig9 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(servletConfig9);
    }

    @Test
    public void test34243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34243");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", (long) (byte) -1);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=0.0}", (long) (byte) 10);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=100, value=97.0}", 52L);
        long long15 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=-1, itemID=0, value=100.0}", (long) 0);
        java.lang.String str19 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str8, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 52L + "'", long15 == 52L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=-1, itemID=0, value=100.0}" + "'", str19, "MutablePreference{userID=-1, itemID=0, value=100.0}");
    }

    @Test
    public void test34244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34244");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        java.lang.String str7 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet8 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet8.init();
        java.lang.String str10 = batchAddCandidatesServlet8.getServletInfo();
        javax.servlet.ServletConfig servletConfig11 = batchAddCandidatesServlet8.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet12 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str13 = batchDeleteCandidatesServlet12.getServletInfo();
        java.lang.String str14 = batchDeleteCandidatesServlet12.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet15 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet16 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet17);
        setPreferenceServlet15.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet17);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet20 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet15.init((javax.servlet.ServletConfig) recommendServlet20);
        batchDeleteCandidatesServlet12.init((javax.servlet.ServletConfig) setPreferenceServlet15);
        batchAddCandidatesServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        batchDeleteCandidatesServlet12.destroy();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext26 = setPreferenceServlet0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(servletConfig11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test34245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34245");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        batchDeleteCandidatesServlet14.destroy();
        javax.servlet.ServletConfig servletConfig17 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init(servletConfig17);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str20 = recommendServlet19.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) recommendServlet19);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet22 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet22.destroy();
        java.lang.String str24 = addCandidateServlet22.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet25 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        addCandidateServlet22.init((javax.servlet.ServletConfig) setPreferenceServlet25);
        recommendServlet19.init((javax.servlet.ServletConfig) setPreferenceServlet25);
        java.lang.String str28 = recommendServlet19.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet29 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet30 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet29.init((javax.servlet.ServletConfig) batchSetPreferencesServlet30);
        recommendServlet19.init((javax.servlet.ServletConfig) batchSetPreferencesServlet29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = batchSetPreferencesServlet29.getInitParameter("MutablePreference{userID=1, itemID=10000, value=97.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test34246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34246");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}", (int) (short) 10);
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
    }

    @Test
    public void test34247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34247");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("itemID", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: label", (java.lang.Throwable) invalidParameterException6);
        java.lang.Throwable throwable9 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", throwable9);
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.MissingParameterException missingParameterException18 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException18.addSuppressed((java.lang.Throwable) missingParameterException20);
        invalidParameterException16.addSuppressed((java.lang.Throwable) missingParameterException20);
        java.lang.Throwable[] throwableArray23 = missingParameterException20.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException26);
        org.plista.kornakapi.web.MissingParameterException missingParameterException31 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException32 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException31);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException33 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException31);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException37 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException35.addSuppressed((java.lang.Throwable) missingParameterException37);
        invalidParameterException33.addSuppressed((java.lang.Throwable) missingParameterException37);
        java.lang.Throwable[] throwableArray40 = missingParameterException37.getSuppressed();
        invalidParameterException27.addSuppressed((java.lang.Throwable) missingParameterException37);
        missingParameterException20.addSuppressed((java.lang.Throwable) invalidParameterException27);
        invalidParameterException10.addSuppressed((java.lang.Throwable) invalidParameterException27);
        invalidParameterException7.addSuppressed((java.lang.Throwable) invalidParameterException10);
        java.lang.Throwable throwable46 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException47 = new org.plista.kornakapi.web.InvalidParameterException("hi!", throwable46);
        org.plista.kornakapi.web.MissingParameterException missingParameterException52 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException53 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException52);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException54 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException52);
        org.plista.kornakapi.web.MissingParameterException missingParameterException56 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException58 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException56.addSuppressed((java.lang.Throwable) missingParameterException58);
        invalidParameterException54.addSuppressed((java.lang.Throwable) missingParameterException58);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException61 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException54);
        invalidParameterException47.addSuppressed((java.lang.Throwable) invalidParameterException61);
        java.lang.Throwable[] throwableArray63 = invalidParameterException61.getSuppressed();
        invalidParameterException10.addSuppressed((java.lang.Throwable) invalidParameterException61);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray63);
    }

    @Test
    public void test34248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34248");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("");
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((-1));
        int int10 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 10000.0f);
        factorizationbasedRecommenderConfig0.setAlpha(10.0d);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test34249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34249");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration10.getJdbcUrl();
        java.lang.String str15 = storageConfiguration10.getJdbcUrl();
        storageConfiguration10.setJdbcUrl("label");
        configuration0.setStorageConfiguration(storageConfiguration10);
        java.lang.String str19 = storageConfiguration10.getPassword();
        storageConfiguration10.setJdbcDriverClass("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str22 = storageConfiguration10.getPassword();
        java.lang.String str23 = storageConfiguration10.getUsername();
        java.lang.String str24 = storageConfiguration10.getJdbcUrl();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str23, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "label" + "'", str24, "label");
    }

    @Test
    public void test34250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34250");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) -1, (long) (byte) 10, (float) (short) 10);
        mutablePreference0.set((long) 10000, (long) (short) -1, 0.0f);
        mutablePreference0.setValue((float) (byte) 0);
        float float13 = mutablePreference0.getValue();
        mutablePreference0.setValue(10.0f);
        java.lang.String str16 = mutablePreference0.toString();
        java.lang.String str17 = mutablePreference0.toString();
        mutablePreference0.set((long) (short) -1, (long) (short) 1, (float) (byte) 0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 0.0f + "'", float13 == 0.0f);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str16, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str17, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
    }

    @Test
    public void test34251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34251");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        java.lang.String str10 = null; // flaky: configuration9.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig11 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double12 = factorizationbasedRecommenderConfig11.getAlpha();
        double double13 = factorizationbasedRecommenderConfig11.getLambda();
        int int14 = factorizationbasedRecommenderConfig11.getNumberOfFeatures();
        java.lang.String str15 = factorizationbasedRecommenderConfig11.getRetrainCronExpression();
        int int16 = factorizationbasedRecommenderConfig11.getNumberOfFeatures();
        factorizationbasedRecommenderConfig11.setNumberOfIterations((int) (short) 0);
        boolean boolean19 = factorizationbasedRecommenderConfig11.isUsesImplicitFeedback();
        java.lang.String str20 = factorizationbasedRecommenderConfig11.getRetrainCronExpression();
        double double21 = factorizationbasedRecommenderConfig11.getLambda();
        java.lang.String str22 = factorizationbasedRecommenderConfig11.getName();
        factorizationbasedRecommenderConfig11.setLambda((double) 10.0f);
// flaky:         configuration9.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig11);
        org.plista.kornakapi.web.Components components26 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration27 = components26.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration28 = components26.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler29 = components26.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration30 = components26.getConfiguration();
// flaky:         configuration30.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList33 = null; // flaky: configuration30.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig34 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double35 = factorizationbasedRecommenderConfig34.getAlpha();
        double double36 = factorizationbasedRecommenderConfig34.getLambda();
        int int37 = factorizationbasedRecommenderConfig34.getNumberOfFeatures();
        factorizationbasedRecommenderConfig34.setUsesImplicitFeedback(false);
        int int40 = factorizationbasedRecommenderConfig34.getNumberOfFeatures();
        factorizationbasedRecommenderConfig34.setLambda((double) 0);
        factorizationbasedRecommenderConfig34.setName("userID");
        int int45 = factorizationbasedRecommenderConfig34.getNumberOfFeatures();
        int int46 = factorizationbasedRecommenderConfig34.getNumberOfIterations();
        factorizationbasedRecommenderConfig34.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig34.setRetrainAfterPreferenceChanges(10);
// flaky:         configuration30.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig34);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig52 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str53 = itembasedRecommenderConfig52.getRetrainCronExpression();
        int int54 = itembasedRecommenderConfig52.getRetrainAfterPreferenceChanges();
        int int55 = itembasedRecommenderConfig52.getRetrainAfterPreferenceChanges();
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig52);
        java.lang.String str57 = null; // flaky: configuration30.getModelDirectory();
        java.lang.String str58 = null; // flaky: configuration30.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration59 = null; // flaky: configuration30.getStorageConfiguration();
        java.lang.String str60 = null; // flaky: storageConfiguration59.getJdbcUrl();
// flaky:         configuration9.setStorageConfiguration(storageConfiguration59);
        java.lang.String str62 = null; // flaky: storageConfiguration59.getUsername();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str10, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(components26);
// flaky:         org.junit.Assert.assertNotNull(configuration27);
// flaky:         org.junit.Assert.assertNotNull(configuration28);
        org.junit.Assert.assertNull(trainingScheduler29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str57, "MutablePreference{userID=0, itemID=0, value=1.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str58 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str58, "MutablePreference{userID=0, itemID=0, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration59);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: recommender" + "'", str60, "org.plista.kornakapi.web.InvalidParameterException: recommender");
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str62, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test34252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34252");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration13.getPassword();
        java.lang.String str21 = storageConfiguration13.getJdbcDriverClass();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration13);
        java.lang.String str23 = storageConfiguration13.getJdbcUrl();
        java.lang.String str24 = storageConfiguration13.getUsername();
        storageConfiguration13.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=1.0}");
        java.lang.String str27 = storageConfiguration13.getJdbcDriverClass();
        java.lang.Class<?> wildcardClass28 = storageConfiguration13.getClass();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str24, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str27, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test34253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34253");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getName();
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("");
        itembasedRecommenderConfig0.setRetrainCronExpression("label");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10000);
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=0, itemID=52, value=-1.0}");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        int int15 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        java.lang.String str16 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str17 = itembasedRecommenderConfig0.getSimilarityClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str16, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str17, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
    }

    @Test
    public void test34254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34254");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
// flaky:         configuration4.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig8 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double9 = factorizationbasedRecommenderConfig8.getAlpha();
        double double10 = factorizationbasedRecommenderConfig8.getLambda();
        int int11 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        factorizationbasedRecommenderConfig8.setUsesImplicitFeedback(false);
        int int14 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        factorizationbasedRecommenderConfig8.setLambda((double) 0);
        factorizationbasedRecommenderConfig8.setName("userID");
        int int19 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        int int20 = factorizationbasedRecommenderConfig8.getNumberOfIterations();
        factorizationbasedRecommenderConfig8.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig8.setRetrainAfterPreferenceChanges(10);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig8);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig26 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str27 = itembasedRecommenderConfig26.getRetrainCronExpression();
        int int28 = itembasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
        int int29 = itembasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig26);
        java.lang.String str31 = null; // flaky: configuration4.getModelDirectory();
        java.lang.String str32 = null; // flaky: configuration4.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration33 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig34 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double35 = factorizationbasedRecommenderConfig34.getAlpha();
        double double36 = factorizationbasedRecommenderConfig34.getLambda();
        int int37 = factorizationbasedRecommenderConfig34.getNumberOfFeatures();
        factorizationbasedRecommenderConfig34.setUsesImplicitFeedback(true);
        double double40 = factorizationbasedRecommenderConfig34.getAlpha();
        java.lang.String str41 = factorizationbasedRecommenderConfig34.getRetrainCronExpression();
        int int42 = factorizationbasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
        int int43 = factorizationbasedRecommenderConfig34.getNumberOfIterations();
        factorizationbasedRecommenderConfig34.setNumberOfFeatures((int) '#');
        double double46 = factorizationbasedRecommenderConfig34.getLambda();
        factorizationbasedRecommenderConfig34.setAlpha((double) (short) 100);
        java.lang.String str49 = factorizationbasedRecommenderConfig34.getRetrainCronExpression();
        double double50 = factorizationbasedRecommenderConfig34.getAlpha();
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig34);
// flaky:         configuration4.setNumProcessorsForTraining(1);
// flaky:         configuration4.setModelDirectory("MutablePreference{userID=100, itemID=32, value=100.0}");
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str31, "MutablePreference{userID=0, itemID=0, value=1.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str32, "MutablePreference{userID=0, itemID=0, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration33);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
    }

    @Test
    public void test34255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34255");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        int int8 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        double double15 = factorizationbasedRecommenderConfig13.getLambda();
        int int16 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(true);
        double double19 = factorizationbasedRecommenderConfig13.getAlpha();
        java.lang.String str20 = factorizationbasedRecommenderConfig13.getRetrainCronExpression();
        int int21 = factorizationbasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        int int22 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        factorizationbasedRecommenderConfig13.setNumberOfFeatures((int) '#');
        double double25 = factorizationbasedRecommenderConfig13.getLambda();
        boolean boolean26 = factorizationbasedRecommenderConfig13.isUsesImplicitFeedback();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        org.plista.kornakapi.core.config.Configuration configuration28 = new org.plista.kornakapi.core.config.Configuration();
        int int29 = configuration28.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration30 = configuration28.getStorageConfiguration();
        configuration28.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList33 = configuration28.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration34 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str35 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str38 = storageConfiguration34.getPassword();
        java.lang.String str39 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("hi!");
        storageConfiguration34.setJdbcDriverClass("file");
        configuration28.setStorageConfiguration(storageConfiguration34);
        configuration0.setStorageConfiguration(storageConfiguration34);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig46 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str47 = itembasedRecommenderConfig46.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer48 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig46);
        itembasedRecommenderConfig46.setSimilarityClass("recommender");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig46);
        itembasedRecommenderConfig46.setRetrainAfterPreferenceChanges(52);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(storageConfiguration30);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test34256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34256");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = null; // flaky: configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str6 = storageConfiguration5.getJdbcDriverClass();
        storageConfiguration5.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str9 = storageConfiguration5.getJdbcUrl();
        java.lang.String str10 = storageConfiguration5.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration5.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration5.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration5.getJdbcUrl();
        java.lang.String str14 = storageConfiguration5.getUsername();
        java.lang.String str15 = storageConfiguration5.getPassword();
        storageConfiguration5.setJdbcUrl("file");
        java.lang.String str18 = storageConfiguration5.getJdbcUrl();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration5);
        java.lang.String str20 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration21 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         storageConfiguration21.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
// flaky:         storageConfiguration21.setPassword("MutablePreference{userID=0, itemID=-1, value=0.0}");
        java.lang.String str26 = null; // flaky: storageConfiguration21.getUsername();
// flaky:         storageConfiguration21.setJdbcDriverClass("");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str14, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file" + "'", str18, "file");
// flaky:         org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=100, itemID=32, value=100.0}" + "'", str20, "MutablePreference{userID=100, itemID=32, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration21);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str26, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test34257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34257");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        int int4 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration7.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration7);
        java.lang.String str18 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setSimilarityClass("");
        java.lang.String str24 = itembasedRecommenderConfig21.getName();
        java.lang.String str25 = itembasedRecommenderConfig21.getSimilarityClass();
        java.lang.String str26 = itembasedRecommenderConfig21.getSimilarityClass();
        int int27 = itembasedRecommenderConfig21.getSimilarItemsPerItem();
        itembasedRecommenderConfig21.setSimilarItemsPerItem((int) (byte) 10);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig21);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        factorizationbasedRecommenderConfig31.setUsesImplicitFeedback(true);
        double double37 = factorizationbasedRecommenderConfig31.getAlpha();
        java.lang.String str38 = factorizationbasedRecommenderConfig31.getRetrainCronExpression();
        int int39 = factorizationbasedRecommenderConfig31.getRetrainAfterPreferenceChanges();
        int int40 = factorizationbasedRecommenderConfig31.getNumberOfIterations();
        factorizationbasedRecommenderConfig31.setNumberOfFeatures((int) '#');
        double double43 = factorizationbasedRecommenderConfig31.getLambda();
        factorizationbasedRecommenderConfig31.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig31.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: label");
        factorizationbasedRecommenderConfig31.setLambda((double) 100);
        int int50 = factorizationbasedRecommenderConfig31.getNumberOfIterations();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        factorizationbasedRecommenderConfig31.setLambda((double) (-1L));
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer54 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig31);
        int int55 = factorizationbasedRecommenderConfig31.getNumberOfIterations();
        factorizationbasedRecommenderConfig31.setNumberOfIterations(100);
        java.lang.String str58 = factorizationbasedRecommenderConfig31.getRetrainCronExpression();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: label" + "'", str58, "org.plista.kornakapi.web.InvalidParameterException: label");
    }

    @Test
    public void test34258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34258");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str16 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.init();
        java.lang.String str18 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.destroy();
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str22 = batchDeleteCandidatesServlet21.getServletInfo();
        batchDeleteCandidatesServlet21.init();
        javax.servlet.ServletConfig servletConfig24 = null;
        batchDeleteCandidatesServlet21.init(servletConfig24);
        javax.servlet.ServletConfig servletConfig26 = batchDeleteCandidatesServlet21.getServletConfig();
        batchDeleteCandidatesServlet21.init();
        javax.servlet.ServletConfig servletConfig28 = batchDeleteCandidatesServlet21.getServletConfig();
        java.lang.String str29 = batchDeleteCandidatesServlet21.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet30 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet30.destroy();
        trainServlet30.destroy();
        java.lang.String str33 = trainServlet30.getServletInfo();
        java.lang.String str34 = trainServlet30.getServletInfo();
        javax.servlet.ServletConfig servletConfig35 = trainServlet30.getServletConfig();
        javax.servlet.ServletConfig servletConfig36 = trainServlet30.getServletConfig();
        trainServlet30.destroy();
        batchDeleteCandidatesServlet21.init((javax.servlet.ServletConfig) trainServlet30);
        batchDeleteCandidatesServlet21.init();
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet41 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet42 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet43 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet42.init((javax.servlet.ServletConfig) batchSetPreferencesServlet43);
        javax.servlet.ServletConfig servletConfig45 = batchSetPreferencesServlet42.getServletConfig();
        addCandidateServlet41.init((javax.servlet.ServletConfig) batchSetPreferencesServlet42);
        batchSetPreferencesServlet42.init();
        java.lang.String str48 = batchSetPreferencesServlet42.getServletInfo();
        batchSetPreferencesServlet42.destroy();
        java.lang.String str50 = batchSetPreferencesServlet42.getServletInfo();
        batchDeleteCandidatesServlet21.init((javax.servlet.ServletConfig) batchSetPreferencesServlet42);
        javax.servlet.ServletRequest servletRequest52 = null;
        javax.servlet.ServletResponse servletResponse53 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet42.service(servletRequest52, servletResponse53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig26);
        org.junit.Assert.assertNull(servletConfig28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(servletConfig35);
        org.junit.Assert.assertNull(servletConfig36);
        org.junit.Assert.assertNotNull(servletConfig45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test34259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34259");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setLambda((double) (-1));
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 1);
        int int14 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int15 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        boolean boolean17 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test34260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34260");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.set((long) 10, (long) (byte) 100, (float) (byte) 10);
        java.lang.String str10 = mutablePreference0.toString();
        long long11 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) (byte) 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=10, itemID=100, value=10.0}" + "'", str10, "MutablePreference{userID=10, itemID=100, value=10.0}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10L + "'", long11 == 10L);
    }

    @Test
    public void test34261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34261");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage8 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage9 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = components0.preferenceChangeListener();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(storage9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNotNull(preferenceChangeListener11);
    }

    @Test
    public void test34262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34262");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        javax.servlet.ServletConfig servletConfig7 = setPreferenceServlet0.getServletConfig();
        setPreferenceServlet0.init();
        java.lang.String str9 = setPreferenceServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig10 = setPreferenceServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration11 = setPreferenceServlet0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig10);
    }

    @Test
    public void test34263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34263");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (byte) 1, (double) (byte) 100);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) '4');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) 97, (double) 'a');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer16 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair17 = null;
        double double19 = filteringLongPairRescorer16.rescore(longPair17, 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 97.0d + "'", double14 == 97.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test34264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34264");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig3 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str6 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet7 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        setPreferenceServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet7.init((javax.servlet.ServletConfig) recommendServlet12);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet7);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        java.lang.String str16 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str17 = batchDeleteCandidatesServlet4.getServletInfo();
        batchDeleteCandidatesServlet4.destroy();
        batchDeleteCandidatesServlet4.init();
        batchDeleteCandidatesServlet4.init();
        batchDeleteCandidatesServlet4.destroy();
        java.lang.String str22 = batchDeleteCandidatesServlet4.getServletInfo();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test34265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34265");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getUserID();
        long long4 = mutablePreference0.getUserID();
        mutablePreference0.set(97L, (long) 1, (float) 97L);
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (byte) 1);
        float float12 = mutablePreference0.getValue();
        long long13 = mutablePreference0.getUserID();
        mutablePreference0.set((long) '#', 52L, 52.0f);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 97L + "'", long13 == 97L);
    }

    @Test
    public void test34266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34266");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig2 = setPreferenceServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig3 = setPreferenceServlet0.getServletConfig();
        org.junit.Assert.assertNull(servletConfig2);
        org.junit.Assert.assertNull(servletConfig3);
    }

    @Test
    public void test34267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34267");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (byte) 1, (double) (byte) 100);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) '4');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double13 = fixedCandidatesIDRescorer1.rescore(32L, (double) 0.0f);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean15 = fixedCandidatesIDRescorer1.isFiltered(52L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test34268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34268");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
// flaky:         configuration4.setNumProcessorsForTraining(0);
        java.lang.String str7 = null; // flaky: configuration4.getModelDirectory();
        int int8 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.web.Components components10 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration11 = components10.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = components10.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = components10.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration14 = components10.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration15 = components10.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig16.setSimilarityClass("");
        java.lang.String str19 = itembasedRecommenderConfig16.getName();
        java.lang.String str20 = itembasedRecommenderConfig16.getSimilarityClass();
        itembasedRecommenderConfig16.setName("");
        java.lang.String str23 = itembasedRecommenderConfig16.getSimilarityClass();
// flaky:         configuration15.addItembasedRecommender(itembasedRecommenderConfig16);
        itembasedRecommenderConfig16.setSimilarItemsPerItem((int) '#');
        int int27 = itembasedRecommenderConfig16.getSimilarItemsPerItem();
        itembasedRecommenderConfig16.setSimilarItemsPerItem(97);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig16);
        java.lang.String str31 = itembasedRecommenderConfig16.getSimilarityClass();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=100, itemID=32, value=100.0}" + "'", str7, "MutablePreference{userID=100, itemID=32, value=100.0}");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
        org.junit.Assert.assertNotNull(components10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(trainingScheduler12);
        org.junit.Assert.assertNull(trainingScheduler13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
// flaky:         org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 35 + "'", int27 == 35);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test34269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34269");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
        int int6 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getUsername();
        storageConfiguration7.setUsername("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str18 = storageConfiguration7.getJdbcDriverClass();
// flaky:         configuration4.setStorageConfiguration(storageConfiguration7);
        org.plista.kornakapi.web.Components components20 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration21 = components20.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration22 = components20.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler23 = components20.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration24 = components20.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = null; // flaky: configuration24.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration26 = new org.plista.kornakapi.core.config.Configuration();
        int int27 = configuration26.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList28 = configuration26.getItembasedRecommenders();
        int int29 = configuration26.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig30 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str31 = itembasedRecommenderConfig30.getRetrainCronExpression();
        configuration26.addItembasedRecommender(itembasedRecommenderConfig30);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig33 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str34 = itembasedRecommenderConfig33.getRetrainCronExpression();
        itembasedRecommenderConfig33.setSimilarityClass("");
        java.lang.String str37 = itembasedRecommenderConfig33.getSimilarityClass();
        itembasedRecommenderConfig33.setName("label");
        configuration26.addItembasedRecommender(itembasedRecommenderConfig33);
// flaky:         configuration24.addItembasedRecommender(itembasedRecommenderConfig33);
        itembasedRecommenderConfig33.setName("MutablePreference{userID=0, itemID=0, value=0.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer44 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig33);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig33);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig46 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str47 = itembasedRecommenderConfig46.getRetrainCronExpression();
        int int48 = itembasedRecommenderConfig46.getRetrainAfterPreferenceChanges();
        java.lang.String str49 = itembasedRecommenderConfig46.getSimilarityClass();
        itembasedRecommenderConfig46.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig46.setSimilarityClass("");
        itembasedRecommenderConfig46.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig46.setSimilarItemsPerItem(10);
        int int58 = itembasedRecommenderConfig46.getSimilarItemsPerItem();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig46);
        java.lang.String str60 = null; // flaky: configuration4.getModelDirectory();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str15, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(components20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
// flaky:         org.junit.Assert.assertNotNull(configuration22);
        org.junit.Assert.assertNull(trainingScheduler23);
// flaky:         org.junit.Assert.assertNotNull(configuration24);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
// flaky:         org.junit.Assert.assertEquals("'" + str60 + "' != '" + "MutablePreference{userID=100, itemID=32, value=100.0}" + "'", str60, "MutablePreference{userID=100, itemID=32, value=100.0}");
    }

    @Test
    public void test34270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34270");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
    }

    @Test
    public void test34271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34271");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=0, value=1.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        int int6 = factorizationbasedRecommenderConfig3.getNumberOfFeatures();
        java.lang.String str7 = factorizationbasedRecommenderConfig3.getRetrainCronExpression();
        factorizationbasedRecommenderConfig3.setNumberOfIterations((int) (short) 100);
        int int10 = factorizationbasedRecommenderConfig3.getNumberOfIterations();
        factorizationbasedRecommenderConfig3.setAlpha((double) (short) 100);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        configuration0.setNumProcessorsForTraining((int) (byte) -1);
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: batchSize");
        java.lang.String str18 = configuration0.getModelDirectory();
        java.lang.String str19 = configuration0.getModelDirectory();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: batchSize" + "'", str18, "org.plista.kornakapi.web.InvalidParameterException: batchSize");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: batchSize" + "'", str19, "org.plista.kornakapi.web.InvalidParameterException: batchSize");
    }

    @Test
    public void test34272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34272");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        long long5 = mutableCandidate0.getItemID();
        long long6 = mutableCandidate0.getItemID();
        long long7 = mutableCandidate0.getItemID();
        java.lang.String str8 = mutableCandidate0.getLabel();
        long long9 = mutableCandidate0.getItemID();
        long long10 = mutableCandidate0.getItemID();
        java.lang.String str11 = mutableCandidate0.getLabel();
        java.lang.String str12 = mutableCandidate0.getLabel();
        long long13 = mutableCandidate0.getItemID();
        long long14 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "label" + "'", str8, "label");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10L + "'", long9 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 10L + "'", long10 == 10L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "label" + "'", str11, "label");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "label" + "'", str12, "label");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 10L + "'", long13 == 10L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10L + "'", long14 == 10L);
    }

    @Test
    public void test34273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34273");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        int int8 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        configuration0.setModelDirectory("");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig15 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double16 = factorizationbasedRecommenderConfig15.getAlpha();
        double double17 = factorizationbasedRecommenderConfig15.getLambda();
        int int18 = factorizationbasedRecommenderConfig15.getNumberOfFeatures();
        java.lang.String str19 = factorizationbasedRecommenderConfig15.getRetrainCronExpression();
        factorizationbasedRecommenderConfig15.setNumberOfFeatures((int) 'a');
        factorizationbasedRecommenderConfig15.setRetrainAfterPreferenceChanges((int) (byte) 100);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig15);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList25 = configuration0.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList26 = configuration0.getItembasedRecommenders();
        int int27 = configuration0.getNumProcessorsForTraining();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList25);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
    }

    @Test
    public void test34274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34274");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=-1, itemID=10, value=10.0}", (long) ' ');
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("file", (-1L));
        java.lang.String str17 = mutableCandidate0.getLabel();
        long long18 = mutableCandidate0.getItemID();
        long long19 = mutableCandidate0.getItemID();
        java.lang.String str20 = mutableCandidate0.getLabel();
        long long21 = mutableCandidate0.getItemID();
        java.lang.String str22 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemID" + "'", str9, "itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str13, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "file" + "'", str17, "file");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "file" + "'", str20, "file");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "file" + "'", str22, "file");
    }

    @Test
    public void test34275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34275");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 10);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        boolean boolean7 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(0);
        factorizationbasedRecommenderConfig0.setLambda((double) (byte) 10);
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test34276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34276");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        int int4 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        int int9 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig7.setRetrainCronExpression("value");
        java.lang.String str15 = itembasedRecommenderConfig7.getSimilarityClass();
        java.lang.String str16 = itembasedRecommenderConfig7.getSimilarityClass();
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig7);
// flaky:         configuration2.setNumProcessorsForTraining((int) (short) 10);
        int int20 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration21 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         storageConfiguration21.setJdbcDriverClass("MutablePreference{userID=1, itemID=10, value=52.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
// flaky:         org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration21);
    }

    @Test
    public void test34277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34277");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException5);
        java.lang.Throwable[] throwableArray8 = missingParameterException5.getSuppressed();
        java.lang.Throwable[] throwableArray9 = missingParameterException5.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException15);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException15);
        missingParameterException5.addSuppressed((java.lang.Throwable) invalidParameterException17);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException17);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException17);
        java.lang.String str21 = invalidParameterException17.toString();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str21, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
    }

    @Test
    public void test34278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34278");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig0.setLambda((double) 10000L);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) 'a');
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        int int25 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test34279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34279");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        java.lang.String str10 = setPreferenceServlet4.getServletInfo();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        javax.servlet.ServletRequest servletRequest13 = null;
        javax.servlet.ServletResponse servletResponse14 = null;
        // The following exception was thrown during execution in test generation
        try {
            setPreferenceServlet4.service(servletRequest13, servletResponse14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test34280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34280");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet3 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet4 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet3.init((javax.servlet.ServletConfig) batchSetPreferencesServlet4);
        batchDeleteCandidatesServlet2.init((javax.servlet.ServletConfig) batchSetPreferencesServlet4);
        javax.servlet.ServletConfig servletConfig7 = batchSetPreferencesServlet4.getServletConfig();
        addCandidateServlet0.init(servletConfig7);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str11 = batchDeleteCandidatesServlet10.getServletInfo();
        java.lang.String str12 = batchDeleteCandidatesServlet10.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet13 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        setPreferenceServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet13.init((javax.servlet.ServletConfig) recommendServlet18);
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) setPreferenceServlet13);
        batchDeleteCandidatesServlet10.destroy();
        batchDeleteCandidatesServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet24 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        batchDeleteCandidatesServlet23.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig28 = batchSetPreferencesServlet25.getServletConfig();
        batchSetPreferencesServlet25.init();
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet32 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        recommendServlet32.destroy();
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet32);
        addCandidateServlet0.destroy();
        java.lang.String str38 = addCandidateServlet0.getServletInfo();
        // The following exception was thrown during execution in test generation
        try {
            addCandidateServlet0.log("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(servletConfig28);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
    }

    @Test
    public void test34281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34281");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        java.lang.String str2 = mutableCandidate0.getLabel();
        mutableCandidate0.set("file", (long) (short) 1);
        long long6 = mutableCandidate0.getItemID();
        long long7 = mutableCandidate0.getItemID();
        long long8 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", 1L);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=100.0}", (long) '4');
        long long15 = mutableCandidate0.getItemID();
        java.lang.String str16 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", (long) 'a');
        long long20 = mutableCandidate0.getItemID();
        long long21 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 52L + "'", long15 == 52L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str16, "MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 97L + "'", long20 == 97L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 97L + "'", long21 == 97L);
    }

    @Test
    public void test34282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34282");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage10 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration11 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage12 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage13 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage14 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration15 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener16 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler17 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration19 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage20 = components0.storage();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(storage10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(storage12);
        org.junit.Assert.assertNull(storage13);
        org.junit.Assert.assertNull(storage14);
// flaky:         org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNotNull(preferenceChangeListener16);
        org.junit.Assert.assertNull(trainingScheduler17);
        org.junit.Assert.assertNull(trainingScheduler18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertNull(storage20);
    }

    @Test
    public void test34283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34283");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage12 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage13 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage14 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler15 = components0.scheduler();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNull(trainingScheduler6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNotNull(preferenceChangeListener11);
        org.junit.Assert.assertNull(storage12);
        org.junit.Assert.assertNull(storage13);
        org.junit.Assert.assertNull(storage14);
        org.junit.Assert.assertNull(trainingScheduler15);
    }

    @Test
    public void test34284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34284");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) (-1.0f));
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) '#');
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(10);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test34285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34285");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        boolean boolean7 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test34286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34286");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (-1));
        long long6 = mutablePreference0.getUserID();
        long long7 = mutablePreference0.getItemID();
        float float8 = mutablePreference0.getValue();
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 32);
        java.lang.String str12 = mutablePreference0.toString();
        long long13 = mutablePreference0.getItemID();
        long long14 = mutablePreference0.getUserID();
        float float15 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) '4');
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + (-1.0f) + "'", float8 == (-1.0f));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=0, itemID=0, value=32.0}" + "'", str12, "MutablePreference{userID=0, itemID=0, value=32.0}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 32.0f + "'", float15 == 32.0f);
    }

    @Test
    public void test34287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34287");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        java.lang.String str8 = mutablePreference0.toString();
        float float9 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) (short) 1);
        mutablePreference0.setValue((float) 32L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str8, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9 == 0.0f);
    }

    @Test
    public void test34288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34288");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        boolean boolean6 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig3);
        double double8 = factorizationbasedRecommenderConfig3.getAlpha();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig10 = null;
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         configuration2.setNumProcessorsForTraining(1);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = null; // flaky: configuration2.getItembasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration12);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
    }

    @Test
    public void test34289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34289");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        int int8 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        double double15 = factorizationbasedRecommenderConfig13.getLambda();
        int int16 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(true);
        double double19 = factorizationbasedRecommenderConfig13.getAlpha();
        java.lang.String str20 = factorizationbasedRecommenderConfig13.getRetrainCronExpression();
        int int21 = factorizationbasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        int int22 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        factorizationbasedRecommenderConfig13.setNumberOfFeatures((int) '#');
        double double25 = factorizationbasedRecommenderConfig13.getLambda();
        boolean boolean26 = factorizationbasedRecommenderConfig13.isUsesImplicitFeedback();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        factorizationbasedRecommenderConfig13.setName("MutablePreference{userID=-1, itemID=10, value=10.0}");
        int int30 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        double double31 = factorizationbasedRecommenderConfig13.getLambda();
        factorizationbasedRecommenderConfig13.setNumberOfIterations(32);
        factorizationbasedRecommenderConfig13.setNumberOfFeatures(35);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
    }

    @Test
    public void test34290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34290");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        long long4 = mutablePreference0.getUserID();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.set((long) 100, 0L, (float) 10000L);
        mutablePreference0.set((long) (byte) 10, 10000L, (float) (byte) 100);
        long long14 = mutablePreference0.getItemID();
        java.lang.String str15 = mutablePreference0.toString();
        mutablePreference0.set(0L, (long) 0, (float) 97);
        mutablePreference0.setValue((float) 1L);
        long long22 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=10, itemID=10000, value=100.0}" + "'", str15, "MutablePreference{userID=10, itemID=10000, value=100.0}");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test34291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34291");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        int int4 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration7.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration7);
        int int18 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList19 = configuration0.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList20 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration21 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str22 = storageConfiguration21.getJdbcDriverClass();
        java.lang.String str23 = storageConfiguration21.getUsername();
        storageConfiguration21.setJdbcUrl("");
        storageConfiguration21.setJdbcUrl("");
        storageConfiguration21.setPassword("org.plista.kornakapi.web.InvalidParameterException: file");
        storageConfiguration21.setJdbcDriverClass("itemID");
        configuration0.setStorageConfiguration(storageConfiguration21);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig33 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double34 = factorizationbasedRecommenderConfig33.getAlpha();
        double double35 = factorizationbasedRecommenderConfig33.getLambda();
        int int36 = factorizationbasedRecommenderConfig33.getNumberOfFeatures();
        factorizationbasedRecommenderConfig33.setName("");
        factorizationbasedRecommenderConfig33.setName("");
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig33);
        factorizationbasedRecommenderConfig33.setAlpha(1.0d);
        factorizationbasedRecommenderConfig33.setNumberOfFeatures((int) (short) 10);
        factorizationbasedRecommenderConfig33.setNumberOfIterations((int) (short) 100);
        factorizationbasedRecommenderConfig33.setLambda((double) 35.0f);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList19);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test34292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34292");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = null; // flaky: configuration5.getStorageConfiguration();
        java.lang.String str7 = null; // flaky: configuration5.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration5.getStorageConfiguration();
        int int10 = 0; // flaky: configuration5.getNumProcessorsForTraining();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration6);
// flaky:         org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=100, itemID=32, value=100.0}" + "'", str7, "MutablePreference{userID=100, itemID=32, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test34293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34293");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test34294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34294");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = null; // flaky: configuration4.getStorageConfiguration();
        java.lang.String str8 = null; // flaky: storageConfiguration7.getPassword();
        java.lang.String str9 = null; // flaky: storageConfiguration7.getJdbcDriverClass();
        java.lang.String str10 = null; // flaky: storageConfiguration7.getJdbcUrl();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration6);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str9, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "label" + "'", str10, "label");
    }

    @Test
    public void test34295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34295");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler12, "label", (int) ' ');
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener15);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener21 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener23 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener23.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener21.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener23);
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener21);
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        org.plista.kornakapi.web.Components components29 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration30 = components29.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration31 = components29.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage32 = components29.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener33 = components29.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler34 = components29.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener35 = components29.preferenceChangeListener();
        delegatingPreferenceChangeListener0.addDelegate(preferenceChangeListener35);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.junit.Assert.assertNotNull(components29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(configuration31);
        org.junit.Assert.assertNull(storage32);
        org.junit.Assert.assertNotNull(preferenceChangeListener33);
        org.junit.Assert.assertNull(trainingScheduler34);
        org.junit.Assert.assertNotNull(preferenceChangeListener35);
    }

    @Test
    public void test34296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34296");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (-1.0f));
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) (-1));
        double double10 = fixedCandidatesIDRescorer1.rescore((long) 'a', 35.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair12 = null;
        double double14 = filteringLongPairRescorer11.rescore(longPair12, (double) 32.0f);
        org.apache.mahout.common.LongPair longPair15 = null;
        double double17 = filteringLongPairRescorer11.rescore(longPair15, 0.0d);
        org.apache.mahout.common.LongPair longPair18 = null;
        double double20 = filteringLongPairRescorer11.rescore(longPair18, (double) '#');
        org.apache.mahout.common.LongPair longPair21 = null;
        double double23 = filteringLongPairRescorer11.rescore(longPair21, (double) 0L);
        org.apache.mahout.common.LongPair longPair24 = null;
        double double26 = filteringLongPairRescorer11.rescore(longPair24, (double) 10);
        org.apache.mahout.common.LongPair longPair27 = null;
        double double29 = filteringLongPairRescorer11.rescore(longPair27, (double) 10000.0f);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.0d) + "'", double4 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + (-1.0d) + "'", double7 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 35.0d + "'", double10 == 35.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 35.0d + "'", double20 == 35.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 10.0d + "'", double26 == 10.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 10000.0d + "'", double29 == 10000.0d);
    }

    @Test
    public void test34297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34297");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet14.init();
        java.lang.String str16 = batchAddCandidatesServlet14.getServletInfo();
        javax.servlet.ServletConfig servletConfig17 = batchAddCandidatesServlet14.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str19 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str20 = batchDeleteCandidatesServlet18.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet21 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        setPreferenceServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet21.init((javax.servlet.ServletConfig) recommendServlet26);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) setPreferenceServlet21);
        batchAddCandidatesServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        java.lang.String str30 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str31 = batchDeleteCandidatesServlet18.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = batchDeleteCandidatesServlet18.getInitParameter("org.plista.kornakapi.web.MissingParameterException: batchSize");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
    }

    @Test
    public void test34298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34298");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=0.0}", (java.lang.Throwable) invalidParameterException5);
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException15);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException15);
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException26.addSuppressed((java.lang.Throwable) missingParameterException28);
        invalidParameterException24.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException24);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException35);
        invalidParameterException31.addSuppressed((java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.MissingParameterException missingParameterException43 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException44 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException43);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException45 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException43);
        java.lang.Throwable[] throwableArray46 = missingParameterException43.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException47 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException43);
        missingParameterException35.addSuppressed((java.lang.Throwable) missingParameterException43);
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) invalidParameterException17);
        java.lang.Throwable[] throwableArray51 = invalidParameterException17.getSuppressed();
        java.lang.Throwable[] throwableArray52 = invalidParameterException17.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException53 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) invalidParameterException17);
        invalidParameterException7.addSuppressed((java.lang.Throwable) invalidParameterException17);
        java.lang.Throwable throwable55 = null;
        // The following exception was thrown during execution in test generation
        try {
            invalidParameterException17.addSuppressed(throwable55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test34299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34299");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener17 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler34 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener37 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler34, "org.plista.kornakapi.web.InvalidParameterException: recommender", 52);
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener37);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler39 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener42 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler39, "MutablePreference{userID=10, itemID=-1, value=100.0}", 10000);
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener42);
    }

    @Test
    public void test34300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34300");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null; // flaky: configuration4.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = null; // flaky: configuration4.getItembasedRecommenders();
// flaky:         configuration4.setModelDirectory("MutablePreference{userID=0, itemID=10000, value=-1.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig10 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double11 = factorizationbasedRecommenderConfig10.getAlpha();
        double double12 = factorizationbasedRecommenderConfig10.getLambda();
        int int13 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        factorizationbasedRecommenderConfig10.setUsesImplicitFeedback(false);
        int int16 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        factorizationbasedRecommenderConfig10.setLambda((double) 0);
        factorizationbasedRecommenderConfig10.setName("userID");
        int int21 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        int int22 = factorizationbasedRecommenderConfig10.getNumberOfIterations();
        factorizationbasedRecommenderConfig10.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig10.setLambda((double) 10000L);
        double double27 = factorizationbasedRecommenderConfig10.getAlpha();
        factorizationbasedRecommenderConfig10.setNumberOfFeatures((int) (short) -1);
        factorizationbasedRecommenderConfig10.setAlpha((double) 100L);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig10);
        java.lang.String str33 = factorizationbasedRecommenderConfig10.getName();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration5);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "userID" + "'", str33, "userID");
    }

    @Test
    public void test34301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34301");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = null; // flaky: configuration1.getStorageConfiguration();
// flaky:         configuration1.setNumProcessorsForTraining((int) '#');
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = null; // flaky: configuration1.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList8 = null; // flaky: configuration1.getItembasedRecommenders();
// flaky:         configuration1.setNumProcessorsForTraining(10000);
        java.lang.String str11 = null; // flaky: configuration1.getModelDirectory();
        int int12 = 0; // flaky: configuration1.getNumProcessorsForTraining();
        java.lang.String str13 = null; // flaky: configuration1.getModelDirectory();
        java.lang.String str14 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig15 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str16 = itembasedRecommenderConfig15.getRetrainCronExpression();
        int int17 = itembasedRecommenderConfig15.getRetrainAfterPreferenceChanges();
        java.lang.String str18 = itembasedRecommenderConfig15.getSimilarityClass();
        itembasedRecommenderConfig15.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig15.setSimilarItemsPerItem((int) '#');
        itembasedRecommenderConfig15.setSimilarityClass("MutablePreference{userID=0, itemID=-1, value=32.0}");
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig15);
        itembasedRecommenderConfig15.setSimilarityClass("MutablePreference{userID=0, itemID=100, value=97.0}");
        itembasedRecommenderConfig15.setSimilarItemsPerItem(35);
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=-1.0}" + "'", str3, "MutablePreference{userID=0, itemID=10000, value=-1.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration7);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList8);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=-1.0}" + "'", str11, "MutablePreference{userID=0, itemID=10000, value=-1.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10000 + "'", int12 == 10000);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=-1.0}" + "'", str13, "MutablePreference{userID=0, itemID=10000, value=-1.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=-1.0}" + "'", str14, "MutablePreference{userID=0, itemID=10000, value=-1.0}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test34302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34302");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getUsername();
        java.lang.String str2 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str3 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("file");
        java.lang.String str6 = storageConfiguration0.getUsername();
        storageConfiguration0.setPassword("value");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: label");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration0.setPassword("MutablePreference{userID=-1, itemID=10, value=32.0}");
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=97, value=10.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test34303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34303");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler12, "label", (int) ' ');
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener15);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener25 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener37 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener37);
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener42 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener44 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener42.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener44);
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener37.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener44);
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener37);
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
    }

    @Test
    public void test34304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34304");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=97, value=52.0}");
        java.lang.Throwable[] throwableArray2 = missingParameterException1.getSuppressed();
        java.lang.String str3 = missingParameterException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=97, value=52.0}" + "'", str3, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=97, value=52.0}");
    }

    @Test
    public void test34305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34305");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) 10L);
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int9 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 10);
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        factorizationbasedRecommenderConfig0.setAlpha((double) 0L);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=-1, itemID=97, value=32.0}");
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 10);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test34306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34306");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((-1));
        factorizationbasedRecommenderConfig0.setLambda((double) 10L);
        int int17 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test34307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34307");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair11 = null;
        double double13 = filteringLongPairRescorer10.rescore(longPair11, (double) (short) 100);
        org.apache.mahout.common.LongPair longPair14 = null;
        double double16 = filteringLongPairRescorer10.rescore(longPair14, (double) 1);
        org.apache.mahout.common.LongPair longPair17 = null;
        double double19 = filteringLongPairRescorer10.rescore(longPair17, (double) 10.0f);
        org.apache.mahout.common.LongPair longPair20 = null;
        double double22 = filteringLongPairRescorer10.rescore(longPair20, (double) (byte) 0);
        org.apache.mahout.common.LongPair longPair23 = null;
        double double25 = filteringLongPairRescorer10.rescore(longPair23, 35.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 10.0d + "'", double19 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 35.0d + "'", double25 == 35.0d);
    }

    @Test
    public void test34308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34308");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.lang.String str2 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str4 = itembasedRecommenderConfig3.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer5 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        int int6 = itembasedRecommenderConfig3.getSimilarItemsPerItem();
        java.lang.String str7 = itembasedRecommenderConfig3.getSimilarityClass();
        java.lang.String str8 = itembasedRecommenderConfig3.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setSimilarItemsPerItem(35);
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10000);
        java.lang.String str14 = itembasedRecommenderConfig3.getName();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test34309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34309");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", 0L);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=1.0}", (long) 0);
        long long11 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=97, value=-1.0}", (long) (short) 100);
        mutableCandidate0.set("MutablePreference{userID=32, itemID=10, value=10.0}", 35L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test34310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34310");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str6 = factorizationbasedRecommenderConfig0.getName();
        int int7 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        boolean boolean13 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setAlpha((double) 97L);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int17 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test34311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34311");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        java.lang.String str12 = mutableCandidate0.getLabel();
        java.lang.String str13 = mutableCandidate0.getLabel();
        java.lang.String str14 = mutableCandidate0.getLabel();
        java.lang.String str15 = mutableCandidate0.getLabel();
        java.lang.String str16 = mutableCandidate0.getLabel();
        java.lang.String str17 = mutableCandidate0.getLabel();
        long long18 = mutableCandidate0.getItemID();
        long long19 = mutableCandidate0.getItemID();
        java.lang.String str20 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str14, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str15, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str16, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str17, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 35L + "'", long18 == 35L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 35L + "'", long19 == 35L);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str20, "org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test34312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34312");
        org.plista.kornakapi.core.config.Configuration configuration0 = null;
        org.plista.kornakapi.core.storage.Storage storage1 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap2 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap3 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null;
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener8 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener10 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener10.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener8.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener10);
        delegatingPreferenceChangeListener5.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener8);
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener8.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener22 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener22);
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener32 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener32.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener32.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener34);
        delegatingPreferenceChangeListener29.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener32);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler38 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener41 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler38, "label", (int) ' ');
        inMemoryPreferenceChangeListener41.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener29.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener41);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener44 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener46 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener44.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener46);
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener29.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener46);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener51 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener53 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener51.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener53);
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener59 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener59.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener61 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener61.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener59.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener61);
        delegatingPreferenceChangeListener61.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener61.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener66 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener68 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener68.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener68.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener66.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener68);
        delegatingPreferenceChangeListener68.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener61.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener68);
        delegatingPreferenceChangeListener61.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener61.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener61.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components77 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage78 = components77.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener79 = components77.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener80 = components77.preferenceChangeListener();
        preferenceChangeListener80.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener61.addDelegate(preferenceChangeListener80);
        delegatingPreferenceChangeListener53.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener61);
        delegatingPreferenceChangeListener61.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener46.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener61);
        delegatingPreferenceChangeListener22.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener46);
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration0, storage1, strMap2, strMap3, trainingScheduler4, (org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(components77);
        org.junit.Assert.assertNull(storage78);
        org.junit.Assert.assertNotNull(preferenceChangeListener79);
        org.junit.Assert.assertNotNull(preferenceChangeListener80);
    }

    @Test
    public void test34313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34313");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=10, itemID=0, value=1.0}");
    }

    @Test
    public void test34314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34314");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet10 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig14 = batchSetPreferencesServlet11.getServletConfig();
        addCandidateServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig16 = batchSetPreferencesServlet11.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet1.getServletConfig();
        batchSetPreferencesServlet1.destroy();
        batchSetPreferencesServlet1.destroy();
        javax.servlet.ServletConfig servletConfig21 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException35);
        java.lang.Throwable[] throwableArray38 = missingParameterException35.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException39 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException35);
        invalidParameterException30.addSuppressed((java.lang.Throwable) invalidParameterException39);
        org.plista.kornakapi.web.MissingParameterException missingParameterException44 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException45 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException44);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException44);
        java.lang.Throwable[] throwableArray47 = invalidParameterException46.getSuppressed();
        invalidParameterException39.addSuppressed((java.lang.Throwable) invalidParameterException46);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException46);
        org.plista.kornakapi.web.MissingParameterException missingParameterException53 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray54 = missingParameterException53.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException55 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException53);
        java.lang.Throwable[] throwableArray56 = invalidParameterException55.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException57 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file", (java.lang.Throwable) invalidParameterException55);
        invalidParameterException46.addSuppressed((java.lang.Throwable) invalidParameterException55);
        org.plista.kornakapi.web.MissingParameterException missingParameterException62 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException63 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException62);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException64 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException62);
        org.plista.kornakapi.web.MissingParameterException missingParameterException66 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException68 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException66.addSuppressed((java.lang.Throwable) missingParameterException68);
        invalidParameterException64.addSuppressed((java.lang.Throwable) missingParameterException68);
        java.lang.Throwable[] throwableArray71 = invalidParameterException64.getSuppressed();
        invalidParameterException46.addSuppressed((java.lang.Throwable) invalidParameterException64);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException73 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", (java.lang.Throwable) invalidParameterException46);
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet1.log("MutablePreference{userID=10, itemID=0, value=1.0}", (java.lang.Throwable) invalidParameterException46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertNotNull(servletConfig16);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertNotNull(servletConfig21);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray71);
    }

    @Test
    public void test34315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34315");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = null; // flaky: configuration8.getItembasedRecommenders();
// flaky:         configuration8.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=100.0}");
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
    }

    @Test
    public void test34316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34316");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        int int3 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int4 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(100);
        itembasedRecommenderConfig0.setSimilarityClass("recommender");
        itembasedRecommenderConfig0.setName("MutablePreference{userID=0, itemID=100, value=100.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test34317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34317");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        long long1 = mutablePreference0.getItemID();
        mutablePreference0.set((long) 100, 35L, (-1.0f));
        mutablePreference0.setValue((float) (short) -1);
        long long8 = mutablePreference0.getUserID();
        long long9 = mutablePreference0.getItemID();
        java.lang.String str10 = mutablePreference0.toString();
        long long11 = mutablePreference0.getItemID();
        java.lang.String str12 = mutablePreference0.toString();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 35L + "'", long9 == 35L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=100, itemID=35, value=-1.0}" + "'", str10, "MutablePreference{userID=100, itemID=35, value=-1.0}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 35L + "'", long11 == 35L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=100, itemID=35, value=-1.0}" + "'", str12, "MutablePreference{userID=100, itemID=35, value=-1.0}");
    }

    @Test
    public void test34318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34318");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int4 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("value");
        factorizationbasedRecommenderConfig0.setAlpha((double) 100);
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) -1);
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test34319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34319");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException4 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10000, itemID=-1, value=0.0}", (java.lang.Throwable) missingParameterException3);
        org.plista.kornakapi.web.MissingParameterException missingParameterException9 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException9);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException9);
        org.plista.kornakapi.web.MissingParameterException missingParameterException13 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException15 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException13.addSuppressed((java.lang.Throwable) missingParameterException15);
        invalidParameterException11.addSuppressed((java.lang.Throwable) missingParameterException15);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException11);
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException22);
        invalidParameterException18.addSuppressed((java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException27 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException30 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException30);
        missingParameterException27.addSuppressed((java.lang.Throwable) invalidParameterException31);
        invalidParameterException18.addSuppressed((java.lang.Throwable) missingParameterException27);
        org.plista.kornakapi.web.MissingParameterException missingParameterException36 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException36);
        org.plista.kornakapi.web.MissingParameterException missingParameterException41 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException42 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException41);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException41);
        org.plista.kornakapi.web.MissingParameterException missingParameterException45 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException47 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException45.addSuppressed((java.lang.Throwable) missingParameterException47);
        invalidParameterException43.addSuppressed((java.lang.Throwable) missingParameterException47);
        java.lang.Throwable[] throwableArray50 = missingParameterException47.getSuppressed();
        invalidParameterException37.addSuppressed((java.lang.Throwable) missingParameterException47);
        missingParameterException27.addSuppressed((java.lang.Throwable) invalidParameterException37);
        java.lang.Throwable[] throwableArray53 = invalidParameterException37.getSuppressed();
        java.lang.Throwable[] throwableArray54 = invalidParameterException37.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException58 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException60 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException58.addSuppressed((java.lang.Throwable) missingParameterException60);
        java.lang.Throwable[] throwableArray62 = missingParameterException60.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException63 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException60);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException64 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException63);
        invalidParameterException37.addSuppressed((java.lang.Throwable) invalidParameterException64);
        java.lang.Throwable[] throwableArray66 = invalidParameterException64.getSuppressed();
        missingParameterException3.addSuppressed((java.lang.Throwable) invalidParameterException64);
        org.plista.kornakapi.web.MissingParameterException missingParameterException71 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException72 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException71);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException73 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException72);
        org.plista.kornakapi.web.MissingParameterException missingParameterException76 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException77 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) missingParameterException76);
        invalidParameterException72.addSuppressed((java.lang.Throwable) missingParameterException76);
        invalidParameterException64.addSuppressed((java.lang.Throwable) invalidParameterException72);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException80 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) invalidParameterException64);
        org.plista.kornakapi.web.MissingParameterException missingParameterException85 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException86 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException85);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException87 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException85);
        java.lang.Throwable[] throwableArray88 = invalidParameterException87.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException89 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=35, value=-1.0}", (java.lang.Throwable) invalidParameterException87);
        invalidParameterException80.addSuppressed((java.lang.Throwable) invalidParameterException89);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwableArray88);
    }

    @Test
    public void test34320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34320");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) (-1.0f));
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) '#');
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(1);
        boolean boolean16 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test34321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34321");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: howMany");
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getName();
        java.lang.String str13 = factorizationbasedRecommenderConfig0.getName();
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: howMany" + "'", str15, "org.plista.kornakapi.web.InvalidParameterException: howMany");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test34322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34322");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 100);
        boolean boolean11 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test34323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34323");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str10 = factorizationbasedRecommenderConfig0.getName();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test34324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34324");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setName("");
        java.lang.String str13 = itembasedRecommenderConfig6.getSimilarityClass();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) '#');
        itembasedRecommenderConfig6.setName("MutablePreference{userID=-1, itemID=10, value=10.0}");
        int int19 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        itembasedRecommenderConfig6.setSimilarItemsPerItem(32);
        java.lang.String str22 = itembasedRecommenderConfig6.getName();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str22, "MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test34325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34325");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: label");
        java.lang.Throwable[] throwableArray2 = missingParameterException1.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray2);
    }

    @Test
    public void test34326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34326");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        batchAddCandidatesServlet0.init();
        java.lang.String str4 = batchAddCandidatesServlet0.getServletInfo();
        batchAddCandidatesServlet0.init();
        batchAddCandidatesServlet0.init();
        java.lang.String str7 = batchAddCandidatesServlet0.getServletInfo();
        java.lang.Throwable throwable9 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchAddCandidatesServlet0.log("MutablePreference{userID=35, itemID=-1, value=10000.0}", throwable9);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test34327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34327");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        double double6 = factorizationbasedRecommenderConfig0.getLambda();
        int int7 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 1.0d + "'", double8 == 1.0d);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test34328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34328");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig6.getSimilarityClass();
        int int12 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) (byte) 1);
        java.lang.String str15 = itembasedRecommenderConfig6.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig17 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig17.setSimilarityClass("");
        java.lang.String str20 = itembasedRecommenderConfig17.getSimilarityClass();
        itembasedRecommenderConfig17.setName("");
        java.lang.String str23 = itembasedRecommenderConfig17.getName();
        int int24 = itembasedRecommenderConfig17.getSimilarItemsPerItem();
        itembasedRecommenderConfig17.setRetrainCronExpression("howMany");
        int int27 = itembasedRecommenderConfig17.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig17);
        int int29 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig30 = null;
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig30);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test34329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34329");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", (long) (byte) -1);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=0.0}", (long) (byte) 10);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=100, value=97.0}", 52L);
        java.lang.String str15 = mutableCandidate0.getLabel();
        long long16 = mutableCandidate0.getItemID();
        long long17 = mutableCandidate0.getItemID();
        long long18 = mutableCandidate0.getItemID();
        long long19 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str8, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=0, itemID=100, value=97.0}" + "'", str15, "MutablePreference{userID=0, itemID=100, value=97.0}");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 52L + "'", long16 == 52L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 52L + "'", long17 == 52L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 52L + "'", long18 == 52L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 52L + "'", long19 == 52L);
    }

    @Test
    public void test34330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34330");
        java.lang.Throwable throwable1 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException2 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=97, value=10.0}", throwable1);
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException10);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException10);
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException14.addSuppressed((java.lang.Throwable) missingParameterException16);
        invalidParameterException12.addSuppressed((java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException12);
        org.plista.kornakapi.web.MissingParameterException missingParameterException23 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException23);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException25 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException23);
        invalidParameterException19.addSuppressed((java.lang.Throwable) missingParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException29 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException29);
        missingParameterException23.addSuppressed((java.lang.Throwable) invalidParameterException30);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException32 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) missingParameterException23);
        missingParameterException4.addSuppressed((java.lang.Throwable) missingParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException37 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("batchSize", (java.lang.Throwable) missingParameterException37);
        org.plista.kornakapi.web.MissingParameterException missingParameterException42 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException42);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException44 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException42);
        org.plista.kornakapi.web.MissingParameterException missingParameterException46 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException48 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException46.addSuppressed((java.lang.Throwable) missingParameterException48);
        invalidParameterException44.addSuppressed((java.lang.Throwable) missingParameterException48);
        java.lang.Throwable[] throwableArray51 = missingParameterException48.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException54 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException55 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException54);
        org.plista.kornakapi.web.MissingParameterException missingParameterException59 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException60 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException59);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException61 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException59);
        org.plista.kornakapi.web.MissingParameterException missingParameterException63 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException65 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException63.addSuppressed((java.lang.Throwable) missingParameterException65);
        invalidParameterException61.addSuppressed((java.lang.Throwable) missingParameterException65);
        java.lang.Throwable[] throwableArray68 = missingParameterException65.getSuppressed();
        invalidParameterException55.addSuppressed((java.lang.Throwable) missingParameterException65);
        missingParameterException48.addSuppressed((java.lang.Throwable) invalidParameterException55);
        invalidParameterException38.addSuppressed((java.lang.Throwable) missingParameterException48);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException72 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", (java.lang.Throwable) invalidParameterException38);
        missingParameterException23.addSuppressed((java.lang.Throwable) invalidParameterException72);
        invalidParameterException2.addSuppressed((java.lang.Throwable) invalidParameterException72);
        java.lang.String str75 = invalidParameterException2.toString();
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=97, value=10.0}" + "'", str75, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=97, value=10.0}");
    }

    @Test
    public void test34331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34331");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setRetrainCronExpression("value");
        int int8 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 1);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        int int14 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setName("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test34332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34332");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig5 = batchSetPreferencesServlet2.getServletConfig();
        java.lang.String str6 = batchSetPreferencesServlet2.getServletInfo();
        java.lang.String str7 = batchSetPreferencesServlet2.getServletInfo();
        batchSetPreferencesServlet2.destroy();
        javax.servlet.ServletConfig servletConfig9 = null;
        batchSetPreferencesServlet2.init(servletConfig9);
        batchSetPreferencesServlet2.init();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = batchSetPreferencesServlet2.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test34333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34333");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
// flaky:         configuration4.setModelDirectory("userID");
// flaky:         configuration4.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration4.getStorageConfiguration();
        java.lang.String str10 = null; // flaky: storageConfiguration9.getUsername();
        java.lang.String str11 = null; // flaky: storageConfiguration9.getUsername();
// flaky:         storageConfiguration9.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         storageConfiguration9.setJdbcUrl("MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str10, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str11, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test34334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34334");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setRetrainCronExpression("");
        itembasedRecommenderConfig6.setSimilarItemsPerItem(10);
        java.lang.String str14 = itembasedRecommenderConfig6.getName();
        itembasedRecommenderConfig6.setName("");
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig18 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str19 = itembasedRecommenderConfig18.getRetrainCronExpression();
        int int20 = itembasedRecommenderConfig18.getRetrainAfterPreferenceChanges();
        java.lang.String str21 = itembasedRecommenderConfig18.getSimilarityClass();
        itembasedRecommenderConfig18.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig18.setSimilarityClass("");
        itembasedRecommenderConfig18.setSimilarItemsPerItem(1);
        java.lang.String str28 = itembasedRecommenderConfig18.getSimilarityClass();
        int int29 = itembasedRecommenderConfig18.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer30 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig18);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig18);
        itembasedRecommenderConfig18.setSimilarItemsPerItem((-1));
        itembasedRecommenderConfig18.setRetrainCronExpression("MutablePreference{userID=0, itemID=97, value=35.0}");
        int int36 = itembasedRecommenderConfig18.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig18.setSimilarItemsPerItem(52);
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test34335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34335");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        mutablePreference0.setValue((float) 35);
        long long10 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (byte) 1);
        long long13 = mutablePreference0.getItemID();
        mutablePreference0.set(10000L, 52L, (float) 52L);
        float float18 = mutablePreference0.getValue();
        mutablePreference0.set((long) '#', (-1L), (float) (short) 1);
        long long23 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 52.0f + "'", float18 == 52.0f);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
    }

    @Test
    public void test34336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34336");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
// flaky:         configuration4.setModelDirectory("userID");
// flaky:         configuration4.setModelDirectory("itemID");
        int int9 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = null; // flaky: configuration4.getStorageConfiguration();
// flaky:         configuration4.setModelDirectory("");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig13 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str14 = itembasedRecommenderConfig13.getRetrainCronExpression();
        itembasedRecommenderConfig13.setSimilarityClass("");
        java.lang.String str17 = itembasedRecommenderConfig13.getSimilarityClass();
        itembasedRecommenderConfig13.setRetrainCronExpression("MutablePreference{userID=100, itemID=0, value=0.0}");
        itembasedRecommenderConfig13.setSimilarItemsPerItem(32);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig13);
// flaky:         configuration4.setModelDirectory("MutablePreference{userID=10, itemID=-1, value=0.0}");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig25 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str26 = itembasedRecommenderConfig25.getSimilarityClass();
        java.lang.String str27 = itembasedRecommenderConfig25.getSimilarityClass();
        itembasedRecommenderConfig25.setSimilarItemsPerItem((int) (byte) 1);
        int int30 = itembasedRecommenderConfig25.getSimilarItemsPerItem();
        itembasedRecommenderConfig25.setName("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str33 = itembasedRecommenderConfig25.getSimilarityClass();
        int int34 = itembasedRecommenderConfig25.getSimilarItemsPerItem();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig25);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer36 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig25);
        java.io.File file37 = null;
        org.plista.kornakapi.core.storage.Storage storage38 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender39 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer36.train(file37, storage38, recommender39, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10000 + "'", int9 == 10000);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
    }

    @Test
    public void test34337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34337");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        double double11 = fixedCandidatesIDRescorer1.rescore(100L, 0.0d);
        double double14 = fixedCandidatesIDRescorer1.rescore(0L, (-1.0d));
        double double17 = fixedCandidatesIDRescorer1.rescore((long) (byte) 100, (double) (byte) 1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double21 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) (byte) 100);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 100.0d + "'", double21 == 100.0d);
    }

    @Test
    public void test34338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34338");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setName("value");
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(10000);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) -1);
        factorizationbasedRecommenderConfig0.setLambda((double) 35L);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test34339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34339");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        java.lang.String str5 = mutableCandidate0.getLabel();
        java.lang.String str6 = mutableCandidate0.getLabel();
        java.lang.String str7 = mutableCandidate0.getLabel();
        java.lang.String str8 = mutableCandidate0.getLabel();
        long long9 = mutableCandidate0.getItemID();
        java.lang.String str10 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: itemIDs", (long) '4');
        long long14 = mutableCandidate0.getItemID();
        long long15 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "itemIDs" + "'", str5, "itemIDs");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "itemIDs" + "'", str6, "itemIDs");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "itemIDs" + "'", str7, "itemIDs");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemIDs" + "'", str8, "itemIDs");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "itemIDs" + "'", str10, "itemIDs");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 52L + "'", long14 == 52L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 52L + "'", long15 == 52L);
    }

    @Test
    public void test34340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34340");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double6 = factorizationbasedRecommenderConfig5.getAlpha();
        double double7 = factorizationbasedRecommenderConfig5.getLambda();
        int int8 = factorizationbasedRecommenderConfig5.getNumberOfFeatures();
        factorizationbasedRecommenderConfig5.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig5.getAlpha();
        java.lang.String str12 = factorizationbasedRecommenderConfig5.getRetrainCronExpression();
        int int13 = factorizationbasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        int int14 = factorizationbasedRecommenderConfig5.getNumberOfIterations();
        factorizationbasedRecommenderConfig5.setNumberOfFeatures((int) '#');
        double double17 = factorizationbasedRecommenderConfig5.getLambda();
        boolean boolean18 = factorizationbasedRecommenderConfig5.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig5.setUsesImplicitFeedback(false);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        org.plista.kornakapi.web.Components components22 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration23 = components22.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler24 = components22.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler25 = components22.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration26 = components22.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration27 = components22.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList28 = null; // flaky: configuration27.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration29 = null; // flaky: configuration27.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration30 = null; // flaky: configuration27.getStorageConfiguration();
// flaky:         storageConfiguration30.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=0.0}");
// flaky:         configuration4.setStorageConfiguration(storageConfiguration30);
        int int34 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components35 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration36 = components35.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration37 = components35.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler38 = components35.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration39 = components35.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList40 = null; // flaky: configuration39.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration41 = null; // flaky: configuration39.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration42 = null; // flaky: configuration39.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig43 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double44 = factorizationbasedRecommenderConfig43.getAlpha();
        double double45 = factorizationbasedRecommenderConfig43.getLambda();
        int int46 = factorizationbasedRecommenderConfig43.getNumberOfFeatures();
        java.lang.String str47 = factorizationbasedRecommenderConfig43.getRetrainCronExpression();
        int int48 = factorizationbasedRecommenderConfig43.getNumberOfFeatures();
        factorizationbasedRecommenderConfig43.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig43.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double53 = factorizationbasedRecommenderConfig43.getLambda();
        factorizationbasedRecommenderConfig43.setAlpha((double) (short) 10);
        int int56 = factorizationbasedRecommenderConfig43.getNumberOfFeatures();
        java.lang.String str57 = factorizationbasedRecommenderConfig43.getRetrainCronExpression();
// flaky:         configuration39.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig43);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList59 = null; // flaky: configuration39.getFactorizationbasedRecommenders();
        int int60 = 0; // flaky: configuration39.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components61 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration62 = components61.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList63 = null; // flaky: configuration62.getFactorizationbasedRecommenders();
        java.lang.String str64 = null; // flaky: configuration62.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig65 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double66 = factorizationbasedRecommenderConfig65.getAlpha();
        double double67 = factorizationbasedRecommenderConfig65.getLambda();
        int int68 = factorizationbasedRecommenderConfig65.getNumberOfFeatures();
        factorizationbasedRecommenderConfig65.setUsesImplicitFeedback(false);
        int int71 = factorizationbasedRecommenderConfig65.getNumberOfFeatures();
        factorizationbasedRecommenderConfig65.setLambda((double) 0);
        factorizationbasedRecommenderConfig65.setName("userID");
// flaky:         configuration62.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig65);
// flaky:         configuration39.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig65);
        java.lang.String str78 = factorizationbasedRecommenderConfig65.getRetrainCronExpression();
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig65);
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(components22);
// flaky:         org.junit.Assert.assertNotNull(configuration23);
        org.junit.Assert.assertNull(trainingScheduler24);
        org.junit.Assert.assertNull(trainingScheduler25);
// flaky:         org.junit.Assert.assertNotNull(configuration26);
// flaky:         org.junit.Assert.assertNotNull(configuration27);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList28);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration29);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration30);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10000 + "'", int34 == 10000);
        org.junit.Assert.assertNotNull(components35);
// flaky:         org.junit.Assert.assertNotNull(configuration36);
// flaky:         org.junit.Assert.assertNotNull(configuration37);
        org.junit.Assert.assertNull(trainingScheduler38);
// flaky:         org.junit.Assert.assertNotNull(configuration39);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList40);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration41);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration42);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(str57);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList59);
// flaky:         org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10000 + "'", int60 == 10000);
        org.junit.Assert.assertNotNull(components61);
// flaky:         org.junit.Assert.assertNotNull(configuration62);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList63);
// flaky:         org.junit.Assert.assertEquals("'" + str64 + "' != '" + "MutablePreference{userID=10, itemID=-1, value=0.0}" + "'", str64, "MutablePreference{userID=10, itemID=-1, value=0.0}");
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test34341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34341");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("itemIDs");
        factorizationbasedRecommenderConfig0.setName("");
        factorizationbasedRecommenderConfig0.setAlpha((double) (short) 0);
        factorizationbasedRecommenderConfig0.setAlpha((double) 10);
        boolean boolean18 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(52);
        factorizationbasedRecommenderConfig0.setLambda(1.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test34342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34342");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        org.plista.kornakapi.web.Components components13 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = components13.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration15 = components13.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage16 = components13.storage();
        org.plista.kornakapi.core.config.Configuration configuration17 = components13.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage18 = components13.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener19 = components13.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener20 = components13.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener21 = components13.preferenceChangeListener();
        delegatingPreferenceChangeListener0.addDelegate(preferenceChangeListener21);
        org.junit.Assert.assertNotNull(components13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
// flaky:         org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNull(storage16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(storage18);
        org.junit.Assert.assertNotNull(preferenceChangeListener19);
        org.junit.Assert.assertNotNull(preferenceChangeListener20);
        org.junit.Assert.assertNotNull(preferenceChangeListener21);
    }

    @Test
    public void test34343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34343");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str13 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig14 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.destroy();
        java.lang.String str17 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet18 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet18.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet20 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet21 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet22 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet21.init((javax.servlet.ServletConfig) batchSetPreferencesServlet22);
        batchDeleteCandidatesServlet20.init((javax.servlet.ServletConfig) batchSetPreferencesServlet22);
        javax.servlet.ServletConfig servletConfig25 = batchSetPreferencesServlet22.getServletConfig();
        addCandidateServlet18.init(servletConfig25);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet27 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet28 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str29 = batchDeleteCandidatesServlet28.getServletInfo();
        java.lang.String str30 = batchDeleteCandidatesServlet28.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet31 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet32 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        setPreferenceServlet31.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet36 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet31.init((javax.servlet.ServletConfig) recommendServlet36);
        batchDeleteCandidatesServlet28.init((javax.servlet.ServletConfig) setPreferenceServlet31);
        batchDeleteCandidatesServlet28.destroy();
        batchDeleteCandidatesServlet27.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet28);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet41 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet42 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet43 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet42.init((javax.servlet.ServletConfig) batchSetPreferencesServlet43);
        batchDeleteCandidatesServlet41.init((javax.servlet.ServletConfig) batchSetPreferencesServlet43);
        javax.servlet.ServletConfig servletConfig46 = batchSetPreferencesServlet43.getServletConfig();
        batchSetPreferencesServlet43.init();
        batchDeleteCandidatesServlet28.init((javax.servlet.ServletConfig) batchSetPreferencesServlet43);
        addCandidateServlet18.init((javax.servlet.ServletConfig) batchSetPreferencesServlet43);
        addCandidateServlet18.destroy();
        addCandidateServlet18.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet18);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str54 = batchDeleteCandidatesServlet0.getInitParameter("MutablePreference{userID=-1, itemID=10, value=35.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(servletConfig25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(servletConfig46);
    }

    @Test
    public void test34344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34344");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha(100.0d);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 10);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("file");
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getName();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test34345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34345");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str13 = itembasedRecommenderConfig12.getRetrainCronExpression();
        itembasedRecommenderConfig12.setSimilarityClass("");
        java.lang.String str16 = itembasedRecommenderConfig12.getSimilarityClass();
        itembasedRecommenderConfig12.setRetrainCronExpression("MutablePreference{userID=100, itemID=0, value=0.0}");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig12);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList20 = configuration0.getItembasedRecommenders();
        java.lang.String str21 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration22 = new org.plista.kornakapi.core.config.Configuration();
        configuration22.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig25 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig25.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer28 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig25);
        itembasedRecommenderConfig25.setRetrainCronExpression("");
        itembasedRecommenderConfig25.setSimilarItemsPerItem(10);
        java.lang.String str33 = itembasedRecommenderConfig25.getName();
        configuration22.addItembasedRecommender(itembasedRecommenderConfig25);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer35 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig25);
        itembasedRecommenderConfig25.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        itembasedRecommenderConfig25.setSimilarItemsPerItem(0);
        java.lang.String str40 = itembasedRecommenderConfig25.getRetrainCronExpression();
        java.lang.String str41 = itembasedRecommenderConfig25.getRetrainCronExpression();
        itembasedRecommenderConfig25.setSimilarityClass("");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig25);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str40, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str41, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test34346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34346");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration0.getJdbcUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str11, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test34347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34347");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        float float3 = mutablePreference0.getValue();
        long long4 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (byte) 100);
        long long7 = mutablePreference0.getUserID();
        mutablePreference0.set(32L, (long) (-1), (float) (-1L));
        long long12 = mutablePreference0.getItemID();
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 1.0f + "'", float3 == 1.0f);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
    }

    @Test
    public void test34348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34348");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet0.getServletConfig();
        batchSetPreferencesServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str8 = batchDeleteCandidatesServlet7.getServletInfo();
        java.lang.String str9 = batchDeleteCandidatesServlet7.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet10 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet11 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet12 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        setPreferenceServlet10.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet15 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet10.init((javax.servlet.ServletConfig) recommendServlet15);
        batchDeleteCandidatesServlet7.init((javax.servlet.ServletConfig) setPreferenceServlet10);
        batchDeleteCandidatesServlet7.destroy();
        batchDeleteCandidatesServlet6.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet7);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet20 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str21 = batchDeleteCandidatesServlet20.getServletInfo();
        batchDeleteCandidatesServlet20.destroy();
        javax.servlet.ServletConfig servletConfig23 = batchDeleteCandidatesServlet20.getServletConfig();
        batchDeleteCandidatesServlet6.init(servletConfig23);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet25 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str26 = batchDeleteCandidatesServlet25.getServletInfo();
        batchDeleteCandidatesServlet25.init();
        java.lang.String str28 = batchDeleteCandidatesServlet25.getServletInfo();
        batchDeleteCandidatesServlet25.destroy();
        batchDeleteCandidatesServlet6.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet25);
        batchDeleteCandidatesServlet6.init();
        batchDeleteCandidatesServlet6.init();
        batchDeleteCandidatesServlet6.destroy();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        javax.servlet.ServletConfig servletConfig35 = batchSetPreferencesServlet0.getServletConfig();
        java.lang.String str36 = batchSetPreferencesServlet0.getServletInfo();
        org.junit.Assert.assertNotNull(servletConfig3);
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(servletConfig35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
    }

    @Test
    public void test34349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34349");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        java.lang.String str8 = mutablePreference0.toString();
        float float9 = mutablePreference0.getValue();
        mutablePreference0.set((long) (byte) 0, 100L, (float) 10000);
        mutablePreference0.set((long) (short) 100, (long) (-1), 1.0f);
        long long18 = mutablePreference0.getItemID();
        java.lang.String str19 = mutablePreference0.toString();
        long long20 = mutablePreference0.getUserID();
        long long21 = mutablePreference0.getItemID();
        mutablePreference0.set(32L, (long) (short) -1, (float) 10000);
        float float26 = mutablePreference0.getValue();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str8, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9 == 0.0f);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str19, "MutablePreference{userID=100, itemID=-1, value=1.0}");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 100L + "'", long20 == 100L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + float26 + "' != '" + 10000.0f + "'", float26 == 10000.0f);
    }

    @Test
    public void test34350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34350");
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet0 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=0, itemID=0, value=10.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=10000, value=0.0}", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=97, value=0.0}", (java.lang.Throwable) missingParameterException5);
        // The following exception was thrown during execution in test generation
        try {
            recommendServlet0.log("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10, value=10.0}", (java.lang.Throwable) missingParameterException5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test34351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34351");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str6 = storageConfiguration0.getUsername();
        java.lang.String str7 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setUsername("MutablePreference{userID=100, itemID=0, value=100.0}");
        java.lang.String str10 = storageConfiguration0.getJdbcUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str6, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str7, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str10, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
    }

    @Test
    public void test34352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34352");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig0.setLambda((double) 10000L);
        double double17 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) -1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(1);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10);
        double double24 = factorizationbasedRecommenderConfig0.getLambda();
        int int25 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer26 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 10000.0d + "'", double24 == 10000.0d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
    }

    @Test
    public void test34353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34353");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        long long4 = mutablePreference0.getUserID();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.setValue((float) '4');
        mutablePreference0.set((long) (short) 100, 10L, (float) 10L);
        mutablePreference0.setValue((float) (short) 0);
        float float14 = mutablePreference0.getValue();
        float float15 = mutablePreference0.getValue();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + 0.0f + "'", float15 == 0.0f);
    }

    @Test
    public void test34354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34354");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(0L, (double) 32L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = filteringLongPairRescorer11.isFiltered(longPair12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 32.0d + "'", double8 == 32.0d);
    }

    @Test
    public void test34355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34355");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        java.lang.String str4 = mutableCandidate0.getLabel();
        long long5 = mutableCandidate0.getItemID();
        java.lang.String str6 = mutableCandidate0.getLabel();
        java.lang.String str7 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=0.0}", (long) (-1));
        long long11 = mutableCandidate0.getItemID();
        java.lang.String str12 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str12, "MutablePreference{userID=0, itemID=0, value=0.0}");
    }

    @Test
    public void test34356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34356");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("label", (-1L));
        mutableCandidate0.set("MutablePreference{userID=52, itemID=97, value=1.0}", (long) 100);
        long long20 = mutableCandidate0.getItemID();
        java.lang.String str21 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "itemID" + "'", str13, "itemID");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 100L + "'", long20 == 100L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "MutablePreference{userID=52, itemID=97, value=1.0}" + "'", str21, "MutablePreference{userID=52, itemID=97, value=1.0}");
    }

    @Test
    public void test34357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34357");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setLambda((double) (-1));
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setLambda((double) 32.0f);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) ' ');
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test34358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34358");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        int int6 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setAlpha((double) 1.0f);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((-1));
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getName();
        boolean boolean15 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 10);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test34359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34359");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getPassword();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getUsername();
        storageConfiguration0.setUsername("MutablePreference{userID=97, itemID=1, value=97.0}");
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration0.setUsername("org.plista.kornakapi.web.MissingParameterException: itemID");
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=100, itemID=-1, value=97.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str7, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test34360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34360");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener15.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener15.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        delegatingPreferenceChangeListener15.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener15);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener25 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener30 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener30.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener32 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener32.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener32.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener30.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener32);
        delegatingPreferenceChangeListener32.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler37 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener40 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler37, "label", (int) ' ');
        delegatingPreferenceChangeListener32.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener40);
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener32);
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener45 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener47 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener45.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener47);
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler52 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener55 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler52, "label", (int) ' ');
        delegatingPreferenceChangeListener47.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener55);
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener47);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener61 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener61.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener63 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener63.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener61.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener63);
        delegatingPreferenceChangeListener63.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener63.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener68 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener68.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener70 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener70.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener70.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener68.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener70);
        delegatingPreferenceChangeListener70.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener63.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener70);
        org.plista.kornakapi.web.Components components76 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration77 = components76.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration78 = components76.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler79 = components76.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler80 = components76.scheduler();
        org.plista.kornakapi.core.storage.Storage storage81 = components76.storage();
        org.plista.kornakapi.core.config.Configuration configuration82 = components76.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener83 = components76.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener84 = components76.preferenceChangeListener();
        delegatingPreferenceChangeListener70.addDelegate(preferenceChangeListener84);
        delegatingPreferenceChangeListener70.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener70.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener70);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener70);
        delegatingPreferenceChangeListener70.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener70.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener70.notifyOfPreferenceChange();
        org.junit.Assert.assertNotNull(components76);
// flaky:         org.junit.Assert.assertNotNull(configuration77);
// flaky:         org.junit.Assert.assertNotNull(configuration78);
        org.junit.Assert.assertNull(trainingScheduler79);
        org.junit.Assert.assertNull(trainingScheduler80);
        org.junit.Assert.assertNull(storage81);
// flaky:         org.junit.Assert.assertNotNull(configuration82);
        org.junit.Assert.assertNotNull(preferenceChangeListener83);
        org.junit.Assert.assertNotNull(preferenceChangeListener84);
    }

    @Test
    public void test34361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34361");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 10);
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test34362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34362");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = null;
        batchDeleteCandidatesServlet0.init(servletConfig3);
        javax.servlet.ServletConfig servletConfig5 = batchDeleteCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet6 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str7 = trainServlet6.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet8 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet8.destroy();
        javax.servlet.ServletConfig servletConfig10 = deleteCandidateServlet8.getServletConfig();
        deleteCandidateServlet8.destroy();
        trainServlet6.init((javax.servlet.ServletConfig) deleteCandidateServlet8);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet13.init();
        java.lang.String str15 = batchAddCandidatesServlet13.getServletInfo();
        javax.servlet.ServletConfig servletConfig16 = batchAddCandidatesServlet13.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str18 = batchDeleteCandidatesServlet17.getServletInfo();
        java.lang.String str19 = batchDeleteCandidatesServlet17.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet20 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        setPreferenceServlet20.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet25 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet20.init((javax.servlet.ServletConfig) recommendServlet25);
        batchDeleteCandidatesServlet17.init((javax.servlet.ServletConfig) setPreferenceServlet20);
        batchAddCandidatesServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet17);
        batchDeleteCandidatesServlet17.init();
        java.lang.String str30 = batchDeleteCandidatesServlet17.getServletInfo();
        java.lang.String str31 = batchDeleteCandidatesServlet17.getServletInfo();
        trainServlet6.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet17);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet6);
        java.lang.String str34 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str35 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet36 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet37 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str38 = batchDeleteCandidatesServlet37.getServletInfo();
        java.lang.String str39 = batchDeleteCandidatesServlet37.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet40 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet41 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet42 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet41.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet42);
        setPreferenceServlet40.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet42);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet45 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet40.init((javax.servlet.ServletConfig) recommendServlet45);
        batchDeleteCandidatesServlet37.init((javax.servlet.ServletConfig) setPreferenceServlet40);
        batchDeleteCandidatesServlet37.destroy();
        batchDeleteCandidatesServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet37);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet50 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet51 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str52 = batchDeleteCandidatesServlet51.getServletInfo();
        java.lang.String str53 = batchDeleteCandidatesServlet51.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet54 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet55 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet56 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet55.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet56);
        setPreferenceServlet54.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet56);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet59 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet54.init((javax.servlet.ServletConfig) recommendServlet59);
        batchDeleteCandidatesServlet51.init((javax.servlet.ServletConfig) setPreferenceServlet54);
        batchDeleteCandidatesServlet51.destroy();
        batchDeleteCandidatesServlet50.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet51);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet64 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str65 = batchDeleteCandidatesServlet64.getServletInfo();
        batchDeleteCandidatesServlet64.destroy();
        javax.servlet.ServletConfig servletConfig67 = batchDeleteCandidatesServlet64.getServletConfig();
        batchDeleteCandidatesServlet50.init(servletConfig67);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet69 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str70 = recommendServlet69.getServletInfo();
        batchDeleteCandidatesServlet50.init((javax.servlet.ServletConfig) recommendServlet69);
        batchDeleteCandidatesServlet50.destroy();
        batchDeleteCandidatesServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet50);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet74 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet74.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet76 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet77 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet76.init((javax.servlet.ServletConfig) batchSetPreferencesServlet77);
        addCandidateServlet74.init((javax.servlet.ServletConfig) batchSetPreferencesServlet76);
        java.lang.String str80 = addCandidateServlet74.getServletInfo();
        batchDeleteCandidatesServlet50.init((javax.servlet.ServletConfig) addCandidateServlet74);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet50);
        batchDeleteCandidatesServlet50.init();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(servletConfig16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
        org.junit.Assert.assertNull(servletConfig67);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
    }

    @Test
    public void test34363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34363");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 1);
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int10 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        double double11 = factorizationbasedRecommenderConfig0.getLambda();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test34364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34364");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
    }

    @Test
    public void test34365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34365");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig11 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double12 = factorizationbasedRecommenderConfig11.getAlpha();
        double double13 = factorizationbasedRecommenderConfig11.getLambda();
        int int14 = factorizationbasedRecommenderConfig11.getNumberOfFeatures();
        java.lang.String str15 = factorizationbasedRecommenderConfig11.getRetrainCronExpression();
        int int16 = factorizationbasedRecommenderConfig11.getNumberOfFeatures();
        factorizationbasedRecommenderConfig11.setName("MutablePreference{userID=0, itemID=0, value=0.0}");
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig11);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList20 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        int int21 = 0; // flaky: configuration1.getNumProcessorsForTraining();
// flaky:         configuration1.setNumProcessorsForTraining((int) '4');
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList24 = null; // flaky: configuration1.getItembasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10000 + "'", int21 == 10000);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList24);
    }

    @Test
    public void test34366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34366");
        java.lang.Throwable throwable1 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException2 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=1, itemID=32, value=10.0}", throwable1);
    }

    @Test
    public void test34367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34367");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig7.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig7);
// flaky:         configuration5.setNumProcessorsForTraining(100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = null; // flaky: configuration5.getStorageConfiguration();
        int int21 = 0; // flaky: configuration5.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration22 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str23 = storageConfiguration22.getJdbcDriverClass();
        storageConfiguration22.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str26 = storageConfiguration22.getJdbcUrl();
        java.lang.String str27 = storageConfiguration22.getJdbcDriverClass();
        storageConfiguration22.setJdbcDriverClass("batchSize");
        storageConfiguration22.setPassword("howMany");
        java.lang.String str32 = storageConfiguration22.getUsername();
        storageConfiguration22.setPassword("");
        storageConfiguration22.setPassword("");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration22);
        storageConfiguration22.setPassword("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10, value=10.0}");
        storageConfiguration22.setJdbcUrl("");
        storageConfiguration22.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration20);
// flaky:         org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str32, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test34368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34368");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) -1);
        double double12 = factorizationbasedRecommenderConfig0.getAlpha();
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double15 = factorizationbasedRecommenderConfig0.getAlpha();
        double double16 = factorizationbasedRecommenderConfig0.getLambda();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=10000, itemID=-1, value=10.0}");
        factorizationbasedRecommenderConfig0.setLambda((double) (-1.0f));
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test34369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34369");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        java.lang.String str2 = mutablePreference0.toString();
        float float3 = mutablePreference0.getValue();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        float float6 = mutablePreference0.getValue();
        long long7 = mutablePreference0.getUserID();
        long long8 = mutablePreference0.getUserID();
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) -1, 0L, (float) 52L);
        long long14 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str2, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 0.0f + "'", float3 == 0.0f);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.0f + "'", float6 == 0.0f);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test34370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34370");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = null; // flaky: configuration1.getStorageConfiguration();
// flaky:         storageConfiguration11.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
// flaky:         storageConfiguration11.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration11);
    }

    @Test
    public void test34371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34371");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList9 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig10 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double11 = factorizationbasedRecommenderConfig10.getAlpha();
        double double12 = factorizationbasedRecommenderConfig10.getLambda();
        int int13 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        factorizationbasedRecommenderConfig10.setUsesImplicitFeedback(true);
        double double16 = factorizationbasedRecommenderConfig10.getAlpha();
        factorizationbasedRecommenderConfig10.setLambda((double) (-1));
        factorizationbasedRecommenderConfig10.setUsesImplicitFeedback(true);
        int int21 = factorizationbasedRecommenderConfig10.getNumberOfIterations();
        factorizationbasedRecommenderConfig10.setNumberOfFeatures((int) (short) 1);
        int int24 = factorizationbasedRecommenderConfig10.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig10.setAlpha((double) (-1));
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig10);
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList9);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test34372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34372");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getUsername();
        java.lang.String str9 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration0.setJdbcUrl("userID");
        java.lang.String str15 = storageConfiguration0.getUsername();
        java.lang.String str16 = storageConfiguration0.getJdbcUrl();
        java.lang.String str17 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str20 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setPassword("MutablePreference{userID=97, itemID=1, value=100.0}");
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=1, value=1.0}");
        java.lang.String str25 = storageConfiguration0.getJdbcDriverClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str15, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "userID" + "'", str16, "userID");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str17, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str20, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test34373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34373");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener27.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener29);
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener36 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener34.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener36);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler40 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener43 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler40, "", (int) 'a');
        delegatingPreferenceChangeListener36.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener43);
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener36);
    }

    @Test
    public void test34374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34374");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=100, itemID=100, value=100.0}", (int) ' ');
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
    }

    @Test
    public void test34375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34375");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = null;
        batchDeleteCandidatesServlet0.init(servletConfig3);
        batchDeleteCandidatesServlet0.destroy();
        java.lang.String str6 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig7 = batchDeleteCandidatesServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig8 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.destroy();
        java.lang.String str10 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        java.lang.String str12 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertNull(servletConfig8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test34376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34376");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        java.lang.String str4 = null; // flaky: configuration1.getModelDirectory();
// flaky:         configuration1.setModelDirectory("MutablePreference{userID=32, itemID=1, value=32.0}");
        org.plista.kornakapi.core.config.Configuration configuration7 = new org.plista.kornakapi.core.config.Configuration();
        configuration7.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str10 = configuration7.getModelDirectory();
        configuration7.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        double double15 = factorizationbasedRecommenderConfig13.getLambda();
        boolean boolean16 = factorizationbasedRecommenderConfig13.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(true);
        double double19 = factorizationbasedRecommenderConfig13.getLambda();
        configuration7.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str22 = itembasedRecommenderConfig21.getRetrainCronExpression();
        int int23 = itembasedRecommenderConfig21.getRetrainAfterPreferenceChanges();
        java.lang.String str24 = itembasedRecommenderConfig21.getSimilarityClass();
        itembasedRecommenderConfig21.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig21.setSimilarityClass("");
        itembasedRecommenderConfig21.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig21.setSimilarItemsPerItem(10000);
        configuration7.addItembasedRecommender(itembasedRecommenderConfig21);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig21);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList35 = null; // flaky: configuration1.getItembasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=10, itemID=-1, value=0.0}" + "'", str3, "MutablePreference{userID=10, itemID=-1, value=0.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=10, itemID=-1, value=0.0}" + "'", str4, "MutablePreference{userID=10, itemID=-1, value=0.0}");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(str24);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList35);
    }

    @Test
    public void test34377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34377");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList12 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList13 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = null; // flaky: configuration1.getStorageConfiguration();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=32, itemID=1, value=32.0}" + "'", str3, "MutablePreference{userID=32, itemID=1, value=32.0}");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList12);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList13);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration14);
    }

    @Test
    public void test34378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34378");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.MissingParameterException missingParameterException11 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException13 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException11.addSuppressed((java.lang.Throwable) missingParameterException13);
        invalidParameterException9.addSuppressed((java.lang.Throwable) missingParameterException13);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException9);
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException20);
        invalidParameterException16.addSuppressed((java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException26);
        missingParameterException20.addSuppressed((java.lang.Throwable) invalidParameterException27);
        java.lang.Throwable[] throwableArray29 = missingParameterException20.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException35 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.MissingParameterException missingParameterException38 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException40 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException38.addSuppressed((java.lang.Throwable) missingParameterException40);
        invalidParameterException36.addSuppressed((java.lang.Throwable) missingParameterException40);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException36);
        org.plista.kornakapi.web.MissingParameterException missingParameterException47 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException47);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException47);
        invalidParameterException43.addSuppressed((java.lang.Throwable) missingParameterException47);
        org.plista.kornakapi.web.MissingParameterException missingParameterException53 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException54 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException53);
        missingParameterException47.addSuppressed((java.lang.Throwable) invalidParameterException54);
        java.lang.Throwable[] throwableArray56 = missingParameterException47.getSuppressed();
        java.lang.Throwable[] throwableArray57 = missingParameterException47.getSuppressed();
        missingParameterException20.addSuppressed((java.lang.Throwable) missingParameterException47);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException59 = new org.plista.kornakapi.web.InvalidParameterException("itemID", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException60 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException61 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException60);
        java.lang.Throwable[] throwableArray62 = invalidParameterException60.getSuppressed();
        java.lang.Throwable[] throwableArray63 = invalidParameterException60.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(throwableArray63);
    }

    @Test
    public void test34379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34379");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setJdbcDriverClass("batchSize");
        java.lang.String str12 = storageConfiguration4.getPassword();
        java.lang.String str13 = storageConfiguration4.getJdbcUrl();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig15 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str16 = itembasedRecommenderConfig15.getSimilarityClass();
        itembasedRecommenderConfig15.setName("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer19 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig15);
        java.lang.String str20 = itembasedRecommenderConfig15.getRetrainCronExpression();
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig15);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer22 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig15);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer23 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig15);
        java.lang.String str24 = itembasedRecommenderConfig15.getSimilarityClass();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=32, itemID=1, value=32.0}" + "'", str3, "MutablePreference{userID=32, itemID=1, value=32.0}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test34380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34380");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainCronExpression("userID");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) '#');
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=100, itemID=-1, value=100.0}");
        java.lang.String str11 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=32, itemID=10, value=10.0}");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=1, value=-1.0}");
        int int17 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        java.lang.String str18 = itembasedRecommenderConfig0.getName();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=100.0}" + "'", str11, "MutablePreference{userID=100, itemID=-1, value=100.0}");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test34381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34381");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "itemID", (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test34382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34382");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 1);
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) -1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double15 = factorizationbasedRecommenderConfig0.getAlpha();
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test34383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34383");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("value");
        java.lang.String str17 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 0);
        factorizationbasedRecommenderConfig0.setAlpha((-1.0d));
        factorizationbasedRecommenderConfig0.setLambda((double) 52);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 10);
        int int28 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "value" + "'", str17, "value");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
    }

    @Test
    public void test34384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34384");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer5 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double6 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test34385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34385");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        double double4 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str5 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int6 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=1, itemID=0, value=0.0}");
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test34386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34386");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet10 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig14 = batchSetPreferencesServlet11.getServletConfig();
        addCandidateServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig16 = batchSetPreferencesServlet11.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet1.getServletConfig();
        batchSetPreferencesServlet1.destroy();
        batchSetPreferencesServlet1.destroy();
        javax.servlet.ServletConfig servletConfig21 = batchSetPreferencesServlet1.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext22 = batchSetPreferencesServlet1.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertNotNull(servletConfig16);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertNotNull(servletConfig21);
    }

    @Test
    public void test34387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34387");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) (byte) 0);
        int int13 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        boolean boolean15 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        double double16 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda(0.0d);
        double double19 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test34388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34388");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=10000, itemID=-1, value=10.0}", 52);
    }

    @Test
    public void test34389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34389");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double11 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda(52.0d);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test34390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34390");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        long long4 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=-1, itemID=10, value=10.0}", (-1L));
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        java.lang.String str10 = mutableCandidate0.getLabel();
        long long11 = mutableCandidate0.getItemID();
        java.lang.String str12 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str8, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str9, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str10, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str12, "MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test34391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34391");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener13 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler10, "label", (int) ' ');
        delegatingPreferenceChangeListener5.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener13);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
    }

    @Test
    public void test34392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34392");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(true);
        java.lang.String str9 = factorizationbasedRecommenderConfig3.getRetrainCronExpression();
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig3.setAlpha((double) 32);
        double double14 = factorizationbasedRecommenderConfig3.getLambda();
        factorizationbasedRecommenderConfig3.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=100.0}");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test34393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34393");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) 1L);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) 32, (double) 10.0f);
        double double18 = fixedCandidatesIDRescorer1.rescore(35L, (double) 1.0f);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
    }

    @Test
    public void test34394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34394");
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.config.Configuration configuration1 = org.plista.kornakapi.core.config.Configuration.fromXML("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=100, value=10000.0}");
            org.junit.Assert.fail("Expected exception of type com.thoughtworks.xstream.io.StreamException; message:  : only whitespace content allowed before start tag and not o (position: START_DOCUMENT seen o... @1:1) ");
        } catch (com.thoughtworks.xstream.io.StreamException e) {
            // Expected exception.
        }
    }

    @Test
    public void test34395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34395");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        long long12 = mutableCandidate0.getItemID();
        long long13 = mutableCandidate0.getItemID();
        java.lang.String str14 = mutableCandidate0.getLabel();
        java.lang.String str15 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 35L + "'", long13 == 35L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str14, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str15, "org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test34396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34396");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double9 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.io.File file11 = null;
        org.plista.kornakapi.core.storage.Storage storage12 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender13 = null;
        // The following exception was thrown during execution in test generation
        try {
            factorizationbasedInMemoryTrainer10.train(file11, storage12, recommender13, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test34397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34397");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        int int6 = factorizationbasedRecommenderConfig3.getNumberOfFeatures();
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig3.setLambda((double) '4');
        factorizationbasedRecommenderConfig3.setLambda((double) 100L);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str15 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str18 = storageConfiguration14.getJdbcUrl();
        java.lang.String str19 = storageConfiguration14.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration14.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration14.getPassword();
        java.lang.String str22 = storageConfiguration14.getUsername();
        storageConfiguration14.setUsername("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration14);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str27 = storageConfiguration26.getJdbcDriverClass();
        storageConfiguration26.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str30 = storageConfiguration26.getJdbcUrl();
        java.lang.String str31 = storageConfiguration26.getJdbcDriverClass();
        java.lang.String str32 = storageConfiguration26.getJdbcDriverClass();
        java.lang.String str33 = storageConfiguration26.getPassword();
        java.lang.String str34 = storageConfiguration26.getJdbcDriverClass();
        java.lang.String str35 = storageConfiguration26.getPassword();
        storageConfiguration26.setUsername("MutablePreference{userID=100, itemID=0, value=0.0}");
        java.lang.String str38 = storageConfiguration26.getPassword();
        storageConfiguration26.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=52.0}");
        java.lang.String str41 = storageConfiguration26.getJdbcDriverClass();
        java.lang.String str42 = storageConfiguration26.getPassword();
        storageConfiguration26.setJdbcUrl("MutablePreference{userID=0, itemID=10000, value=0.0}");
        java.lang.String str45 = storageConfiguration26.getJdbcUrl();
        configuration0.setStorageConfiguration(storageConfiguration26);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig47 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double48 = factorizationbasedRecommenderConfig47.getAlpha();
        double double49 = factorizationbasedRecommenderConfig47.getLambda();
        int int50 = factorizationbasedRecommenderConfig47.getNumberOfFeatures();
        factorizationbasedRecommenderConfig47.setNumberOfIterations(0);
        int int53 = factorizationbasedRecommenderConfig47.getNumberOfIterations();
        double double54 = factorizationbasedRecommenderConfig47.getLambda();
        factorizationbasedRecommenderConfig47.setAlpha((double) 0.0f);
        factorizationbasedRecommenderConfig47.setLambda((double) 52.0f);
        factorizationbasedRecommenderConfig47.setNumberOfFeatures((int) (byte) -1);
        boolean boolean61 = factorizationbasedRecommenderConfig47.isUsesImplicitFeedback();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig47);
        factorizationbasedRecommenderConfig47.setNumberOfIterations(0);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str22, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=0.0}" + "'", str45, "MutablePreference{userID=0, itemID=10000, value=0.0}");
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test34398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34398");
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet0 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        javax.servlet.ServletConfig servletConfig1 = deleteCandidateServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = deleteCandidateServlet0.getInitParameter("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig1);
    }

    @Test
    public void test34399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34399");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("batchSize");
        storageConfiguration0.setPassword("howMany");
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str12 = storageConfiguration0.getJdbcUrl();
        java.lang.String str13 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=52, itemID=-1, value=52.0}");
        java.lang.String str18 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "howMany" + "'", str13, "howMany");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "howMany" + "'", str18, "howMany");
    }

    @Test
    public void test34400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34400");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str4 = storageConfiguration3.getJdbcDriverClass();
        java.lang.String str5 = storageConfiguration3.getUsername();
        storageConfiguration3.setPassword("label");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration3);
// flaky:         configuration1.setNumProcessorsForTraining(10);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str13 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str16 = storageConfiguration12.getJdbcUrl();
        java.lang.String str17 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setJdbcDriverClass("batchSize");
        java.lang.String str20 = storageConfiguration12.getPassword();
        java.lang.String str21 = storageConfiguration12.getJdbcUrl();
        storageConfiguration12.setPassword("org.plista.kornakapi.web.MissingParameterException: file");
        storageConfiguration12.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=1.0}");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration12);
// flaky:         configuration1.setNumProcessorsForTraining(1);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList29 = null; // flaky: configuration1.getItembasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList29);
    }

    @Test
    public void test34401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34401");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
        java.lang.String str11 = storageConfiguration2.getPassword();
        storageConfiguration2.setJdbcDriverClass("label");
        java.lang.String str14 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setJdbcUrl("MutablePreference{userID=100, itemID=0, value=35.0}");
        storageConfiguration2.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=10.0}");
        storageConfiguration2.setPassword("MutablePreference{userID=1, itemID=0, value=10.0}");
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "label" + "'", str14, "label");
    }

    @Test
    public void test34402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34402");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) ' ');
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double17 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(97);
        double double20 = factorizationbasedRecommenderConfig0.getLambda();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer21 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.io.File file22 = null;
        org.plista.kornakapi.core.storage.Storage storage23 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender24 = null;
        // The following exception was thrown during execution in test generation
        try {
            factorizationbasedInMemoryTrainer21.train(file22, storage23, recommender24, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test34403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34403");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = null;
        batchDeleteCandidatesServlet0.init(servletConfig3);
        javax.servlet.ServletConfig servletConfig5 = batchDeleteCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet6 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str7 = trainServlet6.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet8 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet8.destroy();
        javax.servlet.ServletConfig servletConfig10 = deleteCandidateServlet8.getServletConfig();
        deleteCandidateServlet8.destroy();
        trainServlet6.init((javax.servlet.ServletConfig) deleteCandidateServlet8);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet13.init();
        java.lang.String str15 = batchAddCandidatesServlet13.getServletInfo();
        javax.servlet.ServletConfig servletConfig16 = batchAddCandidatesServlet13.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str18 = batchDeleteCandidatesServlet17.getServletInfo();
        java.lang.String str19 = batchDeleteCandidatesServlet17.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet20 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        setPreferenceServlet20.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet25 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet20.init((javax.servlet.ServletConfig) recommendServlet25);
        batchDeleteCandidatesServlet17.init((javax.servlet.ServletConfig) setPreferenceServlet20);
        batchAddCandidatesServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet17);
        batchDeleteCandidatesServlet17.init();
        java.lang.String str30 = batchDeleteCandidatesServlet17.getServletInfo();
        java.lang.String str31 = batchDeleteCandidatesServlet17.getServletInfo();
        trainServlet6.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet17);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet6);
        java.lang.String str34 = trainServlet6.getServletInfo();
        java.lang.String str35 = trainServlet6.getServletInfo();
        javax.servlet.ServletConfig servletConfig36 = trainServlet6.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration37 = trainServlet6.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(servletConfig16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(servletConfig36);
    }

    @Test
    public void test34404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34404");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        int int6 = itembasedRecommenderConfig5.getSimilarItemsPerItem();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getRetrainCronExpression();
        itembasedRecommenderConfig5.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test34405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34405");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        java.lang.String str5 = mutableCandidate0.getLabel();
        long long6 = mutableCandidate0.getItemID();
        java.lang.String str7 = mutableCandidate0.getLabel();
        java.lang.String str8 = mutableCandidate0.getLabel();
        long long9 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=35.0}", 52L);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}", 100L);
        long long16 = mutableCandidate0.getItemID();
        long long17 = mutableCandidate0.getItemID();
        long long18 = mutableCandidate0.getItemID();
        long long19 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "itemIDs" + "'", str5, "itemIDs");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "itemIDs" + "'", str7, "itemIDs");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemIDs" + "'", str8, "itemIDs");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
    }

    @Test
    public void test34406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34406");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet0.destroy();
        trainServlet0.destroy();
        java.lang.String str3 = trainServlet0.getServletInfo();
        java.lang.String str4 = trainServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig5 = trainServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig6 = trainServlet0.getServletConfig();
        trainServlet0.destroy();
        trainServlet0.init();
        javax.servlet.ServletRequest servletRequest9 = null;
        javax.servlet.ServletResponse servletResponse10 = null;
        // The following exception was thrown during execution in test generation
        try {
            trainServlet0.service(servletRequest9, servletResponse10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertNull(servletConfig6);
    }

    @Test
    public void test34407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34407");
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet0 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        java.lang.String str1 = deleteCandidateServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig2 = deleteCandidateServlet0.getServletConfig();
        deleteCandidateServlet0.init();
        deleteCandidateServlet0.destroy();
        javax.servlet.ServletRequest servletRequest5 = null;
        javax.servlet.ServletResponse servletResponse6 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteCandidateServlet0.service(servletRequest5, servletResponse6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig2);
    }

    @Test
    public void test34408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34408");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = new org.plista.kornakapi.core.config.Configuration();
        configuration6.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str9 = configuration6.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration6.getItembasedRecommenders();
        configuration6.setNumProcessorsForTraining(100);
        org.plista.kornakapi.web.Components components13 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = components13.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration15 = components13.getConfiguration();
        java.lang.String str16 = null; // flaky: configuration15.getModelDirectory();
        int int17 = 0; // flaky: configuration15.getNumProcessorsForTraining();
        int int18 = 0; // flaky: configuration15.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = null; // flaky: configuration15.getStorageConfiguration();
        configuration6.setStorageConfiguration(storageConfiguration19);
// flaky:         storageConfiguration19.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=0.0}");
// flaky:         storageConfiguration19.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration19);
// flaky:         storageConfiguration19.setJdbcDriverClass("MutablePreference{userID=1, itemID=10, value=10000.0}");
// flaky:         storageConfiguration19.setUsername("org.plista.kornakapi.web.MissingParameterException: userID");
// flaky:         storageConfiguration19.setPassword("MutablePreference{userID=100, itemID=100, value=-1.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNull(storageConfiguration5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertNotNull(components13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
// flaky:         org.junit.Assert.assertNotNull(configuration15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str16, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration19);
    }

    @Test
    public void test34409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34409");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str2 = storageConfiguration0.getJdbcUrl();
        java.lang.String str3 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setPassword("batchSize");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test34410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34410");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet15 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet17 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet16.init((javax.servlet.ServletConfig) batchSetPreferencesServlet17);
        javax.servlet.ServletConfig servletConfig19 = batchSetPreferencesServlet16.getServletConfig();
        addCandidateServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        batchSetPreferencesServlet16.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str23 = recommendServlet22.getServletInfo();
        javax.servlet.ServletConfig servletConfig24 = recommendServlet22.getServletConfig();
        java.lang.String str25 = recommendServlet22.getServletInfo();
        batchSetPreferencesServlet16.init((javax.servlet.ServletConfig) recommendServlet22);
        javax.servlet.ServletConfig servletConfig27 = null;
        recommendServlet22.init(servletConfig27);
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) recommendServlet22);
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet30 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet30.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) deleteCandidateServlet30);
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet33 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        java.lang.String str34 = deleteCandidateServlet33.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet35 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet36 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet35.init((javax.servlet.ServletConfig) batchSetPreferencesServlet36);
        javax.servlet.ServletConfig servletConfig38 = batchSetPreferencesServlet36.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet39 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet39.init();
        setPreferenceServlet39.init();
        setPreferenceServlet39.destroy();
        setPreferenceServlet39.destroy();
        batchSetPreferencesServlet36.init((javax.servlet.ServletConfig) setPreferenceServlet39);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet45 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet46 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet47 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet46.init((javax.servlet.ServletConfig) batchSetPreferencesServlet47);
        javax.servlet.ServletConfig servletConfig49 = batchSetPreferencesServlet46.getServletConfig();
        addCandidateServlet45.init((javax.servlet.ServletConfig) batchSetPreferencesServlet46);
        javax.servlet.ServletConfig servletConfig51 = batchSetPreferencesServlet46.getServletConfig();
        batchSetPreferencesServlet36.init((javax.servlet.ServletConfig) batchSetPreferencesServlet46);
        batchSetPreferencesServlet36.destroy();
        deleteCandidateServlet33.init((javax.servlet.ServletConfig) batchSetPreferencesServlet36);
        java.lang.String str55 = batchSetPreferencesServlet36.getServletInfo();
        javax.servlet.ServletConfig servletConfig56 = batchSetPreferencesServlet36.getServletConfig();
        batchSetPreferencesServlet36.init();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet58 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        java.lang.String str59 = deleteCandidateServlet58.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet60 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet61 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet60.init((javax.servlet.ServletConfig) batchSetPreferencesServlet61);
        javax.servlet.ServletConfig servletConfig63 = batchSetPreferencesServlet61.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet64 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet64.init();
        setPreferenceServlet64.init();
        setPreferenceServlet64.destroy();
        setPreferenceServlet64.destroy();
        batchSetPreferencesServlet61.init((javax.servlet.ServletConfig) setPreferenceServlet64);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet70 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet71 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet72 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet71.init((javax.servlet.ServletConfig) batchSetPreferencesServlet72);
        javax.servlet.ServletConfig servletConfig74 = batchSetPreferencesServlet71.getServletConfig();
        addCandidateServlet70.init((javax.servlet.ServletConfig) batchSetPreferencesServlet71);
        javax.servlet.ServletConfig servletConfig76 = batchSetPreferencesServlet71.getServletConfig();
        batchSetPreferencesServlet61.init((javax.servlet.ServletConfig) batchSetPreferencesServlet71);
        batchSetPreferencesServlet61.destroy();
        deleteCandidateServlet58.init((javax.servlet.ServletConfig) batchSetPreferencesServlet61);
        deleteCandidateServlet58.destroy();
        batchSetPreferencesServlet36.init((javax.servlet.ServletConfig) deleteCandidateServlet58);
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) deleteCandidateServlet58);
        javax.servlet.ServletRequest servletRequest83 = null;
        javax.servlet.ServletResponse servletResponse84 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteCandidateServlet58.service(servletRequest83, servletResponse84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(servletConfig24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(servletConfig38);
        org.junit.Assert.assertNotNull(servletConfig49);
        org.junit.Assert.assertNotNull(servletConfig51);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(servletConfig56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(servletConfig63);
        org.junit.Assert.assertNotNull(servletConfig74);
        org.junit.Assert.assertNotNull(servletConfig76);
    }

    @Test
    public void test34411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34411");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10);
        java.lang.String str8 = itembasedRecommenderConfig0.getName();
        int int9 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 0);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file15 = null;
        org.plista.kornakapi.core.storage.Storage storage16 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender17 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer14.train(file15, storage16, recommender17, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test34412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34412");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        int int8 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        double double15 = factorizationbasedRecommenderConfig13.getLambda();
        int int16 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(true);
        double double19 = factorizationbasedRecommenderConfig13.getAlpha();
        java.lang.String str20 = factorizationbasedRecommenderConfig13.getRetrainCronExpression();
        int int21 = factorizationbasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        int int22 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        factorizationbasedRecommenderConfig13.setNumberOfFeatures((int) '#');
        double double25 = factorizationbasedRecommenderConfig13.getLambda();
        boolean boolean26 = factorizationbasedRecommenderConfig13.isUsesImplicitFeedback();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        org.plista.kornakapi.core.config.Configuration configuration28 = new org.plista.kornakapi.core.config.Configuration();
        int int29 = configuration28.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration30 = configuration28.getStorageConfiguration();
        configuration28.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList33 = configuration28.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration34 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str35 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str38 = storageConfiguration34.getPassword();
        java.lang.String str39 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("hi!");
        storageConfiguration34.setJdbcDriverClass("file");
        configuration28.setStorageConfiguration(storageConfiguration34);
        configuration0.setStorageConfiguration(storageConfiguration34);
        storageConfiguration34.setJdbcUrl("MutablePreference{userID=0, itemID=10000, value=0.0}");
        storageConfiguration34.setUsername("MutablePreference{userID=0, itemID=32, value=-1.0}");
        storageConfiguration34.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: hi!");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(storageConfiguration30);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test34413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34413");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = components0.preferenceChangeListener();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNotNull(preferenceChangeListener8);
    }

    @Test
    public void test34414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34414");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = null; // flaky: configuration5.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList8 = null; // flaky: configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList9 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig10 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str11 = itembasedRecommenderConfig10.getSimilarityClass();
        java.lang.String str12 = itembasedRecommenderConfig10.getSimilarityClass();
        itembasedRecommenderConfig10.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig10.setName("MutablePreference{userID=0, itemID=0, value=10.0}");
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig10);
        itembasedRecommenderConfig10.setSimilarityClass("MutablePreference{userID=10000, itemID=52, value=0.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig10);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer21 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig10);
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration7);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList8);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test34415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34415");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig1 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double2 = factorizationbasedRecommenderConfig1.getAlpha();
        double double3 = factorizationbasedRecommenderConfig1.getLambda();
        int int4 = factorizationbasedRecommenderConfig1.getNumberOfFeatures();
        java.lang.String str5 = factorizationbasedRecommenderConfig1.getRetrainCronExpression();
        int int6 = factorizationbasedRecommenderConfig1.getNumberOfFeatures();
        factorizationbasedRecommenderConfig1.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig1.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double11 = factorizationbasedRecommenderConfig1.getLambda();
        factorizationbasedRecommenderConfig1.setAlpha((double) (byte) 0);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig1);
        java.lang.String str15 = factorizationbasedRecommenderConfig1.getName();
        factorizationbasedRecommenderConfig1.setAlpha((double) (short) 1);
        factorizationbasedRecommenderConfig1.setLambda((double) 32.0f);
        factorizationbasedRecommenderConfig1.setNumberOfFeatures((int) (short) -1);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test34416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34416");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("");
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setAlpha((double) (byte) 10);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setLambda((double) 97L);
        int int14 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int15 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setLambda((double) 10L);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(0);
        factorizationbasedRecommenderConfig0.setAlpha((double) (short) 0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test34417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34417");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer4 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 100, (double) 'a');
        double double10 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) (short) -1);
        double double13 = fixedCandidatesIDRescorer1.rescore((long) 35, (double) 52.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer14 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double17 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) '4');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double21 = fixedCandidatesIDRescorer1.rescore((long) 'a', (double) 'a');
        double double24 = fixedCandidatesIDRescorer1.rescore((long) 32, (double) 'a');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer25 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = filteringLongPairRescorer25.isFiltered(longPair26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 97.0d + "'", double7 == 97.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 52.0d + "'", double17 == 52.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 97.0d + "'", double24 == 97.0d);
    }

    @Test
    public void test34418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34418");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
        java.lang.String str11 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str13 = itembasedRecommenderConfig12.getRetrainCronExpression();
        int int14 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        java.lang.String str15 = itembasedRecommenderConfig12.getSimilarityClass();
        itembasedRecommenderConfig12.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig12.setRetrainCronExpression("value");
        int int20 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        int int21 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig12.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str24 = itembasedRecommenderConfig12.getRetrainCronExpression();
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig12);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig26 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig26.setSimilarityClass("");
        java.lang.String str29 = itembasedRecommenderConfig26.getSimilarityClass();
        itembasedRecommenderConfig26.setName("");
        java.lang.String str32 = itembasedRecommenderConfig26.getName();
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig26);
        itembasedRecommenderConfig26.setRetrainAfterPreferenceChanges((int) '4');
        java.lang.String str36 = itembasedRecommenderConfig26.getName();
        java.lang.String str37 = itembasedRecommenderConfig26.getSimilarityClass();
        int int38 = itembasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str11, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "value" + "'", str24, "value");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
    }

    @Test
    public void test34419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34419");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
// flaky:         configuration1.setNumProcessorsForTraining(52);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components5 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration6 = components5.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = components5.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components5.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = components5.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = components5.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig11 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig11.setSimilarityClass("");
        java.lang.String str14 = itembasedRecommenderConfig11.getName();
        java.lang.String str15 = itembasedRecommenderConfig11.getSimilarityClass();
        itembasedRecommenderConfig11.setName("");
        java.lang.String str18 = itembasedRecommenderConfig11.getSimilarityClass();
// flaky:         configuration10.addItembasedRecommender(itembasedRecommenderConfig11);
        itembasedRecommenderConfig11.setSimilarItemsPerItem((int) (byte) 1);
        itembasedRecommenderConfig11.setSimilarItemsPerItem((int) (short) 100);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig11);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig25 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double26 = factorizationbasedRecommenderConfig25.getAlpha();
        double double27 = factorizationbasedRecommenderConfig25.getLambda();
        int int28 = factorizationbasedRecommenderConfig25.getNumberOfFeatures();
        factorizationbasedRecommenderConfig25.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig25.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig25.setLambda((double) (short) 1);
        boolean boolean35 = factorizationbasedRecommenderConfig25.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer36 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig25);
        double double37 = factorizationbasedRecommenderConfig25.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer38 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig25);
        factorizationbasedRecommenderConfig25.setAlpha(0.0d);
        int int41 = factorizationbasedRecommenderConfig25.getNumberOfIterations();
        factorizationbasedRecommenderConfig25.setLambda((double) 10000);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig25);
        double double45 = factorizationbasedRecommenderConfig25.getAlpha();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNotNull(components5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
    }

    @Test
    public void test34420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34420");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
// flaky:         configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration34 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str35 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str38 = storageConfiguration34.getJdbcUrl();
        java.lang.String str39 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setJdbcDriverClass("batchSize");
        java.lang.String str42 = storageConfiguration34.getPassword();
        storageConfiguration34.setUsername("batchSize");
        java.lang.String str45 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration34);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration49 = null; // flaky: configuration5.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList50 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList51 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig52 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double53 = factorizationbasedRecommenderConfig52.getAlpha();
        double double54 = factorizationbasedRecommenderConfig52.getLambda();
        int int55 = factorizationbasedRecommenderConfig52.getNumberOfFeatures();
        factorizationbasedRecommenderConfig52.setUsesImplicitFeedback(true);
        double double58 = factorizationbasedRecommenderConfig52.getAlpha();
        java.lang.String str59 = factorizationbasedRecommenderConfig52.getRetrainCronExpression();
        int int60 = factorizationbasedRecommenderConfig52.getRetrainAfterPreferenceChanges();
        boolean boolean61 = factorizationbasedRecommenderConfig52.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig52.setLambda((double) 1);
        int int64 = factorizationbasedRecommenderConfig52.getNumberOfFeatures();
        double double65 = factorizationbasedRecommenderConfig52.getLambda();
        int int66 = factorizationbasedRecommenderConfig52.getNumberOfIterations();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig52);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig68 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double69 = factorizationbasedRecommenderConfig68.getAlpha();
        double double70 = factorizationbasedRecommenderConfig68.getLambda();
        int int71 = factorizationbasedRecommenderConfig68.getNumberOfFeatures();
        factorizationbasedRecommenderConfig68.setName("");
        factorizationbasedRecommenderConfig68.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig68.setNumberOfIterations((-1));
        int int78 = factorizationbasedRecommenderConfig68.getRetrainAfterPreferenceChanges();
        java.lang.String str79 = factorizationbasedRecommenderConfig68.getRetrainCronExpression();
        factorizationbasedRecommenderConfig68.setAlpha((double) (short) 100);
        factorizationbasedRecommenderConfig68.setNumberOfIterations((int) (byte) 0);
        int int84 = factorizationbasedRecommenderConfig68.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer85 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig68);
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig68);
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "batchSize" + "'", str45, "batchSize");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration49);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList50);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList51);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 1.0d + "'", double65 == 1.0d);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
    }

    @Test
    public void test34421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34421");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException5);
        java.lang.Throwable[] throwableArray8 = missingParameterException5.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException5);
        java.lang.Throwable[] throwableArray10 = missingParameterException5.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=0, value=97.0}", (java.lang.Throwable) missingParameterException5);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test34422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34422");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        int int8 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        configuration0.setModelDirectory("");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        boolean boolean19 = factorizationbasedRecommenderConfig16.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig16.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig16.setNumberOfFeatures(10);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer24 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig16);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        double double26 = factorizationbasedRecommenderConfig16.getLambda();
        int int27 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        java.lang.String str28 = factorizationbasedRecommenderConfig16.getRetrainCronExpression();
        factorizationbasedRecommenderConfig16.setUsesImplicitFeedback(true);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 10 + "'", int27 == 10);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test34423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34423");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener17 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener33 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener33.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener35);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener40 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener42 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener40.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener42);
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener42);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener49 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener51 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener51);
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener51);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener35);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener58 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener58.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener60 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener58.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener60);
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler65 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener68 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler65, "label", (int) ' ');
        delegatingPreferenceChangeListener60.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener68);
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener60);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener75 = null;
        delegatingPreferenceChangeListener19.addDelegate(preferenceChangeListener75);
    }

    @Test
    public void test34424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34424");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        boolean boolean6 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig3);
        double double8 = factorizationbasedRecommenderConfig3.getAlpha();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        double double10 = factorizationbasedRecommenderConfig3.getAlpha();
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(true);
        int int13 = factorizationbasedRecommenderConfig3.getNumberOfIterations();
        factorizationbasedRecommenderConfig3.setName("MutablePreference{userID=10000, itemID=-1, value=0.0}");
        factorizationbasedRecommenderConfig3.setLambda(97.0d);
        java.lang.String str18 = factorizationbasedRecommenderConfig3.getName();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=0.0}" + "'", str18, "MutablePreference{userID=10000, itemID=-1, value=0.0}");
    }

    @Test
    public void test34425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34425");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = null;
        batchDeleteCandidatesServlet0.init(servletConfig3);
        javax.servlet.ServletConfig servletConfig5 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig7 = batchDeleteCandidatesServlet0.getServletConfig();
        java.lang.String str8 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test34426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34426");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = configuration0.getFactorizationbasedRecommenders();
        configuration0.setNumProcessorsForTraining(0);
        org.plista.kornakapi.web.Components components9 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration10 = components9.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = components9.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = components9.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration13 = components9.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        int int15 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
// flaky:         configuration13.addItembasedRecommender(itembasedRecommenderConfig14);
        itembasedRecommenderConfig14.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=0.0}");
        java.lang.String str19 = itembasedRecommenderConfig14.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig14);
        itembasedRecommenderConfig14.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=0.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer23 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig14);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
        org.junit.Assert.assertNotNull(components9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(trainingScheduler12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test34427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34427");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        int int10 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(true);
        double double13 = factorizationbasedRecommenderConfig7.getAlpha();
// flaky:         configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig15 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double16 = factorizationbasedRecommenderConfig15.getAlpha();
        double double17 = factorizationbasedRecommenderConfig15.getLambda();
        int int18 = factorizationbasedRecommenderConfig15.getNumberOfFeatures();
        factorizationbasedRecommenderConfig15.setNumberOfIterations(0);
        int int21 = factorizationbasedRecommenderConfig15.getNumberOfFeatures();
// flaky:         configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig15);
        double double23 = factorizationbasedRecommenderConfig15.getAlpha();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test34428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34428");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        java.lang.String str8 = null; // flaky: configuration7.getModelDirectory();
        java.lang.String str9 = null; // flaky: configuration7.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = null; // flaky: configuration7.getStorageConfiguration();
// flaky:         storageConfiguration10.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: file");
        java.lang.String str13 = null; // flaky: storageConfiguration10.getUsername();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str8, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str9, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration10);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
    }

    @Test
    public void test34429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34429");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        java.lang.String str4 = null; // flaky: storageConfiguration3.getJdbcUrl();
        java.lang.String str5 = null; // flaky: storageConfiguration3.getUsername();
// flaky:         storageConfiguration3.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        java.lang.String str8 = null; // flaky: storageConfiguration3.getUsername();
// flaky:         storageConfiguration3.setUsername("MutablePreference{userID=10000, itemID=0, value=32.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: file" + "'", str4, "org.plista.kornakapi.web.InvalidParameterException: file");
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str5, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str8, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
    }

    @Test
    public void test34430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34430");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        java.lang.String str1 = mutableCandidate0.getLabel();
        long long2 = mutableCandidate0.getItemID();
        mutableCandidate0.set("recommender", 100L);
        long long6 = mutableCandidate0.getItemID();
        long long7 = mutableCandidate0.getItemID();
        long long8 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: ", 0L);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 100L + "'", long8 == 100L);
    }

    @Test
    public void test34431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34431");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) 10L);
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=10, itemID=10000, value=-1.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test34432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34432");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str15 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str18 = storageConfiguration14.getJdbcUrl();
        java.lang.String str19 = storageConfiguration14.getJdbcUrl();
        storageConfiguration14.setPassword("MutablePreference{userID=0, itemID=0, value=1.0}");
        configuration0.setStorageConfiguration(storageConfiguration14);
        storageConfiguration14.setJdbcUrl("file");
        storageConfiguration14.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: hi!");
        java.lang.String str27 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=32.0}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: hi!" + "'", str27, "org.plista.kornakapi.web.InvalidParameterException: hi!");
    }

    @Test
    public void test34433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34433");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(trainingScheduler5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
    }

    @Test
    public void test34434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34434");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str9 = itembasedRecommenderConfig8.getRetrainCronExpression();
        int int10 = itembasedRecommenderConfig8.getRetrainAfterPreferenceChanges();
        java.lang.String str11 = itembasedRecommenderConfig8.getSimilarityClass();
        itembasedRecommenderConfig8.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig8.setSimilarityClass("");
        itembasedRecommenderConfig8.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig8.setSimilarItemsPerItem(10000);
        itembasedRecommenderConfig8.setName("MutablePreference{userID=0, itemID=0, value=1.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer22 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig8);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig8);
        java.lang.String str24 = itembasedRecommenderConfig8.getName();
        itembasedRecommenderConfig8.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str24, "MutablePreference{userID=0, itemID=0, value=1.0}");
    }

    @Test
    public void test34435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34435");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration0.getStorageConfiguration();
        storageConfiguration11.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration11.setUsername("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration11.setJdbcDriverClass("MutablePreference{userID=1, itemID=10, value=0.0}");
        java.lang.String str18 = storageConfiguration11.getJdbcDriverClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=1, itemID=10, value=0.0}" + "'", str18, "MutablePreference{userID=1, itemID=10, value=0.0}");
    }

    @Test
    public void test34436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34436");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        javax.servlet.ServletConfig servletConfig7 = deleteCandidateServlet2.getServletConfig();
        javax.servlet.ServletConfig servletConfig8 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.init();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet10 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet10.destroy();
        javax.servlet.ServletConfig servletConfig12 = deleteCandidateServlet10.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str14 = batchDeleteCandidatesServlet13.getServletInfo();
        java.lang.String str15 = batchDeleteCandidatesServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet16 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet17 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        setPreferenceServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet16.init((javax.servlet.ServletConfig) recommendServlet21);
        batchDeleteCandidatesServlet13.init((javax.servlet.ServletConfig) setPreferenceServlet16);
        setPreferenceServlet16.destroy();
        deleteCandidateServlet10.init((javax.servlet.ServletConfig) setPreferenceServlet16);
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) deleteCandidateServlet10);
        java.lang.String str27 = deleteCandidateServlet2.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet28 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet29 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet30 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet29.init((javax.servlet.ServletConfig) batchSetPreferencesServlet30);
        batchDeleteCandidatesServlet28.init((javax.servlet.ServletConfig) batchSetPreferencesServlet30);
        batchDeleteCandidatesServlet28.destroy();
        javax.servlet.ServletConfig servletConfig34 = batchDeleteCandidatesServlet28.getServletConfig();
        batchDeleteCandidatesServlet28.init();
        batchDeleteCandidatesServlet28.init();
        javax.servlet.ServletConfig servletConfig37 = batchDeleteCandidatesServlet28.getServletConfig();
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet28);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet39 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet40 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet39.init((javax.servlet.ServletConfig) batchSetPreferencesServlet40);
        javax.servlet.ServletConfig servletConfig42 = batchSetPreferencesServlet39.getServletConfig();
        batchSetPreferencesServlet39.destroy();
        javax.servlet.ServletConfig servletConfig44 = batchSetPreferencesServlet39.getServletConfig();
        batchSetPreferencesServlet39.destroy();
        java.lang.String str46 = batchSetPreferencesServlet39.getServletInfo();
        batchDeleteCandidatesServlet28.init((javax.servlet.ServletConfig) batchSetPreferencesServlet39);
        javax.servlet.ServletConfig servletConfig48 = batchDeleteCandidatesServlet28.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str49 = batchDeleteCandidatesServlet28.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertNull(servletConfig8);
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(servletConfig34);
        org.junit.Assert.assertNotNull(servletConfig37);
        org.junit.Assert.assertNotNull(servletConfig42);
        org.junit.Assert.assertNotNull(servletConfig44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(servletConfig48);
    }

    @Test
    public void test34437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34437");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        java.lang.String str4 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) 10);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: hi!", (long) 1);
        java.lang.String str11 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: hi!" + "'", str11, "org.plista.kornakapi.web.InvalidParameterException: hi!");
    }

    @Test
    public void test34438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34438");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer4 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair6 = null;
        double double8 = filteringLongPairRescorer5.rescore(longPair6, (double) (-1));
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + (-1.0d) + "'", double8 == (-1.0d));
    }

    @Test
    public void test34439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34439");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file", (int) (byte) 10);
    }

    @Test
    public void test34440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34440");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        int int3 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int4 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((-1));
        java.lang.String str7 = itembasedRecommenderConfig0.getName();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str10 = itembasedRecommenderConfig0.getRetrainCronExpression();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=0, itemID=97, value=10.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str14 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=-1, itemID=0, value=100.0}");
        itembasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file");
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=35, itemID=-1, value=1.0}");
        itembasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=0, itemID=97, value=10.0}" + "'", str14, "MutablePreference{userID=0, itemID=97, value=10.0}");
    }

    @Test
    public void test34441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34441");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        java.lang.String str10 = setPreferenceServlet4.getServletInfo();
        setPreferenceServlet4.init();
        java.lang.String str12 = setPreferenceServlet4.getServletInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration13 = setPreferenceServlet4.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test34442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34442");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig9 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str10 = itembasedRecommenderConfig9.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig9);
        java.lang.String str12 = itembasedRecommenderConfig9.getSimilarityClass();
        java.lang.String str13 = itembasedRecommenderConfig9.getSimilarityClass();
// flaky:         configuration8.addItembasedRecommender(itembasedRecommenderConfig9);
        int int15 = 0; // flaky: configuration8.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        int int19 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        java.lang.String str20 = factorizationbasedRecommenderConfig16.getRetrainCronExpression();
        int int21 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        factorizationbasedRecommenderConfig16.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig16.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double26 = factorizationbasedRecommenderConfig16.getLambda();
        factorizationbasedRecommenderConfig16.setAlpha((double) (short) 10);
        factorizationbasedRecommenderConfig16.setAlpha(1.0d);
        int int31 = factorizationbasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        java.lang.String str32 = factorizationbasedRecommenderConfig16.getRetrainCronExpression();
// flaky:         configuration8.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        factorizationbasedRecommenderConfig16.setRetrainAfterPreferenceChanges((int) 'a');
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 100 + "'", int31 == 100);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test34443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34443");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str9 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setPassword("hi!");
        java.lang.String str12 = storageConfiguration0.getPassword();
        java.lang.String str13 = storageConfiguration0.getUsername();
        storageConfiguration0.setPassword("itemID");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=10000, itemID=0, value=32.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str13, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test34444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34444");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage8 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage9 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage10 = components0.storage();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(storage9);
        org.junit.Assert.assertNull(storage10);
    }

    @Test
    public void test34445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34445");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (-1.0f));
        double double7 = fixedCandidatesIDRescorer1.rescore((long) 32, (double) 10000L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer8 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) 52, (double) '4');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double15 = fixedCandidatesIDRescorer1.rescore(0L, 97.0d);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = fixedCandidatesIDRescorer1.isFiltered((long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + (-1.0d) + "'", double4 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10000.0d + "'", double7 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 52.0d + "'", double11 == 52.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 97.0d + "'", double15 == 97.0d);
    }

    @Test
    public void test34446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34446");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig5.setName("recommender");
        int int8 = itembasedRecommenderConfig5.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig5);
        itembasedRecommenderConfig5.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.io.File file14 = null;
        org.plista.kornakapi.core.storage.Storage storage15 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer13.train(file14, storage15, recommender16, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test34447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34447");
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet0 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        recommendServlet0.destroy();
        java.lang.String str2 = recommendServlet0.getServletInfo();
        recommendServlet0.destroy();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
    }

    @Test
    public void test34448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34448");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) (byte) -1);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig0.setLambda((double) 100L);
        java.lang.String str17 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setAlpha((double) ' ');
        factorizationbasedRecommenderConfig0.setName("label");
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        int int24 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer25 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.io.File file26 = null;
        org.plista.kornakapi.core.storage.Storage storage27 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender28 = null;
        // The following exception was thrown during execution in test generation
        try {
            factorizationbasedInMemoryTrainer25.train(file26, storage27, recommender28, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
    }

    @Test
    public void test34449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34449");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet13 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str14 = trainServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet15 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet15.destroy();
        javax.servlet.ServletConfig servletConfig17 = deleteCandidateServlet15.getServletConfig();
        deleteCandidateServlet15.destroy();
        trainServlet13.init((javax.servlet.ServletConfig) deleteCandidateServlet15);
        java.lang.String str20 = trainServlet13.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet13);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet22.init();
        java.lang.String str24 = batchAddCandidatesServlet22.getServletInfo();
        batchAddCandidatesServlet22.init();
        java.lang.String str26 = batchAddCandidatesServlet22.getServletInfo();
        batchAddCandidatesServlet22.init();
        batchAddCandidatesServlet22.init();
        batchAddCandidatesServlet22.init();
        trainServlet13.init((javax.servlet.ServletConfig) batchAddCandidatesServlet22);
        batchAddCandidatesServlet22.init();
        batchAddCandidatesServlet22.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test34450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34450");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) (short) 1);
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=1, itemID=35, value=52.0}");
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 10);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
    }

    @Test
    public void test34451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34451");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        javax.servlet.ServletConfig servletConfig3 = batchDeleteCandidatesServlet0.getServletConfig();
        java.lang.String str4 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = batchDeleteCandidatesServlet0.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test34452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34452");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        long long5 = mutableCandidate0.getItemID();
        mutableCandidate0.set("value", (long) 0);
        java.lang.String str9 = mutableCandidate0.getLabel();
        long long10 = mutableCandidate0.getItemID();
        java.lang.String str11 = mutableCandidate0.getLabel();
        long long12 = mutableCandidate0.getItemID();
        long long13 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", 97L);
        long long17 = mutableCandidate0.getItemID();
        long long18 = mutableCandidate0.getItemID();
        java.lang.String str19 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "value" + "'", str9, "value");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "value" + "'", str11, "value");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 97L + "'", long17 == 97L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 97L + "'", long18 == 97L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str19, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test34453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34453");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        batchDeleteCandidatesServlet14.destroy();
        javax.servlet.ServletConfig servletConfig17 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init(servletConfig17);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet19 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str20 = batchDeleteCandidatesServlet19.getServletInfo();
        batchDeleteCandidatesServlet19.init();
        java.lang.String str22 = batchDeleteCandidatesServlet19.getServletInfo();
        batchDeleteCandidatesServlet19.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        javax.servlet.ServletConfig servletConfig25 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet27 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet27.init();
        java.lang.String str29 = batchAddCandidatesServlet27.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet30 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str31 = batchDeleteCandidatesServlet30.getServletInfo();
        java.lang.String str32 = batchDeleteCandidatesServlet30.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet33 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet34 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet34.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        setPreferenceServlet33.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet38 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet33.init((javax.servlet.ServletConfig) recommendServlet38);
        batchDeleteCandidatesServlet30.init((javax.servlet.ServletConfig) setPreferenceServlet33);
        batchDeleteCandidatesServlet30.destroy();
        batchAddCandidatesServlet27.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        batchAddCandidatesServlet27.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchAddCandidatesServlet27);
        javax.servlet.ServletRequest servletRequest45 = null;
        javax.servlet.ServletResponse servletResponse46 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchAddCandidatesServlet27.service(servletRequest45, servletResponse46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(servletConfig25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test34454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34454");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = null; // flaky: configuration2.getItembasedRecommenders();
        java.lang.String str5 = null; // flaky: configuration2.getModelDirectory();
        int int6 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        int int9 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig7.setSimilarityClass("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem((int) '#');
        itembasedRecommenderConfig7.setName("file");
        int int19 = itembasedRecommenderConfig7.getSimilarItemsPerItem();
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig7);
// flaky:         configuration2.setModelDirectory("hi!");
// flaky:         configuration2.setModelDirectory("MutablePreference{userID=10000, itemID=32, value=10.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=1, itemID=-1, value=35.0}" + "'", str3, "MutablePreference{userID=1, itemID=-1, value=35.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=1, itemID=-1, value=35.0}" + "'", str5, "MutablePreference{userID=1, itemID=-1, value=35.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
    }

    @Test
    public void test34455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34455");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("recommender");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: itemID");
        int int7 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 1);
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 1);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file15 = null;
        org.plista.kornakapi.core.storage.Storage storage16 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender17 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer14.train(file15, storage16, recommender17, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test34456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34456");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage10 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage12 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration13 = components0.getConfiguration();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNotNull(preferenceChangeListener9);
        org.junit.Assert.assertNull(storage10);
        org.junit.Assert.assertNotNull(preferenceChangeListener11);
        org.junit.Assert.assertNull(storage12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
    }

    @Test
    public void test34457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34457");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=0, itemID=0, value=10.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=10.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=52, value=1.0}");
        missingParameterException3.addSuppressed((java.lang.Throwable) missingParameterException5);
        missingParameterException1.addSuppressed((java.lang.Throwable) missingParameterException5);
    }

    @Test
    public void test34458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34458");
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.config.Configuration configuration1 = org.plista.kornakapi.core.config.Configuration.fromXML("MutablePreference{userID=10, itemID=32, value=32.0}");
            org.junit.Assert.fail("Expected exception of type com.thoughtworks.xstream.io.StreamException; message:  : only whitespace content allowed before start tag and not M (position: START_DOCUMENT seen M... @1:1) ");
        } catch (com.thoughtworks.xstream.io.StreamException e) {
            // Expected exception.
        }
    }

    @Test
    public void test34459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34459");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setName("");
        java.lang.String str13 = itembasedRecommenderConfig6.getSimilarityClass();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig6);
        java.lang.String str15 = null; // flaky: configuration5.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = null; // flaky: configuration5.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration17 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str18 = storageConfiguration17.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration17.getUsername();
        java.lang.String str20 = storageConfiguration17.getPassword();
        java.lang.String str21 = storageConfiguration17.getJdbcDriverClass();
        storageConfiguration17.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration17.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        storageConfiguration17.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration17);
        java.lang.String str29 = storageConfiguration17.getUsername();
        java.lang.String str30 = storageConfiguration17.getJdbcUrl();
        storageConfiguration17.setJdbcUrl("MutablePreference{userID=97, itemID=97, value=32.0}");
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
// flaky:         org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=10000, itemID=32, value=10.0}" + "'", str15, "MutablePreference{userID=10000, itemID=32, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str29, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test34460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34460");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str13 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig14 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet16.init();
        java.lang.String str18 = batchAddCandidatesServlet16.getServletInfo();
        javax.servlet.ServletConfig servletConfig19 = batchAddCandidatesServlet16.getServletConfig();
        batchAddCandidatesServlet16.init();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str22 = batchDeleteCandidatesServlet21.getServletInfo();
        batchDeleteCandidatesServlet21.init();
        javax.servlet.ServletConfig servletConfig24 = null;
        batchDeleteCandidatesServlet21.init(servletConfig24);
        javax.servlet.ServletConfig servletConfig26 = batchDeleteCandidatesServlet21.getServletConfig();
        batchDeleteCandidatesServlet21.init();
        javax.servlet.ServletConfig servletConfig28 = batchDeleteCandidatesServlet21.getServletConfig();
        java.lang.String str29 = batchDeleteCandidatesServlet21.getServletInfo();
        batchAddCandidatesServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        javax.servlet.ServletConfig servletConfig31 = batchDeleteCandidatesServlet21.getServletConfig();
        batchDeleteCandidatesServlet0.init(servletConfig31);
        javax.servlet.ServletConfig servletConfig33 = batchDeleteCandidatesServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig34 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.init();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = batchDeleteCandidatesServlet0.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig26);
        org.junit.Assert.assertNull(servletConfig28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(servletConfig31);
        org.junit.Assert.assertNull(servletConfig33);
        org.junit.Assert.assertNull(servletConfig34);
    }

    @Test
    public void test34461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34461");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        long long3 = mutablePreference0.getItemID();
        java.lang.String str4 = mutablePreference0.toString();
        java.lang.String str5 = mutablePreference0.toString();
        java.lang.String str6 = mutablePreference0.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=1.0}");
    }

    @Test
    public void test34462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34462");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
// flaky:         configuration9.setModelDirectory("MutablePreference{userID=10000, itemID=-1, value=10.0}");
// flaky:         configuration9.setNumProcessorsForTraining(32);
        int int14 = 0; // flaky: configuration9.getNumProcessorsForTraining();
// flaky:         configuration9.setNumProcessorsForTraining((int) (byte) 1);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNotNull(preferenceChangeListener7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
    }

    @Test
    public void test34463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34463");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration10.getJdbcUrl();
        java.lang.String str15 = storageConfiguration10.getJdbcUrl();
        storageConfiguration10.setJdbcUrl("label");
        configuration0.setStorageConfiguration(storageConfiguration10);
        java.lang.String str19 = storageConfiguration10.getUsername();
        java.lang.String str20 = storageConfiguration10.getUsername();
        java.lang.String str21 = storageConfiguration10.getUsername();
        storageConfiguration10.setJdbcDriverClass("");
        storageConfiguration10.setJdbcDriverClass("MutablePreference{userID=100, itemID=100, value=-1.0}");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str19, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str20, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str21, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test34464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34464");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) 10);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) (-1));
        double double18 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) 10.0f);
        double double21 = fixedCandidatesIDRescorer1.rescore((long) 10000, (double) 97L);
        double double24 = fixedCandidatesIDRescorer1.rescore(0L, (double) (byte) 0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer25 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = filteringLongPairRescorer25.isFiltered(longPair26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 97.0d + "'", double21 == 97.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    }

    @Test
    public void test34465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34465");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener3);
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components10 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration11 = components10.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = components10.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = components10.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler14 = components10.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener15 = components10.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration16 = components10.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener17 = components10.preferenceChangeListener();
        delegatingPreferenceChangeListener3.addDelegate(preferenceChangeListener17);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener26 = null;
        delegatingPreferenceChangeListener19.addDelegate(preferenceChangeListener26);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener28 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener30 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener30.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener28.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener30);
        delegatingPreferenceChangeListener30.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener30.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener30.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener30);
        delegatingPreferenceChangeListener30.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener30.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener30.notifyOfPreferenceChange();
        org.junit.Assert.assertNotNull(components10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(trainingScheduler13);
        org.junit.Assert.assertNull(trainingScheduler14);
        org.junit.Assert.assertNotNull(preferenceChangeListener15);
// flaky:         org.junit.Assert.assertNotNull(configuration16);
        org.junit.Assert.assertNotNull(preferenceChangeListener17);
    }

    @Test
    public void test34466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34466");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setRetrainCronExpression("");
        itembasedRecommenderConfig6.setSimilarItemsPerItem(10);
        java.lang.String str14 = itembasedRecommenderConfig6.getName();
        int int15 = itembasedRecommenderConfig6.getRetrainAfterPreferenceChanges();
        java.lang.String str16 = itembasedRecommenderConfig6.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig18 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double19 = factorizationbasedRecommenderConfig18.getAlpha();
        int int20 = factorizationbasedRecommenderConfig18.getNumberOfFeatures();
        factorizationbasedRecommenderConfig18.setUsesImplicitFeedback(true);
        double double23 = factorizationbasedRecommenderConfig18.getLambda();
        double double24 = factorizationbasedRecommenderConfig18.getLambda();
        factorizationbasedRecommenderConfig18.setRetrainAfterPreferenceChanges((int) (byte) 1);
        factorizationbasedRecommenderConfig18.setUsesImplicitFeedback(true);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer29 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig18);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig18);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer31 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig18);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    }

    @Test
    public void test34467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34467");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        boolean boolean7 = factorizationbasedRecommenderConfig4.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig4.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = null; // flaky: configuration2.getStorageConfiguration();
        java.lang.String str13 = null; // flaky: storageConfiguration12.getJdbcDriverClass();
// flaky:         storageConfiguration12.setJdbcUrl("MutablePreference{userID=100, itemID=0, value=35.0}");
// flaky:         storageConfiguration12.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
// flaky:         storageConfiguration12.setJdbcUrl("MutablePreference{userID=32, itemID=1, value=97.0}");
// flaky:         storageConfiguration12.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str22 = null; // flaky: storageConfiguration12.getJdbcUrl();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration12);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str13, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "MutablePreference{userID=32, itemID=1, value=97.0}" + "'", str22, "MutablePreference{userID=32, itemID=1, value=97.0}");
    }

    @Test
    public void test34468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34468");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null; // flaky: configuration1.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double12 = factorizationbasedRecommenderConfig6.getAlpha();
        java.lang.String str13 = factorizationbasedRecommenderConfig6.getRetrainCronExpression();
        int int14 = factorizationbasedRecommenderConfig6.getRetrainAfterPreferenceChanges();
        boolean boolean15 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig6.setLambda((double) 1);
        int int18 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        double double19 = factorizationbasedRecommenderConfig6.getLambda();
        int int20 = factorizationbasedRecommenderConfig6.getNumberOfIterations();
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList22 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig23 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double24 = factorizationbasedRecommenderConfig23.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer25 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig23);
        factorizationbasedRecommenderConfig23.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig23.setNumberOfIterations((int) '#');
        double double30 = factorizationbasedRecommenderConfig23.getLambda();
        java.lang.String str31 = factorizationbasedRecommenderConfig23.getName();
        int int32 = factorizationbasedRecommenderConfig23.getNumberOfFeatures();
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig23);
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str3, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList22);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test34469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34469");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet11 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet13 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet13);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet12.getServletConfig();
        addCandidateServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig17 = addCandidateServlet11.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet11);
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet20 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet21 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet20.init((javax.servlet.ServletConfig) batchSetPreferencesServlet21);
        javax.servlet.ServletConfig servletConfig23 = batchSetPreferencesServlet21.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet24 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet24.init();
        setPreferenceServlet24.init();
        setPreferenceServlet24.destroy();
        setPreferenceServlet24.destroy();
        batchSetPreferencesServlet21.init((javax.servlet.ServletConfig) setPreferenceServlet24);
        javax.servlet.ServletConfig servletConfig30 = batchSetPreferencesServlet21.getServletConfig();
        batchDeleteCandidatesServlet0.init(servletConfig30);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext32 = batchDeleteCandidatesServlet0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(servletConfig15);
        org.junit.Assert.assertNotNull(servletConfig17);
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertNotNull(servletConfig30);
    }

    @Test
    public void test34470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34470");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 1);
        factorizationbasedRecommenderConfig0.setLambda((double) 100);
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(35);
        boolean boolean13 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        boolean boolean15 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) 'a');
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 35 + "'", int14 == 35);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test34471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34471");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet3 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str4 = batchDeleteCandidatesServlet3.getServletInfo();
        batchDeleteCandidatesServlet3.destroy();
        javax.servlet.ServletConfig servletConfig6 = batchDeleteCandidatesServlet3.getServletConfig();
        batchAddCandidatesServlet0.init(servletConfig6);
        batchAddCandidatesServlet0.init();
        batchAddCandidatesServlet0.init();
        java.lang.String str10 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig11 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet12 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet12.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet14 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        addCandidateServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet14);
        java.lang.String str18 = batchSetPreferencesServlet14.getServletInfo();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str20 = recommendServlet19.getServletInfo();
        javax.servlet.ServletConfig servletConfig21 = recommendServlet19.getServletConfig();
        java.lang.String str22 = recommendServlet19.getServletInfo();
        javax.servlet.ServletConfig servletConfig23 = recommendServlet19.getServletConfig();
        recommendServlet19.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet25 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str26 = batchDeleteCandidatesServlet25.getServletInfo();
        java.lang.String str27 = batchDeleteCandidatesServlet25.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet28 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet29 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet30 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        setPreferenceServlet28.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet33 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet28.init((javax.servlet.ServletConfig) recommendServlet33);
        batchDeleteCandidatesServlet25.init((javax.servlet.ServletConfig) setPreferenceServlet28);
        batchDeleteCandidatesServlet25.destroy();
        batchDeleteCandidatesServlet25.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet38 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str39 = trainServlet38.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet40 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet40.destroy();
        javax.servlet.ServletConfig servletConfig42 = deleteCandidateServlet40.getServletConfig();
        deleteCandidateServlet40.destroy();
        trainServlet38.init((javax.servlet.ServletConfig) deleteCandidateServlet40);
        java.lang.String str45 = trainServlet38.getServletInfo();
        batchDeleteCandidatesServlet25.init((javax.servlet.ServletConfig) trainServlet38);
        batchDeleteCandidatesServlet25.init();
        recommendServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet25);
        batchSetPreferencesServlet14.init((javax.servlet.ServletConfig) recommendServlet19);
        javax.servlet.ServletConfig servletConfig50 = batchSetPreferencesServlet14.getServletConfig();
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet14);
        javax.servlet.ServletRequest servletRequest52 = null;
        javax.servlet.ServletResponse servletResponse53 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchAddCandidatesServlet0.service(servletRequest52, servletResponse53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(servletConfig6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(servletConfig11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(servletConfig42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(servletConfig50);
    }

    @Test
    public void test34472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34472");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 10);
        double double10 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 10);
        factorizationbasedRecommenderConfig0.setName("value");
        double double15 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test34473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34473");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str13 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(32);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        boolean boolean20 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "userID" + "'", str13, "userID");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test34474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34474");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str16 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.init();
        java.lang.String str18 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.destroy();
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        java.lang.String str21 = batchDeleteCandidatesServlet15.getServletInfo();
        javax.servlet.ServletRequest servletRequest22 = null;
        javax.servlet.ServletResponse servletResponse23 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet15.service(servletRequest22, servletResponse23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test34475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34475");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        int int10 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setLambda(10000.0d);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 10);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test34476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34476");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 10);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) 35);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer13 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double16 = fixedCandidatesIDRescorer1.rescore(10L, 0.0d);
        double double19 = fixedCandidatesIDRescorer1.rescore((long) '#', 35.0d);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = fixedCandidatesIDRescorer1.isFiltered((long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
    }

    @Test
    public void test34477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34477");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
// flaky:         configuration1.setNumProcessorsForTraining(0);
// flaky:         configuration1.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.plista.kornakapi.web.Components components7 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = components7.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = null; // flaky: configuration8.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration10.getUsername();
        storageConfiguration10.setPassword("label");
// flaky:         configuration8.setStorageConfiguration(storageConfiguration10);
        java.lang.String str16 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration10);
        storageConfiguration10.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        storageConfiguration10.setJdbcDriverClass("MutablePreference{userID=100, itemID=0, value=0.0}");
        java.lang.String str24 = storageConfiguration10.getJdbcUrl();
        storageConfiguration10.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=100, value=1.0}");
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
        org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test34478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34478");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        float float1 = mutablePreference0.getValue();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getUserID();
        long long4 = mutablePreference0.getItemID();
        long long5 = mutablePreference0.getUserID();
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 0.0f + "'", float1 == 0.0f);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
    }

    @Test
    public void test34479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34479");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet0.getServletConfig();
        batchSetPreferencesServlet0.init();
        batchSetPreferencesServlet0.init();
        javax.servlet.ServletConfig servletConfig6 = batchSetPreferencesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet8 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str9 = batchDeleteCandidatesServlet8.getServletInfo();
        java.lang.String str10 = batchDeleteCandidatesServlet8.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet11 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet12.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet13);
        setPreferenceServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet13);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet16 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet11.init((javax.servlet.ServletConfig) recommendServlet16);
        batchDeleteCandidatesServlet8.init((javax.servlet.ServletConfig) setPreferenceServlet11);
        batchDeleteCandidatesServlet8.destroy();
        batchDeleteCandidatesServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet8);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet21 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        setPreferenceServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet21.init((javax.servlet.ServletConfig) recommendServlet26);
        java.lang.String str28 = setPreferenceServlet21.getServletInfo();
        javax.servlet.ServletConfig servletConfig29 = setPreferenceServlet21.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet30 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet31 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet32 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet31.init((javax.servlet.ServletConfig) batchSetPreferencesServlet32);
        batchDeleteCandidatesServlet30.init((javax.servlet.ServletConfig) batchSetPreferencesServlet32);
        setPreferenceServlet21.init((javax.servlet.ServletConfig) batchSetPreferencesServlet32);
        batchDeleteCandidatesServlet7.init((javax.servlet.ServletConfig) batchSetPreferencesServlet32);
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet32);
        javax.servlet.ServletConfig servletConfig38 = batchSetPreferencesServlet32.getServletConfig();
        batchSetPreferencesServlet32.destroy();
        batchSetPreferencesServlet32.init();
        javax.servlet.ServletRequest servletRequest41 = null;
        javax.servlet.ServletResponse servletResponse42 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet32.service(servletRequest41, servletResponse42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig3);
        org.junit.Assert.assertNotNull(servletConfig6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(servletConfig29);
        org.junit.Assert.assertNull(servletConfig38);
    }

    @Test
    public void test34480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34480");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) (-1));
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test34481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34481");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration0.getStorageConfiguration();
        int int8 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig9 = null;
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig9);
        java.lang.String str11 = configuration0.getModelDirectory();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(storageConfiguration7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test34482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34482");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getUsername();
        java.lang.String str9 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: recommender");
        storageConfiguration0.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str15 = storageConfiguration0.getJdbcUrl();
        java.lang.String str16 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=10000, itemID=-1, value=32.0}");
        storageConfiguration0.setPassword("MutablePreference{userID=100, itemID=0, value=35.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: recommender" + "'", str15, "org.plista.kornakapi.web.InvalidParameterException: recommender");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str16, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test34483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34483");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.lang.String str9 = configuration0.getModelDirectory();
        int int10 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig11 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig11.setSimilarityClass("");
        java.lang.String str14 = itembasedRecommenderConfig11.getName();
        java.lang.String str15 = itembasedRecommenderConfig11.getSimilarityClass();
        itembasedRecommenderConfig11.setName("");
        java.lang.String str18 = itembasedRecommenderConfig11.getSimilarityClass();
        itembasedRecommenderConfig11.setRetrainCronExpression("batchSize");
        itembasedRecommenderConfig11.setRetrainAfterPreferenceChanges(100);
        int int23 = itembasedRecommenderConfig11.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig11);
        itembasedRecommenderConfig11.setSimilarityClass("MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer27 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig11);
        itembasedRecommenderConfig11.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str30 = itembasedRecommenderConfig11.getSimilarityClass();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str30, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
    }

    @Test
    public void test34484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34484");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) (byte) 1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer8 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double11 = fixedCandidatesIDRescorer1.rescore(100L, (double) 0.0f);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, 1.0d);
        double double17 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) 1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
    }

    @Test
    public void test34485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34485");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet7.init();
        java.lang.String str9 = batchAddCandidatesServlet7.getServletInfo();
        javax.servlet.ServletConfig servletConfig10 = batchAddCandidatesServlet7.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str12 = batchDeleteCandidatesServlet11.getServletInfo();
        java.lang.String str13 = batchDeleteCandidatesServlet11.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet14 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet15 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet15.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        setPreferenceServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet14.init((javax.servlet.ServletConfig) recommendServlet19);
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) setPreferenceServlet14);
        batchAddCandidatesServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        batchDeleteCandidatesServlet11.init();
        java.lang.String str24 = batchDeleteCandidatesServlet11.getServletInfo();
        java.lang.String str25 = batchDeleteCandidatesServlet11.getServletInfo();
        trainServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        java.lang.String str27 = batchDeleteCandidatesServlet11.getServletInfo();
        batchDeleteCandidatesServlet11.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet29 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str30 = trainServlet29.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet31 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet31.destroy();
        javax.servlet.ServletConfig servletConfig33 = deleteCandidateServlet31.getServletConfig();
        deleteCandidateServlet31.destroy();
        trainServlet29.init((javax.servlet.ServletConfig) deleteCandidateServlet31);
        javax.servlet.ServletConfig servletConfig36 = deleteCandidateServlet31.getServletConfig();
        javax.servlet.ServletConfig servletConfig37 = null;
        deleteCandidateServlet31.init(servletConfig37);
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) deleteCandidateServlet31);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = batchDeleteCandidatesServlet11.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(servletConfig33);
        org.junit.Assert.assertNull(servletConfig36);
    }

    @Test
    public void test34486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34486");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        float float8 = mutablePreference0.getValue();
        float float9 = mutablePreference0.getValue();
        mutablePreference0.set(0L, (long) 'a', (float) 'a');
        mutablePreference0.set(100L, (long) ' ', (float) 97);
        mutablePreference0.set((long) (short) 1, (long) (-1), 35.0f);
        java.lang.String str22 = mutablePreference0.toString();
        long long23 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) (short) 1);
        long long26 = mutablePreference0.getItemID();
        long long27 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9 == 0.0f);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "MutablePreference{userID=1, itemID=-1, value=35.0}" + "'", str22, "MutablePreference{userID=1, itemID=-1, value=35.0}");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 1L + "'", long23 == 1L);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-1L) + "'", long26 == (-1L));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-1L) + "'", long27 == (-1L));
    }

    @Test
    public void test34487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34487");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=100, itemID=0, value=0.0}");
        int int7 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int8 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test34488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34488");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage12 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration13 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage14 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap15 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap16 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler17 = null;
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener21 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener23 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener23.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener21.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener23);
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener21);
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener21.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener29);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener29.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener35);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener41 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener44 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener46 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener44.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener46);
        delegatingPreferenceChangeListener41.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener44);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler50 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener53 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler50, "label", (int) ' ');
        inMemoryPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener53);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener56 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener58 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener58.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener56.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener58);
        delegatingPreferenceChangeListener58.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener58);
        delegatingPreferenceChangeListener29.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener58);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener64 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener67 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener67.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener69 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener69.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener67.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener69);
        delegatingPreferenceChangeListener64.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener67);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler73 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener76 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler73, "label", (int) ' ');
        inMemoryPreferenceChangeListener76.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener76);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener79 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener79.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener81 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener81.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener79.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener81);
        delegatingPreferenceChangeListener81.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener81.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener81);
        delegatingPreferenceChangeListener29.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener64);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler88 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener91 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler88, "MutablePreference{userID=0, itemID=0, value=1.0}", 35);
        delegatingPreferenceChangeListener29.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener91);
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration13, storage14, strMap15, strMap16, trainingScheduler17, (org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNull(trainingScheduler6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNotNull(preferenceChangeListener11);
        org.junit.Assert.assertNull(storage12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
    }

    @Test
    public void test34489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34489");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str16 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.init();
        java.lang.String str18 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.destroy();
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet21 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet21.init();
        setPreferenceServlet21.init();
        setPreferenceServlet21.destroy();
        javax.servlet.ServletConfig servletConfig25 = setPreferenceServlet21.getServletConfig();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet26 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str27 = trainServlet26.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet28 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet28.destroy();
        javax.servlet.ServletConfig servletConfig30 = deleteCandidateServlet28.getServletConfig();
        deleteCandidateServlet28.destroy();
        trainServlet26.init((javax.servlet.ServletConfig) deleteCandidateServlet28);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet33.init();
        java.lang.String str35 = batchAddCandidatesServlet33.getServletInfo();
        javax.servlet.ServletConfig servletConfig36 = batchAddCandidatesServlet33.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet37 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str38 = batchDeleteCandidatesServlet37.getServletInfo();
        java.lang.String str39 = batchDeleteCandidatesServlet37.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet40 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet41 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet42 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet41.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet42);
        setPreferenceServlet40.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet42);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet45 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet40.init((javax.servlet.ServletConfig) recommendServlet45);
        batchDeleteCandidatesServlet37.init((javax.servlet.ServletConfig) setPreferenceServlet40);
        batchAddCandidatesServlet33.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet37);
        batchDeleteCandidatesServlet37.init();
        java.lang.String str50 = batchDeleteCandidatesServlet37.getServletInfo();
        java.lang.String str51 = batchDeleteCandidatesServlet37.getServletInfo();
        trainServlet26.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet37);
        setPreferenceServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet37);
        batchDeleteCandidatesServlet15.init((javax.servlet.ServletConfig) setPreferenceServlet21);
        javax.servlet.ServletRequest servletRequest55 = null;
        javax.servlet.ServletResponse servletResponse56 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet15.service(servletRequest55, servletResponse56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(servletConfig25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(servletConfig30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(servletConfig36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
    }

    @Test
    public void test34490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34490");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        int int4 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration7.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration7);
        java.lang.String str18 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setSimilarityClass("");
        java.lang.String str24 = itembasedRecommenderConfig21.getName();
        java.lang.String str25 = itembasedRecommenderConfig21.getSimilarityClass();
        java.lang.String str26 = itembasedRecommenderConfig21.getSimilarityClass();
        int int27 = itembasedRecommenderConfig21.getSimilarItemsPerItem();
        itembasedRecommenderConfig21.setSimilarItemsPerItem((int) (byte) 10);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig21);
        java.lang.String str31 = itembasedRecommenderConfig21.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer32 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig21);
        java.lang.String str33 = itembasedRecommenderConfig21.getName();
        java.lang.String str34 = itembasedRecommenderConfig21.getName();
        java.lang.String str35 = itembasedRecommenderConfig21.getRetrainCronExpression();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test34491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34491");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) 'a');
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=100, itemID=0, value=0.0}");
        int int21 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
    }

    @Test
    public void test34492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34492");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        int int9 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(true);
        double double12 = factorizationbasedRecommenderConfig7.getLambda();
        factorizationbasedRecommenderConfig7.setNumberOfIterations((int) (byte) 100);
        double double15 = factorizationbasedRecommenderConfig7.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration17 = configuration0.getStorageConfiguration();
        int int18 = configuration0.getNumProcessorsForTraining();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(storageConfiguration6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNull(storageConfiguration17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test34493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34493");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        long long5 = mutableCandidate0.getItemID();
        long long6 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: itemIDs", (long) (byte) -1);
        long long10 = mutableCandidate0.getItemID();
        long long11 = mutableCandidate0.getItemID();
        java.lang.String str12 = mutableCandidate0.getLabel();
        java.lang.String str13 = mutableCandidate0.getLabel();
        java.lang.String str14 = mutableCandidate0.getLabel();
        java.lang.String str15 = mutableCandidate0.getLabel();
        java.lang.String str16 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: batchSize", (long) (byte) 1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str12, "org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str13, "org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str14, "org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str15, "org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str16, "org.plista.kornakapi.web.InvalidParameterException: itemIDs");
    }

    @Test
    public void test34494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34494");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage10 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = components0.preferenceChangeListener();
        org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNotNull(preferenceChangeListener9);
        org.junit.Assert.assertNull(storage10);
        org.junit.Assert.assertNotNull(preferenceChangeListener11);
    }

    @Test
    public void test34495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34495");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getUserID();
        float float4 = mutablePreference0.getValue();
        java.lang.String str5 = mutablePreference0.toString();
        long long6 = mutablePreference0.getUserID();
        long long7 = mutablePreference0.getUserID();
        long long8 = mutablePreference0.getItemID();
        long long9 = mutablePreference0.getItemID();
        float float10 = mutablePreference0.getValue();
        float float11 = mutablePreference0.getValue();
        java.lang.String str12 = mutablePreference0.toString();
        mutablePreference0.setValue((float) 100L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.0f + "'", float10 == 0.0f);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 0.0f + "'", float11 == 0.0f);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str12, "MutablePreference{userID=0, itemID=0, value=0.0}");
    }

    @Test
    public void test34496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34496");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        java.lang.String str12 = itembasedRecommenderConfig3.getName();
        int int13 = itembasedRecommenderConfig3.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig16.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer19 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig16);
        itembasedRecommenderConfig16.setRetrainCronExpression("");
        itembasedRecommenderConfig16.setName("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        itembasedRecommenderConfig16.setSimilarItemsPerItem((int) (byte) 100);
        java.lang.String str26 = itembasedRecommenderConfig16.getRetrainCronExpression();
        int int27 = itembasedRecommenderConfig16.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig16);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList29 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList30 = configuration0.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList31 = configuration0.getFactorizationbasedRecommenders();
        java.lang.String str32 = configuration0.getModelDirectory();
        org.plista.kornakapi.web.Components components33 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration34 = components33.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList35 = null; // flaky: configuration34.getItembasedRecommenders();
        java.lang.String str36 = null; // flaky: configuration34.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig37 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double38 = factorizationbasedRecommenderConfig37.getAlpha();
        double double39 = factorizationbasedRecommenderConfig37.getLambda();
        int int40 = factorizationbasedRecommenderConfig37.getNumberOfFeatures();
        factorizationbasedRecommenderConfig37.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer43 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig37);
// flaky:         configuration34.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig37);
// flaky:         configuration34.setModelDirectory("hi!");
        org.plista.kornakapi.web.Components components47 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration48 = components47.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler49 = components47.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler50 = components47.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration51 = components47.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration52 = components47.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig53 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig53.setSimilarityClass("");
        java.lang.String str56 = itembasedRecommenderConfig53.getName();
        java.lang.String str57 = itembasedRecommenderConfig53.getSimilarityClass();
        itembasedRecommenderConfig53.setName("");
        java.lang.String str60 = itembasedRecommenderConfig53.getSimilarityClass();
// flaky:         configuration52.addItembasedRecommender(itembasedRecommenderConfig53);
// flaky:         configuration52.setModelDirectory("");
        org.plista.kornakapi.core.config.Configuration configuration64 = new org.plista.kornakapi.core.config.Configuration();
        configuration64.setNumProcessorsForTraining((int) (short) 100);
        configuration64.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig69 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str70 = itembasedRecommenderConfig69.getRetrainCronExpression();
        int int71 = itembasedRecommenderConfig69.getRetrainAfterPreferenceChanges();
        java.lang.String str72 = itembasedRecommenderConfig69.getSimilarityClass();
        itembasedRecommenderConfig69.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig69.setRetrainCronExpression("value");
        int int77 = itembasedRecommenderConfig69.getRetrainAfterPreferenceChanges();
        configuration64.addItembasedRecommender(itembasedRecommenderConfig69);
        itembasedRecommenderConfig69.setSimilarityClass("itemIDs");
// flaky:         configuration52.addItembasedRecommender(itembasedRecommenderConfig69);
// flaky:         configuration34.addItembasedRecommender(itembasedRecommenderConfig69);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig69);
        itembasedRecommenderConfig69.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer86 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig69);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 100 + "'", int27 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList29);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList30);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(components33);
// flaky:         org.junit.Assert.assertNotNull(configuration34);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList35);
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str36, "org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(components47);
// flaky:         org.junit.Assert.assertNotNull(configuration48);
        org.junit.Assert.assertNull(trainingScheduler49);
        org.junit.Assert.assertNull(trainingScheduler50);
// flaky:         org.junit.Assert.assertNotNull(configuration51);
// flaky:         org.junit.Assert.assertNotNull(configuration52);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test34497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34497");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("howMany", (long) 'a');
        java.lang.String str5 = mutableCandidate0.getLabel();
        long long6 = mutableCandidate0.getItemID();
        mutableCandidate0.set("file", (long) (short) -1);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}", 0L);
        mutableCandidate0.set("MutablePreference{userID=-1, itemID=0, value=100.0}", (long) (-1));
        long long16 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "howMany" + "'", str5, "howMany");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 97L + "'", long6 == 97L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
    }

    @Test
    public void test34498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34498");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double9 = factorizationbasedRecommenderConfig0.getAlpha();
        boolean boolean10 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int12 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        double double13 = factorizationbasedRecommenderConfig0.getLambda();
        int int14 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=32, itemID=1, value=97.0}");
        double double17 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 1.0d + "'", double13 == 1.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test34499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34499");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(97);
        factorizationbasedRecommenderConfig0.setLambda(32.0d);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.io.File file12 = null;
        org.plista.kornakapi.core.storage.Storage storage13 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender14 = null;
        // The following exception was thrown during execution in test generation
        try {
            factorizationbasedInMemoryTrainer11.train(file12, storage13, recommender14, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test34500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest68.test34500");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        configuration0.setNumProcessorsForTraining((int) (byte) 1);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.web.Components components6 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration7 = components6.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components6.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components6.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = components6.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = components6.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration11.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration13.getJdbcDriverClass();
// flaky:         configuration11.setStorageConfiguration(storageConfiguration13);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str23 = itembasedRecommenderConfig22.getRetrainCronExpression();
        int int24 = itembasedRecommenderConfig22.getRetrainAfterPreferenceChanges();
        java.lang.String str25 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig22.setRetrainCronExpression("value");
        int int30 = itembasedRecommenderConfig22.getRetrainAfterPreferenceChanges();
        int int31 = itembasedRecommenderConfig22.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str34 = itembasedRecommenderConfig22.getRetrainCronExpression();
        java.lang.String str35 = itembasedRecommenderConfig22.getSimilarityClass();
        java.lang.String str36 = itembasedRecommenderConfig22.getSimilarityClass();
        int int37 = itembasedRecommenderConfig22.getSimilarItemsPerItem();
// flaky:         configuration11.addItembasedRecommender(itembasedRecommenderConfig22);
        int int39 = itembasedRecommenderConfig22.getSimilarItemsPerItem();
        itembasedRecommenderConfig22.setSimilarItemsPerItem(32);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setRetrainAfterPreferenceChanges((int) (byte) 0);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig22);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration5);
        org.junit.Assert.assertNotNull(components6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "value" + "'", str34, "value");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
    }
}
