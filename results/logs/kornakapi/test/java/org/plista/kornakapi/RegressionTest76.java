package org.plista.kornakapi;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest76 {

    public static boolean debug = false;

    @Test
    public void test38001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38001");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setName("");
        java.lang.String str13 = itembasedRecommenderConfig6.getSimilarityClass();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) '#');
        int int17 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        java.lang.String str18 = itembasedRecommenderConfig6.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer19 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) (byte) -1);
        java.lang.String str22 = itembasedRecommenderConfig6.getRetrainCronExpression();
        itembasedRecommenderConfig6.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer25 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        java.lang.String str26 = itembasedRecommenderConfig6.getName();
        itembasedRecommenderConfig6.setRetrainAfterPreferenceChanges((int) (byte) 0);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str26, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
    }

    @Test
    public void test38002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38002");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        int int4 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration7.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration7);
        int int18 = configuration0.getNumProcessorsForTraining();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str21 = configuration0.getModelDirectory();
        org.plista.kornakapi.web.Components components22 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage23 = null; // flaky: components22.storage();
        org.plista.kornakapi.core.config.Configuration configuration24 = null; // flaky: components22.getConfiguration();
        java.lang.String str25 = null; // flaky: configuration24.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str27 = storageConfiguration26.getJdbcDriverClass();
        storageConfiguration26.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str30 = storageConfiguration26.getJdbcUrl();
        java.lang.String str31 = storageConfiguration26.getJdbcDriverClass();
        storageConfiguration26.setJdbcDriverClass("batchSize");
        java.lang.String str34 = storageConfiguration26.getPassword();
        java.lang.String str35 = storageConfiguration26.getJdbcUrl();
// flaky:         configuration24.setStorageConfiguration(storageConfiguration26);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig37 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str38 = itembasedRecommenderConfig37.getSimilarityClass();
        itembasedRecommenderConfig37.setName("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer41 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig37);
        java.lang.String str42 = itembasedRecommenderConfig37.getRetrainCronExpression();
// flaky:         configuration24.addItembasedRecommender(itembasedRecommenderConfig37);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig44 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double45 = factorizationbasedRecommenderConfig44.getAlpha();
        double double46 = factorizationbasedRecommenderConfig44.getLambda();
        int int47 = factorizationbasedRecommenderConfig44.getNumberOfFeatures();
        java.lang.String str48 = factorizationbasedRecommenderConfig44.getRetrainCronExpression();
        int int49 = factorizationbasedRecommenderConfig44.getNumberOfFeatures();
        factorizationbasedRecommenderConfig44.setNumberOfIterations((int) (short) 0);
        boolean boolean52 = factorizationbasedRecommenderConfig44.isUsesImplicitFeedback();
        java.lang.String str53 = factorizationbasedRecommenderConfig44.getRetrainCronExpression();
        int int54 = factorizationbasedRecommenderConfig44.getNumberOfFeatures();
        int int55 = factorizationbasedRecommenderConfig44.getNumberOfIterations();
        factorizationbasedRecommenderConfig44.setRetrainAfterPreferenceChanges((int) (byte) 100);
// flaky:         configuration24.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig44);
        factorizationbasedRecommenderConfig44.setRetrainAfterPreferenceChanges(0);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig44);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig62 = null;
        configuration0.addItembasedRecommender(itembasedRecommenderConfig62);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList64 = configuration0.getItembasedRecommenders();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str21, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
// flaky:         org.junit.Assert.assertNotNull(components22);
        org.junit.Assert.assertNull(storage23);
// flaky:         org.junit.Assert.assertNotNull(configuration24);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "itemID" + "'", str25, "itemID");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 0.0d + "'", double45 == 0.0d);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList64);
    }

    @Test
    public void test38003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38003");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
// flaky:         configuration4.setNumProcessorsForTraining((int) (short) 1);
        java.lang.String str8 = null; // flaky: configuration4.getModelDirectory();
// flaky:         configuration4.setModelDirectory("MutablePreference{userID=0, itemID=-1, value=32.0}");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = null;
// flaky:         configuration4.setStorageConfiguration(storageConfiguration11);
        org.plista.kornakapi.web.Components components13 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components13.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList15 = null; // flaky: configuration14.getFactorizationbasedRecommenders();
        java.lang.String str16 = null; // flaky: configuration14.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig17 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double18 = factorizationbasedRecommenderConfig17.getAlpha();
        double double19 = factorizationbasedRecommenderConfig17.getLambda();
        int int20 = factorizationbasedRecommenderConfig17.getNumberOfFeatures();
        factorizationbasedRecommenderConfig17.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig17.setNumberOfFeatures((int) (byte) 1);
// flaky:         configuration14.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig17);
        double double26 = factorizationbasedRecommenderConfig17.getLambda();
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig17);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList28 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components29 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components29.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration31 = null; // flaky: components29.getConfiguration();
        java.lang.String str32 = null; // flaky: configuration31.getModelDirectory();
        int int33 = 0; // flaky: configuration31.getNumProcessorsForTraining();
        int int34 = 0; // flaky: configuration31.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration35 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str36 = storageConfiguration35.getJdbcDriverClass();
        storageConfiguration35.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str39 = storageConfiguration35.getJdbcUrl();
        java.lang.String str40 = storageConfiguration35.getJdbcDriverClass();
        java.lang.String str41 = storageConfiguration35.getJdbcDriverClass();
        java.lang.String str42 = storageConfiguration35.getPassword();
        java.lang.String str43 = storageConfiguration35.getUsername();
        java.lang.String str44 = storageConfiguration35.getJdbcDriverClass();
        java.lang.String str45 = storageConfiguration35.getJdbcDriverClass();
        java.lang.String str46 = storageConfiguration35.getJdbcDriverClass();
// flaky:         configuration31.setStorageConfiguration(storageConfiguration35);
        java.lang.String str48 = storageConfiguration35.getJdbcDriverClass();
// flaky:         configuration4.setStorageConfiguration(storageConfiguration35);
        java.lang.String str50 = null; // flaky: configuration4.getModelDirectory();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
// flaky:         org.junit.Assert.assertNotNull(components13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList15);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=0, itemID=-1, value=32.0}" + "'", str16, "MutablePreference{userID=0, itemID=-1, value=32.0}");
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList28);
// flaky:         org.junit.Assert.assertNotNull(components29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(configuration31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "MutablePreference{userID=0, itemID=-1, value=32.0}" + "'", str32, "MutablePreference{userID=0, itemID=-1, value=32.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str43, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str48);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "MutablePreference{userID=0, itemID=-1, value=32.0}" + "'", str50, "MutablePreference{userID=0, itemID=-1, value=32.0}");
    }

    @Test
    public void test38004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38004");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("recommender");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str7 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str7, "org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test38005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38005");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=100, itemID=0, value=10.0}", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test38006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38006");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) '4');
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setAlpha((double) 1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test38007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38007");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = configuration0.getStorageConfiguration();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str9 = configuration0.getModelDirectory();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(storageConfiguration5);
        org.junit.Assert.assertNull(storageConfiguration6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str9, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test38008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38008");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", (long) (byte) -1);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=0.0}", (long) (byte) 10);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=100, value=97.0}", 52L);
        long long15 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=-1, itemID=0, value=100.0}", (long) 0);
        mutableCandidate0.set("MutablePreference{userID=10000, itemID=1, value=97.0}", (long) (byte) 1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str8, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 52L + "'", long15 == 52L);
    }

    @Test
    public void test38009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38009");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig3 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str6 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet7 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        setPreferenceServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet7.init((javax.servlet.ServletConfig) recommendServlet12);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet7);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        java.lang.String str16 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str18 = batchDeleteCandidatesServlet17.getServletInfo();
        java.lang.String str19 = batchDeleteCandidatesServlet17.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet20 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        setPreferenceServlet20.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet25 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet20.init((javax.servlet.ServletConfig) recommendServlet25);
        batchDeleteCandidatesServlet17.init((javax.servlet.ServletConfig) setPreferenceServlet20);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet28 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet29 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet30 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet29.init((javax.servlet.ServletConfig) batchSetPreferencesServlet30);
        javax.servlet.ServletConfig servletConfig32 = batchSetPreferencesServlet29.getServletConfig();
        addCandidateServlet28.init((javax.servlet.ServletConfig) batchSetPreferencesServlet29);
        javax.servlet.ServletConfig servletConfig34 = addCandidateServlet28.getServletConfig();
        batchDeleteCandidatesServlet17.init((javax.servlet.ServletConfig) addCandidateServlet28);
        javax.servlet.ServletConfig servletConfig36 = batchDeleteCandidatesServlet17.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet37 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet37.init();
        setPreferenceServlet37.init();
        setPreferenceServlet37.destroy();
        javax.servlet.ServletConfig servletConfig41 = setPreferenceServlet37.getServletConfig();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet42 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str43 = trainServlet42.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet44 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet44.destroy();
        javax.servlet.ServletConfig servletConfig46 = deleteCandidateServlet44.getServletConfig();
        deleteCandidateServlet44.destroy();
        trainServlet42.init((javax.servlet.ServletConfig) deleteCandidateServlet44);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet49 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet49.init();
        java.lang.String str51 = batchAddCandidatesServlet49.getServletInfo();
        javax.servlet.ServletConfig servletConfig52 = batchAddCandidatesServlet49.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet53 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str54 = batchDeleteCandidatesServlet53.getServletInfo();
        java.lang.String str55 = batchDeleteCandidatesServlet53.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet56 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet57 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet58 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet57.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet58);
        setPreferenceServlet56.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet58);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet61 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet56.init((javax.servlet.ServletConfig) recommendServlet61);
        batchDeleteCandidatesServlet53.init((javax.servlet.ServletConfig) setPreferenceServlet56);
        batchAddCandidatesServlet49.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet53);
        batchDeleteCandidatesServlet53.init();
        java.lang.String str66 = batchDeleteCandidatesServlet53.getServletInfo();
        java.lang.String str67 = batchDeleteCandidatesServlet53.getServletInfo();
        trainServlet42.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet53);
        setPreferenceServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet53);
        batchDeleteCandidatesServlet17.init((javax.servlet.ServletConfig) setPreferenceServlet37);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet37);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet72 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet72.init();
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) batchSetPreferencesServlet72);
        batchDeleteCandidatesServlet4.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet76 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet76.destroy();
        trainServlet76.destroy();
        java.lang.String str79 = trainServlet76.getServletInfo();
        java.lang.String str80 = trainServlet76.getServletInfo();
        javax.servlet.ServletConfig servletConfig81 = trainServlet76.getServletConfig();
        javax.servlet.ServletConfig servletConfig82 = trainServlet76.getServletConfig();
        trainServlet76.destroy();
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) trainServlet76);
        // The following exception was thrown during execution in test generation
        try {
            trainServlet76.log("MutablePreference{userID=1, itemID=10, value=52.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(servletConfig32);
        org.junit.Assert.assertNotNull(servletConfig34);
        org.junit.Assert.assertNotNull(servletConfig36);
        org.junit.Assert.assertNull(servletConfig41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(servletConfig46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(servletConfig52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNull(servletConfig81);
        org.junit.Assert.assertNull(servletConfig82);
    }

    @Test
    public void test38010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38010");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (byte) 1, (double) (byte) 100);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) '4');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer13 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair14 = null;
        double double16 = filteringLongPairRescorer13.rescore(longPair14, (double) 10);
        org.apache.mahout.common.LongPair longPair17 = null;
        double double19 = filteringLongPairRescorer13.rescore(longPair17, (double) 100L);
        org.apache.mahout.common.LongPair longPair20 = null;
        double double22 = filteringLongPairRescorer13.rescore(longPair20, (double) 10000);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10000.0d + "'", double22 == 10000.0d);
    }

    @Test
    public void test38011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38011");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) -1);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(0);
        boolean boolean10 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double16 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test38012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38012");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration13.getPassword();
        java.lang.String str21 = storageConfiguration13.getJdbcDriverClass();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration13);
// flaky:         configuration1.setModelDirectory("value");
        org.plista.kornakapi.web.Components components25 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration26 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration27 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage28 = null; // flaky: components25.storage();
        org.plista.kornakapi.core.storage.Storage storage29 = null; // flaky: components25.storage();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        factorizationbasedRecommenderConfig31.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig31.setNumberOfFeatures((int) (short) 100);
        boolean boolean39 = factorizationbasedRecommenderConfig31.isUsesImplicitFeedback();
// flaky:         configuration30.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        org.plista.kornakapi.web.Components components41 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration42 = null; // flaky: components41.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler43 = null; // flaky: components41.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler44 = null; // flaky: components41.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration45 = null; // flaky: components41.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration46 = null; // flaky: components41.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig47 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig47.setSimilarityClass("");
        java.lang.String str50 = itembasedRecommenderConfig47.getName();
        java.lang.String str51 = itembasedRecommenderConfig47.getSimilarityClass();
        itembasedRecommenderConfig47.setName("");
        java.lang.String str54 = itembasedRecommenderConfig47.getSimilarityClass();
// flaky:         configuration46.addItembasedRecommender(itembasedRecommenderConfig47);
        itembasedRecommenderConfig47.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig47);
        java.lang.String str59 = null; // flaky: configuration30.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig60 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str61 = itembasedRecommenderConfig60.getRetrainCronExpression();
        int int62 = itembasedRecommenderConfig60.getRetrainAfterPreferenceChanges();
        java.lang.String str63 = itembasedRecommenderConfig60.getSimilarityClass();
        itembasedRecommenderConfig60.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig60.setSimilarityClass("");
        int int68 = itembasedRecommenderConfig60.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer69 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig60);
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig60);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig60);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration72 = null; // flaky: configuration1.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration73 = null; // flaky: configuration1.getStorageConfiguration();
        java.lang.String str74 = null; // flaky: storageConfiguration73.getPassword();
        java.lang.String str75 = null; // flaky: storageConfiguration73.getPassword();
// flaky:         storageConfiguration73.setPassword("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=52, value=-1.0}");
// flaky:         storageConfiguration73.setUsername("MutablePreference{userID=0, itemID=0, value=10.0}");
        java.lang.String str80 = null; // flaky: storageConfiguration73.getPassword();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=-1, value=32.0}" + "'", str3, "MutablePreference{userID=0, itemID=-1, value=32.0}");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
// flaky:         org.junit.Assert.assertNotNull(components25);
// flaky:         org.junit.Assert.assertNotNull(configuration26);
// flaky:         org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(storage28);
        org.junit.Assert.assertNull(storage29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
// flaky:         org.junit.Assert.assertNotNull(components41);
// flaky:         org.junit.Assert.assertNotNull(configuration42);
        org.junit.Assert.assertNull(trainingScheduler43);
        org.junit.Assert.assertNull(trainingScheduler44);
// flaky:         org.junit.Assert.assertNotNull(configuration45);
// flaky:         org.junit.Assert.assertNotNull(configuration46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "value" + "'", str59, "value");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration72);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNull(str75);
// flaky:         org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=52, value=-1.0}" + "'", str80, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=52, value=-1.0}");
    }

    @Test
    public void test38013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38013");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10);
        java.lang.String str8 = itembasedRecommenderConfig0.getSimilarityClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test38014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38014");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration3 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
// flaky:         org.junit.Assert.assertNotNull(configuration3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
    }

    @Test
    public void test38015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38015");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        java.lang.String str7 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        setPreferenceServlet8.destroy();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        java.lang.String str16 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet17 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet17.destroy();
        javax.servlet.ServletConfig servletConfig19 = deleteCandidateServlet17.getServletConfig();
        deleteCandidateServlet17.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet21 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str22 = trainServlet21.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet23 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet23.destroy();
        javax.servlet.ServletConfig servletConfig25 = deleteCandidateServlet23.getServletConfig();
        deleteCandidateServlet23.destroy();
        trainServlet21.init((javax.servlet.ServletConfig) deleteCandidateServlet23);
        javax.servlet.ServletConfig servletConfig28 = deleteCandidateServlet23.getServletConfig();
        deleteCandidateServlet17.init(servletConfig28);
        deleteCandidateServlet17.init();
        deleteCandidateServlet17.destroy();
        deleteCandidateServlet17.init();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet17);
        java.lang.String str34 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet36 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet36.init();
        java.lang.String str38 = batchAddCandidatesServlet36.getServletInfo();
        javax.servlet.ServletConfig servletConfig39 = batchAddCandidatesServlet36.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet40 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str41 = batchDeleteCandidatesServlet40.getServletInfo();
        java.lang.String str42 = batchDeleteCandidatesServlet40.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet43 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet44 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet45 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet44.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet45);
        setPreferenceServlet43.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet45);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet48 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet43.init((javax.servlet.ServletConfig) recommendServlet48);
        batchDeleteCandidatesServlet40.init((javax.servlet.ServletConfig) setPreferenceServlet43);
        batchAddCandidatesServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet40);
        java.lang.String str52 = batchDeleteCandidatesServlet40.getServletInfo();
        java.lang.String str53 = batchDeleteCandidatesServlet40.getServletInfo();
        batchDeleteCandidatesServlet40.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet55 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet56 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str57 = batchDeleteCandidatesServlet56.getServletInfo();
        java.lang.String str58 = batchDeleteCandidatesServlet56.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet59 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet60 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet61 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet60.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet61);
        setPreferenceServlet59.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet61);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet64 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet59.init((javax.servlet.ServletConfig) recommendServlet64);
        batchDeleteCandidatesServlet56.init((javax.servlet.ServletConfig) setPreferenceServlet59);
        batchDeleteCandidatesServlet56.destroy();
        batchDeleteCandidatesServlet55.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet56);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet69 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str70 = batchDeleteCandidatesServlet69.getServletInfo();
        batchDeleteCandidatesServlet69.destroy();
        javax.servlet.ServletConfig servletConfig72 = batchDeleteCandidatesServlet69.getServletConfig();
        batchDeleteCandidatesServlet55.init(servletConfig72);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet74 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str75 = recommendServlet74.getServletInfo();
        batchDeleteCandidatesServlet55.init((javax.servlet.ServletConfig) recommendServlet74);
        recommendServlet74.destroy();
        java.lang.String str78 = recommendServlet74.getServletInfo();
        recommendServlet74.destroy();
        java.lang.String str80 = recommendServlet74.getServletInfo();
        batchDeleteCandidatesServlet40.init((javax.servlet.ServletConfig) recommendServlet74);
        java.lang.String str82 = recommendServlet74.getServletInfo();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) recommendServlet74);
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig25);
        org.junit.Assert.assertNull(servletConfig28);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNull(servletConfig39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "" + "'", str57, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertNull(servletConfig72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
    }

    @Test
    public void test38016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38016");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components0.storage();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNull(trainingScheduler5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(storage9);
    }

    @Test
    public void test38017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38017");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        int int2 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int3 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int4 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer5 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file7 = null;
        org.plista.kornakapi.core.storage.Storage storage8 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer6.train(file7, storage8, recommender9, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test38018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38018");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig8 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double9 = factorizationbasedRecommenderConfig8.getAlpha();
        double double10 = factorizationbasedRecommenderConfig8.getLambda();
        int int11 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        factorizationbasedRecommenderConfig8.setUsesImplicitFeedback(false);
        int int14 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        factorizationbasedRecommenderConfig8.setLambda((double) 0);
        factorizationbasedRecommenderConfig8.setName("userID");
        int int19 = factorizationbasedRecommenderConfig8.getNumberOfFeatures();
        int int20 = factorizationbasedRecommenderConfig8.getNumberOfIterations();
        factorizationbasedRecommenderConfig8.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig8.setRetrainAfterPreferenceChanges(10);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig8);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig26 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str27 = itembasedRecommenderConfig26.getRetrainCronExpression();
        int int28 = itembasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
        int int29 = itembasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig26);
        java.lang.String str31 = null; // flaky: configuration4.getModelDirectory();
        java.lang.String str32 = null; // flaky: configuration4.getModelDirectory();
        int int33 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList34 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList35 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
// flaky:         org.junit.Assert.assertEquals("'" + str31 + "' != '" + "value" + "'", str31, "value");
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "value" + "'", str32, "value");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList34);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList35);
    }

    @Test
    public void test38019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38019");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str15 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str18 = storageConfiguration14.getJdbcUrl();
        java.lang.String str19 = storageConfiguration14.getJdbcUrl();
        storageConfiguration14.setPassword("MutablePreference{userID=0, itemID=0, value=1.0}");
        configuration0.setStorageConfiguration(storageConfiguration14);
        org.plista.kornakapi.core.config.Configuration configuration23 = new org.plista.kornakapi.core.config.Configuration();
        configuration23.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str26 = configuration23.getModelDirectory();
        configuration23.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration29 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str30 = storageConfiguration29.getJdbcDriverClass();
        storageConfiguration29.setPassword("itemIDs");
        configuration23.setStorageConfiguration(storageConfiguration29);
        java.lang.String str34 = storageConfiguration29.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration29);
        org.plista.kornakapi.core.config.Configuration configuration36 = new org.plista.kornakapi.core.config.Configuration();
        configuration36.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig39 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double40 = factorizationbasedRecommenderConfig39.getAlpha();
        double double41 = factorizationbasedRecommenderConfig39.getLambda();
        configuration36.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig39);
        java.lang.String str43 = configuration36.getModelDirectory();
        int int44 = configuration36.getNumProcessorsForTraining();
        java.lang.String str45 = configuration36.getModelDirectory();
        int int46 = configuration36.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig47 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig47.setSimilarityClass("");
        java.lang.String str50 = itembasedRecommenderConfig47.getName();
        java.lang.String str51 = itembasedRecommenderConfig47.getSimilarityClass();
        itembasedRecommenderConfig47.setName("");
        java.lang.String str54 = itembasedRecommenderConfig47.getSimilarityClass();
        itembasedRecommenderConfig47.setRetrainCronExpression("batchSize");
        itembasedRecommenderConfig47.setRetrainAfterPreferenceChanges(100);
        int int59 = itembasedRecommenderConfig47.getSimilarItemsPerItem();
        configuration36.addItembasedRecommender(itembasedRecommenderConfig47);
        itembasedRecommenderConfig47.setSimilarityClass("MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer63 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig47);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig47);
        java.lang.String str65 = itembasedRecommenderConfig47.getSimilarityClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "itemIDs" + "'", str34, "itemIDs");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str65, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
    }

    @Test
    public void test38020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38020");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration3 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = null; // flaky: configuration3.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null; // flaky: configuration3.getStorageConfiguration();
        java.lang.String str6 = null; // flaky: storageConfiguration5.getUsername();
// flaky:         storageConfiguration5.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=97.0}");
// flaky:         storageConfiguration5.setJdbcDriverClass("MutablePreference{userID=100, itemID=1, value=10000.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
// flaky:         org.junit.Assert.assertNotNull(configuration3);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration5);
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=10.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=10.0}");
    }

    @Test
    public void test38021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38021");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer7 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer8 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) 10000, (double) 52);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
    }

    @Test
    public void test38022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38022");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore(100L, 52.0d);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) 1.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer8 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double11 = fixedCandidatesIDRescorer1.rescore(10L, (double) (short) 1);
        double double14 = fixedCandidatesIDRescorer1.rescore(0L, (double) 1L);
        double double17 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) 100.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double21 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 52.0d + "'", double4 == 52.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 1.0d + "'", double14 == 1.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test38023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38023");
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet0 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        recommendServlet0.init();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = recommendServlet0.getInitParameter("MutablePreference{userID=0, itemID=97, value=97.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test38024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38024");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        long long4 = mutableCandidate0.getItemID();
        long long5 = mutableCandidate0.getItemID();
        java.lang.String str6 = mutableCandidate0.getLabel();
        java.lang.String str7 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=-1, itemID=10, value=10.0}", 1L);
        java.lang.String str11 = mutableCandidate0.getLabel();
        long long12 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str11, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 1L + "'", long12 == 1L);
    }

    @Test
    public void test38025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38025");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getUsername();
        storageConfiguration0.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}");
        java.lang.String str10 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=97, value=52.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str5, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}" + "'", str10, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}");
    }

    @Test
    public void test38026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38026");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) 10000);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair11 = null;
        double double13 = filteringLongPairRescorer10.rescore(longPair11, 0.0d);
        org.apache.mahout.common.LongPair longPair14 = null;
        double double16 = filteringLongPairRescorer10.rescore(longPair14, (double) 1.0f);
        org.apache.mahout.common.LongPair longPair17 = null;
        double double19 = filteringLongPairRescorer10.rescore(longPair17, 35.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10000.0d + "'", double9 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
    }

    @Test
    public void test38027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38027");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setRetrainCronExpression("userID");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components13 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener14 = null; // flaky: components13.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage15 = null; // flaky: components13.storage();
        org.plista.kornakapi.core.config.Configuration configuration16 = null; // flaky: components13.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration17 = null; // flaky: configuration16.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration18 = null; // flaky: configuration16.getStorageConfiguration();
        configuration0.setStorageConfiguration(storageConfiguration18);
        configuration0.setModelDirectory("MutablePreference{userID=100, itemID=10, value=-1.0}");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList22 = configuration0.getFactorizationbasedRecommenders();
        int int23 = configuration0.getNumProcessorsForTraining();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
// flaky:         org.junit.Assert.assertNotNull(components13);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener14);
        org.junit.Assert.assertNull(storage15);
// flaky:         org.junit.Assert.assertNotNull(configuration16);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration17);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration18);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test38028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38028");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet8 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str9 = trainServlet8.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet10 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet10.destroy();
        javax.servlet.ServletConfig servletConfig12 = deleteCandidateServlet10.getServletConfig();
        deleteCandidateServlet10.destroy();
        trainServlet8.init((javax.servlet.ServletConfig) deleteCandidateServlet10);
        javax.servlet.ServletConfig servletConfig15 = deleteCandidateServlet10.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) deleteCandidateServlet10);
        deleteCandidateServlet10.destroy();
        javax.servlet.ServletRequest servletRequest18 = null;
        javax.servlet.ServletResponse servletResponse19 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteCandidateServlet10.service(servletRequest18, servletResponse19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertNull(servletConfig15);
    }

    @Test
    public void test38029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38029");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components8 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components8.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = null; // flaky: components8.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration13 = null; // flaky: components8.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig14.setSimilarityClass("");
        java.lang.String str17 = itembasedRecommenderConfig14.getName();
        java.lang.String str18 = itembasedRecommenderConfig14.getSimilarityClass();
        itembasedRecommenderConfig14.setName("");
        java.lang.String str21 = itembasedRecommenderConfig14.getSimilarityClass();
// flaky:         configuration13.addItembasedRecommender(itembasedRecommenderConfig14);
        itembasedRecommenderConfig14.setSimilarItemsPerItem((int) '#');
        int int25 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig14);
        org.plista.kornakapi.web.Components components27 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration28 = null; // flaky: components27.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList29 = null; // flaky: configuration28.getItembasedRecommenders();
        java.lang.String str30 = null; // flaky: configuration28.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration31 = null; // flaky: configuration28.getStorageConfiguration();
// flaky:         configuration28.setNumProcessorsForTraining((int) '#');
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration34 = null; // flaky: configuration28.getStorageConfiguration();
// flaky:         storageConfiguration34.setUsername("org.plista.kornakapi.web.MissingParameterException: userID");
        configuration0.setStorageConfiguration(storageConfiguration34);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertNotNull(components8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(trainingScheduler11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 35 + "'", int25 == 35);
// flaky:         org.junit.Assert.assertNotNull(components27);
// flaky:         org.junit.Assert.assertNotNull(configuration28);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList29);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "value" + "'", str30, "value");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration31);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration34);
    }

    @Test
    public void test38030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38030");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str3 = factorizationbasedRecommenderConfig0.getName();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setAlpha((double) (-1L));
        boolean boolean7 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test38031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38031");
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.config.Configuration configuration1 = org.plista.kornakapi.core.config.Configuration.fromXML("MutablePreference{userID=10, itemID=97, value=32.0}");
            org.junit.Assert.fail("Expected exception of type com.thoughtworks.xstream.io.StreamException; message:  : only whitespace content allowed before start tag and not M (position: START_DOCUMENT seen M... @1:1) ");
        } catch (com.thoughtworks.xstream.io.StreamException e) {
            // Expected exception.
        }
    }

    @Test
    public void test38032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38032");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        int int3 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int4 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((-1));
        java.lang.String str7 = itembasedRecommenderConfig0.getName();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str10 = itembasedRecommenderConfig0.getRetrainCronExpression();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=0, itemID=97, value=10.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str15 = itembasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test38033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38033");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(trainingScheduler13);
    }

    @Test
    public void test38034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38034");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getName();
        boolean boolean10 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test38035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38035");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        java.lang.String str5 = configuration0.getModelDirectory();
        org.plista.kornakapi.web.Components components6 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components6.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components6.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration8.getStorageConfiguration();
// flaky:         storageConfiguration9.setUsername("howMany");
        java.lang.String str12 = null; // flaky: storageConfiguration9.getJdbcDriverClass();
        configuration0.setStorageConfiguration(storageConfiguration9);
        configuration0.setNumProcessorsForTraining(35);
        int int16 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components17 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage18 = null; // flaky: components17.storage();
        org.plista.kornakapi.core.config.Configuration configuration19 = null; // flaky: components17.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig20 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double21 = factorizationbasedRecommenderConfig20.getAlpha();
        double double22 = factorizationbasedRecommenderConfig20.getLambda();
        boolean boolean23 = factorizationbasedRecommenderConfig20.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer24 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig20);
        double double25 = factorizationbasedRecommenderConfig20.getAlpha();
// flaky:         configuration19.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig20);
        factorizationbasedRecommenderConfig20.setAlpha(0.0d);
        int int29 = factorizationbasedRecommenderConfig20.getNumberOfIterations();
        int int30 = factorizationbasedRecommenderConfig20.getNumberOfIterations();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig20);
        int int32 = configuration0.getNumProcessorsForTraining();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str5);
// flaky:         org.junit.Assert.assertNotNull(components6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 35 + "'", int16 == 35);
// flaky:         org.junit.Assert.assertNotNull(components17);
        org.junit.Assert.assertNull(storage18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 35 + "'", int32 == 35);
    }

    @Test
    public void test38036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38036");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        double double3 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(32);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=0, itemID=100, value=100.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + double3 + "' != '" + 0.0d + "'", double3 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
    }

    @Test
    public void test38037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38037");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig6 = addCandidateServlet0.getServletConfig();
        addCandidateServlet0.init();
        addCandidateServlet0.init();
        java.lang.String str9 = addCandidateServlet0.getServletInfo();
        java.lang.String str10 = addCandidateServlet0.getServletInfo();
        java.lang.String str11 = addCandidateServlet0.getServletInfo();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext12 = addCandidateServlet0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertNotNull(servletConfig6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test38038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38038");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        long long14 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (long) 0);
        java.lang.String str18 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: file", (long) (byte) -1);
        mutableCandidate0.set("MutablePreference{userID=10000, itemID=-1, value=32.0}", (long) 0);
        long long25 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str18, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test38039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38039");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        boolean boolean9 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double12 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        double double16 = factorizationbasedRecommenderConfig14.getLambda();
        int int17 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        java.lang.String str18 = factorizationbasedRecommenderConfig14.getRetrainCronExpression();
        int int19 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        factorizationbasedRecommenderConfig14.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig14.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double24 = factorizationbasedRecommenderConfig14.getLambda();
        factorizationbasedRecommenderConfig14.setAlpha((double) (short) 10);
        factorizationbasedRecommenderConfig14.setNumberOfIterations(100);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        java.lang.String str30 = configuration0.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList31 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList32 = configuration0.getItembasedRecommenders();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList31);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList32);
    }

    @Test
    public void test38040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38040");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        java.lang.String str2 = mutableCandidate0.getLabel();
        mutableCandidate0.set("file", (long) (short) 1);
        long long6 = mutableCandidate0.getItemID();
        java.lang.String str7 = mutableCandidate0.getLabel();
        long long8 = mutableCandidate0.getItemID();
        java.lang.String str9 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "file" + "'", str7, "file");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "file" + "'", str9, "file");
    }

    @Test
    public void test38041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38041");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig0.setLambda((double) 35);
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) ' ');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test38042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38042");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.lang.String str11 = storageConfiguration6.getPassword();
        java.lang.String str12 = storageConfiguration6.getPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "itemIDs" + "'", str11, "itemIDs");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "itemIDs" + "'", str12, "itemIDs");
    }

    @Test
    public void test38043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38043");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener11 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener11);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler21 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler21, "label", (int) ' ');
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener24);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener27.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener29);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener32 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener32.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener32.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener34);
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler39 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener42 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler39, "label", (int) ' ');
        delegatingPreferenceChangeListener34.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener42);
        delegatingPreferenceChangeListener27.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener34);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener45 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener47 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener45.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener47);
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener52 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener54 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener52.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener54);
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener47.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener54);
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener62 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener64 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener64);
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener69 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener69.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener71 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener69.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener71);
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener71);
        delegatingPreferenceChangeListener47.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener64);
        delegatingPreferenceChangeListener34.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener47);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener34);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler80 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener83 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler80, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (int) (byte) 10);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener83);
        inMemoryPreferenceChangeListener83.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener83);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
    }

    @Test
    public void test38044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38044");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException1.addSuppressed((java.lang.Throwable) missingParameterException3);
        org.plista.kornakapi.web.MissingParameterException missingParameterException9 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException9);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException9);
        org.plista.kornakapi.web.MissingParameterException missingParameterException13 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException15 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException13.addSuppressed((java.lang.Throwable) missingParameterException15);
        invalidParameterException11.addSuppressed((java.lang.Throwable) missingParameterException15);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException11);
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException22);
        invalidParameterException18.addSuppressed((java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException27 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException30 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException30);
        missingParameterException27.addSuppressed((java.lang.Throwable) invalidParameterException31);
        invalidParameterException18.addSuppressed((java.lang.Throwable) missingParameterException27);
        org.plista.kornakapi.web.MissingParameterException missingParameterException37 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException37);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException39 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException37);
        java.lang.Throwable[] throwableArray40 = missingParameterException37.getSuppressed();
        java.lang.Throwable[] throwableArray41 = missingParameterException37.getSuppressed();
        java.lang.Throwable[] throwableArray42 = missingParameterException37.getSuppressed();
        missingParameterException27.addSuppressed((java.lang.Throwable) missingParameterException37);
        java.lang.Throwable[] throwableArray44 = missingParameterException27.getSuppressed();
        missingParameterException1.addSuppressed((java.lang.Throwable) missingParameterException27);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray44);
    }

    @Test
    public void test38045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38045");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet12 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str13 = trainServlet12.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet14 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet14.destroy();
        javax.servlet.ServletConfig servletConfig16 = deleteCandidateServlet14.getServletConfig();
        deleteCandidateServlet14.destroy();
        trainServlet12.init((javax.servlet.ServletConfig) deleteCandidateServlet14);
        javax.servlet.ServletConfig servletConfig19 = deleteCandidateServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet14);
        batchDeleteCandidatesServlet0.init();
        java.lang.String str22 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig23 = batchDeleteCandidatesServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig24 = batchDeleteCandidatesServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str25 = batchDeleteCandidatesServlet0.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig16);
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(servletConfig23);
        org.junit.Assert.assertNotNull(servletConfig24);
    }

    @Test
    public void test38046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38046");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet11.init();
        java.lang.String str13 = batchAddCandidatesServlet11.getServletInfo();
        javax.servlet.ServletConfig servletConfig14 = batchAddCandidatesServlet11.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str16 = batchDeleteCandidatesServlet15.getServletInfo();
        java.lang.String str17 = batchDeleteCandidatesServlet15.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet18 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet20 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        setPreferenceServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet23 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet18.init((javax.servlet.ServletConfig) recommendServlet23);
        batchDeleteCandidatesServlet15.init((javax.servlet.ServletConfig) setPreferenceServlet18);
        batchAddCandidatesServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchAddCandidatesServlet11);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet28 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str29 = recommendServlet28.getServletInfo();
        javax.servlet.ServletConfig servletConfig30 = recommendServlet28.getServletConfig();
        javax.servlet.ServletConfig servletConfig31 = recommendServlet28.getServletConfig();
        javax.servlet.ServletConfig servletConfig32 = recommendServlet28.getServletConfig();
        batchAddCandidatesServlet11.init((javax.servlet.ServletConfig) recommendServlet28);
        recommendServlet28.init();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = recommendServlet28.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(servletConfig30);
        org.junit.Assert.assertNull(servletConfig31);
        org.junit.Assert.assertNull(servletConfig32);
    }

    @Test
    public void test38047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38047");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        batchAddCandidatesServlet0.init();
        batchAddCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig5 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        java.lang.String str7 = batchAddCandidatesServlet6.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet14 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet15 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet15.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        setPreferenceServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet20 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str21 = batchDeleteCandidatesServlet20.getServletInfo();
        batchDeleteCandidatesServlet20.init();
        batchDeleteCandidatesServlet20.destroy();
        java.lang.String str24 = batchDeleteCandidatesServlet20.getServletInfo();
        batchDeleteCandidatesServlet20.destroy();
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        batchAddCandidatesServlet6.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        javax.servlet.ServletConfig servletConfig28 = batchAddCandidatesServlet6.getServletConfig();
        batchAddCandidatesServlet0.init(servletConfig28);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNotNull(servletConfig28);
    }

    @Test
    public void test38048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38048");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener11);
    }

    @Test
    public void test38049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38049");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet3.init();
        setPreferenceServlet3.destroy();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        javax.servlet.ServletConfig servletConfig7 = setPreferenceServlet3.getServletConfig();
        javax.servlet.ServletConfig servletConfig8 = setPreferenceServlet3.getServletConfig();
        java.lang.Throwable throwable10 = null;
        // The following exception was thrown during execution in test generation
        try {
            setPreferenceServlet3.log("MutablePreference{userID=52, itemID=-1, value=52.0}", throwable10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertNull(servletConfig8);
    }

    @Test
    public void test38050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38050");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage12 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler14 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNull(storage9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(storage12);
        org.junit.Assert.assertNull(trainingScheduler13);
        org.junit.Assert.assertNull(trainingScheduler14);
    }

    @Test
    public void test38051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38051");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        java.lang.String str16 = null; // flaky: configuration5.getModelDirectory();
// flaky:         configuration5.setNumProcessorsForTraining((-1));
// flaky:         configuration5.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList21 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList22 = null; // flaky: configuration5.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "value" + "'", str16, "value");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList21);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList22);
    }

    @Test
    public void test38052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38052");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        long long1 = mutablePreference0.getItemID();
        float float2 = mutablePreference0.getValue();
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        mutablePreference0.set((-1L), (long) (short) -1, (float) 100);
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (byte) -1);
        long long12 = mutablePreference0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + float2 + "' != '" + 0.0f + "'", float2 == 0.0f);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
    }

    @Test
    public void test38053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38053");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) 'a');
        factorizationbasedRecommenderConfig0.setLambda((double) 97);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(97);
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test38054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38054");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet3 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) batchSetPreferencesServlet3);
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        java.lang.String str6 = batchSetPreferencesServlet2.getServletInfo();
        javax.servlet.ServletConfig servletConfig7 = batchSetPreferencesServlet2.getServletConfig();
        batchSetPreferencesServlet2.destroy();
        java.lang.String str9 = batchSetPreferencesServlet2.getServletInfo();
        java.lang.String str10 = batchSetPreferencesServlet2.getServletInfo();
        java.lang.String str11 = batchSetPreferencesServlet2.getServletInfo();
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException19.addSuppressed((java.lang.Throwable) missingParameterException21);
        java.lang.Throwable[] throwableArray23 = missingParameterException21.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException25 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException24);
        java.lang.Throwable[] throwableArray26 = invalidParameterException25.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=1.0}", (java.lang.Throwable) invalidParameterException25);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException28 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10000, itemID=-1, value=0.0}", (java.lang.Throwable) invalidParameterException25);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany", (java.lang.Throwable) invalidParameterException28);
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet2.log("MutablePreference{userID=52, itemID=97, value=1.0}", (java.lang.Throwable) invalidParameterException28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test38055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38055");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        java.lang.String str3 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        javax.servlet.ServletConfig servletConfig5 = setPreferenceServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet6 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet6.destroy();
        deleteCandidateServlet6.destroy();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet6);
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet10 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet10.destroy();
        javax.servlet.ServletConfig servletConfig12 = deleteCandidateServlet10.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str14 = batchDeleteCandidatesServlet13.getServletInfo();
        java.lang.String str15 = batchDeleteCandidatesServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet16 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet17 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        setPreferenceServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet16.init((javax.servlet.ServletConfig) recommendServlet21);
        batchDeleteCandidatesServlet13.init((javax.servlet.ServletConfig) setPreferenceServlet16);
        setPreferenceServlet16.destroy();
        deleteCandidateServlet10.init((javax.servlet.ServletConfig) setPreferenceServlet16);
        deleteCandidateServlet6.init((javax.servlet.ServletConfig) deleteCandidateServlet10);
        deleteCandidateServlet6.init();
        deleteCandidateServlet6.init();
        // The following exception was thrown during execution in test generation
        try {
            deleteCandidateServlet6.log("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test38056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38056");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str5 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=10, value=1.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test38057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38057");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        javax.servlet.ServletConfig servletConfig7 = deleteCandidateServlet2.getServletConfig();
        javax.servlet.ServletConfig servletConfig8 = null;
        deleteCandidateServlet2.init(servletConfig8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str11 = batchDeleteCandidatesServlet10.getServletInfo();
        java.lang.String str12 = batchDeleteCandidatesServlet10.getServletInfo();
        batchDeleteCandidatesServlet10.destroy();
        batchDeleteCandidatesServlet10.init();
        java.lang.String str15 = batchDeleteCandidatesServlet10.getServletInfo();
        batchDeleteCandidatesServlet10.init();
        batchDeleteCandidatesServlet10.destroy();
        java.lang.String str18 = batchDeleteCandidatesServlet10.getServletInfo();
        batchDeleteCandidatesServlet10.init();
        batchDeleteCandidatesServlet10.init();
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        // The following exception was thrown during execution in test generation
        try {
            deleteCandidateServlet2.log("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test38058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38058");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration13.getPassword();
        java.lang.String str21 = storageConfiguration13.getJdbcDriverClass();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration13);
        java.lang.String str23 = storageConfiguration13.getJdbcUrl();
        java.lang.String str24 = storageConfiguration13.getUsername();
        storageConfiguration13.setJdbcUrl("MutablePreference{userID=32, itemID=-1, value=10.0}");
        java.lang.String str27 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setJdbcDriverClass("MutablePreference{userID=52, itemID=100, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str3, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str24, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test38059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38059");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        long long4 = mutablePreference0.getUserID();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.set((long) 100, 0L, (float) 10000L);
        float float10 = mutablePreference0.getValue();
        java.lang.String str11 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 10000.0f + "'", float10 == 10000.0f);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=100, itemID=0, value=10000.0}" + "'", str11, "MutablePreference{userID=100, itemID=0, value=10000.0}");
    }

    @Test
    public void test38060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38060");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("label", (-1L));
        java.lang.String str17 = mutableCandidate0.getLabel();
        long long18 = mutableCandidate0.getItemID();
        long long19 = mutableCandidate0.getItemID();
        long long20 = mutableCandidate0.getItemID();
        java.lang.String str21 = mutableCandidate0.getLabel();
        long long22 = mutableCandidate0.getItemID();
        long long23 = mutableCandidate0.getItemID();
        mutableCandidate0.set("", 32L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "itemID" + "'", str13, "itemID");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "label" + "'", str17, "label");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "label" + "'", str21, "label");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-1L) + "'", long23 == (-1L));
    }

    @Test
    public void test38061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38061");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getName();
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("");
        itembasedRecommenderConfig0.setRetrainCronExpression("label");
        int int9 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) '4');
        int int12 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        java.lang.String str13 = itembasedRecommenderConfig0.getSimilarityClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 52 + "'", int12 == 52);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test38062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38062");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.lang.String str5 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration6 = new org.plista.kornakapi.core.config.Configuration();
        configuration6.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig9 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double10 = factorizationbasedRecommenderConfig9.getAlpha();
        double double11 = factorizationbasedRecommenderConfig9.getLambda();
        configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig9);
        java.lang.String str13 = configuration6.getModelDirectory();
        int int14 = configuration6.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = configuration6.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str17 = storageConfiguration16.getJdbcDriverClass();
        storageConfiguration16.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str20 = storageConfiguration16.getJdbcUrl();
        java.lang.String str21 = storageConfiguration16.getJdbcUrl();
        storageConfiguration16.setJdbcUrl("label");
        configuration6.setStorageConfiguration(storageConfiguration16);
        java.lang.String str25 = storageConfiguration16.getPassword();
        storageConfiguration16.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        configuration0.setStorageConfiguration(storageConfiguration16);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig29 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double30 = factorizationbasedRecommenderConfig29.getAlpha();
        double double31 = factorizationbasedRecommenderConfig29.getLambda();
        int int32 = factorizationbasedRecommenderConfig29.getNumberOfFeatures();
        java.lang.String str33 = factorizationbasedRecommenderConfig29.getRetrainCronExpression();
        int int34 = factorizationbasedRecommenderConfig29.getNumberOfFeatures();
        factorizationbasedRecommenderConfig29.setNumberOfIterations((int) (short) 0);
        boolean boolean37 = factorizationbasedRecommenderConfig29.isUsesImplicitFeedback();
        java.lang.String str38 = factorizationbasedRecommenderConfig29.getRetrainCronExpression();
        double double39 = factorizationbasedRecommenderConfig29.getLambda();
        factorizationbasedRecommenderConfig29.setLambda((double) (byte) -1);
        factorizationbasedRecommenderConfig29.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig29.setLambda((double) 100L);
        int int46 = factorizationbasedRecommenderConfig29.getRetrainAfterPreferenceChanges();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig29);
        factorizationbasedRecommenderConfig29.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        factorizationbasedRecommenderConfig29.setNumberOfFeatures((int) (short) 100);
        double double52 = factorizationbasedRecommenderConfig29.getLambda();
        factorizationbasedRecommenderConfig29.setNumberOfFeatures(10000);
        factorizationbasedRecommenderConfig29.setNumberOfFeatures((int) 'a');
        factorizationbasedRecommenderConfig29.setRetrainAfterPreferenceChanges(97);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 100.0d + "'", double52 == 100.0d);
    }

    @Test
    public void test38063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38063");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=0, itemID=0, value=0.0}");
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setAlpha((double) 35);
        int int11 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 0);
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=100, itemID=0, value=10000.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test38064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38064");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=10000, itemID=10, value=0.0}");
    }

    @Test
    public void test38065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38065");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("recommender");
        java.lang.String str5 = itembasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file7 = null;
        org.plista.kornakapi.core.storage.Storage storage8 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender9 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer6.train(file7, storage8, recommender9, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test38066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38066");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 1);
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) -1);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 1);
        boolean boolean16 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str17 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double20 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test38067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38067");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str16 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.init();
        java.lang.String str18 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.destroy();
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        javax.servlet.ServletConfig servletConfig21 = setPreferenceServlet8.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext22 = setPreferenceServlet8.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(servletConfig21);
    }

    @Test
    public void test38068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38068");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) (byte) 10);
        double double10 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (short) 100);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double15 = fixedCandidatesIDRescorer1.rescore(10000L, 100.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer16 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer17 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = fixedCandidatesIDRescorer1.isFiltered((long) 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 10.0d + "'", double7 == 10.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 100.0d + "'", double15 == 100.0d);
    }

    @Test
    public void test38069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38069");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
// flaky:         configuration9.setNumProcessorsForTraining(1);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNull(storage8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
    }

    @Test
    public void test38070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38070");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getPassword();
        java.lang.String str7 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcDriverClass("");
        storageConfiguration0.setUsername("org.plista.kornakapi.web.MissingParameterException: label");
        java.lang.String str13 = storageConfiguration0.getJdbcDriverClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test38071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38071");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("label", (-1L));
        java.lang.String str17 = mutableCandidate0.getLabel();
        long long18 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: howMany", (long) (short) 1);
        mutableCandidate0.set("MutablePreference{userID=100, itemID=-1, value=100.0}", (long) (byte) 10);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=100, value=1.0}", 97L);
        long long28 = mutableCandidate0.getItemID();
        java.lang.String str29 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "itemID" + "'", str13, "itemID");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "label" + "'", str17, "label");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-1L) + "'", long18 == (-1L));
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 97L + "'", long28 == 97L);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "MutablePreference{userID=0, itemID=100, value=1.0}" + "'", str29, "MutablePreference{userID=0, itemID=100, value=1.0}");
    }

    @Test
    public void test38072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38072");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration13 = new org.plista.kornakapi.core.config.Configuration();
        configuration13.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str16 = configuration13.getModelDirectory();
        configuration13.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig19 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double20 = factorizationbasedRecommenderConfig19.getAlpha();
        configuration13.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig19);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration22 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str23 = storageConfiguration22.getUsername();
        java.lang.String str24 = storageConfiguration22.getJdbcDriverClass();
        java.lang.String str25 = storageConfiguration22.getPassword();
        storageConfiguration22.setJdbcUrl("file");
        configuration13.setStorageConfiguration(storageConfiguration22);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration29 = null;
        configuration13.setStorageConfiguration(storageConfiguration29);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList31 = configuration13.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig32 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str33 = itembasedRecommenderConfig32.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer34 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig32);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer35 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig32);
        itembasedRecommenderConfig32.setRetrainCronExpression("batchSize");
        java.lang.String str38 = itembasedRecommenderConfig32.getSimilarityClass();
        itembasedRecommenderConfig32.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        configuration13.addItembasedRecommender(itembasedRecommenderConfig32);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig32);
// flaky:         configuration12.addItembasedRecommender(itembasedRecommenderConfig32);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener9);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener10);
        org.junit.Assert.assertNull(trainingScheduler11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test38073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38073");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration8.getStorageConfiguration();
        java.lang.String str10 = null; // flaky: configuration8.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = null; // flaky: configuration8.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = null;
// flaky:         configuration8.addItembasedRecommender(itembasedRecommenderConfig12);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig14.setSimilarityClass("");
        java.lang.String str17 = itembasedRecommenderConfig14.getName();
        java.lang.String str18 = itembasedRecommenderConfig14.getSimilarityClass();
        itembasedRecommenderConfig14.setName("");
        java.lang.String str21 = itembasedRecommenderConfig14.getSimilarityClass();
        int int22 = itembasedRecommenderConfig14.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig14.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: file");
        int int25 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
// flaky:         configuration8.addItembasedRecommender(itembasedRecommenderConfig14);
        itembasedRecommenderConfig14.setRetrainAfterPreferenceChanges((int) (short) 1);
        java.lang.String str29 = itembasedRecommenderConfig14.getSimilarityClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str10, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
    }

    @Test
    public void test38074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38074");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.lang.String str5 = null; // flaky: configuration4.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration4.getItembasedRecommenders();
        int int7 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.Configuration configuration8 = new org.plista.kornakapi.core.config.Configuration();
        configuration8.setNumProcessorsForTraining((int) (short) 100);
        configuration8.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig13 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str14 = itembasedRecommenderConfig13.getRetrainCronExpression();
        int int15 = itembasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        java.lang.String str16 = itembasedRecommenderConfig13.getSimilarityClass();
        itembasedRecommenderConfig13.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig13.setRetrainCronExpression("value");
        int int21 = itembasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        configuration8.addItembasedRecommender(itembasedRecommenderConfig13);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList23 = configuration8.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig24 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig24.setSimilarityClass("");
        java.lang.String str27 = itembasedRecommenderConfig24.getName();
        java.lang.String str28 = itembasedRecommenderConfig24.getSimilarityClass();
        configuration8.addItembasedRecommender(itembasedRecommenderConfig24);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig30 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str31 = itembasedRecommenderConfig30.getRetrainCronExpression();
        int int32 = itembasedRecommenderConfig30.getRetrainAfterPreferenceChanges();
        java.lang.String str33 = itembasedRecommenderConfig30.getSimilarityClass();
        itembasedRecommenderConfig30.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig30.setRetrainCronExpression("value");
        int int38 = itembasedRecommenderConfig30.getRetrainAfterPreferenceChanges();
        int int39 = itembasedRecommenderConfig30.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig30.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str42 = itembasedRecommenderConfig30.getRetrainCronExpression();
        configuration8.addItembasedRecommender(itembasedRecommenderConfig30);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer44 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig30);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig30);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer46 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig30);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str5, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "value" + "'", str42, "value");
    }

    @Test
    public void test38075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38075");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str11 = storageConfiguration0.getPassword();
        storageConfiguration0.setPassword("MutablePreference{userID=0, itemID=100, value=97.0}");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=32, itemID=32, value=97.0}");
        java.lang.String str16 = storageConfiguration0.getJdbcDriverClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str11, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=32, itemID=32, value=97.0}" + "'", str16, "MutablePreference{userID=32, itemID=32, value=97.0}");
    }

    @Test
    public void test38076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38076");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        long long1 = mutablePreference0.getItemID();
        long long2 = mutablePreference0.getUserID();
        long long3 = mutablePreference0.getItemID();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        long long6 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) 10L);
        mutablePreference0.setValue(100.0f);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test38077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38077");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
    }

    @Test
    public void test38078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38078");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        long long4 = mutableCandidate0.getItemID();
        long long5 = mutableCandidate0.getItemID();
        java.lang.String str6 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test38079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38079");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (-1), (double) (byte) 1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer8 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = fixedCandidatesIDRescorer1.isFiltered((long) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
    }

    @Test
    public void test38080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38080");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs", (java.lang.Throwable) invalidParameterException7);
        java.lang.Throwable[] throwableArray9 = invalidParameterException7.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: hi!", (java.lang.Throwable) invalidParameterException7);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test38081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38081");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setName("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(100);
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10);
        int int13 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        java.lang.String str14 = itembasedRecommenderConfig0.getName();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str14, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38082");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components0.storage();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNull(storage9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(storage11);
    }

    @Test
    public void test38083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38083");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=52, value=52.0}");
    }

    @Test
    public void test38084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38084");
        java.lang.Throwable throwable2 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException3 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs", throwable2);
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException8.addSuppressed((java.lang.Throwable) missingParameterException10);
        java.lang.Throwable[] throwableArray12 = missingParameterException10.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException10);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException14 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException13);
        java.lang.Throwable[] throwableArray15 = invalidParameterException14.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=1.0}", (java.lang.Throwable) invalidParameterException14);
        invalidParameterException3.addSuppressed((java.lang.Throwable) invalidParameterException14);
        org.plista.kornakapi.web.MissingParameterException missingParameterException24 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray25 = missingParameterException24.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException26 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException24);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) missingParameterException24);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException28 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=32.0}", (java.lang.Throwable) invalidParameterException27);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) invalidParameterException28);
        java.lang.Throwable[] throwableArray30 = invalidParameterException28.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: howMany", (java.lang.Throwable) invalidParameterException28);
        invalidParameterException3.addSuppressed((java.lang.Throwable) invalidParameterException31);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException33 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=97, value=35.0}", (java.lang.Throwable) invalidParameterException3);
        java.lang.Throwable[] throwableArray34 = invalidParameterException33.getSuppressed();
        java.lang.Throwable[] throwableArray35 = invalidParameterException33.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test38085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38085");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) (byte) 100);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) 97, (double) 32);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) 'a', (double) 10.0f);
        double double17 = fixedCandidatesIDRescorer1.rescore(32L, (double) 10000L);
        double double20 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) 97L);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = fixedCandidatesIDRescorer1.isFiltered((long) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 32.0d + "'", double9 == 32.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10000.0d + "'", double17 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
    }

    @Test
    public void test38086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38086");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig11 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double12 = factorizationbasedRecommenderConfig11.getAlpha();
        double double13 = factorizationbasedRecommenderConfig11.getLambda();
        int int14 = factorizationbasedRecommenderConfig11.getNumberOfFeatures();
        java.lang.String str15 = factorizationbasedRecommenderConfig11.getRetrainCronExpression();
        int int16 = factorizationbasedRecommenderConfig11.getNumberOfFeatures();
        factorizationbasedRecommenderConfig11.setName("MutablePreference{userID=0, itemID=0, value=0.0}");
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig11);
        java.lang.String str20 = factorizationbasedRecommenderConfig11.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer21 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig11);
        factorizationbasedRecommenderConfig11.setUsesImplicitFeedback(false);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test38087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38087");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet14.init();
        java.lang.String str16 = batchAddCandidatesServlet14.getServletInfo();
        javax.servlet.ServletConfig servletConfig17 = batchAddCandidatesServlet14.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str19 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str20 = batchDeleteCandidatesServlet18.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet21 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        setPreferenceServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet21.init((javax.servlet.ServletConfig) recommendServlet26);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) setPreferenceServlet21);
        batchAddCandidatesServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        java.lang.String str30 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str31 = batchDeleteCandidatesServlet18.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        batchDeleteCandidatesServlet18.init();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet34 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str36 = batchDeleteCandidatesServlet35.getServletInfo();
        java.lang.String str37 = batchDeleteCandidatesServlet35.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet38 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet39 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet40 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet39.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet40);
        setPreferenceServlet38.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet40);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet43 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet38.init((javax.servlet.ServletConfig) recommendServlet43);
        batchDeleteCandidatesServlet35.init((javax.servlet.ServletConfig) setPreferenceServlet38);
        batchDeleteCandidatesServlet35.destroy();
        batchDeleteCandidatesServlet34.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet48 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str49 = batchDeleteCandidatesServlet48.getServletInfo();
        batchDeleteCandidatesServlet48.destroy();
        javax.servlet.ServletConfig servletConfig51 = batchDeleteCandidatesServlet48.getServletConfig();
        batchDeleteCandidatesServlet34.init(servletConfig51);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet53 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str54 = batchDeleteCandidatesServlet53.getServletInfo();
        batchDeleteCandidatesServlet53.init();
        java.lang.String str56 = batchDeleteCandidatesServlet53.getServletInfo();
        batchDeleteCandidatesServlet53.destroy();
        batchDeleteCandidatesServlet34.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet53);
        batchDeleteCandidatesServlet34.init();
        batchDeleteCandidatesServlet34.init();
        batchDeleteCandidatesServlet34.destroy();
        java.lang.String str62 = batchDeleteCandidatesServlet34.getServletInfo();
        batchDeleteCandidatesServlet34.init();
        batchDeleteCandidatesServlet34.init();
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet34);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(servletConfig51);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "" + "'", str62, "");
    }

    @Test
    public void test38088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38088");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        long long4 = mutablePreference0.getItemID();
        long long5 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (byte) 10);
        long long8 = mutablePreference0.getItemID();
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) 0, 32L, 52.0f);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test38089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38089");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig3 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str6 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet7 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        setPreferenceServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet7.init((javax.servlet.ServletConfig) recommendServlet12);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet7);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        java.lang.String str16 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str18 = batchDeleteCandidatesServlet17.getServletInfo();
        java.lang.String str19 = batchDeleteCandidatesServlet17.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet20 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        setPreferenceServlet20.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet25 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet20.init((javax.servlet.ServletConfig) recommendServlet25);
        batchDeleteCandidatesServlet17.init((javax.servlet.ServletConfig) setPreferenceServlet20);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet28 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet29 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet30 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet29.init((javax.servlet.ServletConfig) batchSetPreferencesServlet30);
        javax.servlet.ServletConfig servletConfig32 = batchSetPreferencesServlet29.getServletConfig();
        addCandidateServlet28.init((javax.servlet.ServletConfig) batchSetPreferencesServlet29);
        javax.servlet.ServletConfig servletConfig34 = addCandidateServlet28.getServletConfig();
        batchDeleteCandidatesServlet17.init((javax.servlet.ServletConfig) addCandidateServlet28);
        javax.servlet.ServletConfig servletConfig36 = batchDeleteCandidatesServlet17.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet37 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet37.init();
        setPreferenceServlet37.init();
        setPreferenceServlet37.destroy();
        javax.servlet.ServletConfig servletConfig41 = setPreferenceServlet37.getServletConfig();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet42 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str43 = trainServlet42.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet44 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet44.destroy();
        javax.servlet.ServletConfig servletConfig46 = deleteCandidateServlet44.getServletConfig();
        deleteCandidateServlet44.destroy();
        trainServlet42.init((javax.servlet.ServletConfig) deleteCandidateServlet44);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet49 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet49.init();
        java.lang.String str51 = batchAddCandidatesServlet49.getServletInfo();
        javax.servlet.ServletConfig servletConfig52 = batchAddCandidatesServlet49.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet53 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str54 = batchDeleteCandidatesServlet53.getServletInfo();
        java.lang.String str55 = batchDeleteCandidatesServlet53.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet56 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet57 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet58 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet57.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet58);
        setPreferenceServlet56.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet58);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet61 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet56.init((javax.servlet.ServletConfig) recommendServlet61);
        batchDeleteCandidatesServlet53.init((javax.servlet.ServletConfig) setPreferenceServlet56);
        batchAddCandidatesServlet49.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet53);
        batchDeleteCandidatesServlet53.init();
        java.lang.String str66 = batchDeleteCandidatesServlet53.getServletInfo();
        java.lang.String str67 = batchDeleteCandidatesServlet53.getServletInfo();
        trainServlet42.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet53);
        setPreferenceServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet53);
        batchDeleteCandidatesServlet17.init((javax.servlet.ServletConfig) setPreferenceServlet37);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet37);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet72 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet72.init();
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) batchSetPreferencesServlet72);
        batchDeleteCandidatesServlet4.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet76 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet76.destroy();
        trainServlet76.destroy();
        java.lang.String str79 = trainServlet76.getServletInfo();
        java.lang.String str80 = trainServlet76.getServletInfo();
        javax.servlet.ServletConfig servletConfig81 = trainServlet76.getServletConfig();
        javax.servlet.ServletConfig servletConfig82 = trainServlet76.getServletConfig();
        trainServlet76.destroy();
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) trainServlet76);
        javax.servlet.ServletConfig servletConfig85 = trainServlet76.getServletConfig();
        trainServlet76.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str87 = trainServlet76.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(servletConfig32);
        org.junit.Assert.assertNotNull(servletConfig34);
        org.junit.Assert.assertNotNull(servletConfig36);
        org.junit.Assert.assertNull(servletConfig41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNull(servletConfig46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(servletConfig52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "" + "'", str67, "");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "" + "'", str79, "");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNull(servletConfig81);
        org.junit.Assert.assertNull(servletConfig82);
        org.junit.Assert.assertNull(servletConfig85);
    }

    @Test
    public void test38090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38090");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        int int4 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        int int5 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str10 = storageConfiguration6.getJdbcUrl();
        java.lang.String str11 = storageConfiguration6.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration6.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration6.getPassword();
        java.lang.String str14 = storageConfiguration6.getUsername();
        java.lang.String str15 = storageConfiguration6.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setJdbcUrl("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration6.setJdbcUrl("userID");
        java.lang.String str21 = storageConfiguration6.getUsername();
        storageConfiguration6.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration6.setJdbcUrl("");
// flaky:         configuration2.setStorageConfiguration(storageConfiguration6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration27 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         configuration2.setNumProcessorsForTraining((int) ' ');
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str3, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str14, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str21, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration27);
    }

    @Test
    public void test38091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38091");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration10.getJdbcUrl();
        java.lang.String str15 = storageConfiguration10.getJdbcUrl();
        storageConfiguration10.setJdbcUrl("label");
        configuration0.setStorageConfiguration(storageConfiguration10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = configuration0.getStorageConfiguration();
        java.lang.String str20 = configuration0.getModelDirectory();
        org.plista.kornakapi.web.Components components21 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration22 = null; // flaky: components21.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList23 = null; // flaky: configuration22.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration24 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str25 = storageConfiguration24.getJdbcDriverClass();
        java.lang.String str26 = storageConfiguration24.getUsername();
        storageConfiguration24.setPassword("label");
// flaky:         configuration22.setStorageConfiguration(storageConfiguration24);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration30 = null; // flaky: configuration22.getStorageConfiguration();
        configuration0.setStorageConfiguration(storageConfiguration30);
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(storageConfiguration19);
        org.junit.Assert.assertNull(str20);
// flaky:         org.junit.Assert.assertNotNull(components21);
// flaky:         org.junit.Assert.assertNotNull(configuration22);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration30);
    }

    @Test
    public void test38092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38092");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = null; // flaky: components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
// flaky:         configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        java.lang.String str34 = null; // flaky: configuration5.getModelDirectory();
        java.lang.String str35 = null; // flaky: configuration5.getModelDirectory();
        org.plista.kornakapi.web.Components components36 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration37 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler38 = null; // flaky: components36.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler39 = null; // flaky: components36.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration40 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration41 = null; // flaky: components36.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList42 = null; // flaky: configuration41.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration43 = null; // flaky: configuration41.getStorageConfiguration();
        java.lang.String str44 = null; // flaky: storageConfiguration43.getJdbcDriverClass();
        java.lang.String str45 = null; // flaky: storageConfiguration43.getUsername();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration43);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str34, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str35, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(components36);
// flaky:         org.junit.Assert.assertNotNull(configuration37);
        org.junit.Assert.assertNull(trainingScheduler38);
        org.junit.Assert.assertNull(trainingScheduler39);
// flaky:         org.junit.Assert.assertNotNull(configuration40);
// flaky:         org.junit.Assert.assertNotNull(configuration41);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList42);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test38093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38093");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = new org.plista.kornakapi.core.config.Configuration();
        int int7 = configuration6.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList8 = configuration6.getItembasedRecommenders();
        int int9 = configuration6.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig10 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str11 = itembasedRecommenderConfig10.getRetrainCronExpression();
        configuration6.addItembasedRecommender(itembasedRecommenderConfig10);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig13 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str14 = itembasedRecommenderConfig13.getRetrainCronExpression();
        itembasedRecommenderConfig13.setSimilarityClass("");
        java.lang.String str17 = itembasedRecommenderConfig13.getSimilarityClass();
        itembasedRecommenderConfig13.setName("label");
        configuration6.addItembasedRecommender(itembasedRecommenderConfig13);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig13);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration22 = null; // flaky: configuration4.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList23 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components24 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration25 = null; // flaky: components24.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration26 = null; // flaky: components24.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler27 = null; // flaky: components24.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler28 = null; // flaky: components24.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener29 = null; // flaky: components24.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components24.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig31 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str32 = itembasedRecommenderConfig31.getRetrainCronExpression();
        int int33 = itembasedRecommenderConfig31.getRetrainAfterPreferenceChanges();
        java.lang.String str34 = itembasedRecommenderConfig31.getSimilarityClass();
        itembasedRecommenderConfig31.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig31.setSimilarityClass("");
        itembasedRecommenderConfig31.setSimilarItemsPerItem((int) '#');
        java.lang.String str41 = itembasedRecommenderConfig31.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig31);
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig31);
        itembasedRecommenderConfig31.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer46 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig31);
        itembasedRecommenderConfig31.setSimilarItemsPerItem(100);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig31);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration22);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList23);
// flaky:         org.junit.Assert.assertNotNull(components24);
// flaky:         org.junit.Assert.assertNotNull(configuration25);
// flaky:         org.junit.Assert.assertNotNull(configuration26);
        org.junit.Assert.assertNull(trainingScheduler27);
        org.junit.Assert.assertNull(trainingScheduler28);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test38094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38094");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 100L);
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.setValue((float) '4');
        long long6 = mutablePreference0.getUserID();
        long long7 = mutablePreference0.getUserID();
        mutablePreference0.set(1L, (long) (byte) 0, (-1.0f));
        mutablePreference0.setValue((float) 0);
        long long14 = mutablePreference0.getItemID();
        mutablePreference0.set((long) 1, (long) 32, (float) 0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test38095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38095");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        java.lang.String str6 = mutablePreference0.toString();
        mutablePreference0.setValue((float) 1);
        long long9 = mutablePreference0.getUserID();
        long long10 = mutablePreference0.getUserID();
        long long11 = mutablePreference0.getUserID();
        mutablePreference0.set((long) (short) 100, 0L, 97.0f);
        long long16 = mutablePreference0.getUserID();
        java.lang.String str17 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=100, itemID=0, value=97.0}" + "'", str17, "MutablePreference{userID=100, itemID=0, value=97.0}");
    }

    @Test
    public void test38096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38096");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) 10);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) (-1));
        double double18 = fixedCandidatesIDRescorer1.rescore((long) 0, 0.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double22 = fixedCandidatesIDRescorer1.rescore((long) (byte) 100, (double) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = fixedCandidatesIDRescorer1.isFiltered((long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    }

    @Test
    public void test38097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38097");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setRetrainAfterPreferenceChanges((int) (short) 100);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        int int12 = itembasedRecommenderConfig5.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        itembasedRecommenderConfig5.setSimilarityClass("MutablePreference{userID=100, itemID=0, value=35.0}");
        itembasedRecommenderConfig5.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test38098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38098");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration6.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig8 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double9 = factorizationbasedRecommenderConfig8.getAlpha();
        double double10 = factorizationbasedRecommenderConfig8.getLambda();
        boolean boolean11 = factorizationbasedRecommenderConfig8.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig8.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig8.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig8.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: file");
        double double18 = factorizationbasedRecommenderConfig8.getAlpha();
// flaky:         configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig8);
// flaky:         configuration6.setNumProcessorsForTraining((int) '4');
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList22 = null; // flaky: configuration6.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList22);
    }

    @Test
    public void test38099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38099");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) 10L);
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) ' ');
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.lang.String str13 = factorizationbasedRecommenderConfig0.getName();
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test38100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38100");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        boolean boolean7 = factorizationbasedRecommenderConfig4.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig4.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration2.getItembasedRecommenders();
        java.lang.String str12 = null; // flaky: configuration2.getModelDirectory();
// flaky:         configuration2.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         storageConfiguration15.setJdbcUrl("MutablePreference{userID=10000, itemID=35, value=0.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str12, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration15);
    }

    @Test
    public void test38101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38101");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str12 = storageConfiguration11.getPassword();
        java.lang.String str13 = storageConfiguration11.getJdbcDriverClass();
        storageConfiguration11.setPassword("");
        java.lang.String str16 = storageConfiguration11.getUsername();
// flaky:         configuration10.setStorageConfiguration(storageConfiguration11);
        org.plista.kornakapi.web.Components components18 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration19 = null; // flaky: components18.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components18.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage21 = null; // flaky: components18.storage();
        org.plista.kornakapi.core.storage.Storage storage22 = null; // flaky: components18.storage();
        org.plista.kornakapi.core.config.Configuration configuration23 = null; // flaky: components18.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig24 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double25 = factorizationbasedRecommenderConfig24.getAlpha();
        double double26 = factorizationbasedRecommenderConfig24.getLambda();
        int int27 = factorizationbasedRecommenderConfig24.getNumberOfFeatures();
        factorizationbasedRecommenderConfig24.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig24.setNumberOfFeatures((int) (short) 100);
        boolean boolean32 = factorizationbasedRecommenderConfig24.isUsesImplicitFeedback();
// flaky:         configuration23.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig24);
        org.plista.kornakapi.web.Components components34 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration35 = null; // flaky: components34.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler36 = null; // flaky: components34.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler37 = null; // flaky: components34.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration38 = null; // flaky: components34.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration39 = null; // flaky: components34.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig40 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig40.setSimilarityClass("");
        java.lang.String str43 = itembasedRecommenderConfig40.getName();
        java.lang.String str44 = itembasedRecommenderConfig40.getSimilarityClass();
        itembasedRecommenderConfig40.setName("");
        java.lang.String str47 = itembasedRecommenderConfig40.getSimilarityClass();
// flaky:         configuration39.addItembasedRecommender(itembasedRecommenderConfig40);
        itembasedRecommenderConfig40.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration23.addItembasedRecommender(itembasedRecommenderConfig40);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig52 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str53 = itembasedRecommenderConfig52.getRetrainCronExpression();
        int int54 = itembasedRecommenderConfig52.getRetrainAfterPreferenceChanges();
        int int55 = itembasedRecommenderConfig52.getRetrainAfterPreferenceChanges();
// flaky:         configuration23.addItembasedRecommender(itembasedRecommenderConfig52);
        int int57 = 0; // flaky: configuration23.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration58 = null; // flaky: configuration23.getStorageConfiguration();
// flaky:         storageConfiguration58.setJdbcDriverClass("MutablePreference{userID=10000, itemID=32, value=10.0}");
        java.lang.String str61 = null; // flaky: storageConfiguration58.getJdbcDriverClass();
        java.lang.String str62 = null; // flaky: storageConfiguration58.getJdbcUrl();
// flaky:         configuration10.setStorageConfiguration(storageConfiguration58);
// flaky:         configuration10.setNumProcessorsForTraining(100);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
// flaky:         org.junit.Assert.assertNotNull(components18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
        org.junit.Assert.assertNull(storage21);
        org.junit.Assert.assertNull(storage22);
// flaky:         org.junit.Assert.assertNotNull(configuration23);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
// flaky:         org.junit.Assert.assertNotNull(components34);
// flaky:         org.junit.Assert.assertNotNull(configuration35);
        org.junit.Assert.assertNull(trainingScheduler36);
        org.junit.Assert.assertNull(trainingScheduler37);
// flaky:         org.junit.Assert.assertNotNull(configuration38);
// flaky:         org.junit.Assert.assertNotNull(configuration39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int57 + "' != '" + 100 + "'", int57 == 100);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration58);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "MutablePreference{userID=10000, itemID=32, value=10.0}" + "'", str61, "MutablePreference{userID=10000, itemID=32, value=10.0}");
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test38102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38102");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        java.lang.String str12 = mutableCandidate0.getLabel();
        mutableCandidate0.set("hi!", (long) (byte) 100);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: label", 10000L);
        long long19 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=100, itemID=0, value=10.0}", 32L);
        long long23 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10000L + "'", long19 == 10000L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 32L + "'", long23 == 32L);
    }

    @Test
    public void test38103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38103");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("label", (-1L));
        long long17 = mutableCandidate0.getItemID();
        java.lang.String str18 = mutableCandidate0.getLabel();
        java.lang.String str19 = mutableCandidate0.getLabel();
        java.lang.String str20 = mutableCandidate0.getLabel();
        long long21 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=32, itemID=1, value=-1.0}", (long) 100);
        long long25 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "itemID" + "'", str13, "itemID");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "label" + "'", str18, "label");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "label" + "'", str19, "label");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "label" + "'", str20, "label");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 100L + "'", long25 == 100L);
    }

    @Test
    public void test38104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38104");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = null; // flaky: configuration5.getStorageConfiguration();
        java.lang.String str9 = null; // flaky: configuration5.getModelDirectory();
// flaky:         configuration5.setNumProcessorsForTraining(0);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig12 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double13 = factorizationbasedRecommenderConfig12.getAlpha();
        double double14 = factorizationbasedRecommenderConfig12.getLambda();
        int int15 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        factorizationbasedRecommenderConfig12.setUsesImplicitFeedback(true);
        double double18 = factorizationbasedRecommenderConfig12.getAlpha();
        java.lang.String str19 = factorizationbasedRecommenderConfig12.getRetrainCronExpression();
        int int20 = factorizationbasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        boolean boolean21 = factorizationbasedRecommenderConfig12.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig12.setRetrainCronExpression("itemIDs");
        factorizationbasedRecommenderConfig12.setName("");
        factorizationbasedRecommenderConfig12.setAlpha((double) (short) 0);
        factorizationbasedRecommenderConfig12.setAlpha((double) 10);
        boolean boolean30 = factorizationbasedRecommenderConfig12.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig12.setName("MutablePreference{userID=0, itemID=0, value=52.0}");
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig12);
        factorizationbasedRecommenderConfig12.setAlpha((double) 35.0f);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration8);
// flaky:         org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str9, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test38105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38105");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet4 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str5 = trainServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet6 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet6.destroy();
        javax.servlet.ServletConfig servletConfig8 = deleteCandidateServlet6.getServletConfig();
        deleteCandidateServlet6.destroy();
        trainServlet4.init((javax.servlet.ServletConfig) deleteCandidateServlet6);
        deleteCandidateServlet6.destroy();
        deleteCandidateServlet6.init();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet6);
        java.lang.Throwable throwable15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteCandidateServlet6.log("", throwable15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(servletConfig8);
    }

    @Test
    public void test38106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38106");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str4 = storageConfiguration3.getJdbcDriverClass();
        java.lang.String str5 = storageConfiguration3.getUsername();
        storageConfiguration3.setPassword("label");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration3);
        java.lang.String str9 = storageConfiguration3.getJdbcDriverClass();
        storageConfiguration3.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str12 = storageConfiguration3.getJdbcUrl();
        storageConfiguration3.setUsername("org.plista.kornakapi.web.MissingParameterException: userID");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test38107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38107");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        long long4 = mutableCandidate0.getItemID();
        long long5 = mutableCandidate0.getItemID();
        java.lang.String str6 = mutableCandidate0.getLabel();
        java.lang.String str7 = mutableCandidate0.getLabel();
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (long) 35);
        java.lang.String str12 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38108");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        java.lang.String str15 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        java.lang.String str17 = batchAddCandidatesServlet16.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str19 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str20 = batchDeleteCandidatesServlet18.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet21 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        setPreferenceServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet21.init((javax.servlet.ServletConfig) recommendServlet26);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) setPreferenceServlet21);
        batchDeleteCandidatesServlet18.destroy();
        batchDeleteCandidatesServlet18.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet31 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str32 = trainServlet31.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet33 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet33.destroy();
        javax.servlet.ServletConfig servletConfig35 = deleteCandidateServlet33.getServletConfig();
        deleteCandidateServlet33.destroy();
        trainServlet31.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        java.lang.String str38 = trainServlet31.getServletInfo();
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) trainServlet31);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet40 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet40.init();
        java.lang.String str42 = batchAddCandidatesServlet40.getServletInfo();
        batchAddCandidatesServlet40.init();
        java.lang.String str44 = batchAddCandidatesServlet40.getServletInfo();
        batchAddCandidatesServlet40.init();
        batchAddCandidatesServlet40.init();
        batchAddCandidatesServlet40.init();
        trainServlet31.init((javax.servlet.ServletConfig) batchAddCandidatesServlet40);
        batchAddCandidatesServlet16.init((javax.servlet.ServletConfig) trainServlet31);
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchAddCandidatesServlet16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration51 = batchSetPreferencesServlet1.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(servletConfig35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test38109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38109");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.lang.String str9 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=0, value=-1.0}");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList12 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig13 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str14 = itembasedRecommenderConfig13.getRetrainCronExpression();
        int int15 = itembasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig13.setSimilarItemsPerItem((int) (byte) -1);
        java.lang.String str18 = itembasedRecommenderConfig13.getName();
        itembasedRecommenderConfig13.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig13.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: recommender");
        int int23 = itembasedRecommenderConfig13.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig13);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str26 = storageConfiguration25.getJdbcDriverClass();
        storageConfiguration25.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str29 = storageConfiguration25.getJdbcUrl();
        java.lang.String str30 = storageConfiguration25.getJdbcDriverClass();
        storageConfiguration25.setJdbcDriverClass("batchSize");
        storageConfiguration25.setUsername("recommender");
        java.lang.String str35 = storageConfiguration25.getUsername();
        storageConfiguration25.setPassword("MutablePreference{userID=35, itemID=32, value=10.0}");
        configuration0.setStorageConfiguration(storageConfiguration25);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "recommender" + "'", str35, "recommender");
    }

    @Test
    public void test38110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38110");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (-1));
        long long6 = mutablePreference0.getUserID();
        long long7 = mutablePreference0.getItemID();
        float float8 = mutablePreference0.getValue();
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.set((long) 1, (long) (byte) 100, (float) 52);
        long long14 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (byte) 1);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + (-1.0f) + "'", float8 == (-1.0f));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 100L + "'", long14 == 100L);
    }

    @Test
    public void test38111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38111");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet8 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str9 = trainServlet8.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet10 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet10.destroy();
        javax.servlet.ServletConfig servletConfig12 = deleteCandidateServlet10.getServletConfig();
        deleteCandidateServlet10.destroy();
        trainServlet8.init((javax.servlet.ServletConfig) deleteCandidateServlet10);
        javax.servlet.ServletConfig servletConfig15 = deleteCandidateServlet10.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) deleteCandidateServlet10);
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet17 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet17.init();
        deleteCandidateServlet10.init((javax.servlet.ServletConfig) deleteCandidateServlet17);
        deleteCandidateServlet10.init();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet21 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet22 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet23 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet22.init((javax.servlet.ServletConfig) batchSetPreferencesServlet23);
        javax.servlet.ServletConfig servletConfig25 = batchSetPreferencesServlet22.getServletConfig();
        addCandidateServlet21.init((javax.servlet.ServletConfig) batchSetPreferencesServlet22);
        batchSetPreferencesServlet22.destroy();
        java.lang.String str28 = batchSetPreferencesServlet22.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet29 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet29.init();
        setPreferenceServlet29.init();
        setPreferenceServlet29.destroy();
        javax.servlet.ServletConfig servletConfig33 = setPreferenceServlet29.getServletConfig();
        java.lang.String str34 = setPreferenceServlet29.getServletInfo();
        batchSetPreferencesServlet22.init((javax.servlet.ServletConfig) setPreferenceServlet29);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet36 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet37 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet38 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet37.init((javax.servlet.ServletConfig) batchSetPreferencesServlet38);
        javax.servlet.ServletConfig servletConfig40 = batchSetPreferencesServlet37.getServletConfig();
        addCandidateServlet36.init((javax.servlet.ServletConfig) batchSetPreferencesServlet37);
        batchSetPreferencesServlet37.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet43 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str44 = recommendServlet43.getServletInfo();
        javax.servlet.ServletConfig servletConfig45 = recommendServlet43.getServletConfig();
        java.lang.String str46 = recommendServlet43.getServletInfo();
        batchSetPreferencesServlet37.init((javax.servlet.ServletConfig) recommendServlet43);
        javax.servlet.ServletConfig servletConfig48 = null;
        recommendServlet43.init(servletConfig48);
        batchSetPreferencesServlet22.init((javax.servlet.ServletConfig) recommendServlet43);
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet51 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet51.destroy();
        batchSetPreferencesServlet22.init((javax.servlet.ServletConfig) deleteCandidateServlet51);
        deleteCandidateServlet51.init();
        deleteCandidateServlet10.init((javax.servlet.ServletConfig) deleteCandidateServlet51);
        deleteCandidateServlet10.destroy();
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertNull(servletConfig15);
        org.junit.Assert.assertNotNull(servletConfig25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNull(servletConfig33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNotNull(servletConfig40);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(servletConfig45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test38112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38112");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList3 = null; // flaky: configuration2.getItembasedRecommenders();
// flaky:         configuration2.setNumProcessorsForTraining(10000);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(false);
        int int12 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setLambda((double) 0);
        factorizationbasedRecommenderConfig6.setName("userID");
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (byte) 100);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) 'a');
        double double22 = factorizationbasedRecommenderConfig6.getLambda();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
    }

    @Test
    public void test38113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38113");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = null; // flaky: configuration1.getStorageConfiguration();
        org.plista.kornakapi.web.Components components3 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components3.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components3.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = null; // flaky: components3.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components3.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str9 = itembasedRecommenderConfig8.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig8);
        java.lang.String str11 = itembasedRecommenderConfig8.getSimilarityClass();
        itembasedRecommenderConfig8.setRetrainAfterPreferenceChanges((int) (short) 100);
// flaky:         configuration7.addItembasedRecommender(itembasedRecommenderConfig8);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList15 = null; // flaky: configuration7.getFactorizationbasedRecommenders();
// flaky:         configuration7.setNumProcessorsForTraining((int) 'a');
        java.lang.String str18 = null; // flaky: configuration7.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig19 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str20 = itembasedRecommenderConfig19.getRetrainCronExpression();
        int int21 = itembasedRecommenderConfig19.getRetrainAfterPreferenceChanges();
        java.lang.String str22 = itembasedRecommenderConfig19.getSimilarityClass();
        itembasedRecommenderConfig19.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig19.setRetrainCronExpression("value");
        int int27 = itembasedRecommenderConfig19.getRetrainAfterPreferenceChanges();
        int int28 = itembasedRecommenderConfig19.getRetrainAfterPreferenceChanges();
// flaky:         configuration7.addItembasedRecommender(itembasedRecommenderConfig19);
        itembasedRecommenderConfig19.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig19.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: hi!");
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig19);
        org.plista.kornakapi.web.Components components35 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration36 = null; // flaky: components35.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList37 = null; // flaky: configuration36.getFactorizationbasedRecommenders();
        java.lang.String str38 = null; // flaky: configuration36.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig39 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double40 = factorizationbasedRecommenderConfig39.getAlpha();
        double double41 = factorizationbasedRecommenderConfig39.getLambda();
        int int42 = factorizationbasedRecommenderConfig39.getNumberOfFeatures();
        factorizationbasedRecommenderConfig39.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig39.setNumberOfFeatures((int) (byte) 1);
// flaky:         configuration36.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig39);
        int int48 = 0; // flaky: configuration36.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig49 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig49.setSimilarityClass("");
        java.lang.String str52 = itembasedRecommenderConfig49.getSimilarityClass();
        java.lang.String str53 = itembasedRecommenderConfig49.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer54 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig49);
// flaky:         configuration36.addItembasedRecommender(itembasedRecommenderConfig49);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig49);
        itembasedRecommenderConfig49.setSimilarItemsPerItem(35);
        itembasedRecommenderConfig49.setSimilarItemsPerItem(97);
        itembasedRecommenderConfig49.setSimilarItemsPerItem((int) (short) 0);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration2);
// flaky:         org.junit.Assert.assertNotNull(components3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(trainingScheduler6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList15);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str18, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
// flaky:         org.junit.Assert.assertNotNull(components35);
// flaky:         org.junit.Assert.assertNotNull(configuration36);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList37);
// flaky:         org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str38, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int48 + "' != '" + 97 + "'", int48 == 97);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test38114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38114");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
    }

    @Test
    public void test38115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38115");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        int int2 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int3 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int4 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int5 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=10.0}");
        itembasedRecommenderConfig0.setSimilarityClass("value");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test38116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38116");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig14);
        factorizationbasedRecommenderConfig14.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig14.setNumberOfIterations((int) '#');
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        configuration0.setNumProcessorsForTraining((int) (byte) 10);
        configuration0.setModelDirectory("MutablePreference{userID=10, itemID=100, value=10.0}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test38117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38117");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) '#');
        itembasedRecommenderConfig0.setName("file");
        int int12 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 1);
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=100, itemID=32, value=100.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 35 + "'", int12 == 35);
    }

    @Test
    public void test38118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38118");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) (byte) 0);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("");
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(35);
        int int17 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    }

    @Test
    public void test38119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38119");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.init();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        batchSetPreferencesServlet1.destroy();
        java.lang.String str9 = batchSetPreferencesServlet1.getServletInfo();
        javax.servlet.ServletConfig servletConfig10 = batchSetPreferencesServlet1.getServletConfig();
        batchSetPreferencesServlet1.init();
        javax.servlet.ServletConfig servletConfig12 = batchSetPreferencesServlet1.getServletConfig();
        javax.servlet.ServletConfig servletConfig13 = batchSetPreferencesServlet1.getServletConfig();
        javax.servlet.ServletConfig servletConfig14 = batchSetPreferencesServlet1.getServletConfig();
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(servletConfig10);
        org.junit.Assert.assertNotNull(servletConfig12);
        org.junit.Assert.assertNotNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig14);
    }

    @Test
    public void test38120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38120");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("batchSize");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("batchSize");
        java.lang.String str11 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration0.setJdbcDriverClass("howMany");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration0.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str20 = storageConfiguration0.getUsername();
        java.lang.String str21 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str22 = storageConfiguration0.getJdbcUrl();
        java.lang.String str23 = storageConfiguration0.getJdbcUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "batchSize" + "'", str11, "batchSize");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str20, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "howMany" + "'", str21, "howMany");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test38121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38121");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        int int12 = 0; // flaky: configuration1.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration13.getPassword();
        java.lang.String str21 = storageConfiguration13.getUsername();
        java.lang.String str22 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str23 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setJdbcUrl("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration13.setJdbcUrl("userID");
        java.lang.String str28 = storageConfiguration13.getUsername();
        storageConfiguration13.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration13.setJdbcUrl("");
        storageConfiguration13.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=1.0}");
        java.lang.String str35 = storageConfiguration13.getPassword();
        java.lang.String str36 = storageConfiguration13.getJdbcUrl();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration13);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str3, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str21, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str28, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str36, "MutablePreference{userID=0, itemID=0, value=1.0}");
    }

    @Test
    public void test38122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38122");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10000);
        int int15 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean16 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setAlpha((double) 32);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test38123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38123");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double5 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 100);
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) '#');
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=0, itemID=97, value=10.0}");
        double double13 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test38124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38124");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.destroy();
        java.lang.String str4 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig5 = null;
        batchDeleteCandidatesServlet0.init(servletConfig5);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet7 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet8 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet9 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet8.init((javax.servlet.ServletConfig) batchSetPreferencesServlet9);
        javax.servlet.ServletConfig servletConfig11 = batchSetPreferencesServlet8.getServletConfig();
        addCandidateServlet7.init((javax.servlet.ServletConfig) batchSetPreferencesServlet8);
        java.lang.String str13 = addCandidateServlet7.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig19 = batchSetPreferencesServlet16.getServletConfig();
        java.lang.String str20 = batchSetPreferencesServlet16.getServletInfo();
        java.lang.String str21 = batchSetPreferencesServlet16.getServletInfo();
        java.lang.String str22 = batchSetPreferencesServlet16.getServletInfo();
        addCandidateServlet7.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet7);
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.destroy();
        javax.servlet.ServletConfig servletConfig27 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.init();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(servletConfig11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(servletConfig27);
    }

    @Test
    public void test38125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38125");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        java.lang.String str5 = mutableCandidate0.getLabel();
        long long6 = mutableCandidate0.getItemID();
        java.lang.String str7 = mutableCandidate0.getLabel();
        java.lang.String str8 = mutableCandidate0.getLabel();
        long long9 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "itemIDs" + "'", str5, "itemIDs");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "itemIDs" + "'", str7, "itemIDs");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemIDs" + "'", str8, "itemIDs");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test38126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38126");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=10000, itemID=52, value=52.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) invalidParameterException9);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=97, value=10.0}", (java.lang.Throwable) invalidParameterException10);
        org.plista.kornakapi.web.MissingParameterException missingParameterException18 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException18);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException19);
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException26);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException28 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException26);
        org.plista.kornakapi.web.MissingParameterException missingParameterException30 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException32 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException30.addSuppressed((java.lang.Throwable) missingParameterException32);
        invalidParameterException28.addSuppressed((java.lang.Throwable) missingParameterException32);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException35 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException39 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException39);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException41 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException39);
        invalidParameterException35.addSuppressed((java.lang.Throwable) missingParameterException39);
        org.plista.kornakapi.web.MissingParameterException missingParameterException47 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException47);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException47);
        java.lang.Throwable[] throwableArray50 = missingParameterException47.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException51 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException47);
        missingParameterException39.addSuppressed((java.lang.Throwable) missingParameterException47);
        invalidParameterException21.addSuppressed((java.lang.Throwable) missingParameterException39);
        org.plista.kornakapi.web.MissingParameterException missingParameterException59 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException60 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException59);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException61 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException59);
        java.lang.Throwable[] throwableArray62 = missingParameterException59.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException63 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException59);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException64 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException63);
        missingParameterException39.addSuppressed((java.lang.Throwable) invalidParameterException64);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException66 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=32.0}", (java.lang.Throwable) invalidParameterException64);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException67 = new org.plista.kornakapi.web.InvalidParameterException("itemID", (java.lang.Throwable) invalidParameterException64);
        org.plista.kornakapi.web.MissingParameterException missingParameterException72 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException73 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) missingParameterException72);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException74 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender", (java.lang.Throwable) invalidParameterException73);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException75 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) invalidParameterException74);
        invalidParameterException67.addSuppressed((java.lang.Throwable) invalidParameterException74);
        invalidParameterException10.addSuppressed((java.lang.Throwable) invalidParameterException67);
        missingParameterException1.addSuppressed((java.lang.Throwable) invalidParameterException10);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray62);
    }

    @Test
    public void test38127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38127");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) 0.0f);
        factorizationbasedRecommenderConfig0.setLambda((double) 52.0f);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) -1);
        int int14 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getName();
        java.lang.String str16 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double19 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 52.0d + "'", double19 == 52.0d);
    }

    @Test
    public void test38128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38128");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet12 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str13 = trainServlet12.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet14 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet14.destroy();
        javax.servlet.ServletConfig servletConfig16 = deleteCandidateServlet14.getServletConfig();
        deleteCandidateServlet14.destroy();
        trainServlet12.init((javax.servlet.ServletConfig) deleteCandidateServlet14);
        javax.servlet.ServletConfig servletConfig19 = deleteCandidateServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet14);
        batchDeleteCandidatesServlet0.init();
        java.lang.String str22 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet24 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        batchDeleteCandidatesServlet23.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        batchDeleteCandidatesServlet23.destroy();
        javax.servlet.ServletConfig servletConfig29 = batchDeleteCandidatesServlet23.getServletConfig();
        batchDeleteCandidatesServlet0.init(servletConfig29);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet31 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str32 = batchDeleteCandidatesServlet31.getServletInfo();
        java.lang.String str33 = batchDeleteCandidatesServlet31.getServletInfo();
        batchDeleteCandidatesServlet31.destroy();
        batchDeleteCandidatesServlet31.init();
        batchDeleteCandidatesServlet31.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet31);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig16);
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNotNull(servletConfig29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
    }

    @Test
    public void test38129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38129");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        int int11 = 0; // flaky: configuration10.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig12 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double13 = factorizationbasedRecommenderConfig12.getAlpha();
        double double14 = factorizationbasedRecommenderConfig12.getLambda();
        int int15 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        factorizationbasedRecommenderConfig12.setLambda((double) 1);
        double double18 = factorizationbasedRecommenderConfig12.getAlpha();
        double double19 = factorizationbasedRecommenderConfig12.getLambda();
        int int20 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        factorizationbasedRecommenderConfig12.setRetrainAfterPreferenceChanges((int) (short) 100);
        factorizationbasedRecommenderConfig12.setLambda((double) 97L);
// flaky:         configuration10.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig12);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig26 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double27 = factorizationbasedRecommenderConfig26.getAlpha();
        double double28 = factorizationbasedRecommenderConfig26.getLambda();
        double double29 = factorizationbasedRecommenderConfig26.getAlpha();
// flaky:         configuration10.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig26);
        int int31 = factorizationbasedRecommenderConfig26.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig26.setRetrainCronExpression("MutablePreference{userID=0, itemID=97, value=97.0}");
        java.lang.Class<?> wildcardClass34 = factorizationbasedRecommenderConfig26.getClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test38130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38130");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 100);
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        boolean boolean10 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test38131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38131");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", 35);
    }

    @Test
    public void test38132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38132");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getUsername();
        java.lang.String str9 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str13 = storageConfiguration0.getPassword();
        storageConfiguration0.setPassword("MutablePreference{userID=10000, itemID=52, value=0.0}");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=1, itemID=0, value=10.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test38133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38133");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet7.init();
        java.lang.String str9 = batchAddCandidatesServlet7.getServletInfo();
        javax.servlet.ServletConfig servletConfig10 = batchAddCandidatesServlet7.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str12 = batchDeleteCandidatesServlet11.getServletInfo();
        java.lang.String str13 = batchDeleteCandidatesServlet11.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet14 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet15 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet15.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        setPreferenceServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet14.init((javax.servlet.ServletConfig) recommendServlet19);
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) setPreferenceServlet14);
        batchAddCandidatesServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        batchDeleteCandidatesServlet11.init();
        java.lang.String str24 = batchDeleteCandidatesServlet11.getServletInfo();
        java.lang.String str25 = batchDeleteCandidatesServlet11.getServletInfo();
        trainServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        javax.servlet.ServletConfig servletConfig27 = batchDeleteCandidatesServlet11.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet28 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str29 = batchDeleteCandidatesServlet28.getServletInfo();
        batchDeleteCandidatesServlet28.init();
        batchDeleteCandidatesServlet28.destroy();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet32 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet32.destroy();
        javax.servlet.ServletConfig servletConfig34 = deleteCandidateServlet32.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str36 = batchDeleteCandidatesServlet35.getServletInfo();
        java.lang.String str37 = batchDeleteCandidatesServlet35.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet38 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet39 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet40 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet39.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet40);
        setPreferenceServlet38.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet40);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet43 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet38.init((javax.servlet.ServletConfig) recommendServlet43);
        batchDeleteCandidatesServlet35.init((javax.servlet.ServletConfig) setPreferenceServlet38);
        setPreferenceServlet38.destroy();
        deleteCandidateServlet32.init((javax.servlet.ServletConfig) setPreferenceServlet38);
        batchDeleteCandidatesServlet28.init((javax.servlet.ServletConfig) setPreferenceServlet38);
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet28);
        batchDeleteCandidatesServlet11.init();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet51 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet51.init();
        setPreferenceServlet51.init();
        java.lang.String str54 = setPreferenceServlet51.getServletInfo();
        setPreferenceServlet51.init();
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) setPreferenceServlet51);
        batchDeleteCandidatesServlet11.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(servletConfig34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
    }

    @Test
    public void test38134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38134");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setName("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(100);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str12 = itembasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str13 = itembasedRecommenderConfig0.getSimilarityClass();
        int int14 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int15 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: userID");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    }

    @Test
    public void test38135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38135");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setRetrainCronExpression("");
        itembasedRecommenderConfig6.setSimilarItemsPerItem(10);
        java.lang.String str14 = itembasedRecommenderConfig6.getName();
        itembasedRecommenderConfig6.setName("");
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig6);
        java.lang.String str18 = itembasedRecommenderConfig6.getName();
        int int19 = itembasedRecommenderConfig6.getRetrainAfterPreferenceChanges();
        int int20 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        itembasedRecommenderConfig6.setRetrainAfterPreferenceChanges((int) (byte) 1);
        java.lang.String str23 = itembasedRecommenderConfig6.getSimilarityClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test38136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38136");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        java.lang.String str16 = storageConfiguration7.getJdbcUrl();
        storageConfiguration7.setPassword("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        storageConfiguration7.setJdbcUrl("MutablePreference{userID=100, itemID=0, value=0.0}");
        java.lang.String str21 = storageConfiguration7.getUsername();
        storageConfiguration7.setJdbcDriverClass("value");
        storageConfiguration7.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration7.setUsername("MutablePreference{userID=10000, itemID=-1, value=35.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str21, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38137");
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet0 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str1 = recommendServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig2 = recommendServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig3 = recommendServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig4 = recommendServlet0.getServletConfig();
        recommendServlet0.init();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet6 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet7 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet8 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet7.init((javax.servlet.ServletConfig) batchSetPreferencesServlet8);
        javax.servlet.ServletConfig servletConfig10 = batchSetPreferencesServlet7.getServletConfig();
        addCandidateServlet6.init((javax.servlet.ServletConfig) batchSetPreferencesServlet7);
        batchSetPreferencesServlet7.destroy();
        java.lang.String str13 = batchSetPreferencesServlet7.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet14 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str15 = trainServlet14.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet16 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet16.destroy();
        javax.servlet.ServletConfig servletConfig18 = deleteCandidateServlet16.getServletConfig();
        deleteCandidateServlet16.destroy();
        trainServlet14.init((javax.servlet.ServletConfig) deleteCandidateServlet16);
        javax.servlet.ServletConfig servletConfig21 = deleteCandidateServlet16.getServletConfig();
        batchSetPreferencesServlet7.init((javax.servlet.ServletConfig) deleteCandidateServlet16);
        deleteCandidateServlet16.init();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet24 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig27 = batchSetPreferencesServlet24.getServletConfig();
        batchSetPreferencesServlet24.destroy();
        batchSetPreferencesServlet24.init();
        deleteCandidateServlet16.init((javax.servlet.ServletConfig) batchSetPreferencesServlet24);
        deleteCandidateServlet16.init();
        recommendServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = deleteCandidateServlet16.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig2);
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNotNull(servletConfig10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(servletConfig18);
        org.junit.Assert.assertNull(servletConfig21);
        org.junit.Assert.assertNotNull(servletConfig27);
    }

    @Test
    public void test38138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38138");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer4 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 100, (double) 'a');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer8 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double11 = fixedCandidatesIDRescorer1.rescore(97L, 0.0d);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) 52, (double) 35);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair16 = null;
        double double18 = filteringLongPairRescorer15.rescore(longPair16, (double) 10000L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 97.0d + "'", double7 == 97.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 35.0d + "'", double14 == 35.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10000.0d + "'", double18 == 10000.0d);
    }

    @Test
    public void test38139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38139");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str3 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet4.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchAddCandidatesServlet4);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str9 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str11 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test38140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38140");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        int int7 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: value");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test38141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38141");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) 'a');
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        int int9 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        double double13 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((-1));
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test38142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38142");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str10 = storageConfiguration6.getPassword();
        java.lang.String str11 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setUsername("hi!");
        storageConfiguration6.setJdbcDriverClass("file");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.lang.String str17 = storageConfiguration6.getJdbcUrl();
        storageConfiguration6.setJdbcDriverClass("MutablePreference{userID=100, itemID=0, value=1.0}");
        java.lang.String str20 = storageConfiguration6.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration6.getJdbcUrl();
        storageConfiguration6.setJdbcDriverClass("MutablePreference{userID=35, itemID=100, value=52.0}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=100, itemID=0, value=1.0}" + "'", str20, "MutablePreference{userID=100, itemID=0, value=1.0}");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test38143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38143");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getUsername();
        java.lang.String str11 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration9.getPassword();
        storageConfiguration9.setJdbcUrl("file");
        configuration0.setStorageConfiguration(storageConfiguration9);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        int int19 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        factorizationbasedRecommenderConfig16.setUsesImplicitFeedback(true);
        double double22 = factorizationbasedRecommenderConfig16.getAlpha();
        java.lang.String str23 = factorizationbasedRecommenderConfig16.getRetrainCronExpression();
        int int24 = factorizationbasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        int int25 = factorizationbasedRecommenderConfig16.getNumberOfIterations();
        factorizationbasedRecommenderConfig16.setNumberOfFeatures((int) '#');
        double double28 = factorizationbasedRecommenderConfig16.getLambda();
        factorizationbasedRecommenderConfig16.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig16.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: label");
        boolean boolean33 = factorizationbasedRecommenderConfig16.isUsesImplicitFeedback();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        java.lang.String str35 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration36 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str37 = storageConfiguration36.getJdbcDriverClass();
        storageConfiguration36.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str40 = storageConfiguration36.getJdbcUrl();
        java.lang.String str41 = storageConfiguration36.getJdbcDriverClass();
        java.lang.String str42 = storageConfiguration36.getJdbcDriverClass();
        java.lang.String str43 = storageConfiguration36.getPassword();
        java.lang.String str44 = storageConfiguration36.getUsername();
        configuration0.setStorageConfiguration(storageConfiguration36);
        storageConfiguration36.setPassword("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str48 = storageConfiguration36.getPassword();
        java.lang.String str49 = storageConfiguration36.getPassword();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str44, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str48, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str49, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38144");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) (-1.0f));
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
        factorizationbasedRecommenderConfig0.setLambda(100.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test38145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38145");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=1.0}");
        storageConfiguration0.setUsername("");
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}");
        storageConfiguration0.setUsername("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test38146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38146");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration0.getUsername();
        storageConfiguration0.setUsername("itemIDs");
        java.lang.String str11 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=100, itemID=0, value=1.0}");
        java.lang.String str14 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str15 = storageConfiguration0.getJdbcDriverClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=100, itemID=0, value=1.0}" + "'", str14, "MutablePreference{userID=100, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=100, itemID=0, value=1.0}" + "'", str15, "MutablePreference{userID=100, itemID=0, value=1.0}");
    }

    @Test
    public void test38147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38147");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        java.lang.String str2 = mutableCandidate0.getLabel();
        java.lang.String str3 = mutableCandidate0.getLabel();
        java.lang.String str4 = mutableCandidate0.getLabel();
        java.lang.String str5 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test38148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38148");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration10.getJdbcUrl();
        java.lang.String str15 = storageConfiguration10.getJdbcUrl();
        storageConfiguration10.setJdbcUrl("label");
        configuration0.setStorageConfiguration(storageConfiguration10);
        java.lang.String str19 = storageConfiguration10.getPassword();
        storageConfiguration10.setPassword("itemIDs");
        java.lang.String str22 = storageConfiguration10.getUsername();
        storageConfiguration10.setJdbcUrl("MutablePreference{userID=1, itemID=35, value=-1.0}");
        storageConfiguration10.setJdbcUrl("MutablePreference{userID=10, itemID=-1, value=0.0}");
        java.lang.String str27 = storageConfiguration10.getPassword();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str22, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "itemIDs" + "'", str27, "itemIDs");
    }

    @Test
    public void test38149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38149");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(100);
        factorizationbasedRecommenderConfig0.setLambda((double) 10000.0f);
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setLambda((double) 52L);
        int int17 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 100 + "'", int17 == 100);
    }

    @Test
    public void test38150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38150");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) (short) 0);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (short) 10);
        double double12 = fixedCandidatesIDRescorer1.rescore(10000L, (double) (byte) 0);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) '4', (double) (byte) -1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = fixedCandidatesIDRescorer1.isFiltered(100L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
    }

    @Test
    public void test38151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38151");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean13 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        boolean boolean14 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        java.lang.String str16 = factorizationbasedRecommenderConfig0.getName();
        int int17 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int18 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str19 = factorizationbasedRecommenderConfig0.getName();
        java.lang.String str20 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double21 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) ' ');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 35 + "'", int18 == 35);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test38152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38152");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        java.lang.String str12 = mutableCandidate0.getLabel();
        long long13 = mutableCandidate0.getItemID();
        long long14 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=10000, itemID=0, value=97.0}", 97L);
        long long18 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "itemID" + "'", str12, "itemID");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 97L + "'", long18 == 97L);
    }

    @Test
    public void test38153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38153");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("");
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        int int7 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int10 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        boolean boolean13 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test38154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38154");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener31 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener33 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener31.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener33);
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener33);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener41 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener43 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener43.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener43.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener43);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler47 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener50 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler47, "", (int) 'a');
        delegatingPreferenceChangeListener43.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener50);
        inMemoryPreferenceChangeListener50.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener50.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener50);
        inMemoryPreferenceChangeListener50.notifyOfPreferenceChange();
    }

    @Test
    public void test38155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38155");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException15 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException15);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException15);
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException19.addSuppressed((java.lang.Throwable) missingParameterException21);
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException17);
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException28);
        invalidParameterException24.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException36 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException36);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException36);
        java.lang.Throwable[] throwableArray39 = missingParameterException36.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException36);
        missingParameterException28.addSuppressed((java.lang.Throwable) missingParameterException36);
        invalidParameterException10.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) invalidParameterException10);
        java.lang.Throwable[] throwableArray44 = invalidParameterException10.getSuppressed();
        java.lang.Throwable[] throwableArray45 = invalidParameterException10.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) invalidParameterException10);
        java.lang.Throwable[] throwableArray47 = invalidParameterException10.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException53 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray54 = missingParameterException53.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException55 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException53);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException56 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) missingParameterException53);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException57 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=32.0}", (java.lang.Throwable) invalidParameterException56);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException58 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) invalidParameterException57);
        invalidParameterException10.addSuppressed((java.lang.Throwable) invalidParameterException57);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException60 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) invalidParameterException57);
        java.lang.Throwable[] throwableArray61 = invalidParameterException57.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test38156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38156");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        java.lang.String str8 = mutablePreference0.toString();
        float float9 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) (short) 1);
        java.lang.String str12 = mutablePreference0.toString();
        java.lang.String str13 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) '4', (float) 0L);
        long long18 = mutablePreference0.getItemID();
        long long19 = mutablePreference0.getUserID();
        long long20 = mutablePreference0.getUserID();
        java.lang.String str21 = mutablePreference0.toString();
        java.lang.String str22 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str8, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9 == 0.0f);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=100, itemID=0, value=1.0}" + "'", str12, "MutablePreference{userID=100, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=100, itemID=0, value=1.0}" + "'", str13, "MutablePreference{userID=100, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 52L + "'", long18 == 52L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 100L + "'", long20 == 100L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "MutablePreference{userID=100, itemID=52, value=0.0}" + "'", str21, "MutablePreference{userID=100, itemID=52, value=0.0}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "MutablePreference{userID=100, itemID=52, value=0.0}" + "'", str22, "MutablePreference{userID=100, itemID=52, value=0.0}");
    }

    @Test
    public void test38157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38157");
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.config.Configuration configuration1 = org.plista.kornakapi.core.config.Configuration.fromXML("MutablePreference{userID=-1, itemID=0, value=52.0}");
            org.junit.Assert.fail("Expected exception of type com.thoughtworks.xstream.io.StreamException; message:  : only whitespace content allowed before start tag and not M (position: START_DOCUMENT seen M... @1:1) ");
        } catch (com.thoughtworks.xstream.io.StreamException e) {
            // Expected exception.
        }
    }

    @Test
    public void test38158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38158");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig14);
        factorizationbasedRecommenderConfig14.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig14.setNumberOfIterations((int) '#');
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList22 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration23 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str24 = storageConfiguration23.getJdbcDriverClass();
        storageConfiguration23.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str27 = storageConfiguration23.getJdbcUrl();
        java.lang.String str28 = storageConfiguration23.getJdbcDriverClass();
        storageConfiguration23.setJdbcDriverClass("batchSize");
        storageConfiguration23.setPassword("howMany");
        storageConfiguration23.setJdbcUrl("hi!");
        java.lang.String str35 = storageConfiguration23.getPassword();
        storageConfiguration23.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str38 = storageConfiguration23.getJdbcDriverClass();
        storageConfiguration23.setPassword("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        java.lang.String str41 = storageConfiguration23.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration23);
        storageConfiguration23.setPassword("MutablePreference{userID=97, itemID=10, value=10000.0}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "howMany" + "'", str35, "howMany");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "batchSize" + "'", str38, "batchSize");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str41, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
    }

    @Test
    public void test38159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38159");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        configuration0.setModelDirectory("recommender");
        configuration0.setNumProcessorsForTraining((int) (byte) 1);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig17 = null;
        configuration0.addItembasedRecommender(itembasedRecommenderConfig17);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str20 = storageConfiguration19.getJdbcDriverClass();
        storageConfiguration19.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str23 = storageConfiguration19.getJdbcUrl();
        java.lang.String str24 = storageConfiguration19.getJdbcDriverClass();
        java.lang.String str25 = storageConfiguration19.getJdbcDriverClass();
        storageConfiguration19.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str28 = storageConfiguration19.getJdbcDriverClass();
        storageConfiguration19.setPassword("hi!");
        java.lang.String str31 = storageConfiguration19.getUsername();
        java.lang.String str32 = storageConfiguration19.getJdbcDriverClass();
        configuration0.setStorageConfiguration(storageConfiguration19);
        storageConfiguration19.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: ");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str31, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test38160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38160");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (byte) -1);
        java.lang.String str5 = itembasedRecommenderConfig0.getName();
        java.lang.String str6 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=-1, itemID=97, value=52.0}");
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=97, itemID=1, value=100.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test38161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38161");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.lang.String str5 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration6 = new org.plista.kornakapi.core.config.Configuration();
        configuration6.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig9 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double10 = factorizationbasedRecommenderConfig9.getAlpha();
        double double11 = factorizationbasedRecommenderConfig9.getLambda();
        configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig9);
        java.lang.String str13 = configuration6.getModelDirectory();
        int int14 = configuration6.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = configuration6.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str17 = storageConfiguration16.getJdbcDriverClass();
        storageConfiguration16.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str20 = storageConfiguration16.getJdbcUrl();
        java.lang.String str21 = storageConfiguration16.getJdbcUrl();
        storageConfiguration16.setJdbcUrl("label");
        configuration6.setStorageConfiguration(storageConfiguration16);
        java.lang.String str25 = storageConfiguration16.getPassword();
        storageConfiguration16.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        configuration0.setStorageConfiguration(storageConfiguration16);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig29 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double30 = factorizationbasedRecommenderConfig29.getAlpha();
        double double31 = factorizationbasedRecommenderConfig29.getLambda();
        int int32 = factorizationbasedRecommenderConfig29.getNumberOfFeatures();
        java.lang.String str33 = factorizationbasedRecommenderConfig29.getRetrainCronExpression();
        int int34 = factorizationbasedRecommenderConfig29.getNumberOfFeatures();
        factorizationbasedRecommenderConfig29.setNumberOfIterations((int) (short) 0);
        boolean boolean37 = factorizationbasedRecommenderConfig29.isUsesImplicitFeedback();
        java.lang.String str38 = factorizationbasedRecommenderConfig29.getRetrainCronExpression();
        double double39 = factorizationbasedRecommenderConfig29.getLambda();
        factorizationbasedRecommenderConfig29.setLambda((double) (byte) -1);
        factorizationbasedRecommenderConfig29.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig29.setLambda((double) 100L);
        int int46 = factorizationbasedRecommenderConfig29.getRetrainAfterPreferenceChanges();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig29);
        factorizationbasedRecommenderConfig29.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        factorizationbasedRecommenderConfig29.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig29.setRetrainAfterPreferenceChanges((int) (byte) 1);
        factorizationbasedRecommenderConfig29.setNumberOfFeatures((int) (short) 0);
        int int56 = factorizationbasedRecommenderConfig29.getNumberOfFeatures();
        factorizationbasedRecommenderConfig29.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig29.setRetrainAfterPreferenceChanges(52);
        double double61 = factorizationbasedRecommenderConfig29.getAlpha();
        factorizationbasedRecommenderConfig29.setLambda((double) 100);
        int int64 = factorizationbasedRecommenderConfig29.getNumberOfIterations();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 100 + "'", int64 == 100);
    }

    @Test
    public void test38162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38162");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("value");
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException12.addSuppressed((java.lang.Throwable) missingParameterException14);
        invalidParameterException10.addSuppressed((java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException10);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) invalidParameterException17);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException18);
        missingParameterException1.addSuppressed((java.lang.Throwable) invalidParameterException19);
        java.lang.Throwable[] throwableArray21 = invalidParameterException19.getSuppressed();
        java.lang.String str22 = invalidParameterException19.toString();
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str22, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
    }

    @Test
    public void test38163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38163");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", (long) (byte) -1);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str8, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str9, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
    }

    @Test
    public void test38164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38164");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException8.addSuppressed((java.lang.Throwable) missingParameterException10);
        invalidParameterException6.addSuppressed((java.lang.Throwable) missingParameterException10);
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException20.addSuppressed((java.lang.Throwable) missingParameterException22);
        invalidParameterException18.addSuppressed((java.lang.Throwable) missingParameterException22);
        missingParameterException10.addSuppressed((java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException26 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) missingParameterException10);
        org.plista.kornakapi.web.MissingParameterException missingParameterException30 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException30);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException32 = new org.plista.kornakapi.web.InvalidParameterException("itemID", (java.lang.Throwable) missingParameterException30);
        java.lang.Throwable[] throwableArray33 = invalidParameterException32.getSuppressed();
        invalidParameterException26.addSuppressed((java.lang.Throwable) invalidParameterException32);
        org.plista.kornakapi.web.MissingParameterException missingParameterException38 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException39 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException38);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException39);
        org.plista.kornakapi.web.MissingParameterException missingParameterException44 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException45 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException44);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException44);
        java.lang.Throwable[] throwableArray47 = missingParameterException44.getSuppressed();
        java.lang.Throwable[] throwableArray48 = missingParameterException44.getSuppressed();
        java.lang.Throwable[] throwableArray49 = missingParameterException44.getSuppressed();
        invalidParameterException39.addSuppressed((java.lang.Throwable) missingParameterException44);
        invalidParameterException32.addSuppressed((java.lang.Throwable) invalidParameterException39);
        org.plista.kornakapi.web.MissingParameterException missingParameterException53 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        java.lang.Throwable[] throwableArray54 = missingParameterException53.getSuppressed();
        java.lang.Throwable[] throwableArray55 = missingParameterException53.getSuppressed();
        invalidParameterException39.addSuppressed((java.lang.Throwable) missingParameterException53);
        java.lang.Throwable[] throwableArray57 = missingParameterException53.getSuppressed();
        java.lang.Throwable[] throwableArray58 = missingParameterException53.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray58);
    }

    @Test
    public void test38165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38165");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.MissingParameterException missingParameterException9 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException11 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException9.addSuppressed((java.lang.Throwable) missingParameterException11);
        invalidParameterException7.addSuppressed((java.lang.Throwable) missingParameterException11);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException14 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException7);
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: howMany");
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.MissingParameterException missingParameterException25 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException27 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException25.addSuppressed((java.lang.Throwable) missingParameterException27);
        invalidParameterException23.addSuppressed((java.lang.Throwable) missingParameterException27);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException35 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException34);
        invalidParameterException30.addSuppressed((java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.MissingParameterException missingParameterException40 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException41 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException40);
        missingParameterException34.addSuppressed((java.lang.Throwable) invalidParameterException41);
        java.lang.Throwable[] throwableArray43 = missingParameterException34.getSuppressed();
        missingParameterException16.addSuppressed((java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.MissingParameterException missingParameterException49 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException49);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException51 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException49);
        java.lang.Throwable[] throwableArray52 = missingParameterException49.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException53 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException49);
        missingParameterException34.addSuppressed((java.lang.Throwable) invalidParameterException53);
        invalidParameterException14.addSuppressed((java.lang.Throwable) invalidParameterException53);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException56 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: ", (java.lang.Throwable) invalidParameterException53);
        org.plista.kornakapi.web.MissingParameterException missingParameterException58 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.Throwable throwable61 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException62 = new org.plista.kornakapi.web.InvalidParameterException("hi!", throwable61);
        org.plista.kornakapi.web.MissingParameterException missingParameterException67 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException68 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException67);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException69 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException67);
        org.plista.kornakapi.web.MissingParameterException missingParameterException71 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException73 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException71.addSuppressed((java.lang.Throwable) missingParameterException73);
        invalidParameterException69.addSuppressed((java.lang.Throwable) missingParameterException73);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException76 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException69);
        invalidParameterException62.addSuppressed((java.lang.Throwable) invalidParameterException76);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException78 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException76);
        missingParameterException58.addSuppressed((java.lang.Throwable) invalidParameterException78);
        org.plista.kornakapi.web.MissingParameterException missingParameterException83 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException84 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException83);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException85 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException83);
        org.plista.kornakapi.web.MissingParameterException missingParameterException87 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException89 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException87.addSuppressed((java.lang.Throwable) missingParameterException89);
        invalidParameterException85.addSuppressed((java.lang.Throwable) missingParameterException89);
        missingParameterException58.addSuppressed((java.lang.Throwable) missingParameterException89);
        java.lang.Throwable[] throwableArray93 = missingParameterException89.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException95 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=35, itemID=100, value=52.0}");
        missingParameterException89.addSuppressed((java.lang.Throwable) missingParameterException95);
        invalidParameterException53.addSuppressed((java.lang.Throwable) missingParameterException89);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray93);
    }

    @Test
    public void test38166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38166");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(trainingScheduler5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
    }

    @Test
    public void test38167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38167");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig14);
        factorizationbasedRecommenderConfig14.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig14.setNumberOfIterations((int) '#');
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        configuration0.setNumProcessorsForTraining((int) (byte) 10);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig24 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig24.setSimilarityClass("");
        java.lang.String str27 = itembasedRecommenderConfig24.getName();
        java.lang.String str28 = itembasedRecommenderConfig24.getSimilarityClass();
        itembasedRecommenderConfig24.setName("");
        itembasedRecommenderConfig24.setRetrainCronExpression("label");
        int int33 = itembasedRecommenderConfig24.getSimilarItemsPerItem();
        itembasedRecommenderConfig24.setSimilarItemsPerItem((int) '4');
        configuration0.addItembasedRecommender(itembasedRecommenderConfig24);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList37 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration38 = configuration0.getStorageConfiguration();
        configuration0.setModelDirectory("MutablePreference{userID=52, itemID=97, value=-1.0}");
        int int41 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig42 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double43 = factorizationbasedRecommenderConfig42.getAlpha();
        double double44 = factorizationbasedRecommenderConfig42.getLambda();
        int int45 = factorizationbasedRecommenderConfig42.getNumberOfFeatures();
        java.lang.String str46 = factorizationbasedRecommenderConfig42.getRetrainCronExpression();
        int int47 = factorizationbasedRecommenderConfig42.getNumberOfFeatures();
        factorizationbasedRecommenderConfig42.setNumberOfIterations((int) (short) 0);
        boolean boolean50 = factorizationbasedRecommenderConfig42.isUsesImplicitFeedback();
        java.lang.String str51 = factorizationbasedRecommenderConfig42.getRetrainCronExpression();
        java.lang.String str52 = factorizationbasedRecommenderConfig42.getRetrainCronExpression();
        double double53 = factorizationbasedRecommenderConfig42.getLambda();
        int int54 = factorizationbasedRecommenderConfig42.getRetrainAfterPreferenceChanges();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig42);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig56 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double57 = factorizationbasedRecommenderConfig56.getAlpha();
        double double58 = factorizationbasedRecommenderConfig56.getLambda();
        int int59 = factorizationbasedRecommenderConfig56.getNumberOfFeatures();
        factorizationbasedRecommenderConfig56.setUsesImplicitFeedback(true);
        double double62 = factorizationbasedRecommenderConfig56.getAlpha();
        java.lang.String str63 = factorizationbasedRecommenderConfig56.getRetrainCronExpression();
        factorizationbasedRecommenderConfig56.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig56.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig56.setAlpha((double) ' ');
        double double70 = factorizationbasedRecommenderConfig56.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer71 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig56);
        factorizationbasedRecommenderConfig56.setAlpha((double) 10000L);
        factorizationbasedRecommenderConfig56.setRetrainAfterPreferenceChanges((int) (short) 100);
        factorizationbasedRecommenderConfig56.setRetrainAfterPreferenceChanges((int) (short) 0);
        double double78 = factorizationbasedRecommenderConfig56.getLambda();
        factorizationbasedRecommenderConfig56.setRetrainCronExpression("MutablePreference{userID=1, itemID=10, value=10000.0}");
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig56);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList37);
        org.junit.Assert.assertNotNull(storageConfiguration38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 32.0d + "'", double70 == 32.0d);
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
    }

    @Test
    public void test38168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38168");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        java.lang.String str13 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str15 = itembasedRecommenderConfig14.getSimilarityClass();
        java.lang.String str16 = itembasedRecommenderConfig14.getSimilarityClass();
        int int17 = itembasedRecommenderConfig14.getRetrainAfterPreferenceChanges();
        int int18 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig14);
        org.plista.kornakapi.core.config.Configuration configuration20 = new org.plista.kornakapi.core.config.Configuration();
        configuration20.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str23 = configuration20.getModelDirectory();
        configuration20.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = configuration20.getStorageConfiguration();
        java.lang.String str27 = configuration20.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig28 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str29 = itembasedRecommenderConfig28.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer30 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig28);
        itembasedRecommenderConfig28.setSimilarityClass("recommender");
        java.lang.String str33 = itembasedRecommenderConfig28.getSimilarityClass();
        configuration20.addItembasedRecommender(itembasedRecommenderConfig28);
        configuration20.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig37 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str38 = itembasedRecommenderConfig37.getSimilarityClass();
        int int39 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
        int int40 = itembasedRecommenderConfig37.getRetrainAfterPreferenceChanges();
        int int41 = itembasedRecommenderConfig37.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig37);
        int int43 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
        configuration20.addItembasedRecommender(itembasedRecommenderConfig37);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig37);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration46 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str47 = storageConfiguration46.getJdbcDriverClass();
        storageConfiguration46.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration46.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str52 = storageConfiguration46.getUsername();
        configuration0.setStorageConfiguration(storageConfiguration46);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList54 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components55 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration56 = null; // flaky: components55.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList57 = null; // flaky: configuration56.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration58 = null; // flaky: configuration56.getStorageConfiguration();
        java.lang.String str59 = null; // flaky: storageConfiguration58.getJdbcUrl();
// flaky:         storageConfiguration58.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: hi!");
        java.lang.String str62 = null; // flaky: storageConfiguration58.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration58);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(storageConfiguration26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "recommender" + "'", str33, "recommender");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str52, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList54);
// flaky:         org.junit.Assert.assertNotNull(components55);
// flaky:         org.junit.Assert.assertNotNull(configuration56);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList57);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration58);
// flaky:         org.junit.Assert.assertEquals("'" + str59 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str59, "MutablePreference{userID=100, itemID=0, value=0.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: hi!" + "'", str62, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: hi!");
    }

    @Test
    public void test38169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38169");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=1, itemID=-1, value=10.0}", (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test38170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38170");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.lang.String str2 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(storageConfiguration3);
    }

    @Test
    public void test38171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38171");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        javax.servlet.ServletConfig servletConfig7 = deleteCandidateServlet2.getServletConfig();
        javax.servlet.ServletConfig servletConfig8 = null;
        deleteCandidateServlet2.init(servletConfig8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str11 = batchDeleteCandidatesServlet10.getServletInfo();
        java.lang.String str12 = batchDeleteCandidatesServlet10.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet13 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        setPreferenceServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet13.init((javax.servlet.ServletConfig) recommendServlet18);
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) setPreferenceServlet13);
        batchDeleteCandidatesServlet10.destroy();
        batchDeleteCandidatesServlet10.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet23 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str24 = trainServlet23.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet25 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet25.destroy();
        javax.servlet.ServletConfig servletConfig27 = deleteCandidateServlet25.getServletConfig();
        deleteCandidateServlet25.destroy();
        trainServlet23.init((javax.servlet.ServletConfig) deleteCandidateServlet25);
        java.lang.String str30 = trainServlet23.getServletInfo();
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) trainServlet23);
        java.lang.String str32 = trainServlet23.getServletInfo();
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) trainServlet23);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet34 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet34.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet36 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet37 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet38 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        setPreferenceServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet41 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet36.init((javax.servlet.ServletConfig) recommendServlet41);
        recommendServlet41.init();
        addCandidateServlet34.init((javax.servlet.ServletConfig) recommendServlet41);
        java.lang.String str45 = addCandidateServlet34.getServletInfo();
        addCandidateServlet34.init();
        javax.servlet.ServletConfig servletConfig47 = addCandidateServlet34.getServletConfig();
        java.lang.String str48 = addCandidateServlet34.getServletInfo();
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) addCandidateServlet34);
        addCandidateServlet34.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(servletConfig47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test38172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38172");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getName();
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str5 = itembasedRecommenderConfig0.getSimilarityClass();
        int int6 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=32.0}");
        int int9 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=52, itemID=-1, value=52.0}");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
        int int14 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test38173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38173");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNull(trainingScheduler6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
    }

    @Test
    public void test38174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38174");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        java.lang.String str12 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=-1, itemID=10, value=10.0}", 10L);
        java.lang.String str16 = mutableCandidate0.getLabel();
        long long17 = mutableCandidate0.getItemID();
        java.lang.String str18 = mutableCandidate0.getLabel();
        java.lang.String str19 = mutableCandidate0.getLabel();
        java.lang.String str20 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=32, itemID=-1, value=100.0}", 97L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str16, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10L + "'", long17 == 10L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str18, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str19, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str20, "MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test38175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38175");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        java.lang.String str5 = mutableCandidate0.getLabel();
        long long6 = mutableCandidate0.getItemID();
        long long7 = mutableCandidate0.getItemID();
        long long8 = mutableCandidate0.getItemID();
        java.lang.String str9 = mutableCandidate0.getLabel();
        java.lang.String str10 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "itemIDs" + "'", str5, "itemIDs");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemIDs" + "'", str9, "itemIDs");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "itemIDs" + "'", str10, "itemIDs");
    }

    @Test
    public void test38176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38176");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        double double11 = fixedCandidatesIDRescorer1.rescore(100L, 0.0d);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) (-1), (double) 32);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer16 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double19 = fixedCandidatesIDRescorer1.rescore((long) 97, (double) 1.0f);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
    }

    @Test
    public void test38177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38177");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = null; // flaky: configuration6.getStorageConfiguration();
        java.lang.String str8 = null; // flaky: storageConfiguration7.getPassword();
// flaky:         storageConfiguration7.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=97, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: hi!" + "'", str8, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: hi!");
    }

    @Test
    public void test38178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38178");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str7 = itembasedRecommenderConfig6.getSimilarityClass();
        int int8 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        int int9 = itembasedRecommenderConfig6.getRetrainAfterPreferenceChanges();
        int int10 = itembasedRecommenderConfig6.getRetrainAfterPreferenceChanges();
        java.lang.String str11 = itembasedRecommenderConfig6.getSimilarityClass();
        java.lang.String str12 = itembasedRecommenderConfig6.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList14 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig15 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double16 = factorizationbasedRecommenderConfig15.getAlpha();
        double double17 = factorizationbasedRecommenderConfig15.getLambda();
        int int18 = factorizationbasedRecommenderConfig15.getNumberOfFeatures();
        factorizationbasedRecommenderConfig15.setUsesImplicitFeedback(false);
        int int21 = factorizationbasedRecommenderConfig15.getNumberOfFeatures();
        factorizationbasedRecommenderConfig15.setLambda((double) 0);
        java.lang.String str24 = factorizationbasedRecommenderConfig15.getRetrainCronExpression();
        factorizationbasedRecommenderConfig15.setNumberOfFeatures((int) (byte) -1);
        factorizationbasedRecommenderConfig15.setUsesImplicitFeedback(false);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig15);
        org.plista.kornakapi.core.config.Configuration configuration30 = new org.plista.kornakapi.core.config.Configuration();
        configuration30.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str33 = configuration30.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList34 = configuration30.getItembasedRecommenders();
        configuration30.setNumProcessorsForTraining(100);
        org.plista.kornakapi.web.Components components37 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration38 = null; // flaky: components37.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration39 = null; // flaky: components37.getConfiguration();
        java.lang.String str40 = null; // flaky: configuration39.getModelDirectory();
        int int41 = 0; // flaky: configuration39.getNumProcessorsForTraining();
        int int42 = 0; // flaky: configuration39.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration43 = null; // flaky: configuration39.getStorageConfiguration();
        configuration30.setStorageConfiguration(storageConfiguration43);
// flaky:         storageConfiguration43.setUsername("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str47 = null; // flaky: storageConfiguration43.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration43);
        int int49 = configuration0.getNumProcessorsForTraining();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList34);
// flaky:         org.junit.Assert.assertNotNull(components37);
// flaky:         org.junit.Assert.assertNotNull(configuration38);
// flaky:         org.junit.Assert.assertNotNull(configuration39);
// flaky:         org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str40, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration43);
// flaky:         org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: hi!" + "'", str47, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: hi!");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
    }

    @Test
    public void test38179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38179");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 100);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test38180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38180");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setJdbcDriverClass("batchSize");
        java.lang.String str12 = storageConfiguration4.getPassword();
        java.lang.String str13 = storageConfiguration4.getJdbcUrl();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.web.Components components17 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration18 = null; // flaky: components17.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration19 = null; // flaky: components17.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler20 = null; // flaky: components17.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components17.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList22 = null; // flaky: configuration21.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration23 = null; // flaky: configuration21.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig24 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str25 = itembasedRecommenderConfig24.getRetrainCronExpression();
        int int26 = itembasedRecommenderConfig24.getRetrainAfterPreferenceChanges();
        java.lang.String str27 = itembasedRecommenderConfig24.getSimilarityClass();
        itembasedRecommenderConfig24.setSimilarityClass("MutablePreference{userID=100, itemID=0, value=0.0}");
        itembasedRecommenderConfig24.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=0.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer32 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig24);
// flaky:         configuration21.addItembasedRecommender(itembasedRecommenderConfig24);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration34 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str35 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str38 = storageConfiguration34.getJdbcUrl();
        java.lang.String str39 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("recommender");
        storageConfiguration34.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str44 = storageConfiguration34.getPassword();
        java.lang.String str45 = storageConfiguration34.getJdbcDriverClass();
        java.lang.String str46 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setPassword("itemID");
// flaky:         configuration21.setStorageConfiguration(storageConfiguration34);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig50 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig50.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer53 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig50);
        itembasedRecommenderConfig50.setRetrainCronExpression("");
        itembasedRecommenderConfig50.setSimilarityClass("label");
        itembasedRecommenderConfig50.setSimilarItemsPerItem(52);
// flaky:         configuration21.addItembasedRecommender(itembasedRecommenderConfig50);
        itembasedRecommenderConfig50.setRetrainCronExpression("MutablePreference{userID=10000, itemID=-1, value=0.0}");
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig50);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration64 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str65 = storageConfiguration64.getJdbcDriverClass();
        storageConfiguration64.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str68 = storageConfiguration64.getJdbcUrl();
        java.lang.String str69 = storageConfiguration64.getJdbcDriverClass();
        storageConfiguration64.setJdbcDriverClass("batchSize");
        storageConfiguration64.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        storageConfiguration64.setJdbcDriverClass("itemIDs");
        storageConfiguration64.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str78 = storageConfiguration64.getUsername();
        storageConfiguration64.setJdbcDriverClass("MutablePreference{userID=52, itemID=-1, value=52.0}");
        java.lang.String str81 = storageConfiguration64.getJdbcDriverClass();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration64);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList83 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}" + "'", str3, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=1.0}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration15);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration16);
// flaky:         org.junit.Assert.assertNotNull(components17);
// flaky:         org.junit.Assert.assertNotNull(configuration18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertNull(trainingScheduler20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList22);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str44, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str78, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "MutablePreference{userID=52, itemID=-1, value=52.0}" + "'", str81, "MutablePreference{userID=52, itemID=-1, value=52.0}");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList83);
    }

    @Test
    public void test38181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38181");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        float float8 = mutablePreference0.getValue();
        long long9 = mutablePreference0.getItemID();
        float float10 = mutablePreference0.getValue();
        mutablePreference0.set((long) 52, 10000L, (float) 35);
        mutablePreference0.setValue((float) 1);
        long long17 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.0f + "'", float10 == 0.0f);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10000L + "'", long17 == 10000L);
    }

    @Test
    public void test38182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38182");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler24 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler24, "itemID", (int) '#');
        inMemoryPreferenceChangeListener27.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener27.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener27);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener33 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener33.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener35);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener40 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener42 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener40.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener42);
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener42);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener50 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener50.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener52 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener50.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener52);
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener57 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener57.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener59 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener59.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener59.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener57.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener59);
        delegatingPreferenceChangeListener59.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener52.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener59);
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener52);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener52);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener67 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener67.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener67.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener67.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler71 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener74 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler71, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", (int) ' ');
        inMemoryPreferenceChangeListener74.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener74.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener67.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener74);
        delegatingPreferenceChangeListener52.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener67);
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
    }

    @Test
    public void test38183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38183");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer4 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 100, (double) 'a');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer8 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double11 = fixedCandidatesIDRescorer1.rescore(97L, 0.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, 32.0d);
        double double18 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = fixedCandidatesIDRescorer1.isFiltered((long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 97.0d + "'", double7 == 97.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 32.0d + "'", double15 == 32.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
    }

    @Test
    public void test38184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38184");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) 10);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) (-1));
        double double18 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) 10.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair20 = null;
        double double22 = filteringLongPairRescorer19.rescore(longPair20, (double) (short) 1);
        org.apache.mahout.common.LongPair longPair23 = null;
        double double25 = filteringLongPairRescorer19.rescore(longPair23, (double) 52);
        org.apache.mahout.common.LongPair longPair26 = null;
        double double28 = filteringLongPairRescorer19.rescore(longPair26, (double) (short) 100);
        org.apache.mahout.common.LongPair longPair29 = null;
        double double31 = filteringLongPairRescorer19.rescore(longPair29, 100.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 10.0d + "'", double18 == 10.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 1.0d + "'", double22 == 1.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 52.0d + "'", double25 == 52.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 100.0d + "'", double28 == 100.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 100.0d + "'", double31 == 100.0d);
    }

    @Test
    public void test38185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38185");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 1);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=32, itemID=97, value=52.0}");
        int int18 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 35 + "'", int18 == 35);
    }

    @Test
    public void test38186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38186");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        int int16 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        java.lang.String str17 = factorizationbasedRecommenderConfig6.getName();
        java.lang.String str18 = factorizationbasedRecommenderConfig6.getName();
        double double19 = factorizationbasedRecommenderConfig6.getLambda();
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig6.setRetrainCronExpression("MutablePreference{userID=32, itemID=1, value=-1.0}");
        double double24 = factorizationbasedRecommenderConfig6.getAlpha();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
    }

    @Test
    public void test38187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38187");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        javax.servlet.ServletConfig servletConfig7 = deleteCandidateServlet2.getServletConfig();
        javax.servlet.ServletConfig servletConfig8 = null;
        deleteCandidateServlet2.init(servletConfig8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str11 = batchDeleteCandidatesServlet10.getServletInfo();
        java.lang.String str12 = batchDeleteCandidatesServlet10.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet13 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        setPreferenceServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet13.init((javax.servlet.ServletConfig) recommendServlet18);
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) setPreferenceServlet13);
        batchDeleteCandidatesServlet10.destroy();
        batchDeleteCandidatesServlet10.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet23 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str24 = trainServlet23.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet25 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet25.destroy();
        javax.servlet.ServletConfig servletConfig27 = deleteCandidateServlet25.getServletConfig();
        deleteCandidateServlet25.destroy();
        trainServlet23.init((javax.servlet.ServletConfig) deleteCandidateServlet25);
        java.lang.String str30 = trainServlet23.getServletInfo();
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) trainServlet23);
        java.lang.String str32 = trainServlet23.getServletInfo();
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) trainServlet23);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet34 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet34.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet36 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet37 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet38 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        setPreferenceServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet41 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet36.init((javax.servlet.ServletConfig) recommendServlet41);
        recommendServlet41.init();
        addCandidateServlet34.init((javax.servlet.ServletConfig) recommendServlet41);
        java.lang.String str45 = addCandidateServlet34.getServletInfo();
        addCandidateServlet34.init();
        javax.servlet.ServletConfig servletConfig47 = addCandidateServlet34.getServletConfig();
        java.lang.String str48 = addCandidateServlet34.getServletInfo();
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) addCandidateServlet34);
        deleteCandidateServlet2.destroy();
        java.lang.String str51 = deleteCandidateServlet2.getServletInfo();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig53 = deleteCandidateServlet2.getServletConfig();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(servletConfig47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNotNull(servletConfig53);
    }

    @Test
    public void test38188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38188");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10000);
        int int15 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean16 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        boolean boolean17 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test38189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38189");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        long long13 = mutableCandidate0.getItemID();
        java.lang.String str14 = mutableCandidate0.getLabel();
        long long15 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "itemID" + "'", str14, "itemID");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
    }

    @Test
    public void test38190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38190");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) 10);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) (-1));
        double double18 = fixedCandidatesIDRescorer1.rescore((long) (byte) 10, 52.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double22 = fixedCandidatesIDRescorer1.rescore(35L, (double) 97L);
        double double25 = fixedCandidatesIDRescorer1.rescore((long) (-1), (double) (-1));
        double double28 = fixedCandidatesIDRescorer1.rescore((long) 35, (double) 10);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer29 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 97.0d + "'", double22 == 97.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + (-1.0d) + "'", double25 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 10.0d + "'", double28 == 10.0d);
    }

    @Test
    public void test38191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38191");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) '4', (double) 0L);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, 10000.0d);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = fixedCandidatesIDRescorer1.isFiltered((long) (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10000.0d + "'", double8 == 10000.0d);
    }

    @Test
    public void test38192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38192");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        int int16 = 0; // flaky: configuration5.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig17 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double18 = factorizationbasedRecommenderConfig17.getAlpha();
        double double19 = factorizationbasedRecommenderConfig17.getLambda();
        int int20 = factorizationbasedRecommenderConfig17.getNumberOfFeatures();
        factorizationbasedRecommenderConfig17.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig17.setNumberOfFeatures((int) (byte) 1);
        factorizationbasedRecommenderConfig17.setLambda((double) 100);
        factorizationbasedRecommenderConfig17.setNumberOfIterations(1);
        boolean boolean29 = factorizationbasedRecommenderConfig17.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig17);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        factorizationbasedRecommenderConfig31.setUsesImplicitFeedback(true);
        double double37 = factorizationbasedRecommenderConfig31.getAlpha();
        java.lang.String str38 = factorizationbasedRecommenderConfig31.getRetrainCronExpression();
        int int39 = factorizationbasedRecommenderConfig31.getRetrainAfterPreferenceChanges();
        int int40 = factorizationbasedRecommenderConfig31.getNumberOfIterations();
        factorizationbasedRecommenderConfig31.setNumberOfFeatures((int) '#');
        double double43 = factorizationbasedRecommenderConfig31.getLambda();
        factorizationbasedRecommenderConfig31.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig31.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: label");
        factorizationbasedRecommenderConfig31.setUsesImplicitFeedback(false);
        java.lang.String str50 = factorizationbasedRecommenderConfig31.getName();
        int int51 = factorizationbasedRecommenderConfig31.getNumberOfIterations();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        org.plista.kornakapi.web.Components components53 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration54 = null; // flaky: components53.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler55 = null; // flaky: components53.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler56 = null; // flaky: components53.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration57 = null; // flaky: components53.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration58 = null; // flaky: components53.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig59 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig59.setSimilarityClass("");
        java.lang.String str62 = itembasedRecommenderConfig59.getName();
        java.lang.String str63 = itembasedRecommenderConfig59.getSimilarityClass();
        itembasedRecommenderConfig59.setName("");
        java.lang.String str66 = itembasedRecommenderConfig59.getSimilarityClass();
// flaky:         configuration58.addItembasedRecommender(itembasedRecommenderConfig59);
        itembasedRecommenderConfig59.setSimilarItemsPerItem((int) '#');
        itembasedRecommenderConfig59.setName("MutablePreference{userID=-1, itemID=10, value=10.0}");
        int int72 = itembasedRecommenderConfig59.getSimilarItemsPerItem();
        java.lang.String str73 = itembasedRecommenderConfig59.getName();
        int int74 = itembasedRecommenderConfig59.getSimilarItemsPerItem();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig59);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration76 = null; // flaky: configuration5.getStorageConfiguration();
// flaky:         storageConfiguration76.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
// flaky:         org.junit.Assert.assertNotNull(components53);
// flaky:         org.junit.Assert.assertNotNull(configuration54);
        org.junit.Assert.assertNull(trainingScheduler55);
        org.junit.Assert.assertNull(trainingScheduler56);
// flaky:         org.junit.Assert.assertNotNull(configuration57);
// flaky:         org.junit.Assert.assertNotNull(configuration58);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 35 + "'", int72 == 35);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str73, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 35 + "'", int74 == 35);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration76);
    }

    @Test
    public void test38193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38193");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getRetrainCronExpression();
        int int7 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig5.setSimilarityClass("");
        itembasedRecommenderConfig5.setSimilarityClass("value");
        int int15 = itembasedRecommenderConfig5.getSimilarItemsPerItem();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig17 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double18 = factorizationbasedRecommenderConfig17.getAlpha();
        double double19 = factorizationbasedRecommenderConfig17.getLambda();
        int int20 = factorizationbasedRecommenderConfig17.getNumberOfFeatures();
        factorizationbasedRecommenderConfig17.setUsesImplicitFeedback(true);
        double double23 = factorizationbasedRecommenderConfig17.getAlpha();
        java.lang.String str24 = factorizationbasedRecommenderConfig17.getRetrainCronExpression();
        int int25 = factorizationbasedRecommenderConfig17.getRetrainAfterPreferenceChanges();
        int int26 = factorizationbasedRecommenderConfig17.getNumberOfIterations();
        factorizationbasedRecommenderConfig17.setNumberOfFeatures((int) '#');
        double double29 = factorizationbasedRecommenderConfig17.getLambda();
        boolean boolean30 = factorizationbasedRecommenderConfig17.isUsesImplicitFeedback();
        boolean boolean31 = factorizationbasedRecommenderConfig17.isUsesImplicitFeedback();
        int int32 = factorizationbasedRecommenderConfig17.getNumberOfIterations();
        java.lang.String str33 = factorizationbasedRecommenderConfig17.getName();
        double double34 = factorizationbasedRecommenderConfig17.getAlpha();
        factorizationbasedRecommenderConfig17.setNumberOfFeatures((int) (short) 100);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig17);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    }

    @Test
    public void test38194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38194");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = null;
        batchDeleteCandidatesServlet0.init(servletConfig3);
        batchDeleteCandidatesServlet0.destroy();
        java.lang.String str6 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig7 = batchDeleteCandidatesServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig8 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet0.log("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=52, itemID=32, value=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertNull(servletConfig8);
    }

    @Test
    public void test38195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38195");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str5 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.destroy();
        java.lang.String str8 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test38196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38196");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 1);
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int10 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setAlpha((double) 52);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(97);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test38197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38197");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("itemIDs");
        factorizationbasedRecommenderConfig0.setName("");
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(32);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test38198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38198");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
    }

    @Test
    public void test38199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38199");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(10000);
        factorizationbasedRecommenderConfig0.setAlpha(0.0d);
        factorizationbasedRecommenderConfig0.setLambda((double) (short) 10);
        factorizationbasedRecommenderConfig0.setName("");
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test38200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38200");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=10, itemID=97, value=32.0}");
    }

    @Test
    public void test38201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38201");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair6 = null;
        double double8 = filteringLongPairRescorer5.rescore(longPair6, 52.0d);
        org.apache.mahout.common.LongPair longPair9 = null;
        double double11 = filteringLongPairRescorer5.rescore(longPair9, (double) '#');
        org.apache.mahout.common.LongPair longPair12 = null;
        double double14 = filteringLongPairRescorer5.rescore(longPair12, (double) 100.0f);
        org.apache.mahout.common.LongPair longPair15 = null;
        double double17 = filteringLongPairRescorer5.rescore(longPair15, (double) (short) 1);
        org.apache.mahout.common.LongPair longPair18 = null;
        double double20 = filteringLongPairRescorer5.rescore(longPair18, (double) (byte) 0);
        org.apache.mahout.common.LongPair longPair21 = null;
        double double23 = filteringLongPairRescorer5.rescore(longPair21, (double) (byte) 1);
        org.apache.mahout.common.LongPair longPair24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = filteringLongPairRescorer5.isFiltered(longPair24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 1.0d + "'", double17 == 1.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
    }

    @Test
    public void test38202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38202");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10000);
        int int12 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(52);
        itembasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        int int21 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10000 + "'", int21 == 10000);
    }

    @Test
    public void test38203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38203");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair6 = null;
        double double8 = filteringLongPairRescorer5.rescore(longPair6, 52.0d);
        org.apache.mahout.common.LongPair longPair9 = null;
        double double11 = filteringLongPairRescorer5.rescore(longPair9, (double) '#');
        org.apache.mahout.common.LongPair longPair12 = null;
        double double14 = filteringLongPairRescorer5.rescore(longPair12, (double) (short) 10);
        org.apache.mahout.common.LongPair longPair15 = null;
        double double17 = filteringLongPairRescorer5.rescore(longPair15, 100.0d);
        org.apache.mahout.common.LongPair longPair18 = null;
        double double20 = filteringLongPairRescorer5.rescore(longPair18, (double) 52);
        org.apache.mahout.common.LongPair longPair21 = null;
        double double23 = filteringLongPairRescorer5.rescore(longPair21, (double) 1.0f);
        org.apache.mahout.common.LongPair longPair24 = null;
        double double26 = filteringLongPairRescorer5.rescore(longPair24, (double) 35);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 52.0d + "'", double20 == 52.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 1.0d + "'", double23 == 1.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 35.0d + "'", double26 == 35.0d);
    }

    @Test
    public void test38204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38204");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        java.lang.String str12 = itembasedRecommenderConfig3.getName();
        int int13 = itembasedRecommenderConfig3.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = configuration0.getItembasedRecommenders();
        int int16 = configuration0.getNumProcessorsForTraining();
        configuration0.setModelDirectory("");
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig21 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double22 = factorizationbasedRecommenderConfig21.getAlpha();
        double double23 = factorizationbasedRecommenderConfig21.getLambda();
        int int24 = factorizationbasedRecommenderConfig21.getNumberOfFeatures();
        factorizationbasedRecommenderConfig21.setUsesImplicitFeedback(true);
        double double27 = factorizationbasedRecommenderConfig21.getAlpha();
        java.lang.String str28 = factorizationbasedRecommenderConfig21.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer29 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig21);
        factorizationbasedRecommenderConfig21.setNumberOfFeatures((int) (short) -1);
        factorizationbasedRecommenderConfig21.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig21.setAlpha((double) 52);
        int int36 = factorizationbasedRecommenderConfig21.getNumberOfFeatures();
        factorizationbasedRecommenderConfig21.setAlpha((double) (short) 10);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig21);
        factorizationbasedRecommenderConfig21.setNumberOfFeatures((int) ' ');
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
    }

    @Test
    public void test38205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38205");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig0.setAlpha((double) ' ');
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        boolean boolean17 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setLambda((double) 32);
        int int20 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 35 + "'", int16 == 35);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test38206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38206");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        long long4 = mutableCandidate0.getItemID();
        java.lang.String str5 = mutableCandidate0.getLabel();
        java.lang.String str6 = mutableCandidate0.getLabel();
        java.lang.String str7 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=1.0}", 100L);
        mutableCandidate0.set("recommender", (long) 1);
        long long14 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: hi!", (long) 0);
        long long18 = mutableCandidate0.getItemID();
        java.lang.Class<?> wildcardClass19 = mutableCandidate0.getClass();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test38207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38207");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        int int11 = 0; // flaky: configuration10.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig12 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double13 = factorizationbasedRecommenderConfig12.getAlpha();
        double double14 = factorizationbasedRecommenderConfig12.getLambda();
        int int15 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        factorizationbasedRecommenderConfig12.setLambda((double) 1);
        double double18 = factorizationbasedRecommenderConfig12.getAlpha();
        double double19 = factorizationbasedRecommenderConfig12.getLambda();
        int int20 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        factorizationbasedRecommenderConfig12.setRetrainAfterPreferenceChanges((int) (short) 100);
        factorizationbasedRecommenderConfig12.setLambda((double) 97L);
// flaky:         configuration10.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig12);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig26 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double27 = factorizationbasedRecommenderConfig26.getAlpha();
        double double28 = factorizationbasedRecommenderConfig26.getLambda();
        double double29 = factorizationbasedRecommenderConfig26.getAlpha();
// flaky:         configuration10.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig26);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer31 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig26);
        factorizationbasedRecommenderConfig26.setRetrainAfterPreferenceChanges((int) 'a');
        double double34 = factorizationbasedRecommenderConfig26.getLambda();
        java.lang.String str35 = factorizationbasedRecommenderConfig26.getName();
        factorizationbasedRecommenderConfig26.setNumberOfIterations((int) (byte) 0);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test38208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38208");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        boolean boolean7 = factorizationbasedRecommenderConfig4.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig4.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration2.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList12 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         configuration2.setModelDirectory("MutablePreference{userID=100, itemID=0, value=0.0}");
// flaky:         configuration2.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: ");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList18 = null; // flaky: configuration2.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList12);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration13);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList18);
    }

    @Test
    public void test38209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38209");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str9 = itembasedRecommenderConfig8.getRetrainCronExpression();
        int int10 = itembasedRecommenderConfig8.getRetrainAfterPreferenceChanges();
        java.lang.String str11 = itembasedRecommenderConfig8.getSimilarityClass();
        itembasedRecommenderConfig8.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig8.setSimilarityClass("");
        itembasedRecommenderConfig8.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig8.setSimilarItemsPerItem(10000);
        itembasedRecommenderConfig8.setName("MutablePreference{userID=0, itemID=0, value=1.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer22 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig8);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig8);
// flaky:         configuration5.setModelDirectory("hi!");
        org.plista.kornakapi.web.Components components26 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage27 = null; // flaky: components26.storage();
        org.plista.kornakapi.core.config.Configuration configuration28 = null; // flaky: components26.getConfiguration();
        java.lang.String str29 = null; // flaky: configuration28.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration30 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str31 = storageConfiguration30.getJdbcDriverClass();
        storageConfiguration30.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str34 = storageConfiguration30.getJdbcUrl();
        java.lang.String str35 = storageConfiguration30.getJdbcDriverClass();
        storageConfiguration30.setJdbcDriverClass("batchSize");
        java.lang.String str38 = storageConfiguration30.getPassword();
        java.lang.String str39 = storageConfiguration30.getJdbcUrl();
// flaky:         configuration28.setStorageConfiguration(storageConfiguration30);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration41 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str42 = storageConfiguration41.getJdbcDriverClass();
        storageConfiguration41.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str45 = storageConfiguration41.getPassword();
        java.lang.String str46 = storageConfiguration41.getJdbcDriverClass();
        storageConfiguration41.setUsername("hi!");
        storageConfiguration41.setJdbcDriverClass("file");
// flaky:         configuration28.setStorageConfiguration(storageConfiguration41);
        storageConfiguration41.setUsername("recommender");
        storageConfiguration41.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=1.0}");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration41);
// flaky:         configuration5.setNumProcessorsForTraining((int) 'a');
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration59 = null; // flaky: configuration5.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration60 = new org.plista.kornakapi.core.config.Configuration();
        configuration60.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig63 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig63.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer66 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig63);
        itembasedRecommenderConfig63.setRetrainCronExpression("");
        itembasedRecommenderConfig63.setSimilarItemsPerItem(10);
        java.lang.String str71 = itembasedRecommenderConfig63.getName();
        configuration60.addItembasedRecommender(itembasedRecommenderConfig63);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer73 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig63);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig63);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig75 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double76 = factorizationbasedRecommenderConfig75.getAlpha();
        factorizationbasedRecommenderConfig75.setUsesImplicitFeedback(true);
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig75);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer80 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig75);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
// flaky:         org.junit.Assert.assertNotNull(components26);
        org.junit.Assert.assertNull(storage27);
// flaky:         org.junit.Assert.assertNotNull(configuration28);
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "hi!" + "'", str29, "hi!");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration59);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
    }

    @Test
    public void test38210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38210");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setRetrainAfterPreferenceChanges((int) (short) 100);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = null;
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig12);
// flaky:         configuration4.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList16 = null; // flaky: configuration4.getItembasedRecommenders();
// flaky:         configuration4.setModelDirectory("MutablePreference{userID=0, itemID=0, value=1.0}");
// flaky:         configuration4.setNumProcessorsForTraining(0);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList16);
    }

    @Test
    public void test38211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38211");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 1);
        long long6 = mutablePreference0.getUserID();
        java.lang.String str7 = mutablePreference0.toString();
        java.lang.String str8 = mutablePreference0.toString();
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (byte) 0, 97L, (float) (byte) 0);
        long long14 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) 0L);
        mutablePreference0.set((long) (short) 100, (long) 52, (float) (-1));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str8, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test38212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38212");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        java.lang.String str16 = null; // flaky: configuration5.getModelDirectory();
        int int17 = 0; // flaky: configuration5.getNumProcessorsForTraining();
// flaky:         configuration5.setNumProcessorsForTraining((int) (short) 0);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = null; // flaky: configuration5.getStorageConfiguration();
        java.lang.String str21 = null; // flaky: storageConfiguration20.getJdbcUrl();
// flaky:         storageConfiguration20.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str24 = null; // flaky: storageConfiguration20.getJdbcUrl();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str16, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration20);
        org.junit.Assert.assertNull(str21);
// flaky:         org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str24, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test38213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38213");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = null;
// flaky:         configuration6.addItembasedRecommender(itembasedRecommenderConfig7);
// flaky:         configuration6.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = null; // flaky: configuration6.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str13 = storageConfiguration12.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration12.getUsername();
        storageConfiguration12.setJdbcUrl("");
        storageConfiguration12.setJdbcUrl("hi!");
        storageConfiguration12.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=52.0}");
        java.lang.String str21 = storageConfiguration12.getJdbcUrl();
        storageConfiguration12.setJdbcDriverClass("MutablePreference{userID=10, itemID=100, value=10.0}");
// flaky:         configuration6.setStorageConfiguration(storageConfiguration12);
        int int25 = 0; // flaky: configuration6.getNumProcessorsForTraining();
        java.lang.String str26 = null; // flaky: configuration6.getModelDirectory();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str21, "MutablePreference{userID=0, itemID=0, value=52.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str26, "MutablePreference{userID=0, itemID=0, value=1.0}");
    }

    @Test
    public void test38214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38214");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        java.lang.String str12 = mutableCandidate0.getLabel();
        java.lang.String str13 = mutableCandidate0.getLabel();
        java.lang.String str14 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", (long) 10);
        mutableCandidate0.set("MutablePreference{userID=97, itemID=97, value=52.0}", (-1L));
        mutableCandidate0.set("MutablePreference{userID=10000, itemID=0, value=97.0}", 10L);
        long long24 = mutableCandidate0.getItemID();
        java.lang.String str25 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str14, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10L + "'", long24 == 10L);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "MutablePreference{userID=10000, itemID=0, value=97.0}" + "'", str25, "MutablePreference{userID=10000, itemID=0, value=97.0}");
    }

    @Test
    public void test38215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38215");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str8 = recommendServlet7.getServletInfo();
        javax.servlet.ServletConfig servletConfig9 = recommendServlet7.getServletConfig();
        java.lang.String str10 = recommendServlet7.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) recommendServlet7);
        batchSetPreferencesServlet1.init();
        batchSetPreferencesServlet1.init();
        batchSetPreferencesServlet1.init();
        javax.servlet.ServletRequest servletRequest15 = null;
        javax.servlet.ServletResponse servletResponse16 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet1.service(servletRequest15, servletResponse16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(servletConfig9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test38216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38216");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener23 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener23.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener25 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener23.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener30 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener30.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener32 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener32.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener32.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener30.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener32);
        delegatingPreferenceChangeListener32.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener32);
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener40 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener42 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener40.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener42);
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener47 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener49 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener47.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener49);
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener42.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener49);
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener42);
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler58 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener61 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler58, "howMany", (int) (short) 100);
        inMemoryPreferenceChangeListener61.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener61);
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
    }

    @Test
    public void test38217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38217");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setRetrainAfterPreferenceChanges((int) (short) 100);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = null;
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig12);
// flaky:         configuration4.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig17 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str18 = itembasedRecommenderConfig17.getRetrainCronExpression();
        int int19 = itembasedRecommenderConfig17.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig17.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=10.0}");
        itembasedRecommenderConfig17.setRetrainAfterPreferenceChanges(1);
        itembasedRecommenderConfig17.setSimilarItemsPerItem((int) (short) 0);
        java.lang.String str26 = itembasedRecommenderConfig17.getSimilarityClass();
        itembasedRecommenderConfig17.setSimilarityClass("MutablePreference{userID=52, itemID=-1, value=32.0}");
        itembasedRecommenderConfig17.setSimilarItemsPerItem(35);
        java.lang.String str31 = itembasedRecommenderConfig17.getRetrainCronExpression();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig17);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str31, "MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test38218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38218");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        batchAddCandidatesServlet0.init();
        java.lang.String str4 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet5 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet6 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet6.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet7);
        setPreferenceServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet7);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet10 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet5.init((javax.servlet.ServletConfig) recommendServlet10);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet12 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str13 = batchDeleteCandidatesServlet12.getServletInfo();
        java.lang.String str14 = batchDeleteCandidatesServlet12.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet15 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet16 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet17);
        setPreferenceServlet15.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet17);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet20 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet15.init((javax.servlet.ServletConfig) recommendServlet20);
        batchDeleteCandidatesServlet12.init((javax.servlet.ServletConfig) setPreferenceServlet15);
        setPreferenceServlet5.init((javax.servlet.ServletConfig) setPreferenceServlet15);
        setPreferenceServlet15.init();
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet15);
        setPreferenceServlet15.destroy();
        setPreferenceServlet15.init();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet28 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet28.init();
        java.lang.String str30 = batchAddCandidatesServlet28.getServletInfo();
        javax.servlet.ServletConfig servletConfig31 = batchAddCandidatesServlet28.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet32 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str33 = batchDeleteCandidatesServlet32.getServletInfo();
        java.lang.String str34 = batchDeleteCandidatesServlet32.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet35 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet36 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet37 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet37);
        setPreferenceServlet35.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet37);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet40 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet35.init((javax.servlet.ServletConfig) recommendServlet40);
        batchDeleteCandidatesServlet32.init((javax.servlet.ServletConfig) setPreferenceServlet35);
        batchAddCandidatesServlet28.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet32);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet44 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str45 = trainServlet44.getServletInfo();
        javax.servlet.ServletConfig servletConfig46 = trainServlet44.getServletConfig();
        batchAddCandidatesServlet28.init(servletConfig46);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet48 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet49 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet50 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet49.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet50);
        setPreferenceServlet48.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet50);
        java.lang.String str53 = setPreferenceServlet48.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet54 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet55 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet56 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet55.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet56);
        setPreferenceServlet54.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet56);
        setPreferenceServlet48.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet56);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet60 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str61 = batchDeleteCandidatesServlet60.getServletInfo();
        batchDeleteCandidatesServlet60.init();
        batchDeleteCandidatesServlet60.destroy();
        java.lang.String str64 = batchDeleteCandidatesServlet60.getServletInfo();
        batchDeleteCandidatesServlet60.destroy();
        setPreferenceServlet48.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet60);
        batchDeleteCandidatesServlet60.destroy();
        java.lang.String str68 = batchDeleteCandidatesServlet60.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet69 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet70 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet71 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet70.init((javax.servlet.ServletConfig) batchSetPreferencesServlet71);
        batchDeleteCandidatesServlet69.init((javax.servlet.ServletConfig) batchSetPreferencesServlet71);
        javax.servlet.ServletConfig servletConfig74 = batchSetPreferencesServlet71.getServletConfig();
        java.lang.String str75 = batchSetPreferencesServlet71.getServletInfo();
        java.lang.String str76 = batchSetPreferencesServlet71.getServletInfo();
        java.lang.String str77 = batchSetPreferencesServlet71.getServletInfo();
        batchDeleteCandidatesServlet60.init((javax.servlet.ServletConfig) batchSetPreferencesServlet71);
        batchAddCandidatesServlet28.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet60);
        setPreferenceServlet15.init((javax.servlet.ServletConfig) batchAddCandidatesServlet28);
        java.lang.String str81 = batchAddCandidatesServlet28.getServletInfo();
        batchAddCandidatesServlet28.destroy();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(servletConfig31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(servletConfig46);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "" + "'", str64, "");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
        org.junit.Assert.assertNull(servletConfig74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
    }

    @Test
    public void test38219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38219");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet1 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet1.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet3 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet4 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet3.init((javax.servlet.ServletConfig) batchSetPreferencesServlet4);
        addCandidateServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet3);
        addCandidateServlet0.init((javax.servlet.ServletConfig) addCandidateServlet1);
        javax.servlet.ServletConfig servletConfig8 = addCandidateServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet9 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        javax.servlet.ServletConfig servletConfig12 = batchSetPreferencesServlet9.getServletConfig();
        batchSetPreferencesServlet9.init();
        batchSetPreferencesServlet9.init();
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet9.getServletConfig();
        addCandidateServlet1.init(servletConfig15);
        java.lang.String str17 = addCandidateServlet1.getServletInfo();
        javax.servlet.ServletConfig servletConfig18 = addCandidateServlet1.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            addCandidateServlet1.log("MutablePreference{userID=1, itemID=10000, value=97.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig8);
        org.junit.Assert.assertNotNull(servletConfig12);
        org.junit.Assert.assertNotNull(servletConfig15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNotNull(servletConfig18);
    }

    @Test
    public void test38220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38220");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 1);
        double double17 = factorizationbasedRecommenderConfig0.getLambda();
        double double18 = factorizationbasedRecommenderConfig0.getAlpha();
        double double19 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test38221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38221");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setLambda(10000.0d);
        int int14 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test38222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38222");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList14 = configuration0.getFactorizationbasedRecommenders();
        java.lang.String str15 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) '4');
        int int18 = configuration0.getNumProcessorsForTraining();
        java.lang.String str19 = configuration0.getModelDirectory();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str15, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 52 + "'", int18 == 52);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str19, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test38223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38223");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setName("");
        factorizationbasedRecommenderConfig0.setLambda((double) 10000);
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setLambda(52.0d);
        double double15 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(32);
        java.lang.String str22 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test38224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38224");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
// flaky:         preferenceChangeListener7.notifyOfPreferenceChange();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
    }

    @Test
    public void test38225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38225");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet2 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet3 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        setPreferenceServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet2.init((javax.servlet.ServletConfig) recommendServlet7);
        recommendServlet7.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet7);
        java.lang.String str11 = addCandidateServlet0.getServletInfo();
        addCandidateServlet0.init();
        javax.servlet.ServletConfig servletConfig13 = addCandidateServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet14 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet15.getServletConfig();
        addCandidateServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        batchSetPreferencesServlet15.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str22 = recommendServlet21.getServletInfo();
        javax.servlet.ServletConfig servletConfig23 = recommendServlet21.getServletConfig();
        java.lang.String str24 = recommendServlet21.getServletInfo();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) recommendServlet21);
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet21);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet27 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet27.destroy();
        trainServlet27.destroy();
        java.lang.String str30 = trainServlet27.getServletInfo();
        java.lang.String str31 = trainServlet27.getServletInfo();
        javax.servlet.ServletConfig servletConfig32 = trainServlet27.getServletConfig();
        javax.servlet.ServletConfig servletConfig33 = trainServlet27.getServletConfig();
        trainServlet27.destroy();
        trainServlet27.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) trainServlet27);
        javax.servlet.ServletConfig servletConfig37 = addCandidateServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration38 = addCandidateServlet0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertNull(servletConfig33);
        org.junit.Assert.assertNotNull(servletConfig37);
    }

    @Test
    public void test38226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38226");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        java.lang.String str5 = batchSetPreferencesServlet2.getServletInfo();
        batchSetPreferencesServlet2.destroy();
        batchSetPreferencesServlet2.destroy();
        batchSetPreferencesServlet2.init();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test38227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38227");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        java.lang.String str16 = null; // flaky: configuration5.getModelDirectory();
        int int17 = 0; // flaky: configuration5.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration18 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str19 = storageConfiguration18.getJdbcDriverClass();
        storageConfiguration18.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str22 = storageConfiguration18.getJdbcUrl();
        java.lang.String str23 = storageConfiguration18.getJdbcDriverClass();
        storageConfiguration18.setUsername("recommender");
        storageConfiguration18.setJdbcUrl("MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration18);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration29 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str30 = storageConfiguration29.getJdbcDriverClass();
        storageConfiguration29.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str33 = storageConfiguration29.getJdbcUrl();
        java.lang.String str34 = storageConfiguration29.getJdbcDriverClass();
        java.lang.String str35 = storageConfiguration29.getJdbcDriverClass();
        java.lang.String str36 = storageConfiguration29.getJdbcDriverClass();
        java.lang.String str37 = storageConfiguration29.getUsername();
        storageConfiguration29.setUsername("itemIDs");
        java.lang.String str40 = storageConfiguration29.getJdbcUrl();
        storageConfiguration29.setJdbcDriverClass("MutablePreference{userID=100, itemID=0, value=1.0}");
        storageConfiguration29.setJdbcDriverClass("MutablePreference{userID=100, itemID=0, value=1.0}");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration29);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration46 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str47 = storageConfiguration46.getJdbcDriverClass();
        storageConfiguration46.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str50 = storageConfiguration46.getJdbcUrl();
        storageConfiguration46.setJdbcUrl("recommender");
        storageConfiguration46.setJdbcUrl("MutablePreference{userID=0, itemID=52, value=-1.0}");
        storageConfiguration46.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
        java.lang.String str57 = storageConfiguration46.getPassword();
        storageConfiguration46.setUsername("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration46);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "itemID" + "'", str16, "itemID");
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str37, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str57);
    }

    @Test
    public void test38228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38228");
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet0 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        recommendServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        javax.servlet.ServletConfig servletConfig8 = setPreferenceServlet4.getServletConfig();
        java.lang.String str9 = setPreferenceServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str12 = batchDeleteCandidatesServlet11.getServletInfo();
        java.lang.String str13 = batchDeleteCandidatesServlet11.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet14 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet15 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet15.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        setPreferenceServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet14.init((javax.servlet.ServletConfig) recommendServlet19);
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) setPreferenceServlet14);
        batchDeleteCandidatesServlet11.destroy();
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet24 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        batchDeleteCandidatesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig29 = batchSetPreferencesServlet26.getServletConfig();
        batchSetPreferencesServlet26.init();
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig32 = batchDeleteCandidatesServlet11.getServletConfig();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        recommendServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet11.log("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=-1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig29);
        org.junit.Assert.assertNotNull(servletConfig32);
    }

    @Test
    public void test38229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38229");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.lang.String str5 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration6 = new org.plista.kornakapi.core.config.Configuration();
        configuration6.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig9 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double10 = factorizationbasedRecommenderConfig9.getAlpha();
        double double11 = factorizationbasedRecommenderConfig9.getLambda();
        configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig9);
        java.lang.String str13 = configuration6.getModelDirectory();
        int int14 = configuration6.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = configuration6.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str17 = storageConfiguration16.getJdbcDriverClass();
        storageConfiguration16.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str20 = storageConfiguration16.getJdbcUrl();
        java.lang.String str21 = storageConfiguration16.getJdbcUrl();
        storageConfiguration16.setJdbcUrl("label");
        configuration6.setStorageConfiguration(storageConfiguration16);
        java.lang.String str25 = storageConfiguration16.getPassword();
        storageConfiguration16.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        configuration0.setStorageConfiguration(storageConfiguration16);
        configuration0.setNumProcessorsForTraining((int) '4');
        java.lang.String str31 = configuration0.getModelDirectory();
        int int32 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
    }

    @Test
    public void test38230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38230");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet2 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet3 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        setPreferenceServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet2.init((javax.servlet.ServletConfig) recommendServlet7);
        recommendServlet7.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet7);
        java.lang.String str11 = recommendServlet7.getServletInfo();
        javax.servlet.ServletConfig servletConfig12 = recommendServlet7.getServletConfig();
        recommendServlet7.destroy();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet14 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet15.getServletConfig();
        addCandidateServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        java.lang.String str20 = addCandidateServlet14.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet22 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet23 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet22.init((javax.servlet.ServletConfig) batchSetPreferencesServlet23);
        batchDeleteCandidatesServlet21.init((javax.servlet.ServletConfig) batchSetPreferencesServlet23);
        javax.servlet.ServletConfig servletConfig26 = batchSetPreferencesServlet23.getServletConfig();
        java.lang.String str27 = batchSetPreferencesServlet23.getServletInfo();
        java.lang.String str28 = batchSetPreferencesServlet23.getServletInfo();
        java.lang.String str29 = batchSetPreferencesServlet23.getServletInfo();
        addCandidateServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet23);
        recommendServlet7.init((javax.servlet.ServletConfig) batchSetPreferencesServlet23);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet32 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str33 = batchDeleteCandidatesServlet32.getServletInfo();
        batchDeleteCandidatesServlet32.init();
        batchDeleteCandidatesServlet32.destroy();
        javax.servlet.ServletConfig servletConfig36 = batchDeleteCandidatesServlet32.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet37 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet37.init();
        java.lang.String str39 = batchAddCandidatesServlet37.getServletInfo();
        batchAddCandidatesServlet37.init();
        java.lang.String str41 = batchAddCandidatesServlet37.getServletInfo();
        batchAddCandidatesServlet37.destroy();
        batchDeleteCandidatesServlet32.init((javax.servlet.ServletConfig) batchAddCandidatesServlet37);
        batchDeleteCandidatesServlet32.destroy();
        javax.servlet.ServletConfig servletConfig45 = batchDeleteCandidatesServlet32.getServletConfig();
        batchSetPreferencesServlet23.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet32);
        org.plista.kornakapi.web.MissingParameterException missingParameterException49 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.plista.kornakapi.web.MissingParameterException missingParameterException52 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray53 = missingParameterException52.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException54 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException52);
        org.plista.kornakapi.web.MissingParameterException missingParameterException59 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException60 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException59);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException61 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException60);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException62 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException60);
        org.plista.kornakapi.web.MissingParameterException missingParameterException67 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException68 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException67);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException69 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException67);
        org.plista.kornakapi.web.MissingParameterException missingParameterException71 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException73 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException71.addSuppressed((java.lang.Throwable) missingParameterException73);
        invalidParameterException69.addSuppressed((java.lang.Throwable) missingParameterException73);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException76 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException69);
        org.plista.kornakapi.web.MissingParameterException missingParameterException80 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException81 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException80);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException82 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException80);
        invalidParameterException76.addSuppressed((java.lang.Throwable) missingParameterException80);
        org.plista.kornakapi.web.MissingParameterException missingParameterException88 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException89 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException88);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException90 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException88);
        java.lang.Throwable[] throwableArray91 = missingParameterException88.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException92 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException88);
        missingParameterException80.addSuppressed((java.lang.Throwable) missingParameterException88);
        invalidParameterException62.addSuppressed((java.lang.Throwable) missingParameterException80);
        missingParameterException52.addSuppressed((java.lang.Throwable) missingParameterException80);
        missingParameterException49.addSuppressed((java.lang.Throwable) missingParameterException80);
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet32.log("MutablePreference{userID=0, itemID=100, value=-1.0}", (java.lang.Throwable) missingParameterException49);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(servletConfig36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(servletConfig45);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray91);
    }

    @Test
    public void test38231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38231");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("userID", (long) '#');
        java.lang.String str17 = mutableCandidate0.getLabel();
        long long18 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=35, itemID=-1, value=10.0}", 32L);
        long long22 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "itemID" + "'", str13, "itemID");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "userID" + "'", str17, "userID");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 35L + "'", long18 == 35L);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 32L + "'", long22 == 32L);
    }

    @Test
    public void test38232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38232");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = null;
        batchDeleteCandidatesServlet0.init(servletConfig3);
        batchDeleteCandidatesServlet0.destroy();
        java.lang.String str6 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig7 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet9 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet9.init();
        setPreferenceServlet9.init();
        setPreferenceServlet9.destroy();
        javax.servlet.ServletConfig servletConfig13 = setPreferenceServlet9.getServletConfig();
        java.lang.String str14 = setPreferenceServlet9.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str17 = batchDeleteCandidatesServlet16.getServletInfo();
        java.lang.String str18 = batchDeleteCandidatesServlet16.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet19 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet20 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet20.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        setPreferenceServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet24 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet19.init((javax.servlet.ServletConfig) recommendServlet24);
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) setPreferenceServlet19);
        batchDeleteCandidatesServlet16.destroy();
        batchDeleteCandidatesServlet15.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet29 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet30 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet31 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet30.init((javax.servlet.ServletConfig) batchSetPreferencesServlet31);
        batchDeleteCandidatesServlet29.init((javax.servlet.ServletConfig) batchSetPreferencesServlet31);
        javax.servlet.ServletConfig servletConfig34 = batchSetPreferencesServlet31.getServletConfig();
        batchSetPreferencesServlet31.init();
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) batchSetPreferencesServlet31);
        javax.servlet.ServletConfig servletConfig37 = batchDeleteCandidatesServlet16.getServletConfig();
        setPreferenceServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        java.lang.String str40 = batchDeleteCandidatesServlet16.getServletInfo();
        javax.servlet.ServletConfig servletConfig41 = batchDeleteCandidatesServlet16.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet42 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet42.destroy();
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) setPreferenceServlet42);
        setPreferenceServlet42.init();
        setPreferenceServlet42.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertNull(servletConfig13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(servletConfig34);
        org.junit.Assert.assertNotNull(servletConfig37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNotNull(servletConfig41);
    }

    @Test
    public void test38233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38233");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        boolean boolean6 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig3);
        double double8 = factorizationbasedRecommenderConfig3.getAlpha();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        double double10 = factorizationbasedRecommenderConfig3.getAlpha();
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(true);
        java.lang.String str13 = factorizationbasedRecommenderConfig3.getName();
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig3.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(false);
        int int20 = factorizationbasedRecommenderConfig3.getNumberOfIterations();
        double double21 = factorizationbasedRecommenderConfig3.getAlpha();
        factorizationbasedRecommenderConfig3.setAlpha(0.0d);
        factorizationbasedRecommenderConfig3.setName("MutablePreference{userID=1, itemID=10000, value=97.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test38234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38234");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        java.lang.String str12 = mutableCandidate0.getLabel();
        java.lang.String str13 = mutableCandidate0.getLabel();
        java.lang.String str14 = mutableCandidate0.getLabel();
        long long15 = mutableCandidate0.getItemID();
        java.lang.String str16 = mutableCandidate0.getLabel();
        java.lang.String str17 = mutableCandidate0.getLabel();
        java.lang.String str18 = mutableCandidate0.getLabel();
        long long19 = mutableCandidate0.getItemID();
        long long20 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=100, itemID=-1, value=52.0}", 0L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str14, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 35L + "'", long15 == 35L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str16, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str17, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str18, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 35L + "'", long19 == 35L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 35L + "'", long20 == 35L);
    }

    @Test
    public void test38235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38235");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        batchDeleteCandidatesServlet14.destroy();
        javax.servlet.ServletConfig servletConfig17 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init(servletConfig17);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str20 = recommendServlet19.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) recommendServlet19);
        javax.servlet.ServletConfig servletConfig22 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str25 = batchDeleteCandidatesServlet0.getServletInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration26 = batchDeleteCandidatesServlet0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(servletConfig22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test38236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38236");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) -1, (long) (byte) 10, (float) (short) 10);
        long long7 = mutablePreference0.getUserID();
        java.lang.String str8 = mutablePreference0.toString();
        long long9 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) 10L);
        mutablePreference0.set(0L, (long) 10000, (float) (short) 100);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str8, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
    }

    @Test
    public void test38237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38237");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("value");
        java.lang.String str17 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 0);
        double double22 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) 97L);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((-1));
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer27 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int28 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double29 = factorizationbasedRecommenderConfig0.getAlpha();
        int int30 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "value" + "'", str17, "value");
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 97.0d + "'", double29 == 97.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test38238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38238");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener3);
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components10 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components10.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components10.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = null; // flaky: components10.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler14 = null; // flaky: components10.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener15 = null; // flaky: components10.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration16 = null; // flaky: components10.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener17 = null; // flaky: components10.preferenceChangeListener();
        delegatingPreferenceChangeListener3.addDelegate(preferenceChangeListener17);
// flaky:         delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener22 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener22);
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener28 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener28);
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener28);
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
// flaky:         delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener38 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener40 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener40);
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener45 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener45);
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener35);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener52 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener54 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener52.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener54);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener57 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener57.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener59 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener59.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener59.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener57.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener59);
        delegatingPreferenceChangeListener59.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler64 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener67 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler64, "label", (int) ' ');
        delegatingPreferenceChangeListener59.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener67);
        delegatingPreferenceChangeListener52.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener59);
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components71 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration72 = null; // flaky: components71.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler73 = null; // flaky: components71.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler74 = null; // flaky: components71.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration75 = null; // flaky: components71.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration76 = null; // flaky: components71.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage77 = null; // flaky: components71.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener78 = null; // flaky: components71.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage79 = null; // flaky: components71.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener80 = null; // flaky: components71.preferenceChangeListener();
        delegatingPreferenceChangeListener52.addDelegate(preferenceChangeListener80);
        delegatingPreferenceChangeListener35.addDelegate(preferenceChangeListener80);
// flaky:         delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler84 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener87 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler84, "org.plista.kornakapi.web.MissingParameterException: itemID", 100);
        inMemoryPreferenceChangeListener87.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener87);
// flaky:         delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
// flaky:         org.junit.Assert.assertNotNull(components10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(trainingScheduler13);
        org.junit.Assert.assertNull(trainingScheduler14);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener15);
// flaky:         org.junit.Assert.assertNotNull(configuration16);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener17);
// flaky:         org.junit.Assert.assertNotNull(components71);
// flaky:         org.junit.Assert.assertNotNull(configuration72);
        org.junit.Assert.assertNull(trainingScheduler73);
        org.junit.Assert.assertNull(trainingScheduler74);
// flaky:         org.junit.Assert.assertNotNull(configuration75);
// flaky:         org.junit.Assert.assertNotNull(configuration76);
        org.junit.Assert.assertNull(storage77);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener78);
        org.junit.Assert.assertNull(storage79);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener80);
    }

    @Test
    public void test38239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38239");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        java.lang.String str4 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        long long9 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=10000, value=-1.0}", (long) '4');
        long long13 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str8, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 10000L + "'", long9 == 10000L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 52L + "'", long13 == 52L);
    }

    @Test
    public void test38240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38240");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "", 97);
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
    }

    @Test
    public void test38241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38241");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration4 = new org.plista.kornakapi.core.config.Configuration();
        configuration4.setNumProcessorsForTraining((int) (short) 100);
        configuration4.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig9 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str10 = itembasedRecommenderConfig9.getRetrainCronExpression();
        int int11 = itembasedRecommenderConfig9.getRetrainAfterPreferenceChanges();
        java.lang.String str12 = itembasedRecommenderConfig9.getSimilarityClass();
        itembasedRecommenderConfig9.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig9.setRetrainCronExpression("value");
        int int17 = itembasedRecommenderConfig9.getRetrainAfterPreferenceChanges();
        configuration4.addItembasedRecommender(itembasedRecommenderConfig9);
        itembasedRecommenderConfig9.setSimilarityClass("itemIDs");
        int int21 = itembasedRecommenderConfig9.getSimilarItemsPerItem();
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig9);
        java.lang.String str23 = itembasedRecommenderConfig9.getName();
        int int24 = itembasedRecommenderConfig9.getSimilarItemsPerItem();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test38242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38242");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        javax.servlet.ServletConfig servletConfig7 = deleteCandidateServlet2.getServletConfig();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str9 = recommendServlet8.getServletInfo();
        javax.servlet.ServletConfig servletConfig10 = recommendServlet8.getServletConfig();
        javax.servlet.ServletConfig servletConfig11 = recommendServlet8.getServletConfig();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet12 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet12.destroy();
        trainServlet12.destroy();
        recommendServlet8.init((javax.servlet.ServletConfig) trainServlet12);
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) trainServlet12);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet17 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet19 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        setPreferenceServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        java.lang.String str22 = setPreferenceServlet17.getServletInfo();
        java.lang.String str23 = setPreferenceServlet17.getServletInfo();
        javax.servlet.ServletConfig servletConfig24 = setPreferenceServlet17.getServletConfig();
        trainServlet12.init((javax.servlet.ServletConfig) setPreferenceServlet17);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet26 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str27 = batchDeleteCandidatesServlet26.getServletInfo();
        java.lang.String str28 = batchDeleteCandidatesServlet26.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet29 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet30 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet31 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet30.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet31);
        setPreferenceServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet31);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet34 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet29.init((javax.servlet.ServletConfig) recommendServlet34);
        batchDeleteCandidatesServlet26.init((javax.servlet.ServletConfig) setPreferenceServlet29);
        batchDeleteCandidatesServlet26.destroy();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet38 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet39 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet40 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet39.init((javax.servlet.ServletConfig) batchSetPreferencesServlet40);
        javax.servlet.ServletConfig servletConfig42 = batchSetPreferencesServlet39.getServletConfig();
        addCandidateServlet38.init((javax.servlet.ServletConfig) batchSetPreferencesServlet39);
        batchDeleteCandidatesServlet26.init((javax.servlet.ServletConfig) addCandidateServlet38);
        trainServlet12.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet26);
        // The following exception was thrown during execution in test generation
        try {
            trainServlet12.log("MutablePreference{userID=35, itemID=10, value=52.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig10);
        org.junit.Assert.assertNull(servletConfig11);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(servletConfig24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(servletConfig42);
    }

    @Test
    public void test38243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38243");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         configuration4.setNumProcessorsForTraining(0);
        org.plista.kornakapi.core.config.Configuration configuration7 = new org.plista.kornakapi.core.config.Configuration();
        configuration7.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str10 = configuration7.getModelDirectory();
        configuration7.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        double double15 = factorizationbasedRecommenderConfig13.getLambda();
        boolean boolean16 = factorizationbasedRecommenderConfig13.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(true);
        double double19 = factorizationbasedRecommenderConfig13.getLambda();
        configuration7.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        factorizationbasedRecommenderConfig13.setRetrainCronExpression("value");
        factorizationbasedRecommenderConfig13.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: ");
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        int int26 = factorizationbasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer27 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig13);
        int int28 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        java.lang.String str29 = factorizationbasedRecommenderConfig13.getName();
        int int30 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test38244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38244");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
// flaky:         configuration5.setNumProcessorsForTraining(0);
        org.plista.kornakapi.web.Components components18 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration19 = null; // flaky: components18.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components18.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler21 = null; // flaky: components18.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler22 = null; // flaky: components18.scheduler();
        org.plista.kornakapi.core.storage.Storage storage23 = null; // flaky: components18.storage();
        org.plista.kornakapi.core.config.Configuration configuration24 = null; // flaky: components18.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage25 = null; // flaky: components18.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler26 = null; // flaky: components18.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration27 = null; // flaky: components18.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration28 = null; // flaky: components18.getConfiguration();
        int int29 = 0; // flaky: configuration28.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig30 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double31 = factorizationbasedRecommenderConfig30.getAlpha();
        double double32 = factorizationbasedRecommenderConfig30.getLambda();
        int int33 = factorizationbasedRecommenderConfig30.getNumberOfFeatures();
        factorizationbasedRecommenderConfig30.setLambda((double) 1);
        double double36 = factorizationbasedRecommenderConfig30.getAlpha();
        double double37 = factorizationbasedRecommenderConfig30.getLambda();
        int int38 = factorizationbasedRecommenderConfig30.getNumberOfFeatures();
        factorizationbasedRecommenderConfig30.setRetrainAfterPreferenceChanges((int) (short) 100);
        factorizationbasedRecommenderConfig30.setLambda((double) 97L);
// flaky:         configuration28.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig30);
        boolean boolean44 = factorizationbasedRecommenderConfig30.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig30.setLambda((double) ' ');
        factorizationbasedRecommenderConfig30.setAlpha((double) 'a');
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig30);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertNotNull(components18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
        org.junit.Assert.assertNull(trainingScheduler21);
        org.junit.Assert.assertNull(trainingScheduler22);
        org.junit.Assert.assertNull(storage23);
// flaky:         org.junit.Assert.assertNotNull(configuration24);
        org.junit.Assert.assertNull(storage25);
        org.junit.Assert.assertNull(trainingScheduler26);
// flaky:         org.junit.Assert.assertNotNull(configuration27);
// flaky:         org.junit.Assert.assertNotNull(configuration28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 1.0d + "'", double37 == 1.0d);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test38245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38245");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration3 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
// flaky:         org.junit.Assert.assertNotNull(configuration3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
    }

    @Test
    public void test38246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38246");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setJdbcDriverClass("batchSize");
        java.lang.String str12 = storageConfiguration4.getPassword();
        java.lang.String str13 = storageConfiguration4.getJdbcUrl();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration15.getPassword();
        java.lang.String str20 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("hi!");
        storageConfiguration15.setJdbcDriverClass("file");
// flaky:         configuration2.setStorageConfiguration(storageConfiguration15);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = null; // flaky: configuration2.getStorageConfiguration();
// flaky:         configuration2.setNumProcessorsForTraining(52);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration26);
    }

    @Test
    public void test38247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38247");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        java.lang.String str2 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (long) (short) 1);
        long long6 = mutableCandidate0.getItemID();
        java.lang.String str7 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=97, itemID=100, value=10.0}", (long) '#');
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str7, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38248");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        java.lang.String str16 = null; // flaky: configuration5.getModelDirectory();
// flaky:         configuration5.setNumProcessorsForTraining((int) (short) -1);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList19 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str21 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str24 = storageConfiguration20.getJdbcUrl();
        java.lang.String str25 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str26 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str27 = storageConfiguration20.getPassword();
        java.lang.String str28 = storageConfiguration20.getUsername();
        java.lang.String str29 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setJdbcDriverClass("itemID");
        storageConfiguration20.setJdbcUrl("recommender");
        java.lang.String str34 = storageConfiguration20.getJdbcUrl();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration20);
        storageConfiguration20.setUsername("org.plista.kornakapi.web.MissingParameterException: userID");
        java.lang.String str38 = storageConfiguration20.getUsername();
        storageConfiguration20.setUsername("MutablePreference{userID=10000, itemID=0, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "itemID" + "'", str16, "itemID");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str28, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "recommender" + "'", str34, "recommender");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: userID" + "'", str38, "org.plista.kornakapi.web.MissingParameterException: userID");
    }

    @Test
    public void test38249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38249");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        java.lang.String str2 = addCandidateServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet3.init();
        setPreferenceServlet3.destroy();
        javax.servlet.ServletConfig servletConfig6 = setPreferenceServlet3.getServletConfig();
        addCandidateServlet0.init(servletConfig6);
        java.lang.String str8 = addCandidateServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str10 = batchDeleteCandidatesServlet9.getServletInfo();
        java.lang.String str11 = batchDeleteCandidatesServlet9.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet12 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet13 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet14);
        setPreferenceServlet12.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet14);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet17 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet12.init((javax.servlet.ServletConfig) recommendServlet17);
        batchDeleteCandidatesServlet9.init((javax.servlet.ServletConfig) setPreferenceServlet12);
        batchDeleteCandidatesServlet9.destroy();
        batchDeleteCandidatesServlet9.init();
        batchDeleteCandidatesServlet9.init();
        batchDeleteCandidatesServlet9.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet24 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig27 = batchSetPreferencesServlet25.getServletConfig();
        batchDeleteCandidatesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        batchDeleteCandidatesServlet9.init();
        batchDeleteCandidatesServlet9.init();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet31 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet32 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str33 = batchDeleteCandidatesServlet32.getServletInfo();
        java.lang.String str34 = batchDeleteCandidatesServlet32.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet35 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet36 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet37 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet37);
        setPreferenceServlet35.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet37);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet40 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet35.init((javax.servlet.ServletConfig) recommendServlet40);
        batchDeleteCandidatesServlet32.init((javax.servlet.ServletConfig) setPreferenceServlet35);
        batchDeleteCandidatesServlet32.destroy();
        batchDeleteCandidatesServlet31.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet32);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet45 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str46 = batchDeleteCandidatesServlet45.getServletInfo();
        java.lang.String str47 = batchDeleteCandidatesServlet45.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet48 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet49 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet50 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet49.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet50);
        setPreferenceServlet48.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet50);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet53 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet48.init((javax.servlet.ServletConfig) recommendServlet53);
        batchDeleteCandidatesServlet45.init((javax.servlet.ServletConfig) setPreferenceServlet48);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet56 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet57 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet58 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet57.init((javax.servlet.ServletConfig) batchSetPreferencesServlet58);
        javax.servlet.ServletConfig servletConfig60 = batchSetPreferencesServlet57.getServletConfig();
        addCandidateServlet56.init((javax.servlet.ServletConfig) batchSetPreferencesServlet57);
        javax.servlet.ServletConfig servletConfig62 = addCandidateServlet56.getServletConfig();
        batchDeleteCandidatesServlet45.init((javax.servlet.ServletConfig) addCandidateServlet56);
        javax.servlet.ServletConfig servletConfig64 = batchDeleteCandidatesServlet45.getServletConfig();
        batchDeleteCandidatesServlet31.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet45);
        javax.servlet.ServletConfig servletConfig66 = batchDeleteCandidatesServlet45.getServletConfig();
        batchDeleteCandidatesServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet45);
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet45);
        // The following exception was thrown during execution in test generation
        try {
            addCandidateServlet0.log("MutablePreference{userID=32, itemID=10, value=10.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNotNull(servletConfig60);
        org.junit.Assert.assertNotNull(servletConfig62);
        org.junit.Assert.assertNotNull(servletConfig64);
        org.junit.Assert.assertNotNull(servletConfig66);
    }

    @Test
    public void test38250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38250");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        int int5 = factorizationbasedRecommenderConfig3.getNumberOfFeatures();
        boolean boolean6 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        int int7 = factorizationbasedRecommenderConfig3.getNumberOfIterations();
        factorizationbasedRecommenderConfig3.setAlpha((double) (-1.0f));
        factorizationbasedRecommenderConfig3.setRetrainAfterPreferenceChanges((int) (short) -1);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        factorizationbasedRecommenderConfig3.setNumberOfFeatures((int) 'a');
        double double15 = factorizationbasedRecommenderConfig3.getLambda();
        double double16 = factorizationbasedRecommenderConfig3.getLambda();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test38251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38251");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
// flaky:         configuration2.setModelDirectory("itemID");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components7 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components7.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components7.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig13 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig13.setSimilarityClass("");
        java.lang.String str16 = itembasedRecommenderConfig13.getName();
        java.lang.String str17 = itembasedRecommenderConfig13.getSimilarityClass();
        itembasedRecommenderConfig13.setName("");
        java.lang.String str20 = itembasedRecommenderConfig13.getSimilarityClass();
// flaky:         configuration12.addItembasedRecommender(itembasedRecommenderConfig13);
        org.plista.kornakapi.web.Components components22 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration23 = null; // flaky: components22.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler24 = null; // flaky: components22.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler25 = null; // flaky: components22.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration26 = null; // flaky: components22.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration27 = null; // flaky: components22.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig28 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig28.setSimilarityClass("");
        java.lang.String str31 = itembasedRecommenderConfig28.getName();
        java.lang.String str32 = itembasedRecommenderConfig28.getSimilarityClass();
        itembasedRecommenderConfig28.setName("");
        java.lang.String str35 = itembasedRecommenderConfig28.getSimilarityClass();
// flaky:         configuration27.addItembasedRecommender(itembasedRecommenderConfig28);
        itembasedRecommenderConfig28.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration12.addItembasedRecommender(itembasedRecommenderConfig28);
        itembasedRecommenderConfig28.setSimilarItemsPerItem(1);
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig28);
// flaky:         configuration2.setNumProcessorsForTraining((int) (short) 10);
        int int45 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList46 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(trainingScheduler10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
// flaky:         org.junit.Assert.assertNotNull(components22);
// flaky:         org.junit.Assert.assertNotNull(configuration23);
        org.junit.Assert.assertNull(trainingScheduler24);
        org.junit.Assert.assertNull(trainingScheduler25);
// flaky:         org.junit.Assert.assertNotNull(configuration26);
// flaky:         org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList46);
    }

    @Test
    public void test38252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38252");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig0.setAlpha((double) ' ');
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        int int17 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 1);
        int int20 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int21 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str22 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str22, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38253");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException4.addSuppressed((java.lang.Throwable) missingParameterException6);
        java.lang.Throwable[] throwableArray8 = missingParameterException6.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException9);
        java.lang.Throwable[] throwableArray11 = invalidParameterException9.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=52, itemID=100, value=0.0}", (java.lang.Throwable) invalidParameterException9);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test38254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38254");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
// flaky:         configuration2.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        int int10 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig7.setNumberOfFeatures((int) (byte) 1);
        boolean boolean15 = factorizationbasedRecommenderConfig7.isUsesImplicitFeedback();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig17 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double18 = factorizationbasedRecommenderConfig17.getAlpha();
        int int19 = factorizationbasedRecommenderConfig17.getNumberOfFeatures();
        factorizationbasedRecommenderConfig17.setUsesImplicitFeedback(true);
        double double22 = factorizationbasedRecommenderConfig17.getLambda();
        factorizationbasedRecommenderConfig17.setNumberOfIterations((int) (byte) 100);
        double double25 = factorizationbasedRecommenderConfig17.getLambda();
        factorizationbasedRecommenderConfig17.setUsesImplicitFeedback(false);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig17);
// flaky:         configuration2.setNumProcessorsForTraining((int) '4');
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
    }

    @Test
    public void test38255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38255");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) (byte) 100);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore(32L, (double) 1.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair12 = null;
        double double14 = filteringLongPairRescorer11.rescore(longPair12, 10000.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10000.0d + "'", double14 == 10000.0d);
    }

    @Test
    public void test38256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38256");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '4');
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) -1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test38257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38257");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setRetrainAfterPreferenceChanges((int) (short) 100);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList12 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        double double15 = factorizationbasedRecommenderConfig13.getLambda();
        int int16 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(true);
        double double19 = factorizationbasedRecommenderConfig13.getAlpha();
        java.lang.String str20 = factorizationbasedRecommenderConfig13.getRetrainCronExpression();
        int int21 = factorizationbasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        boolean boolean22 = factorizationbasedRecommenderConfig13.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig13.setLambda((double) 1);
        int int25 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        double double26 = factorizationbasedRecommenderConfig13.getLambda();
        int int27 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        double double29 = factorizationbasedRecommenderConfig13.getLambda();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 1.0d + "'", double26 == 1.0d);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 1.0d + "'", double29 == 1.0d);
    }

    @Test
    public void test38258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38258");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str4 = itembasedRecommenderConfig3.getRetrainCronExpression();
        int int5 = itembasedRecommenderConfig3.getRetrainAfterPreferenceChanges();
        java.lang.String str6 = itembasedRecommenderConfig3.getSimilarityClass();
        itembasedRecommenderConfig3.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig3.setSimilarityClass("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10000);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=10.0}");
        itembasedRecommenderConfig3.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        java.lang.String str20 = itembasedRecommenderConfig3.getName();
        java.lang.String str21 = itembasedRecommenderConfig3.getName();
        java.lang.String str22 = itembasedRecommenderConfig3.getName();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str20, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str21, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str22, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
    }

    @Test
    public void test38259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38259");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=97, itemID=52, value=-1.0}");
    }

    @Test
    public void test38260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38260");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 10);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) 10, 100.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double15 = fixedCandidatesIDRescorer1.rescore(35L, (double) (byte) 10);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 100.0d + "'", double11 == 100.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10.0d + "'", double15 == 10.0d);
    }

    @Test
    public void test38261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38261");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig6.getSimilarityClass();
        int int12 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) (byte) 1);
        java.lang.String str15 = itembasedRecommenderConfig6.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        itembasedRecommenderConfig6.setSimilarItemsPerItem(35);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test38262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38262");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getName();
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("");
        java.lang.String str7 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainCronExpression("batchSize");
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(100);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        int int13 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int14 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 100 + "'", int13 == 100);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test38263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38263");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        boolean boolean13 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int14 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(52);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) '4');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "userID" + "'", str15, "userID");
    }

    @Test
    public void test38264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38264");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage13 = null; // flaky: components0.storage();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener10);
        org.junit.Assert.assertNull(storage11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(storage13);
    }

    @Test
    public void test38265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38265");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException15 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException15);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException15);
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException19.addSuppressed((java.lang.Throwable) missingParameterException21);
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException17);
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException28);
        invalidParameterException24.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException36 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException36);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException36);
        java.lang.Throwable[] throwableArray39 = missingParameterException36.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException36);
        missingParameterException28.addSuppressed((java.lang.Throwable) missingParameterException36);
        invalidParameterException10.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) invalidParameterException10);
        java.lang.Throwable[] throwableArray44 = invalidParameterException10.getSuppressed();
        java.lang.Throwable[] throwableArray45 = invalidParameterException10.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) invalidParameterException10);
        org.plista.kornakapi.web.MissingParameterException missingParameterException49 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) missingParameterException49);
        invalidParameterException46.addSuppressed((java.lang.Throwable) invalidParameterException50);
        java.lang.Throwable[] throwableArray52 = invalidParameterException50.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException53 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=97, value=10.0}", (java.lang.Throwable) invalidParameterException50);
        java.lang.Throwable[] throwableArray54 = invalidParameterException50.getSuppressed();
        java.lang.Throwable[] throwableArray55 = invalidParameterException50.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray55);
    }

    @Test
    public void test38266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38266");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=0, value=1.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        int int6 = factorizationbasedRecommenderConfig3.getNumberOfFeatures();
        java.lang.String str7 = factorizationbasedRecommenderConfig3.getRetrainCronExpression();
        factorizationbasedRecommenderConfig3.setNumberOfIterations((int) (short) 100);
        int int10 = factorizationbasedRecommenderConfig3.getNumberOfIterations();
        factorizationbasedRecommenderConfig3.setAlpha((double) (short) 100);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        configuration0.setNumProcessorsForTraining((int) (byte) -1);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = null;
        configuration0.setStorageConfiguration(storageConfiguration16);
        configuration0.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList20 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration21 = null;
        configuration0.setStorageConfiguration(storageConfiguration21);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig23 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double24 = factorizationbasedRecommenderConfig23.getAlpha();
        double double25 = factorizationbasedRecommenderConfig23.getLambda();
        int int26 = factorizationbasedRecommenderConfig23.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer27 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig23);
        int int28 = factorizationbasedRecommenderConfig23.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer29 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig23);
        factorizationbasedRecommenderConfig23.setLambda((double) (short) 100);
        java.lang.String str32 = factorizationbasedRecommenderConfig23.getRetrainCronExpression();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig23);
        configuration0.setNumProcessorsForTraining(97);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList20);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test38267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38267");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        float float8 = mutablePreference0.getValue();
        mutablePreference0.set(10L, (long) 97, (float) (byte) 100);
        java.lang.String str13 = mutablePreference0.toString();
        long long14 = mutablePreference0.getItemID();
        long long15 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=10, itemID=97, value=100.0}" + "'", str13, "MutablePreference{userID=10, itemID=97, value=100.0}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 97L + "'", long14 == 97L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10L + "'", long15 == 10L);
    }

    @Test
    public void test38268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38268");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
// flaky:         configuration1.setModelDirectory("hi!");
        java.lang.String str14 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig15 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig15.setSimilarityClass("");
        java.lang.String str18 = itembasedRecommenderConfig15.getSimilarityClass();
        java.lang.String str19 = itembasedRecommenderConfig15.getSimilarityClass();
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig15);
        itembasedRecommenderConfig15.setRetrainAfterPreferenceChanges(10);
        int int23 = itembasedRecommenderConfig15.getSimilarItemsPerItem();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test38269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38269");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: howMany");
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException12.addSuppressed((java.lang.Throwable) missingParameterException14);
        invalidParameterException10.addSuppressed((java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException10);
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException21);
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.MissingParameterException missingParameterException27 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException28 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException27);
        missingParameterException21.addSuppressed((java.lang.Throwable) invalidParameterException28);
        java.lang.Throwable[] throwableArray30 = missingParameterException21.getSuppressed();
        missingParameterException3.addSuppressed((java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.MissingParameterException missingParameterException36 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException36);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException36);
        java.lang.Throwable[] throwableArray39 = missingParameterException36.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException36);
        missingParameterException21.addSuppressed((java.lang.Throwable) invalidParameterException40);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException42 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException40);
        org.plista.kornakapi.web.MissingParameterException missingParameterException48 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException48);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException48);
        org.plista.kornakapi.web.MissingParameterException missingParameterException52 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException54 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException52.addSuppressed((java.lang.Throwable) missingParameterException54);
        invalidParameterException50.addSuppressed((java.lang.Throwable) missingParameterException54);
        java.lang.Throwable[] throwableArray57 = invalidParameterException50.getSuppressed();
        java.lang.Throwable[] throwableArray58 = invalidParameterException50.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException59 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) invalidParameterException50);
        org.plista.kornakapi.web.MissingParameterException missingParameterException66 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException67 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException66);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException68 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException66);
        java.lang.Throwable[] throwableArray69 = missingParameterException66.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException70 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException66);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException71 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException70);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException72 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=10, value=10.0}", (java.lang.Throwable) invalidParameterException71);
        invalidParameterException59.addSuppressed((java.lang.Throwable) invalidParameterException72);
        java.lang.Throwable[] throwableArray74 = invalidParameterException72.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException75 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=32, itemID=1, value=-1.0}", (java.lang.Throwable) invalidParameterException72);
        invalidParameterException42.addSuppressed((java.lang.Throwable) invalidParameterException72);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException77 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=32, itemID=1, value=-1.0}", (java.lang.Throwable) invalidParameterException72);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray74);
    }

    @Test
    public void test38270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38270");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        java.lang.String str13 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str15 = itembasedRecommenderConfig14.getSimilarityClass();
        java.lang.String str16 = itembasedRecommenderConfig14.getSimilarityClass();
        int int17 = itembasedRecommenderConfig14.getRetrainAfterPreferenceChanges();
        int int18 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig14);
        org.plista.kornakapi.core.config.Configuration configuration20 = new org.plista.kornakapi.core.config.Configuration();
        configuration20.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str23 = configuration20.getModelDirectory();
        configuration20.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = configuration20.getStorageConfiguration();
        java.lang.String str27 = configuration20.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig28 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str29 = itembasedRecommenderConfig28.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer30 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig28);
        itembasedRecommenderConfig28.setSimilarityClass("recommender");
        java.lang.String str33 = itembasedRecommenderConfig28.getSimilarityClass();
        configuration20.addItembasedRecommender(itembasedRecommenderConfig28);
        configuration20.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig37 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str38 = itembasedRecommenderConfig37.getSimilarityClass();
        int int39 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
        int int40 = itembasedRecommenderConfig37.getRetrainAfterPreferenceChanges();
        int int41 = itembasedRecommenderConfig37.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig37);
        int int43 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
        configuration20.addItembasedRecommender(itembasedRecommenderConfig37);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig37);
        java.lang.String str46 = configuration0.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList47 = configuration0.getItembasedRecommenders();
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(storageConfiguration26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "recommender" + "'", str33, "recommender");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList47);
    }

    @Test
    public void test38271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38271");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig7.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig7);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        java.lang.String str19 = itembasedRecommenderConfig7.getRetrainCronExpression();
        itembasedRecommenderConfig7.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
        java.lang.String str22 = itembasedRecommenderConfig7.getSimilarityClass();
        int int23 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig7.setSimilarItemsPerItem(10000);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test38272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38272");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        int int4 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration7.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration7);
        int int18 = configuration0.getNumProcessorsForTraining();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str21 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig22 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double23 = factorizationbasedRecommenderConfig22.getAlpha();
        int int24 = factorizationbasedRecommenderConfig22.getNumberOfFeatures();
        boolean boolean25 = factorizationbasedRecommenderConfig22.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer26 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig22);
        factorizationbasedRecommenderConfig22.setUsesImplicitFeedback(true);
        int int29 = factorizationbasedRecommenderConfig22.getNumberOfIterations();
        factorizationbasedRecommenderConfig22.setRetrainAfterPreferenceChanges((int) (short) 100);
        factorizationbasedRecommenderConfig22.setUsesImplicitFeedback(false);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig22);
        double double35 = factorizationbasedRecommenderConfig22.getAlpha();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str21, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test38273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38273");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("recommender");
        storageConfiguration0.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str10 = storageConfiguration0.getPassword();
        java.lang.String str11 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: label");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=35.0}");
        storageConfiguration0.setPassword("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str10, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test38274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38274");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setJdbcDriverClass("batchSize");
        java.lang.String str12 = storageConfiguration4.getPassword();
        java.lang.String str13 = storageConfiguration4.getJdbcUrl();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = null; // flaky: configuration2.getStorageConfiguration();
        int int16 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig17 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double18 = factorizationbasedRecommenderConfig17.getAlpha();
        int int19 = factorizationbasedRecommenderConfig17.getNumberOfFeatures();
        factorizationbasedRecommenderConfig17.setUsesImplicitFeedback(true);
        int int22 = factorizationbasedRecommenderConfig17.getNumberOfIterations();
        double double23 = factorizationbasedRecommenderConfig17.getLambda();
        int int24 = factorizationbasedRecommenderConfig17.getNumberOfFeatures();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig17);
// flaky:         configuration2.setModelDirectory("MutablePreference{userID=52, itemID=-1, value=32.0}");
        int int28 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        int int29 = 0; // flaky: configuration2.getNumProcessorsForTraining();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "hi!" + "'", str3, "hi!");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration15);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
    }

    @Test
    public void test38275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38275");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        java.lang.String str2 = mutablePreference0.toString();
        float float3 = mutablePreference0.getValue();
        float float4 = mutablePreference0.getValue();
        mutablePreference0.set((long) (byte) 10, (long) ' ', (float) 35L);
        mutablePreference0.set(100L, (long) (short) 100, 100.0f);
        mutablePreference0.setValue((float) 100L);
        long long15 = mutablePreference0.getUserID();
        java.lang.String str16 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str2, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 0.0f + "'", float3 == 0.0f);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=100, itemID=100, value=100.0}" + "'", str16, "MutablePreference{userID=100, itemID=100, value=100.0}");
    }

    @Test
    public void test38276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38276");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) -1);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) -1);
        double double15 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test38277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38277");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        int int4 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        int int5 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str10 = storageConfiguration6.getJdbcUrl();
        java.lang.String str11 = storageConfiguration6.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration6.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration6.getPassword();
        java.lang.String str14 = storageConfiguration6.getUsername();
        java.lang.String str15 = storageConfiguration6.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration6.getJdbcDriverClass();
        java.lang.String str17 = storageConfiguration6.getJdbcDriverClass();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration6);
        storageConfiguration6.setJdbcDriverClass("MutablePreference{userID=100, itemID=0, value=0.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=52, itemID=-1, value=32.0}" + "'", str3, "MutablePreference{userID=52, itemID=-1, value=32.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str14, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test38278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38278");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null;
        configuration0.setStorageConfiguration(storageConfiguration5);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = configuration0.getFactorizationbasedRecommenders();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.web.Components components10 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components10.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration11.getItembasedRecommenders();
        java.lang.String str13 = null; // flaky: configuration11.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        double double16 = factorizationbasedRecommenderConfig14.getLambda();
        int int17 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        factorizationbasedRecommenderConfig14.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig14);
// flaky:         configuration11.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        boolean boolean22 = factorizationbasedRecommenderConfig14.isUsesImplicitFeedback();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        factorizationbasedRecommenderConfig14.setRetrainCronExpression("MutablePreference{userID=35, itemID=10000, value=52.0}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertNotNull(components10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
// flaky:         org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=52, itemID=-1, value=32.0}" + "'", str13, "MutablePreference{userID=52, itemID=-1, value=32.0}");
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test38279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38279");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.web.Components components5 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components5.storage();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components5.storage();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components5.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration10.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str13 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str16 = storageConfiguration12.getJdbcUrl();
        java.lang.String str17 = storageConfiguration12.getJdbcDriverClass();
        java.lang.String str18 = storageConfiguration12.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration12.getPassword();
// flaky:         configuration10.setStorageConfiguration(storageConfiguration12);
        java.lang.String str21 = null; // flaky: configuration10.getModelDirectory();
        int int22 = 0; // flaky: configuration10.getNumProcessorsForTraining();
// flaky:         configuration10.setModelDirectory("label");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig25 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double26 = factorizationbasedRecommenderConfig25.getAlpha();
        double double27 = factorizationbasedRecommenderConfig25.getLambda();
        int int28 = factorizationbasedRecommenderConfig25.getNumberOfFeatures();
        factorizationbasedRecommenderConfig25.setUsesImplicitFeedback(true);
        double double31 = factorizationbasedRecommenderConfig25.getAlpha();
        java.lang.String str32 = factorizationbasedRecommenderConfig25.getRetrainCronExpression();
        java.lang.String str33 = factorizationbasedRecommenderConfig25.getRetrainCronExpression();
        factorizationbasedRecommenderConfig25.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig25.setNumberOfIterations((int) '4');
        factorizationbasedRecommenderConfig25.setNumberOfIterations((int) (short) 0);
// flaky:         configuration10.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig25);
        double double41 = factorizationbasedRecommenderConfig25.getAlpha();
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig25);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration43 = null; // flaky: configuration4.getStorageConfiguration();
// flaky:         storageConfiguration43.setPassword("MutablePreference{userID=97, itemID=100, value=100.0}");
// flaky:         storageConfiguration43.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(components5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(storage9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "MutablePreference{userID=52, itemID=-1, value=32.0}" + "'", str21, "MutablePreference{userID=52, itemID=-1, value=32.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration43);
    }

    @Test
    public void test38280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38280");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet11 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet13 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet13);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet12.getServletConfig();
        addCandidateServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig17 = addCandidateServlet11.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet11);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet19 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str20 = trainServlet19.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet21 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet21.destroy();
        javax.servlet.ServletConfig servletConfig23 = deleteCandidateServlet21.getServletConfig();
        deleteCandidateServlet21.destroy();
        trainServlet19.init((javax.servlet.ServletConfig) deleteCandidateServlet21);
        addCandidateServlet11.init((javax.servlet.ServletConfig) trainServlet19);
        trainServlet19.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet28 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet29 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet30 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        setPreferenceServlet28.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        trainServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        javax.servlet.ServletConfig servletConfig34 = batchDeleteCandidatesServlet30.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str36 = batchDeleteCandidatesServlet35.getServletInfo();
        batchDeleteCandidatesServlet35.init();
        javax.servlet.ServletConfig servletConfig38 = null;
        batchDeleteCandidatesServlet35.init(servletConfig38);
        javax.servlet.ServletConfig servletConfig40 = batchDeleteCandidatesServlet35.getServletConfig();
        batchDeleteCandidatesServlet35.init();
        javax.servlet.ServletConfig servletConfig42 = batchDeleteCandidatesServlet35.getServletConfig();
        java.lang.String str43 = batchDeleteCandidatesServlet35.getServletInfo();
        batchDeleteCandidatesServlet30.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        javax.servlet.ServletConfig servletConfig45 = batchDeleteCandidatesServlet30.getServletConfig();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(servletConfig15);
        org.junit.Assert.assertNotNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertNull(servletConfig34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(servletConfig40);
        org.junit.Assert.assertNull(servletConfig42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(servletConfig45);
    }

    @Test
    public void test38281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38281");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str2 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcUrl("");
        storageConfiguration0.setUsername("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=35, itemID=35, value=0.0}");
        storageConfiguration0.setUsername("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=97, value=10.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test38282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38282");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        mutablePreference0.setValue((float) '4');
        java.lang.String str5 = mutablePreference0.toString();
        long long6 = mutablePreference0.getItemID();
        mutablePreference0.set((long) 'a', (long) 'a', (float) 52);
        java.lang.String str11 = mutablePreference0.toString();
        long long12 = mutablePreference0.getUserID();
        long long13 = mutablePreference0.getItemID();
        mutablePreference0.setValue(10.0f);
        long long16 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 10);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=52.0}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=97, itemID=97, value=52.0}" + "'", str11, "MutablePreference{userID=97, itemID=97, value=52.0}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 97L + "'", long12 == 97L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 97L + "'", long13 == 97L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
    }

    @Test
    public void test38283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38283");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        java.lang.String str6 = mutablePreference0.toString();
        mutablePreference0.setValue((float) 1);
        mutablePreference0.setValue(10000.0f);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=0.0}");
    }

    @Test
    public void test38284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38284");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
        java.lang.String str11 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str13 = itembasedRecommenderConfig12.getRetrainCronExpression();
        int int14 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        java.lang.String str15 = itembasedRecommenderConfig12.getSimilarityClass();
        itembasedRecommenderConfig12.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig12.setRetrainCronExpression("value");
        int int20 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        int int21 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig12.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str24 = itembasedRecommenderConfig12.getRetrainCronExpression();
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig12);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig26 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig26.setSimilarityClass("");
        java.lang.String str29 = itembasedRecommenderConfig26.getSimilarityClass();
        itembasedRecommenderConfig26.setName("");
        java.lang.String str32 = itembasedRecommenderConfig26.getName();
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig26);
        java.lang.String str34 = null; // flaky: configuration1.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList35 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
// flaky:         configuration1.setModelDirectory("MutablePreference{userID=1, itemID=-1, value=35.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig38 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double39 = factorizationbasedRecommenderConfig38.getAlpha();
        double double40 = factorizationbasedRecommenderConfig38.getLambda();
        int int41 = factorizationbasedRecommenderConfig38.getNumberOfFeatures();
        java.lang.String str42 = factorizationbasedRecommenderConfig38.getRetrainCronExpression();
        factorizationbasedRecommenderConfig38.setNumberOfIterations((int) (short) 100);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer45 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig38);
        factorizationbasedRecommenderConfig38.setName("MutablePreference{userID=0, itemID=0, value=1.0}");
        factorizationbasedRecommenderConfig38.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig38.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig38.setAlpha(97.0d);
        int int54 = factorizationbasedRecommenderConfig38.getNumberOfIterations();
        int int55 = factorizationbasedRecommenderConfig38.getNumberOfFeatures();
        int int56 = factorizationbasedRecommenderConfig38.getNumberOfFeatures();
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig38);
        int int58 = 0; // flaky: configuration1.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration59 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str60 = storageConfiguration59.getJdbcDriverClass();
        storageConfiguration59.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str63 = storageConfiguration59.getJdbcUrl();
        java.lang.String str64 = storageConfiguration59.getJdbcDriverClass();
        storageConfiguration59.setJdbcDriverClass("batchSize");
        storageConfiguration59.setPassword("value");
        storageConfiguration59.setPassword("value");
        storageConfiguration59.setPassword("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str73 = storageConfiguration59.getJdbcUrl();
        storageConfiguration59.setJdbcUrl("");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration59);
        int int77 = 0; // flaky: configuration1.getNumProcessorsForTraining();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "label" + "'", str11, "label");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "value" + "'", str24, "value");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
// flaky:         org.junit.Assert.assertEquals("'" + str34 + "' != '" + "label" + "'", str34, "label");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList35);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str73);
// flaky:         org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
    }

    @Test
    public void test38285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38285");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) -1, (long) (byte) 10, (float) (short) 10);
        long long7 = mutablePreference0.getUserID();
        long long8 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) (byte) 0);
        mutablePreference0.setValue((float) 1);
        long long13 = mutablePreference0.getUserID();
        float float14 = mutablePreference0.getValue();
        mutablePreference0.set((long) 'a', (-1L), 0.0f);
        float float19 = mutablePreference0.getValue();
        java.lang.String str20 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-1L) + "'", long8 == (-1L));
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-1L) + "'", long13 == (-1L));
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 1.0f + "'", float14 == 1.0f);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 0.0f + "'", float19 == 0.0f);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=97, itemID=-1, value=0.0}" + "'", str20, "MutablePreference{userID=97, itemID=-1, value=0.0}");
    }

    @Test
    public void test38286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38286");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null; // flaky: configuration4.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = null; // flaky: configuration4.getItembasedRecommenders();
// flaky:         configuration4.setModelDirectory("MutablePreference{userID=0, itemID=10000, value=-1.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig10 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double11 = factorizationbasedRecommenderConfig10.getAlpha();
        double double12 = factorizationbasedRecommenderConfig10.getLambda();
        int int13 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        factorizationbasedRecommenderConfig10.setUsesImplicitFeedback(false);
        int int16 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        factorizationbasedRecommenderConfig10.setLambda((double) 0);
        factorizationbasedRecommenderConfig10.setName("userID");
        int int21 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        int int22 = factorizationbasedRecommenderConfig10.getNumberOfIterations();
        factorizationbasedRecommenderConfig10.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig10.setLambda((double) 10000L);
        double double27 = factorizationbasedRecommenderConfig10.getAlpha();
        factorizationbasedRecommenderConfig10.setNumberOfFeatures((int) (short) -1);
        factorizationbasedRecommenderConfig10.setAlpha((double) 100L);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig10);
        factorizationbasedRecommenderConfig10.setNumberOfFeatures((int) (byte) 10);
        factorizationbasedRecommenderConfig10.setAlpha((double) 1);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer37 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig10);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration5);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test38287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38287");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        batchAddCandidatesServlet0.init();
        java.lang.String str4 = batchAddCandidatesServlet0.getServletInfo();
        batchAddCandidatesServlet0.init();
        batchAddCandidatesServlet0.init();
        batchAddCandidatesServlet0.destroy();
        javax.servlet.ServletConfig servletConfig8 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet9 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        javax.servlet.ServletConfig servletConfig12 = batchSetPreferencesServlet9.getServletConfig();
        batchSetPreferencesServlet9.destroy();
        javax.servlet.ServletConfig servletConfig14 = batchSetPreferencesServlet9.getServletConfig();
        batchSetPreferencesServlet9.init();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet16.init();
        batchAddCandidatesServlet16.init();
        batchSetPreferencesServlet9.init((javax.servlet.ServletConfig) batchAddCandidatesServlet16);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet20 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str21 = batchDeleteCandidatesServlet20.getServletInfo();
        batchDeleteCandidatesServlet20.init();
        batchDeleteCandidatesServlet20.destroy();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet24 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet24.destroy();
        javax.servlet.ServletConfig servletConfig26 = deleteCandidateServlet24.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet27 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str28 = batchDeleteCandidatesServlet27.getServletInfo();
        java.lang.String str29 = batchDeleteCandidatesServlet27.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet30 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet31 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet32 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet31.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet32);
        setPreferenceServlet30.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet32);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet35 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet30.init((javax.servlet.ServletConfig) recommendServlet35);
        batchDeleteCandidatesServlet27.init((javax.servlet.ServletConfig) setPreferenceServlet30);
        setPreferenceServlet30.destroy();
        deleteCandidateServlet24.init((javax.servlet.ServletConfig) setPreferenceServlet30);
        batchDeleteCandidatesServlet20.init((javax.servlet.ServletConfig) setPreferenceServlet30);
        batchDeleteCandidatesServlet20.destroy();
        javax.servlet.ServletConfig servletConfig42 = batchDeleteCandidatesServlet20.getServletConfig();
        batchAddCandidatesServlet16.init(servletConfig42);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchAddCandidatesServlet16);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(servletConfig8);
        org.junit.Assert.assertNotNull(servletConfig12);
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(servletConfig26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(servletConfig42);
    }

    @Test
    public void test38288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38288");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=0, itemID=1, value=32.0}", (int) (byte) 1);
    }

    @Test
    public void test38289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38289");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
// flaky:         configuration1.setNumProcessorsForTraining(52);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components5 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components5.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components5.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig11 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig11.setSimilarityClass("");
        java.lang.String str14 = itembasedRecommenderConfig11.getName();
        java.lang.String str15 = itembasedRecommenderConfig11.getSimilarityClass();
        itembasedRecommenderConfig11.setName("");
        java.lang.String str18 = itembasedRecommenderConfig11.getSimilarityClass();
// flaky:         configuration10.addItembasedRecommender(itembasedRecommenderConfig11);
        itembasedRecommenderConfig11.setSimilarItemsPerItem((int) (byte) 1);
        itembasedRecommenderConfig11.setSimilarItemsPerItem((int) (short) 100);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig11);
        itembasedRecommenderConfig11.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}");
        java.lang.String str27 = itembasedRecommenderConfig11.getSimilarityClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
// flaky:         org.junit.Assert.assertNotNull(components5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str27, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}");
    }

    @Test
    public void test38290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38290");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str2 = itembasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=10, itemID=100, value=10000.0}");
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=1.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test38291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38291");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str13 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str16 = storageConfiguration12.getJdbcUrl();
        java.lang.String str17 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setUsername("recommender");
        storageConfiguration12.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str22 = storageConfiguration12.getPassword();
        java.lang.String str23 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         configuration11.setStorageConfiguration(storageConfiguration12);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(trainingScheduler9);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str22, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test38292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38292");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getUsername();
        java.lang.String str11 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration9.getPassword();
        storageConfiguration9.setJdbcUrl("file");
        configuration0.setStorageConfiguration(storageConfiguration9);
        org.plista.kornakapi.web.Components components16 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = null; // flaky: components16.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList18 = null; // flaky: configuration17.getFactorizationbasedRecommenders();
        java.lang.String str19 = null; // flaky: configuration17.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList20 = null; // flaky: configuration17.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setName("recommender");
// flaky:         configuration17.addItembasedRecommender(itembasedRecommenderConfig21);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig21);
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=10000, value=0.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig28 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double29 = factorizationbasedRecommenderConfig28.getAlpha();
        double double30 = factorizationbasedRecommenderConfig28.getLambda();
        int int31 = factorizationbasedRecommenderConfig28.getNumberOfFeatures();
        java.lang.String str32 = factorizationbasedRecommenderConfig28.getRetrainCronExpression();
        int int33 = factorizationbasedRecommenderConfig28.getNumberOfFeatures();
        factorizationbasedRecommenderConfig28.setNumberOfIterations((int) (short) 0);
        double double36 = factorizationbasedRecommenderConfig28.getLambda();
        int int37 = factorizationbasedRecommenderConfig28.getNumberOfFeatures();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig28);
        int int39 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration40 = configuration0.getStorageConfiguration();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
// flaky:         org.junit.Assert.assertNotNull(components16);
// flaky:         org.junit.Assert.assertNotNull(configuration17);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList18);
// flaky:         org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=-1.0}" + "'", str19, "MutablePreference{userID=0, itemID=10000, value=-1.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList20);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 100 + "'", int39 == 100);
        org.junit.Assert.assertNotNull(storageConfiguration40);
    }

    @Test
    public void test38293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38293");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        java.lang.String str12 = mutableCandidate0.getLabel();
        long long13 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: howMany", (long) (byte) 100);
        mutableCandidate0.set("howMany", (long) 35);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=100.0}", 10000L);
        long long23 = mutableCandidate0.getItemID();
        long long24 = mutableCandidate0.getItemID();
        long long25 = mutableCandidate0.getItemID();
        java.lang.String str26 = mutableCandidate0.getLabel();
        mutableCandidate0.set("", (long) '4');
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 35L + "'", long13 == 35L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10000L + "'", long23 == 10000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 10000L + "'", long24 == 10000L);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 10000L + "'", long25 == 10000L);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str26, "MutablePreference{userID=0, itemID=0, value=100.0}");
    }

    @Test
    public void test38294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38294");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration6.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = null; // flaky: configuration6.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration6.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList10 = null; // flaky: configuration6.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList11 = null; // flaky: configuration6.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.Configuration configuration12 = new org.plista.kornakapi.core.config.Configuration();
        configuration12.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig15 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double16 = factorizationbasedRecommenderConfig15.getAlpha();
        double double17 = factorizationbasedRecommenderConfig15.getLambda();
        configuration12.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig15);
        java.lang.String str19 = configuration12.getModelDirectory();
        int int20 = configuration12.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList21 = configuration12.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration22 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str23 = storageConfiguration22.getJdbcDriverClass();
        storageConfiguration22.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str26 = storageConfiguration22.getJdbcUrl();
        java.lang.String str27 = storageConfiguration22.getJdbcUrl();
        storageConfiguration22.setJdbcUrl("label");
        configuration12.setStorageConfiguration(storageConfiguration22);
        java.lang.String str31 = storageConfiguration22.getUsername();
        java.lang.String str32 = storageConfiguration22.getUsername();
        java.lang.String str33 = storageConfiguration22.getJdbcDriverClass();
        storageConfiguration22.setPassword("MutablePreference{userID=1, itemID=52, value=52.0}");
        java.lang.String str36 = storageConfiguration22.getJdbcDriverClass();
        java.lang.String str37 = storageConfiguration22.getUsername();
// flaky:         configuration6.setStorageConfiguration(storageConfiguration22);
        java.lang.String str39 = storageConfiguration22.getUsername();
        storageConfiguration22.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration22.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=1, itemID=0, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList10);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 100 + "'", int20 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str31, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str32, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str37, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str39, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38295");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 1);
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        boolean boolean12 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setLambda((double) (byte) -1);
        boolean boolean15 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double18 = factorizationbasedRecommenderConfig0.getAlpha();
        int int19 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test38296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38296");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig0.setLambda((double) 35);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) 'a');
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) '4');
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '4');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test38297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38297");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        long long12 = mutableCandidate0.getItemID();
        mutableCandidate0.set("batchSize", 1L);
        long long16 = mutableCandidate0.getItemID();
        long long17 = mutableCandidate0.getItemID();
        long long18 = mutableCandidate0.getItemID();
        java.lang.String str19 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 1L + "'", long18 == 1L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "batchSize" + "'", str19, "batchSize");
    }

    @Test
    public void test38298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38298");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = null; // flaky: configuration5.getStorageConfiguration();
        java.lang.String str17 = null; // flaky: storageConfiguration16.getJdbcDriverClass();
        java.lang.String str18 = null; // flaky: storageConfiguration16.getJdbcDriverClass();
        java.lang.String str19 = null; // flaky: storageConfiguration16.getJdbcDriverClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test38299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38299");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 100L);
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.setValue((float) '4');
        long long6 = mutablePreference0.getUserID();
        long long7 = mutablePreference0.getUserID();
        mutablePreference0.set((long) (short) 100, (long) 32, (float) ' ');
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test38300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38300");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 10);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) 35);
        double double14 = fixedCandidatesIDRescorer1.rescore(0L, (double) 0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer16 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair17 = null;
        double double19 = filteringLongPairRescorer16.rescore(longPair17, (double) 32);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 32.0d + "'", double19 == 32.0d);
    }

    @Test
    public void test38301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38301");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
// flaky:         configuration2.setModelDirectory("itemID");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components7 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage10 = null; // flaky: components7.storage();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components7.storage();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components7.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList13 = null; // flaky: configuration12.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str15 = storageConfiguration14.getJdbcDriverClass();
        storageConfiguration14.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str18 = storageConfiguration14.getJdbcUrl();
        java.lang.String str19 = storageConfiguration14.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration14.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration14.getPassword();
// flaky:         configuration12.setStorageConfiguration(storageConfiguration14);
        int int23 = 0; // flaky: configuration12.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig24 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double25 = factorizationbasedRecommenderConfig24.getAlpha();
        double double26 = factorizationbasedRecommenderConfig24.getLambda();
        int int27 = factorizationbasedRecommenderConfig24.getNumberOfFeatures();
        factorizationbasedRecommenderConfig24.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig24.setNumberOfFeatures((int) (byte) 1);
        factorizationbasedRecommenderConfig24.setLambda((double) 100);
        factorizationbasedRecommenderConfig24.setNumberOfIterations(1);
        boolean boolean36 = factorizationbasedRecommenderConfig24.isUsesImplicitFeedback();
// flaky:         configuration12.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig24);
        factorizationbasedRecommenderConfig24.setNumberOfFeatures(100);
        int int40 = factorizationbasedRecommenderConfig24.getNumberOfIterations();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig24);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(storage10);
        org.junit.Assert.assertNull(storage11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
    }

    @Test
    public void test38302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38302");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getJdbcDriverClass();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        int int16 = 0; // flaky: configuration5.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration17 = null; // flaky: configuration5.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig18 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str19 = itembasedRecommenderConfig18.getRetrainCronExpression();
        itembasedRecommenderConfig18.setSimilarityClass("");
        java.lang.String str22 = itembasedRecommenderConfig18.getSimilarityClass();
        itembasedRecommenderConfig18.setRetrainCronExpression("MutablePreference{userID=100, itemID=0, value=0.0}");
        itembasedRecommenderConfig18.setSimilarItemsPerItem(32);
        itembasedRecommenderConfig18.setSimilarItemsPerItem((int) (short) -1);
        itembasedRecommenderConfig18.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig18);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test38303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38303");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
// flaky:         configuration1.setStorageConfiguration(storageConfiguration2);
        java.lang.String str11 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = null; // flaky: configuration1.getStorageConfiguration();
        int int13 = 0; // flaky: configuration1.getNumProcessorsForTraining();
// flaky:         configuration1.setNumProcessorsForTraining((int) '4');
// flaky:         configuration1.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration18 = null; // flaky: configuration1.getStorageConfiguration();
// flaky:         configuration1.setNumProcessorsForTraining(52);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
// flaky:         org.junit.Assert.assertEquals("'" + str11 + "' != '" + "itemID" + "'", str11, "itemID");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration12);
// flaky:         org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration18);
    }

    @Test
    public void test38304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38304");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        java.lang.String str8 = null; // flaky: configuration7.getModelDirectory();
// flaky:         configuration7.setNumProcessorsForTraining((int) (byte) 0);
// flaky:         configuration7.setModelDirectory("MutablePreference{userID=100, itemID=-1, value=10000.0}");
        java.lang.Class<?> wildcardClass13 = null; // flaky: configuration7.getClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file" + "'", str8, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
// flaky:         org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test38305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38305");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=32, value=-1.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.Throwable throwable6 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("hi!", throwable6);
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException12);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException14 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException12);
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException18 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException16.addSuppressed((java.lang.Throwable) missingParameterException18);
        invalidParameterException14.addSuppressed((java.lang.Throwable) missingParameterException18);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException14);
        invalidParameterException7.addSuppressed((java.lang.Throwable) invalidParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException21);
        missingParameterException3.addSuppressed((java.lang.Throwable) invalidParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException32 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException32.addSuppressed((java.lang.Throwable) missingParameterException34);
        invalidParameterException30.addSuppressed((java.lang.Throwable) missingParameterException34);
        missingParameterException3.addSuppressed((java.lang.Throwable) missingParameterException34);
        java.lang.Throwable[] throwableArray38 = missingParameterException34.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException40 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=35, itemID=100, value=52.0}");
        missingParameterException34.addSuppressed((java.lang.Throwable) missingParameterException40);
        missingParameterException1.addSuppressed((java.lang.Throwable) missingParameterException34);
        org.junit.Assert.assertNotNull(throwableArray38);
    }

    @Test
    public void test38306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38306");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
// flaky:         configuration2.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getUsername();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration7);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = null; // flaky: configuration2.getItembasedRecommenders();
        int int11 = 0; // flaky: configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components12 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration13 = null; // flaky: components12.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components12.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler15 = null; // flaky: components12.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = null; // flaky: components12.scheduler();
        org.plista.kornakapi.core.storage.Storage storage17 = null; // flaky: components12.storage();
        org.plista.kornakapi.core.config.Configuration configuration18 = null; // flaky: components12.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration19 = null; // flaky: components12.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = null; // flaky: configuration19.getStorageConfiguration();
// flaky:         storageConfiguration20.setPassword("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}");
        java.lang.String str23 = null; // flaky: storageConfiguration20.getJdbcUrl();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration20);
        java.lang.String str25 = null; // flaky: storageConfiguration20.getPassword();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(str8);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
// flaky:         org.junit.Assert.assertNotNull(components12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNull(trainingScheduler15);
        org.junit.Assert.assertNull(trainingScheduler16);
        org.junit.Assert.assertNull(storage17);
// flaky:         org.junit.Assert.assertNotNull(configuration18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration20);
        org.junit.Assert.assertNull(str23);
// flaky:         org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}" + "'", str25, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}");
    }

    @Test
    public void test38307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38307");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = null; // flaky: configuration8.getStorageConfiguration();
        java.lang.String str10 = null; // flaky: configuration8.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = null; // flaky: configuration8.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = null;
// flaky:         configuration8.addItembasedRecommender(itembasedRecommenderConfig12);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = null; // flaky: configuration8.getStorageConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration9);
// flaky:         org.junit.Assert.assertEquals("'" + str10 + "' != '" + "itemID" + "'", str10, "itemID");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration11);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration14);
    }

    @Test
    public void test38308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38308");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(trainingScheduler10);
    }

    @Test
    public void test38309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38309");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setName("");
        java.lang.String str13 = itembasedRecommenderConfig6.getSimilarityClass();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) '#');
        int int17 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        java.lang.String str18 = itembasedRecommenderConfig6.getName();
        int int19 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 35 + "'", int19 == 35);
    }

    @Test
    public void test38310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38310");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double6 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        boolean boolean12 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test38311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38311");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("hi!");
        double double9 = factorizationbasedRecommenderConfig0.getAlpha();
        int int10 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setLambda(35.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test38312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38312");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setJdbcDriverClass("batchSize");
        storageConfiguration7.setPassword("howMany");
        storageConfiguration7.setJdbcUrl("hi!");
// flaky:         configuration5.setStorageConfiguration(storageConfiguration7);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList20 = null; // flaky: configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList21 = null; // flaky: configuration5.getItembasedRecommenders();
        java.lang.String str22 = null; // flaky: configuration5.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration23 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList24 = configuration23.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = configuration23.getStorageConfiguration();
        configuration23.setNumProcessorsForTraining((int) (short) 0);
        java.lang.String str28 = configuration23.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration29 = new org.plista.kornakapi.core.config.Configuration();
        configuration29.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig32 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double33 = factorizationbasedRecommenderConfig32.getAlpha();
        double double34 = factorizationbasedRecommenderConfig32.getLambda();
        configuration29.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig32);
        java.lang.String str36 = configuration29.getModelDirectory();
        int int37 = configuration29.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList38 = configuration29.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration39 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str40 = storageConfiguration39.getJdbcDriverClass();
        storageConfiguration39.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str43 = storageConfiguration39.getJdbcUrl();
        java.lang.String str44 = storageConfiguration39.getJdbcUrl();
        storageConfiguration39.setJdbcUrl("label");
        configuration29.setStorageConfiguration(storageConfiguration39);
        java.lang.String str48 = storageConfiguration39.getPassword();
        storageConfiguration39.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        configuration23.setStorageConfiguration(storageConfiguration39);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig52 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double53 = factorizationbasedRecommenderConfig52.getAlpha();
        double double54 = factorizationbasedRecommenderConfig52.getLambda();
        int int55 = factorizationbasedRecommenderConfig52.getNumberOfFeatures();
        java.lang.String str56 = factorizationbasedRecommenderConfig52.getRetrainCronExpression();
        int int57 = factorizationbasedRecommenderConfig52.getNumberOfFeatures();
        factorizationbasedRecommenderConfig52.setNumberOfIterations((int) (short) 0);
        boolean boolean60 = factorizationbasedRecommenderConfig52.isUsesImplicitFeedback();
        java.lang.String str61 = factorizationbasedRecommenderConfig52.getRetrainCronExpression();
        double double62 = factorizationbasedRecommenderConfig52.getLambda();
        factorizationbasedRecommenderConfig52.setLambda((double) (byte) -1);
        factorizationbasedRecommenderConfig52.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig52.setLambda((double) 100L);
        int int69 = factorizationbasedRecommenderConfig52.getRetrainAfterPreferenceChanges();
        configuration23.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig52);
        factorizationbasedRecommenderConfig52.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        factorizationbasedRecommenderConfig52.setNumberOfFeatures((int) (short) 100);
        double double75 = factorizationbasedRecommenderConfig52.getLambda();
        factorizationbasedRecommenderConfig52.setNumberOfFeatures(10000);
        factorizationbasedRecommenderConfig52.setNumberOfFeatures((int) 'a');
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig52);
// flaky:         configuration5.setModelDirectory("MutablePreference{userID=100, itemID=10, value=32.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig83 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double84 = factorizationbasedRecommenderConfig83.getAlpha();
        double double85 = factorizationbasedRecommenderConfig83.getLambda();
        int int86 = factorizationbasedRecommenderConfig83.getNumberOfFeatures();
        factorizationbasedRecommenderConfig83.setUsesImplicitFeedback(true);
        double double89 = factorizationbasedRecommenderConfig83.getAlpha();
        java.lang.String str90 = factorizationbasedRecommenderConfig83.getRetrainCronExpression();
        factorizationbasedRecommenderConfig83.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig83.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig83.setRetrainAfterPreferenceChanges(0);
        java.lang.String str97 = factorizationbasedRecommenderConfig83.getRetrainCronExpression();
        int int98 = factorizationbasedRecommenderConfig83.getNumberOfIterations();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig83);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList20);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList21);
// flaky:         org.junit.Assert.assertEquals("'" + str22 + "' != '" + "itemID" + "'", str22, "itemID");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList24);
        org.junit.Assert.assertNull(storageConfiguration25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 100.0d + "'", double75 == 100.0d);
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNull(str97);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 1 + "'", int98 == 1);
    }

    @Test
    public void test38313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38313");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        int int3 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str5 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarityClass("itemIDs");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        itembasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test38314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38314");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig0.setAlpha((double) ' ');
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int16 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        double double17 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        boolean boolean19 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 32.0d + "'", double17 == 32.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test38315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38315");
        org.plista.kornakapi.web.MissingParameterException missingParameterException2 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=1, itemID=-1, value=35.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException10.addSuppressed((java.lang.Throwable) missingParameterException12);
        invalidParameterException8.addSuppressed((java.lang.Throwable) missingParameterException12);
        java.lang.Throwable[] throwableArray15 = missingParameterException12.getSuppressed();
        java.lang.Throwable[] throwableArray16 = missingParameterException12.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException23);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException25 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException30 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException30);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException32 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException30);
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException36 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException34.addSuppressed((java.lang.Throwable) missingParameterException36);
        invalidParameterException32.addSuppressed((java.lang.Throwable) missingParameterException36);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException39 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException32);
        org.plista.kornakapi.web.MissingParameterException missingParameterException43 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException44 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException43);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException45 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException43);
        invalidParameterException39.addSuppressed((java.lang.Throwable) missingParameterException43);
        org.plista.kornakapi.web.MissingParameterException missingParameterException51 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException52 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException51);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException53 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException51);
        java.lang.Throwable[] throwableArray54 = missingParameterException51.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException55 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException51);
        missingParameterException43.addSuppressed((java.lang.Throwable) missingParameterException51);
        invalidParameterException25.addSuppressed((java.lang.Throwable) missingParameterException43);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException58 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) invalidParameterException25);
        java.lang.Throwable[] throwableArray59 = invalidParameterException25.getSuppressed();
        java.lang.Throwable[] throwableArray60 = invalidParameterException25.getSuppressed();
        missingParameterException12.addSuppressed((java.lang.Throwable) invalidParameterException25);
        java.lang.Throwable[] throwableArray62 = missingParameterException12.getSuppressed();
        missingParameterException2.addSuppressed((java.lang.Throwable) missingParameterException12);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException64 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=32, itemID=1, value=-1.0}", (java.lang.Throwable) missingParameterException2);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(throwableArray62);
    }

    @Test
    public void test38316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38316");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        java.lang.String str13 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) 0.0f);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        java.lang.String str19 = factorizationbasedRecommenderConfig0.getName();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "userID" + "'", str19, "userID");
    }

    @Test
    public void test38317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38317");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double7 = factorizationbasedRecommenderConfig0.getAlpha();
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double9 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str10 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test38318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38318");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) -1, (long) (byte) 10, (float) (short) 10);
        long long7 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) (byte) 10);
        float float10 = mutablePreference0.getValue();
        mutablePreference0.set(32L, (long) 97, (float) 52);
        mutablePreference0.setValue((float) 1);
        long long17 = mutablePreference0.getItemID();
        float float18 = mutablePreference0.getValue();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-1L) + "'", long7 == (-1L));
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 10.0f + "'", float10 == 10.0f);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 97L + "'", long17 == 97L);
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 1.0f + "'", float18 == 1.0f);
    }

    @Test
    public void test38319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38319");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setRetrainCronExpression("value");
        int int8 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str12 = itembasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str13 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str14 = itembasedRecommenderConfig0.getSimilarityClass();
        int int15 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: itemID");
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=100, itemID=0, value=-1.0}");
        java.lang.String str20 = itembasedRecommenderConfig0.getSimilarityClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "value" + "'", str12, "value");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test38320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38320");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener23 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener23.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener25 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener23.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler31 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler31, "org.plista.kornakapi.web.InvalidParameterException: file", (int) (byte) 10);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener34);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener37 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener39 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener37.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener39);
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener44 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener46 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener44.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener46);
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener39.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener46);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener39);
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
    }

    @Test
    public void test38321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38321");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        java.lang.String str3 = null; // flaky: configuration2.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = null; // flaky: configuration2.getItembasedRecommenders();
        java.lang.String str5 = null; // flaky: configuration2.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        int int10 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setLambda((double) 1);
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(false);
        double double15 = factorizationbasedRecommenderConfig7.getAlpha();
        factorizationbasedRecommenderConfig7.setNumberOfIterations(100);
        factorizationbasedRecommenderConfig7.setLambda((double) 10000.0f);
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig7.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig7.setLambda(10.0d);
        double double26 = factorizationbasedRecommenderConfig7.getAlpha();
        factorizationbasedRecommenderConfig7.setNumberOfIterations(32);
        int int29 = factorizationbasedRecommenderConfig7.getNumberOfIterations();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=100, itemID=10, value=32.0}" + "'", str3, "MutablePreference{userID=100, itemID=10, value=32.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=100, itemID=10, value=32.0}" + "'", str5, "MutablePreference{userID=100, itemID=10, value=32.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
    }

    @Test
    public void test38322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38322");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        java.lang.String str1 = mutableCandidate0.getLabel();
        long long2 = mutableCandidate0.getItemID();
        mutableCandidate0.set("recommender", 100L);
        long long6 = mutableCandidate0.getItemID();
        long long7 = mutableCandidate0.getItemID();
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        long long10 = mutableCandidate0.getItemID();
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 100L + "'", long6 == 100L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "recommender" + "'", str8, "recommender");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "recommender" + "'", str9, "recommender");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 100L + "'", long12 == 100L);
    }

    @Test
    public void test38323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38323");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setLambda(0.0d);
        double double5 = factorizationbasedRecommenderConfig0.getLambda();
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double7 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test38324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38324");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=1, itemID=52, value=52.0}", 35);
    }

    @Test
    public void test38325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38325");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) -1);
        double double12 = factorizationbasedRecommenderConfig0.getAlpha();
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10, itemID=1, value=52.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test38326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38326");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet7 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet8 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet7.init((javax.servlet.ServletConfig) batchSetPreferencesServlet8);
        javax.servlet.ServletConfig servletConfig10 = batchSetPreferencesServlet7.getServletConfig();
        javax.servlet.ServletConfig servletConfig11 = batchSetPreferencesServlet7.getServletConfig();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet7);
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        java.lang.String str15 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str17 = batchDeleteCandidatesServlet16.getServletInfo();
        batchDeleteCandidatesServlet16.init();
        javax.servlet.ServletConfig servletConfig19 = batchDeleteCandidatesServlet16.getServletConfig();
        batchDeleteCandidatesServlet16.init();
        java.lang.String str21 = batchDeleteCandidatesServlet16.getServletInfo();
        batchDeleteCandidatesServlet16.destroy();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(servletConfig10);
        org.junit.Assert.assertNotNull(servletConfig11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test38327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38327");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=100, itemID=0, value=0.0}");
        int int7 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=10000, itemID=-1, value=100.0}");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=1, value=-1.0}");
        java.lang.String str14 = itembasedRecommenderConfig0.getSimilarityClass();
        int int15 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=1, value=-1.0}" + "'", str14, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=1, value=-1.0}");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test38328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38328");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) '4');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test38329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38329");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) (byte) 100);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) 97, (double) 32);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double18 = fixedCandidatesIDRescorer1.rescore(35L, (double) 52.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer20 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = filteringLongPairRescorer20.isFiltered(longPair21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 32.0d + "'", double9 == 32.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
    }

    @Test
    public void test38330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38330");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.lang.String str9 = configuration0.getModelDirectory();
        int int10 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (byte) 0);
        java.lang.String str13 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig15 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double16 = factorizationbasedRecommenderConfig15.getAlpha();
        double double17 = factorizationbasedRecommenderConfig15.getLambda();
        int int18 = factorizationbasedRecommenderConfig15.getNumberOfFeatures();
        factorizationbasedRecommenderConfig15.setLambda((double) 1);
        double double21 = factorizationbasedRecommenderConfig15.getAlpha();
        factorizationbasedRecommenderConfig15.setRetrainCronExpression("hi!");
        factorizationbasedRecommenderConfig15.setNumberOfFeatures(0);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig15);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer27 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig15);
        factorizationbasedRecommenderConfig15.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig15.setAlpha((double) 52L);
        factorizationbasedRecommenderConfig15.setNumberOfFeatures((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(storageConfiguration14);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test38331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38331");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.io.File file7 = null;
        org.plista.kornakapi.core.storage.Storage storage8 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender9 = null;
        // The following exception was thrown during execution in test generation
        try {
            factorizationbasedInMemoryTrainer6.train(file7, storage8, recommender9, 52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test38332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38332");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = null; // flaky: configuration9.getItembasedRecommenders();
// flaky:         configuration9.setNumProcessorsForTraining((int) ' ');
// flaky:         configuration9.setModelDirectory("label");
        int int15 = 0; // flaky: configuration9.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = null;
// flaky:         configuration9.addItembasedRecommender(itembasedRecommenderConfig16);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration18 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str19 = storageConfiguration18.getJdbcDriverClass();
        storageConfiguration18.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str22 = storageConfiguration18.getJdbcUrl();
        java.lang.String str23 = storageConfiguration18.getJdbcUrl();
        java.lang.String str24 = storageConfiguration18.getJdbcUrl();
        storageConfiguration18.setUsername("recommender");
        java.lang.String str27 = storageConfiguration18.getJdbcDriverClass();
        storageConfiguration18.setJdbcUrl("value");
        storageConfiguration18.setUsername("org.plista.kornakapi.web.MissingParameterException: itemIDs");
// flaky:         configuration9.setStorageConfiguration(storageConfiguration18);
        org.plista.kornakapi.core.config.Configuration configuration33 = new org.plista.kornakapi.core.config.Configuration();
        configuration33.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig36 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig36.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer39 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig36);
        itembasedRecommenderConfig36.setRetrainCronExpression("");
        itembasedRecommenderConfig36.setSimilarItemsPerItem(10);
        java.lang.String str44 = itembasedRecommenderConfig36.getName();
        configuration33.addItembasedRecommender(itembasedRecommenderConfig36);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer46 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig36);
        itembasedRecommenderConfig36.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        itembasedRecommenderConfig36.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig36.setSimilarItemsPerItem((int) '#');
// flaky:         configuration9.addItembasedRecommender(itembasedRecommenderConfig36);
// flaky:         configuration9.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList56 = null; // flaky: configuration9.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str44);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList56);
    }

    @Test
    public void test38333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38333");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) 1.0f);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(100);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double19 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
    }

    @Test
    public void test38334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38334");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = new org.plista.kornakapi.core.config.Configuration();
        configuration9.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str12 = configuration9.getModelDirectory();
        configuration9.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setPassword("itemIDs");
        configuration9.setStorageConfiguration(storageConfiguration15);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = configuration9.getStorageConfiguration();
        storageConfiguration20.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration20.setUsername("MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         configuration4.setStorageConfiguration(storageConfiguration20);
        storageConfiguration20.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str28 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setPassword("MutablePreference{userID=10000, itemID=-1, value=0.0}");
        storageConfiguration20.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: hi!");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration6);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration7);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(storageConfiguration20);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test38335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38335");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: label");
        factorizationbasedRecommenderConfig0.setLambda((double) 100);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((-1));
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer21 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=100, itemID=0, value=100.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test38336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38336");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        mutablePreference0.set((long) 10000, 97L, 0.0f);
        long long12 = mutablePreference0.getItemID();
        long long13 = mutablePreference0.getItemID();
        long long14 = mutablePreference0.getUserID();
        mutablePreference0.set((long) (byte) 1, (long) 97, (float) 10L);
        long long19 = mutablePreference0.getUserID();
        long long20 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 97L + "'", long12 == 97L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 97L + "'", long13 == 97L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 97L + "'", long20 == 97L);
    }

    @Test
    public void test38337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38337");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        float float5 = mutablePreference0.getValue();
        float float6 = mutablePreference0.getValue();
        java.lang.String str7 = mutablePreference0.toString();
        java.lang.String str8 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 1.0f + "'", float5 == 1.0f);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 1.0f + "'", float6 == 1.0f);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str8, "MutablePreference{userID=0, itemID=0, value=1.0}");
    }

    @Test
    public void test38338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38338");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNull(storage9);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener10);
    }

    @Test
    public void test38339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38339");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10000);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int15 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test38340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38340");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 1);
        mutablePreference0.set((long) 10000, (long) (short) -1, (float) (-1));
        float float10 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) (-1L));
        mutablePreference0.set(35L, 52L, (float) 1);
        float float17 = mutablePreference0.getValue();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + (-1.0f) + "'", float10 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 1.0f + "'", float17 == 1.0f);
    }

    @Test
    public void test38341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38341");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcDriverClass("file");
        storageConfiguration0.setPassword("MutablePreference{userID=0, itemID=0, value=100.0}");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=10000, itemID=-1, value=32.0}");
        java.lang.String str15 = storageConfiguration0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str15, "MutablePreference{userID=0, itemID=0, value=100.0}");
    }

    @Test
    public void test38342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38342");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        java.lang.String str16 = null; // flaky: configuration5.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList17 = null; // flaky: configuration5.getItembasedRecommenders();
// flaky:         configuration5.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str21 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str24 = storageConfiguration20.getJdbcUrl();
        java.lang.String str25 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setJdbcDriverClass("batchSize");
        java.lang.String str28 = storageConfiguration20.getPassword();
        storageConfiguration20.setUsername("batchSize");
        java.lang.String str31 = storageConfiguration20.getJdbcUrl();
        storageConfiguration20.setUsername("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str34 = storageConfiguration20.getJdbcDriverClass();
// flaky:         configuration5.setStorageConfiguration(storageConfiguration20);
        java.lang.String str36 = null; // flaky: configuration5.getModelDirectory();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str16, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "batchSize" + "'", str34, "batchSize");
// flaky:         org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str36, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
    }

    @Test
    public void test38343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38343");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components0.storage();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(storage11);
    }

    @Test
    public void test38344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38344");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double6 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) -1);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) ' ');
        double double13 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setAlpha(10.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test38345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38345");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException8.addSuppressed((java.lang.Throwable) missingParameterException10);
        invalidParameterException6.addSuppressed((java.lang.Throwable) missingParameterException10);
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException20.addSuppressed((java.lang.Throwable) missingParameterException22);
        invalidParameterException18.addSuppressed((java.lang.Throwable) missingParameterException22);
        missingParameterException10.addSuppressed((java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException28);
        missingParameterException22.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException36);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException36);
        missingParameterException22.addSuppressed((java.lang.Throwable) invalidParameterException38);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException44 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException45 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException44);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException45);
        org.plista.kornakapi.web.MissingParameterException missingParameterException48 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}");
        invalidParameterException46.addSuppressed((java.lang.Throwable) missingParameterException48);
        invalidParameterException40.addSuppressed((java.lang.Throwable) invalidParameterException46);
        org.plista.kornakapi.web.MissingParameterException missingParameterException54 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException55 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException54);
        java.lang.Throwable[] throwableArray56 = missingParameterException54.getSuppressed();
        java.lang.Throwable[] throwableArray57 = missingParameterException54.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException58 = new org.plista.kornakapi.web.InvalidParameterException("userID", (java.lang.Throwable) missingParameterException54);
        invalidParameterException46.addSuppressed((java.lang.Throwable) missingParameterException54);
        java.lang.String str60 = missingParameterException54.toString();
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str60, "org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test38346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38346");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        boolean boolean4 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str5 = factorizationbasedRecommenderConfig0.getName();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test38347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38347");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("");
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        int int7 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda(100.0d);
        double double10 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("");
        double double13 = factorizationbasedRecommenderConfig0.getAlpha();
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=0, itemID=97, value=35.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
    }

    @Test
    public void test38348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38348");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str9 = storageConfiguration8.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration8.getUsername();
        storageConfiguration8.setJdbcUrl("");
        storageConfiguration8.setJdbcUrl("");
        storageConfiguration8.setPassword("org.plista.kornakapi.web.InvalidParameterException: file");
        configuration0.setStorageConfiguration(storageConfiguration8);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig18 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str19 = itembasedRecommenderConfig18.getRetrainCronExpression();
        int int20 = itembasedRecommenderConfig18.getRetrainAfterPreferenceChanges();
        java.lang.String str21 = itembasedRecommenderConfig18.getName();
        itembasedRecommenderConfig18.setSimilarItemsPerItem((int) (byte) 1);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer24 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig18);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig18);
        java.lang.String str26 = itembasedRecommenderConfig18.getName();
        java.lang.String str27 = itembasedRecommenderConfig18.getSimilarityClass();
        itembasedRecommenderConfig18.setSimilarityClass("MutablePreference{userID=97, itemID=10, value=10000.0}");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test38349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38349");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        int int10 = 0; // flaky: configuration9.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig11 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double12 = factorizationbasedRecommenderConfig11.getAlpha();
        double double13 = factorizationbasedRecommenderConfig11.getLambda();
        int int14 = factorizationbasedRecommenderConfig11.getNumberOfFeatures();
        factorizationbasedRecommenderConfig11.setLambda((double) 1);
        double double17 = factorizationbasedRecommenderConfig11.getAlpha();
        factorizationbasedRecommenderConfig11.setRetrainCronExpression("hi!");
// flaky:         configuration9.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig11);
        boolean boolean21 = factorizationbasedRecommenderConfig11.isUsesImplicitFeedback();
        double double22 = factorizationbasedRecommenderConfig11.getAlpha();
        int int23 = factorizationbasedRecommenderConfig11.getRetrainAfterPreferenceChanges();
        int int24 = factorizationbasedRecommenderConfig11.getRetrainAfterPreferenceChanges();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 32 + "'", int10 == 32);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test38350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38350");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        boolean boolean9 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig6.setRetrainCronExpression("");
        factorizationbasedRecommenderConfig6.setNumberOfIterations((int) (short) 100);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        boolean boolean17 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig6.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: userID");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNull(storageConfiguration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test38351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38351");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = null; // flaky: configuration9.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components11 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage12 = null; // flaky: components11.storage();
        org.plista.kornakapi.core.config.Configuration configuration13 = null; // flaky: components11.getConfiguration();
        java.lang.String str14 = null; // flaky: configuration13.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration15.getJdbcUrl();
        java.lang.String str20 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setJdbcDriverClass("batchSize");
        java.lang.String str23 = storageConfiguration15.getPassword();
        java.lang.String str24 = storageConfiguration15.getJdbcUrl();
// flaky:         configuration13.setStorageConfiguration(storageConfiguration15);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = null; // flaky: configuration13.getStorageConfiguration();
// flaky:         configuration9.setStorageConfiguration(storageConfiguration26);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig28 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double29 = factorizationbasedRecommenderConfig28.getAlpha();
        double double30 = factorizationbasedRecommenderConfig28.getLambda();
        int int31 = factorizationbasedRecommenderConfig28.getNumberOfFeatures();
        factorizationbasedRecommenderConfig28.setLambda((double) 1);
        double double34 = factorizationbasedRecommenderConfig28.getAlpha();
        factorizationbasedRecommenderConfig28.setRetrainCronExpression("hi!");
// flaky:         configuration9.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig28);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig38 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double39 = factorizationbasedRecommenderConfig38.getAlpha();
        double double40 = factorizationbasedRecommenderConfig38.getLambda();
        int int41 = factorizationbasedRecommenderConfig38.getNumberOfFeatures();
        java.lang.String str42 = factorizationbasedRecommenderConfig38.getRetrainCronExpression();
        int int43 = factorizationbasedRecommenderConfig38.getNumberOfFeatures();
        factorizationbasedRecommenderConfig38.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig38.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double48 = factorizationbasedRecommenderConfig38.getLambda();
        factorizationbasedRecommenderConfig38.setAlpha((double) (short) 10);
        int int51 = factorizationbasedRecommenderConfig38.getNumberOfFeatures();
        boolean boolean52 = factorizationbasedRecommenderConfig38.isUsesImplicitFeedback();
        double double53 = factorizationbasedRecommenderConfig38.getLambda();
        int int54 = factorizationbasedRecommenderConfig38.getNumberOfIterations();
// flaky:         configuration9.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig38);
        factorizationbasedRecommenderConfig38.setAlpha((double) 52);
        factorizationbasedRecommenderConfig38.setAlpha(0.0d);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
// flaky:         org.junit.Assert.assertNotNull(components11);
        org.junit.Assert.assertNull(storage12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str14, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration26);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test38352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38352");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        int int7 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        boolean boolean10 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test38353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38353");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener17 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener33 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener33.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener35);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener40 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener42 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener40.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener42);
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener42);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener49 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener51 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener51);
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener51);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener35);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components59 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration60 = null; // flaky: components59.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration61 = null; // flaky: components59.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage62 = null; // flaky: components59.storage();
        org.plista.kornakapi.core.config.Configuration configuration63 = null; // flaky: components59.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler64 = null; // flaky: components59.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler65 = null; // flaky: components59.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener66 = null; // flaky: components59.preferenceChangeListener();
        delegatingPreferenceChangeListener35.addDelegate(preferenceChangeListener66);
// flaky:         delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components71 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener72 = null; // flaky: components71.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage73 = null; // flaky: components71.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener74 = null; // flaky: components71.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage75 = null; // flaky: components71.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener76 = null; // flaky: components71.preferenceChangeListener();
        delegatingPreferenceChangeListener35.addDelegate(preferenceChangeListener76);
// flaky:         delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
// flaky:         org.junit.Assert.assertNotNull(components59);
// flaky:         org.junit.Assert.assertNotNull(configuration60);
// flaky:         org.junit.Assert.assertNotNull(configuration61);
        org.junit.Assert.assertNull(storage62);
// flaky:         org.junit.Assert.assertNotNull(configuration63);
        org.junit.Assert.assertNull(trainingScheduler64);
        org.junit.Assert.assertNull(trainingScheduler65);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener66);
// flaky:         org.junit.Assert.assertNotNull(components71);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener72);
        org.junit.Assert.assertNull(storage73);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener74);
        org.junit.Assert.assertNull(storage75);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener76);
    }

    @Test
    public void test38354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38354");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
// flaky:         configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        java.lang.String str16 = null; // flaky: configuration5.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList17 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components18 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration19 = null; // flaky: components18.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList20 = null; // flaky: configuration19.getItembasedRecommenders();
        java.lang.String str21 = null; // flaky: configuration19.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration22 = null; // flaky: configuration19.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig23 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str24 = itembasedRecommenderConfig23.getRetrainCronExpression();
        int int25 = itembasedRecommenderConfig23.getRetrainAfterPreferenceChanges();
        java.lang.String str26 = itembasedRecommenderConfig23.getSimilarityClass();
        itembasedRecommenderConfig23.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig23.setSimilarItemsPerItem((int) '#');
        int int31 = itembasedRecommenderConfig23.getSimilarItemsPerItem();
        itembasedRecommenderConfig23.setSimilarItemsPerItem((int) '4');
// flaky:         configuration19.addItembasedRecommender(itembasedRecommenderConfig23);
        int int35 = 0; // flaky: configuration19.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components36 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration37 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration38 = null; // flaky: components36.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage39 = null; // flaky: components36.storage();
        org.plista.kornakapi.core.storage.Storage storage40 = null; // flaky: components36.storage();
        org.plista.kornakapi.core.config.Configuration configuration41 = null; // flaky: components36.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList42 = null; // flaky: configuration41.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig43 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig43.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer46 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig43);
        itembasedRecommenderConfig43.setRetrainCronExpression("");
        itembasedRecommenderConfig43.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig43.setRetrainCronExpression("");
// flaky:         configuration41.addItembasedRecommender(itembasedRecommenderConfig43);
        int int54 = itembasedRecommenderConfig43.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig43.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer57 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig43);
// flaky:         configuration19.addItembasedRecommender(itembasedRecommenderConfig43);
        int int59 = itembasedRecommenderConfig43.getSimilarItemsPerItem();
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig43);
        java.lang.String str61 = null; // flaky: configuration5.getModelDirectory();
        java.lang.String str62 = null; // flaky: configuration5.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList63 = null; // flaky: configuration5.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
// flaky:         org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str16, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList17);
// flaky:         org.junit.Assert.assertNotNull(components18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList20);
// flaky:         org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str21, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 35 + "'", int31 == 35);
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 32 + "'", int35 == 32);
// flaky:         org.junit.Assert.assertNotNull(components36);
// flaky:         org.junit.Assert.assertNotNull(configuration37);
// flaky:         org.junit.Assert.assertNotNull(configuration38);
        org.junit.Assert.assertNull(storage39);
        org.junit.Assert.assertNull(storage40);
// flaky:         org.junit.Assert.assertNotNull(configuration41);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList42);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
// flaky:         org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str61, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
// flaky:         org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str62, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList63);
    }

    @Test
    public void test38355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38355");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str12 = storageConfiguration11.getJdbcDriverClass();
        storageConfiguration11.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str15 = storageConfiguration11.getJdbcUrl();
        java.lang.String str16 = storageConfiguration11.getJdbcUrl();
        java.lang.String str17 = storageConfiguration11.getJdbcUrl();
        storageConfiguration11.setUsername("recommender");
        java.lang.String str20 = storageConfiguration11.getJdbcDriverClass();
        configuration0.setStorageConfiguration(storageConfiguration11);
        storageConfiguration11.setUsername("org.plista.kornakapi.web.InvalidParameterException: value");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test38356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38356");
        java.lang.Throwable throwable1 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException2 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: label", throwable1);
        java.lang.String str3 = invalidParameterException2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: label" + "'", str3, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: label");
    }

    @Test
    public void test38357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38357");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", (long) (byte) -1);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        java.lang.String str10 = mutableCandidate0.getLabel();
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        long long14 = mutableCandidate0.getItemID();
        java.lang.String str15 = mutableCandidate0.getLabel();
        long long16 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str8, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str9, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str10, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str13, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-1L) + "'", long14 == (-1L));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str15, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-1L) + "'", long16 == (-1L));
    }

    @Test
    public void test38358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38358");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer4 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 100, (double) 'a');
        double double10 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) (short) -1);
        double double13 = fixedCandidatesIDRescorer1.rescore((long) 35, (double) 52.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer14 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair16 = null;
        double double18 = filteringLongPairRescorer15.rescore(longPair16, (double) (short) 100);
        org.apache.mahout.common.LongPair longPair19 = null;
        double double21 = filteringLongPairRescorer15.rescore(longPair19, (double) 10000L);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 97.0d + "'", double7 == 97.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + (-1.0d) + "'", double10 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 52.0d + "'", double13 == 52.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10000.0d + "'", double21 == 10000.0d);
    }

    @Test
    public void test38359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38359");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        long long5 = mutablePreference0.getUserID();
        long long6 = mutablePreference0.getUserID();
        mutablePreference0.set((long) '4', (long) 0, (float) (short) 0);
        mutablePreference0.set((long) (short) 100, (long) (short) -1, 97.0f);
        java.lang.String str15 = mutablePreference0.toString();
        java.lang.Class<?> wildcardClass16 = mutablePreference0.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=97.0}" + "'", str15, "MutablePreference{userID=100, itemID=-1, value=97.0}");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test38360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38360");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        java.lang.String str6 = setPreferenceServlet0.getServletInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration7 = setPreferenceServlet0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test38361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38361");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str10 = storageConfiguration6.getPassword();
        java.lang.String str11 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setUsername("hi!");
        storageConfiguration6.setJdbcDriverClass("file");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.lang.String str17 = storageConfiguration6.getJdbcUrl();
        java.lang.String str18 = storageConfiguration6.getJdbcUrl();
        storageConfiguration6.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str21 = storageConfiguration6.getPassword();
        java.lang.String str22 = storageConfiguration6.getJdbcUrl();
        storageConfiguration6.setPassword("org.plista.kornakapi.web.MissingParameterException: hi!");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test38362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38362");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        javax.servlet.ServletConfig servletConfig7 = deleteCandidateServlet2.getServletConfig();
        javax.servlet.ServletConfig servletConfig8 = null;
        deleteCandidateServlet2.init(servletConfig8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str11 = batchDeleteCandidatesServlet10.getServletInfo();
        java.lang.String str12 = batchDeleteCandidatesServlet10.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet13 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        setPreferenceServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet13.init((javax.servlet.ServletConfig) recommendServlet18);
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) setPreferenceServlet13);
        batchDeleteCandidatesServlet10.destroy();
        batchDeleteCandidatesServlet10.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet23 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str24 = trainServlet23.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet25 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet25.destroy();
        javax.servlet.ServletConfig servletConfig27 = deleteCandidateServlet25.getServletConfig();
        deleteCandidateServlet25.destroy();
        trainServlet23.init((javax.servlet.ServletConfig) deleteCandidateServlet25);
        java.lang.String str30 = trainServlet23.getServletInfo();
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) trainServlet23);
        java.lang.String str32 = trainServlet23.getServletInfo();
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) trainServlet23);
        javax.servlet.ServletRequest servletRequest34 = null;
        javax.servlet.ServletResponse servletResponse35 = null;
        // The following exception was thrown during execution in test generation
        try {
            trainServlet23.service(servletRequest34, servletResponse35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test38363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38363");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage10 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener12 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(storage10);
        org.junit.Assert.assertNull(storage11);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener12);
    }

    @Test
    public void test38364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38364");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 1);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setAlpha((double) 100.0f);
        int int18 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(35);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 35 + "'", int18 == 35);
    }

    @Test
    public void test38365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38365");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        int int2 = 0; // flaky: configuration1.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.Configuration configuration3 = new org.plista.kornakapi.core.config.Configuration();
        configuration3.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setRetrainCronExpression("");
        itembasedRecommenderConfig6.setSimilarItemsPerItem(10);
        java.lang.String str14 = itembasedRecommenderConfig6.getName();
        configuration3.addItembasedRecommender(itembasedRecommenderConfig6);
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig6);
        java.lang.String str17 = itembasedRecommenderConfig6.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        int int19 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) (short) 10);
        itembasedRecommenderConfig6.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertTrue("'" + int2 + "' != '" + 32 + "'", int2 == 32);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
    }

    @Test
    public void test38366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38366");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setLambda((double) '4');
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 0);
        factorizationbasedRecommenderConfig0.setLambda((double) (-1));
        int int12 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test38367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38367");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration3 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
// flaky:         org.junit.Assert.assertNotNull(configuration3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(storage9);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener10);
    }

    @Test
    public void test38368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38368");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.lang.String str9 = configuration0.getModelDirectory();
        int int10 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.storage.Storage storage11 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap12 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap13 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler14 = null;
        org.plista.kornakapi.web.Components components15 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration16 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler17 = null; // flaky: components15.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = null; // flaky: components15.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration19 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration22 = null; // flaky: components15.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener23 = null; // flaky: components15.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener24 = null; // flaky: components15.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage25 = null; // flaky: components15.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener26 = null; // flaky: components15.preferenceChangeListener();
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration0, storage11, strMap12, strMap13, trainingScheduler14, preferenceChangeListener26);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
// flaky:         org.junit.Assert.assertNotNull(components15);
// flaky:         org.junit.Assert.assertNotNull(configuration16);
        org.junit.Assert.assertNull(trainingScheduler17);
        org.junit.Assert.assertNull(trainingScheduler18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
// flaky:         org.junit.Assert.assertNotNull(configuration22);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener23);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener24);
        org.junit.Assert.assertNull(storage25);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener26);
    }

    @Test
    public void test38369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38369");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) (byte) -1);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig0.setLambda((double) 100L);
        java.lang.String str17 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setAlpha((double) ' ');
        factorizationbasedRecommenderConfig0.setName("label");
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        int int24 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer25 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.io.File file26 = null;
        org.plista.kornakapi.core.storage.Storage storage27 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender28 = null;
        // The following exception was thrown during execution in test generation
        try {
            factorizationbasedInMemoryTrainer25.train(file26, storage27, recommender28, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 100 + "'", int24 == 100);
    }

    @Test
    public void test38370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38370");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test38371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38371");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
    }

    @Test
    public void test38372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38372");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = configuration0.getStorageConfiguration();
        java.lang.String str7 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str9 = itembasedRecommenderConfig8.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig8);
        itembasedRecommenderConfig8.setSimilarityClass("recommender");
        java.lang.String str13 = itembasedRecommenderConfig8.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig8);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig8);
        itembasedRecommenderConfig8.setSimilarItemsPerItem(1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(storageConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "recommender" + "'", str13, "recommender");
    }

    @Test
    public void test38373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38373");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null; // flaky: configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        boolean boolean7 = factorizationbasedRecommenderConfig4.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig4.setNumberOfIterations((int) (byte) 100);
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration2.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = null; // flaky: configuration2.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components13 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components13.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration15 = null; // flaky: components13.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage16 = null; // flaky: components13.storage();
        org.plista.kornakapi.core.storage.Storage storage17 = null; // flaky: components13.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener18 = null; // flaky: components13.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration19 = null; // flaky: components13.getConfiguration();
        org.plista.kornakapi.web.Components components20 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration21 = components20.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler22 = components20.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler23 = components20.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration24 = components20.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration25 = components20.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig26 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig26.setSimilarityClass("");
        java.lang.String str29 = itembasedRecommenderConfig26.getName();
        java.lang.String str30 = itembasedRecommenderConfig26.getSimilarityClass();
        itembasedRecommenderConfig26.setName("");
        java.lang.String str33 = itembasedRecommenderConfig26.getSimilarityClass();
        configuration25.addItembasedRecommender(itembasedRecommenderConfig26);
        itembasedRecommenderConfig26.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration19.addItembasedRecommender(itembasedRecommenderConfig26);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration38 = null; // flaky: configuration19.getStorageConfiguration();
// flaky:         configuration2.setStorageConfiguration(storageConfiguration38);
// flaky:         storageConfiguration38.setPassword("MutablePreference{userID=32, itemID=1, value=1.0}");
        java.lang.Class<?> wildcardClass42 = null; // flaky: storageConfiguration38.getClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
// flaky:         org.junit.Assert.assertNotNull(components13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
// flaky:         org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNull(storage16);
        org.junit.Assert.assertNull(storage17);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener18);
// flaky:         org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertNotNull(components20);
        org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(trainingScheduler22);
        org.junit.Assert.assertNull(trainingScheduler23);
        org.junit.Assert.assertNotNull(configuration24);
        org.junit.Assert.assertNotNull(configuration25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration38);
// flaky:         org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test38374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38374");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setJdbcDriverClass("batchSize");
        java.lang.String str15 = storageConfiguration7.getPassword();
        storageConfiguration7.setUsername("batchSize");
        java.lang.String str18 = storageConfiguration7.getJdbcUrl();
        storageConfiguration7.setUsername("MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         configuration6.setStorageConfiguration(storageConfiguration7);
        java.lang.String str22 = storageConfiguration7.getUsername();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(trainingScheduler5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str22, "MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test38375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38375");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        int int3 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
    }

    @Test
    public void test38376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38376");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener3);
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener11 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener11);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler17 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler17, "MutablePreference{userID=10, itemID=10000, value=100.0}", (int) 'a');
        delegatingPreferenceChangeListener11.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener20);
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
    }

    @Test
    public void test38377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38377");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.lang.String str9 = configuration0.getModelDirectory();
        int int10 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str13 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str16 = storageConfiguration12.getJdbcUrl();
        java.lang.String str17 = storageConfiguration12.getJdbcDriverClass();
        java.lang.String str18 = storageConfiguration12.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration12.getPassword();
        java.lang.String str20 = storageConfiguration12.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration12.getPassword();
        storageConfiguration12.setUsername("MutablePreference{userID=100, itemID=0, value=0.0}");
        configuration0.setStorageConfiguration(storageConfiguration12);
        storageConfiguration12.setJdbcUrl("");
        java.lang.String str27 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setJdbcUrl("MutablePreference{userID=32, itemID=-1, value=10.0}");
        storageConfiguration12.setJdbcUrl("MutablePreference{userID=35, itemID=-1, value=0.0}");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNull(storageConfiguration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test38378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38378");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = null; // flaky: configuration1.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setRetrainAfterPreferenceChanges((int) (short) 100);
        int int11 = itembasedRecommenderConfig5.getSimilarItemsPerItem();
        itembasedRecommenderConfig5.setSimilarItemsPerItem(100);
        java.lang.String str14 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setSimilarityClass("");
// flaky:         configuration1.addItembasedRecommender(itembasedRecommenderConfig5);
// flaky:         configuration1.setNumProcessorsForTraining((int) '4');
// flaky:         configuration1.setNumProcessorsForTraining(10);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str3, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test38379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38379");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet2 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet3 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        setPreferenceServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet2.init((javax.servlet.ServletConfig) recommendServlet7);
        recommendServlet7.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet7);
        java.lang.String str11 = addCandidateServlet0.getServletInfo();
        addCandidateServlet0.init();
        javax.servlet.ServletConfig servletConfig13 = addCandidateServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet14 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet15.getServletConfig();
        addCandidateServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        batchSetPreferencesServlet15.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str22 = recommendServlet21.getServletInfo();
        javax.servlet.ServletConfig servletConfig23 = recommendServlet21.getServletConfig();
        java.lang.String str24 = recommendServlet21.getServletInfo();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) recommendServlet21);
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet21);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet27 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet27.destroy();
        trainServlet27.destroy();
        java.lang.String str30 = trainServlet27.getServletInfo();
        java.lang.String str31 = trainServlet27.getServletInfo();
        javax.servlet.ServletConfig servletConfig32 = trainServlet27.getServletConfig();
        javax.servlet.ServletConfig servletConfig33 = trainServlet27.getServletConfig();
        trainServlet27.destroy();
        trainServlet27.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) trainServlet27);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet37 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet38 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet37.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet40 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str41 = batchDeleteCandidatesServlet40.getServletInfo();
        batchDeleteCandidatesServlet40.init();
        javax.servlet.ServletConfig servletConfig43 = null;
        batchDeleteCandidatesServlet40.init(servletConfig43);
        recommendServlet37.init(servletConfig43);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet46 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet47 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet46.init((javax.servlet.ServletConfig) batchSetPreferencesServlet47);
        javax.servlet.ServletConfig servletConfig49 = batchSetPreferencesServlet46.getServletConfig();
        batchSetPreferencesServlet46.destroy();
        javax.servlet.ServletConfig servletConfig51 = batchSetPreferencesServlet46.getServletConfig();
        batchSetPreferencesServlet46.init();
        recommendServlet37.init((javax.servlet.ServletConfig) batchSetPreferencesServlet46);
        trainServlet27.init((javax.servlet.ServletConfig) batchSetPreferencesServlet46);
        trainServlet27.destroy();
        javax.servlet.ServletRequest servletRequest56 = null;
        javax.servlet.ServletResponse servletResponse57 = null;
        // The following exception was thrown during execution in test generation
        try {
            trainServlet27.service(servletRequest56, servletResponse57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertNull(servletConfig33);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertNotNull(servletConfig49);
        org.junit.Assert.assertNotNull(servletConfig51);
    }

    @Test
    public void test38380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38380");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        int int7 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components9 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components9.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components9.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage12 = null; // flaky: components9.storage();
        org.plista.kornakapi.core.config.Configuration configuration13 = null; // flaky: components9.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = null; // flaky: configuration13.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = null; // flaky: configuration13.getStorageConfiguration();
// flaky:         storageConfiguration15.setPassword("org.plista.kornakapi.web.InvalidParameterException: ");
// flaky:         storageConfiguration15.setUsername("MutablePreference{userID=0, itemID=0, value=10.0}");
// flaky:         storageConfiguration15.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}");
        configuration0.setStorageConfiguration(storageConfiguration15);
// flaky:         storageConfiguration15.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=0, value=97.0}");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
// flaky:         org.junit.Assert.assertNotNull(components9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(storage12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration14);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration15);
    }

    @Test
    public void test38381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38381");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener4 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener4.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener6 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener6.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener4.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener6);
        delegatingPreferenceChangeListener6.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener6.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener11 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener13 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener13.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener13.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener13);
        delegatingPreferenceChangeListener13.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener6.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener13);
        org.plista.kornakapi.web.Components components19 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration20 = null; // flaky: components19.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components19.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler22 = null; // flaky: components19.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler23 = null; // flaky: components19.scheduler();
        org.plista.kornakapi.core.storage.Storage storage24 = null; // flaky: components19.storage();
        org.plista.kornakapi.core.config.Configuration configuration25 = null; // flaky: components19.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener26 = null; // flaky: components19.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener27 = null; // flaky: components19.preferenceChangeListener();
        delegatingPreferenceChangeListener13.addDelegate(preferenceChangeListener27);
// flaky:         delegatingPreferenceChangeListener13.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener13.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener13.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener13.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener13);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener36 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener34.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener36);
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler41 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener44 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler41, "label", (int) ' ');
        delegatingPreferenceChangeListener36.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener44);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener46 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener49 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener51 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener51);
        delegatingPreferenceChangeListener46.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener49);
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components57 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage58 = components57.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener59 = components57.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener60 = components57.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener61 = components57.preferenceChangeListener();
        delegatingPreferenceChangeListener49.addDelegate(preferenceChangeListener61);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener63 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener63.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener63.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener63.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler67 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener70 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler67, "label", (int) '#');
        delegatingPreferenceChangeListener63.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener70);
        delegatingPreferenceChangeListener49.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener63);
// flaky:         delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener49);
// flaky:         delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener13.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener49);
// flaky:         org.junit.Assert.assertNotNull(components19);
// flaky:         org.junit.Assert.assertNotNull(configuration20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(trainingScheduler22);
        org.junit.Assert.assertNull(trainingScheduler23);
        org.junit.Assert.assertNull(storage24);
// flaky:         org.junit.Assert.assertNotNull(configuration25);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener26);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener27);
        org.junit.Assert.assertNotNull(components57);
        org.junit.Assert.assertNull(storage58);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener59);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener60);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener61);
    }

    @Test
    public void test38382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38382");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        int int3 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig4 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str5 = itembasedRecommenderConfig4.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig4);
        org.plista.kornakapi.web.Components components7 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components7.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components7.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str13 = itembasedRecommenderConfig12.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig12);
        java.lang.String str15 = itembasedRecommenderConfig12.getSimilarityClass();
        itembasedRecommenderConfig12.setRetrainAfterPreferenceChanges((int) (short) 100);
// flaky:         configuration11.addItembasedRecommender(itembasedRecommenderConfig12);
        int int19 = itembasedRecommenderConfig12.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig12);
        itembasedRecommenderConfig12.setSimilarityClass("MutablePreference{userID=100, itemID=0, value=35.0}");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig12);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str5);
// flaky:         org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(trainingScheduler10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test38383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38383");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double7 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setAlpha((double) 52L);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int11 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) ' ');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test38384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38384");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.lang.String str5 = null; // flaky: configuration4.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration4.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components7 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage10 = null; // flaky: components7.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = null; // flaky: components7.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null; // flaky: components7.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener13 = null; // flaky: components7.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig15 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig15.setSimilarityClass("");
        java.lang.String str18 = itembasedRecommenderConfig15.getName();
        java.lang.String str19 = itembasedRecommenderConfig15.getSimilarityClass();
        java.lang.String str20 = itembasedRecommenderConfig15.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer21 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig15);
// flaky:         configuration14.addItembasedRecommender(itembasedRecommenderConfig15);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig15);
// flaky:         configuration4.setNumProcessorsForTraining((int) (short) 1);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList26 = null; // flaky: configuration4.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig27 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double28 = factorizationbasedRecommenderConfig27.getAlpha();
        double double29 = factorizationbasedRecommenderConfig27.getLambda();
        int int30 = factorizationbasedRecommenderConfig27.getNumberOfFeatures();
        factorizationbasedRecommenderConfig27.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig27.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig27.setLambda((double) (short) 1);
        boolean boolean37 = factorizationbasedRecommenderConfig27.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer38 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig27);
        boolean boolean39 = factorizationbasedRecommenderConfig27.isUsesImplicitFeedback();
        double double40 = factorizationbasedRecommenderConfig27.getLambda();
        factorizationbasedRecommenderConfig27.setAlpha((double) (-1L));
        factorizationbasedRecommenderConfig27.setLambda((double) 10000L);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig27);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str5, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(storage10);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener11);
        org.junit.Assert.assertNull(trainingScheduler12);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 1.0d + "'", double40 == 1.0d);
    }

    @Test
    public void test38385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38385");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (byte) 1, (double) 10000.0f);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) 10000, 0.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double13 = fixedCandidatesIDRescorer1.rescore((long) (short) -1, (double) (byte) -1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer14 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair15 = null;
        double double17 = filteringLongPairRescorer14.rescore(longPair15, (double) (short) 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10000.0d + "'", double6 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + (-1.0d) + "'", double13 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test38386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38386");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage10 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener12 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(storage10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener12);
    }

    @Test
    public void test38387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38387");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        boolean boolean6 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig3);
        double double8 = factorizationbasedRecommenderConfig3.getAlpha();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
// flaky:         configuration2.setModelDirectory("MutablePreference{userID=0, itemID=0, value=52.0}");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList12 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.Configuration configuration13 = new org.plista.kornakapi.core.config.Configuration();
        configuration13.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str16 = configuration13.getModelDirectory();
        configuration13.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig19 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double20 = factorizationbasedRecommenderConfig19.getAlpha();
        configuration13.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig19);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration22 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str23 = storageConfiguration22.getUsername();
        java.lang.String str24 = storageConfiguration22.getJdbcDriverClass();
        java.lang.String str25 = storageConfiguration22.getPassword();
        storageConfiguration22.setJdbcUrl("file");
        configuration13.setStorageConfiguration(storageConfiguration22);
        org.plista.kornakapi.web.Components components29 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components29.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList31 = null; // flaky: configuration30.getFactorizationbasedRecommenders();
        java.lang.String str32 = null; // flaky: configuration30.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList33 = null; // flaky: configuration30.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig34 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig34.setName("recommender");
// flaky:         configuration30.addItembasedRecommender(itembasedRecommenderConfig34);
        configuration13.addItembasedRecommender(itembasedRecommenderConfig34);
        itembasedRecommenderConfig34.setSimilarItemsPerItem(0);
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig34);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig42 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double43 = factorizationbasedRecommenderConfig42.getAlpha();
        double double44 = factorizationbasedRecommenderConfig42.getLambda();
        int int45 = factorizationbasedRecommenderConfig42.getNumberOfFeatures();
        factorizationbasedRecommenderConfig42.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig42.setNumberOfFeatures((int) (short) 100);
        boolean boolean50 = factorizationbasedRecommenderConfig42.isUsesImplicitFeedback();
        int int51 = factorizationbasedRecommenderConfig42.getNumberOfFeatures();
// flaky:         configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig42);
        double double53 = factorizationbasedRecommenderConfig42.getLambda();
        factorizationbasedRecommenderConfig42.setLambda((double) 100);
        double double56 = factorizationbasedRecommenderConfig42.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer57 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig42);
        int int58 = factorizationbasedRecommenderConfig42.getNumberOfIterations();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
// flaky:         org.junit.Assert.assertNotNull(components29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList31);
// flaky:         org.junit.Assert.assertEquals("'" + str32 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str32, "MutablePreference{userID=0, itemID=0, value=52.0}");
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList33);
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 100 + "'", int51 == 100);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test38388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38388");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 100);
        int int6 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(100);
        java.lang.String str9 = itembasedRecommenderConfig0.getSimilarityClass();
        int int10 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        java.lang.String str11 = itembasedRecommenderConfig0.getSimilarityClass();
        int int12 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 100 + "'", int10 == 100);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
    }

    @Test
    public void test38389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38389");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        java.lang.String str13 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str15 = itembasedRecommenderConfig14.getSimilarityClass();
        java.lang.String str16 = itembasedRecommenderConfig14.getSimilarityClass();
        int int17 = itembasedRecommenderConfig14.getRetrainAfterPreferenceChanges();
        int int18 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig14);
        org.plista.kornakapi.core.config.Configuration configuration20 = new org.plista.kornakapi.core.config.Configuration();
        configuration20.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str23 = configuration20.getModelDirectory();
        configuration20.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = configuration20.getStorageConfiguration();
        java.lang.String str27 = configuration20.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig28 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str29 = itembasedRecommenderConfig28.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer30 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig28);
        itembasedRecommenderConfig28.setSimilarityClass("recommender");
        java.lang.String str33 = itembasedRecommenderConfig28.getSimilarityClass();
        configuration20.addItembasedRecommender(itembasedRecommenderConfig28);
        configuration20.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig37 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str38 = itembasedRecommenderConfig37.getSimilarityClass();
        int int39 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
        int int40 = itembasedRecommenderConfig37.getRetrainAfterPreferenceChanges();
        int int41 = itembasedRecommenderConfig37.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig37);
        int int43 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
        configuration20.addItembasedRecommender(itembasedRecommenderConfig37);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig37);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration46 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str47 = storageConfiguration46.getJdbcDriverClass();
        storageConfiguration46.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration46.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str52 = storageConfiguration46.getUsername();
        configuration0.setStorageConfiguration(storageConfiguration46);
        java.lang.String str54 = storageConfiguration46.getUsername();
        java.lang.String str55 = storageConfiguration46.getUsername();
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(storageConfiguration26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "recommender" + "'", str33, "recommender");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str52, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str54, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str55, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38390");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("");
        java.lang.String str6 = itembasedRecommenderConfig0.getName();
        int int7 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setRetrainCronExpression("howMany");
        int int10 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        java.lang.String str11 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str12 = itembasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "howMany" + "'", str12, "howMany");
    }

    @Test
    public void test38391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38391");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = null;
        batchDeleteCandidatesServlet0.init(servletConfig3);
        javax.servlet.ServletConfig servletConfig5 = batchDeleteCandidatesServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig6 = batchDeleteCandidatesServlet0.getServletConfig();
        java.lang.String str7 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig8 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str11 = batchDeleteCandidatesServlet10.getServletInfo();
        java.lang.String str12 = batchDeleteCandidatesServlet10.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet13 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        setPreferenceServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet13.init((javax.servlet.ServletConfig) recommendServlet18);
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) setPreferenceServlet13);
        batchDeleteCandidatesServlet10.destroy();
        batchDeleteCandidatesServlet10.init();
        batchDeleteCandidatesServlet10.init();
        batchDeleteCandidatesServlet10.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig28 = batchSetPreferencesServlet26.getServletConfig();
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        batchDeleteCandidatesServlet10.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet32 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        recommendServlet32.destroy();
        java.lang.String str36 = recommendServlet32.getServletInfo();
        recommendServlet32.init();
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) recommendServlet32);
        javax.servlet.ServletConfig servletConfig39 = recommendServlet32.getServletConfig();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertNull(servletConfig6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNull(servletConfig28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(servletConfig39);
    }

    @Test
    public void test38392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38392");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        batchAddCandidatesServlet0.init();
        java.lang.String str4 = batchAddCandidatesServlet0.getServletInfo();
        batchAddCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet6 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str7 = trainServlet6.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet8 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet8.destroy();
        javax.servlet.ServletConfig servletConfig10 = deleteCandidateServlet8.getServletConfig();
        deleteCandidateServlet8.destroy();
        trainServlet6.init((javax.servlet.ServletConfig) deleteCandidateServlet8);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration14 = batchAddCandidatesServlet0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig10);
    }

    @Test
    public void test38393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38393");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setRetrainCronExpression("userID");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        double double15 = factorizationbasedRecommenderConfig13.getLambda();
        int int16 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(false);
        int int19 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        factorizationbasedRecommenderConfig13.setLambda((double) 0);
        factorizationbasedRecommenderConfig13.setName("userID");
        int int24 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        int int25 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        factorizationbasedRecommenderConfig13.setNumberOfFeatures((int) (short) 1);
        factorizationbasedRecommenderConfig13.setRetrainAfterPreferenceChanges(10);
        factorizationbasedRecommenderConfig13.setAlpha((double) 100.0f);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        org.plista.kornakapi.web.Components components33 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration34 = null; // flaky: components33.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration35 = null; // flaky: components33.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage36 = null; // flaky: components33.storage();
        org.plista.kornakapi.core.storage.Storage storage37 = null; // flaky: components33.storage();
        org.plista.kornakapi.core.config.Configuration configuration38 = null; // flaky: components33.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage39 = null; // flaky: components33.storage();
        org.plista.kornakapi.core.config.Configuration configuration40 = null; // flaky: components33.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener41 = null; // flaky: components33.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration42 = null; // flaky: components33.getConfiguration();
        org.plista.kornakapi.web.Components components43 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration44 = null; // flaky: components43.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler45 = null; // flaky: components43.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler46 = null; // flaky: components43.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration47 = null; // flaky: components43.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration48 = null; // flaky: components43.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration49 = null; // flaky: components43.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration50 = null; // flaky: configuration49.getStorageConfiguration();
// flaky:         configuration42.setStorageConfiguration(storageConfiguration50);
// flaky:         storageConfiguration50.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=100.0}");
        configuration0.setStorageConfiguration(storageConfiguration50);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList55 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration56 = configuration0.getStorageConfiguration();
        java.lang.String str57 = null; // flaky: storageConfiguration56.getUsername();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
// flaky:         org.junit.Assert.assertNotNull(components33);
// flaky:         org.junit.Assert.assertNotNull(configuration34);
// flaky:         org.junit.Assert.assertNotNull(configuration35);
        org.junit.Assert.assertNull(storage36);
        org.junit.Assert.assertNull(storage37);
// flaky:         org.junit.Assert.assertNotNull(configuration38);
        org.junit.Assert.assertNull(storage39);
// flaky:         org.junit.Assert.assertNotNull(configuration40);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener41);
// flaky:         org.junit.Assert.assertNotNull(configuration42);
// flaky:         org.junit.Assert.assertNotNull(components43);
// flaky:         org.junit.Assert.assertNotNull(configuration44);
        org.junit.Assert.assertNull(trainingScheduler45);
        org.junit.Assert.assertNull(trainingScheduler46);
// flaky:         org.junit.Assert.assertNotNull(configuration47);
// flaky:         org.junit.Assert.assertNotNull(configuration48);
// flaky:         org.junit.Assert.assertNotNull(configuration49);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration50);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList55);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration56);
// flaky:         org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str57, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}");
    }

    @Test
    public void test38394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38394");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        long long5 = mutableCandidate0.getItemID();
        long long6 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: itemIDs", (long) (byte) -1);
        long long10 = mutableCandidate0.getItemID();
        long long11 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=35.0}", 32L);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=97, value=10.0}", 0L);
        java.lang.String str18 = mutableCandidate0.getLabel();
        mutableCandidate0.set("hi!", (long) (byte) 100);
        mutableCandidate0.set("", (long) 10000);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=0.0}", (long) 52);
        long long28 = mutableCandidate0.getItemID();
        long long29 = mutableCandidate0.getItemID();
        java.lang.String str30 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=97, value=10.0}" + "'", str18, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=97, value=10.0}");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 52L + "'", long28 == 52L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 52L + "'", long29 == 52L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str30, "MutablePreference{userID=0, itemID=0, value=0.0}");
    }

    @Test
    public void test38395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38395");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
// flaky:         configuration1.setNumProcessorsForTraining((int) (byte) 1);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList4 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str6 = storageConfiguration5.getJdbcDriverClass();
        storageConfiguration5.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str9 = storageConfiguration5.getJdbcUrl();
        java.lang.String str10 = storageConfiguration5.getJdbcDriverClass();
        storageConfiguration5.setJdbcUrl("hi!");
        java.lang.String str13 = storageConfiguration5.getPassword();
        storageConfiguration5.setJdbcUrl("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration5.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration5);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig19 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double20 = factorizationbasedRecommenderConfig19.getAlpha();
        double double21 = factorizationbasedRecommenderConfig19.getLambda();
        int int22 = factorizationbasedRecommenderConfig19.getNumberOfFeatures();
        factorizationbasedRecommenderConfig19.setUsesImplicitFeedback(true);
        double double25 = factorizationbasedRecommenderConfig19.getAlpha();
        java.lang.String str26 = factorizationbasedRecommenderConfig19.getRetrainCronExpression();
        int int27 = factorizationbasedRecommenderConfig19.getRetrainAfterPreferenceChanges();
        int int28 = factorizationbasedRecommenderConfig19.getNumberOfIterations();
        factorizationbasedRecommenderConfig19.setNumberOfFeatures((int) '#');
        int int31 = factorizationbasedRecommenderConfig19.getNumberOfFeatures();
        factorizationbasedRecommenderConfig19.setNumberOfIterations((int) 'a');
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig19);
        java.lang.String str35 = factorizationbasedRecommenderConfig19.getRetrainCronExpression();
        boolean boolean36 = factorizationbasedRecommenderConfig19.isUsesImplicitFeedback();
        java.lang.String str37 = factorizationbasedRecommenderConfig19.getName();
        factorizationbasedRecommenderConfig19.setLambda((double) 1.0f);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 35 + "'", int31 == 35);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test38396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38396");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler12, "label", (int) ' ');
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener15);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener21 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener23 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener23.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener21.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener23);
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener21);
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        org.plista.kornakapi.web.Components components29 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components29.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler31 = null; // flaky: components29.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler32 = null; // flaky: components29.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration33 = null; // flaky: components29.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration34 = null; // flaky: components29.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration35 = null; // flaky: components29.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage36 = null; // flaky: components29.storage();
        org.plista.kornakapi.core.storage.Storage storage37 = null; // flaky: components29.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler38 = null; // flaky: components29.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener39 = null; // flaky: components29.preferenceChangeListener();
        delegatingPreferenceChangeListener18.addDelegate(preferenceChangeListener39);
// flaky:         delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
// flaky:         org.junit.Assert.assertNotNull(components29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertNull(trainingScheduler31);
        org.junit.Assert.assertNull(trainingScheduler32);
// flaky:         org.junit.Assert.assertNotNull(configuration33);
// flaky:         org.junit.Assert.assertNotNull(configuration34);
// flaky:         org.junit.Assert.assertNotNull(configuration35);
        org.junit.Assert.assertNull(storage36);
        org.junit.Assert.assertNull(storage37);
        org.junit.Assert.assertNull(trainingScheduler38);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener39);
    }

    @Test
    public void test38397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38397");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("hi!", (-1L));
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        long long10 = mutableCandidate0.getItemID();
        long long11 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
    }

    @Test
    public void test38398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38398");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.web.Components components3 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components3.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components3.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components3.storage();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components3.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components3.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components3.getConfiguration();
        org.plista.kornakapi.web.Components components10 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components10.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null; // flaky: components10.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = null; // flaky: components10.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components10.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration15 = null; // flaky: components10.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig16.setSimilarityClass("");
        java.lang.String str19 = itembasedRecommenderConfig16.getName();
        java.lang.String str20 = itembasedRecommenderConfig16.getSimilarityClass();
        itembasedRecommenderConfig16.setName("");
        java.lang.String str23 = itembasedRecommenderConfig16.getSimilarityClass();
// flaky:         configuration15.addItembasedRecommender(itembasedRecommenderConfig16);
        itembasedRecommenderConfig16.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration9.addItembasedRecommender(itembasedRecommenderConfig16);
        itembasedRecommenderConfig16.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: ");
        java.lang.String str30 = itembasedRecommenderConfig16.getName();
        int int31 = itembasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        java.lang.String str32 = itembasedRecommenderConfig16.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig16);
        int int34 = configuration0.getNumProcessorsForTraining();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
// flaky:         org.junit.Assert.assertNotNull(components3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(components10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(trainingScheduler12);
        org.junit.Assert.assertNull(trainingScheduler13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
// flaky:         org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: " + "'", str32, "org.plista.kornakapi.web.InvalidParameterException: ");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test38399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38399");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        java.lang.String str8 = mutablePreference0.toString();
        float float9 = mutablePreference0.getValue();
        long long10 = mutablePreference0.getUserID();
        mutablePreference0.set((long) (short) -1, 100L, (float) 10000);
        mutablePreference0.set((long) (byte) 0, (long) 32, 35.0f);
        mutablePreference0.set(52L, 1L, (float) 100L);
        mutablePreference0.setValue((float) 10000L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str8, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9 == 0.0f);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
    }

    @Test
    public void test38400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38400");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        java.lang.String str5 = mutableCandidate0.getLabel();
        long long6 = mutableCandidate0.getItemID();
        long long7 = mutableCandidate0.getItemID();
        long long8 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "itemIDs" + "'", str5, "itemIDs");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test38401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38401");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.destroy();
        javax.servlet.ServletConfig servletConfig6 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet8 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet8.init();
        java.lang.String str10 = batchAddCandidatesServlet8.getServletInfo();
        batchAddCandidatesServlet8.init();
        java.lang.String str12 = batchAddCandidatesServlet8.getServletInfo();
        batchAddCandidatesServlet8.init();
        batchAddCandidatesServlet8.init();
        batchAddCandidatesServlet8.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchAddCandidatesServlet8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration17 = batchDeleteCandidatesServlet0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test38402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38402");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage10 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener13 = null; // flaky: components0.preferenceChangeListener();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNull(storage9);
        org.junit.Assert.assertNull(storage10);
        org.junit.Assert.assertNull(storage11);
        org.junit.Assert.assertNull(trainingScheduler12);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener13);
    }

    @Test
    public void test38403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38403");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("");
        factorizationbasedRecommenderConfig0.setName("");
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setAlpha((double) 1);
        factorizationbasedRecommenderConfig0.setAlpha((double) 97);
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setLambda((double) 35);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 1);
        double double19 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=1, itemID=-1, value=10000.0}");
        java.lang.String str22 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int23 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double24 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 97.0d + "'", double24 == 97.0d);
    }

    @Test
    public void test38404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38404");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = new org.plista.kornakapi.core.config.Configuration();
        int int13 = configuration12.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        double double16 = factorizationbasedRecommenderConfig14.getLambda();
        int int17 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        java.lang.String str18 = factorizationbasedRecommenderConfig14.getRetrainCronExpression();
        int int19 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        java.lang.String str20 = factorizationbasedRecommenderConfig14.getName();
        int int21 = factorizationbasedRecommenderConfig14.getNumberOfIterations();
        configuration12.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        factorizationbasedRecommenderConfig14.setUsesImplicitFeedback(false);
        double double25 = factorizationbasedRecommenderConfig14.getAlpha();
        double double26 = factorizationbasedRecommenderConfig14.getLambda();
        double double27 = factorizationbasedRecommenderConfig14.getAlpha();
// flaky:         configuration11.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNull(trainingScheduler9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test38405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38405");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.web.Components components7 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components7.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components7.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig13 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig13.setSimilarityClass("");
        java.lang.String str16 = itembasedRecommenderConfig13.getName();
        java.lang.String str17 = itembasedRecommenderConfig13.getSimilarityClass();
        itembasedRecommenderConfig13.setName("");
        java.lang.String str20 = itembasedRecommenderConfig13.getSimilarityClass();
// flaky:         configuration12.addItembasedRecommender(itembasedRecommenderConfig13);
        itembasedRecommenderConfig13.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration6.addItembasedRecommender(itembasedRecommenderConfig13);
        itembasedRecommenderConfig13.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer27 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig13);
        java.lang.String str28 = itembasedRecommenderConfig13.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer29 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig13);
        itembasedRecommenderConfig13.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: hi!");
        int int32 = itembasedRecommenderConfig13.getSimilarItemsPerItem();
        itembasedRecommenderConfig13.setSimilarItemsPerItem((int) (short) 1);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(trainingScheduler10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
    }

    @Test
    public void test38406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38406");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (-1));
        long long6 = mutablePreference0.getUserID();
        long long7 = mutablePreference0.getItemID();
        long long8 = mutablePreference0.getItemID();
        java.lang.String str9 = mutablePreference0.toString();
        float float10 = mutablePreference0.getValue();
        long long11 = mutablePreference0.getItemID();
        long long12 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "MutablePreference{userID=0, itemID=0, value=-1.0}" + "'", str9, "MutablePreference{userID=0, itemID=0, value=-1.0}");
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + (-1.0f) + "'", float10 == (-1.0f));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test38407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38407");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
// flaky:         configuration2.setModelDirectory("itemID");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = null; // flaky: configuration2.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components7 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components7.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components7.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration11 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components7.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig13 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig13.setSimilarityClass("");
        java.lang.String str16 = itembasedRecommenderConfig13.getName();
        java.lang.String str17 = itembasedRecommenderConfig13.getSimilarityClass();
        itembasedRecommenderConfig13.setName("");
        java.lang.String str20 = itembasedRecommenderConfig13.getSimilarityClass();
// flaky:         configuration12.addItembasedRecommender(itembasedRecommenderConfig13);
        org.plista.kornakapi.web.Components components22 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration23 = components22.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler24 = components22.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler25 = components22.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration26 = components22.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration27 = components22.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig28 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig28.setSimilarityClass("");
        java.lang.String str31 = itembasedRecommenderConfig28.getName();
        java.lang.String str32 = itembasedRecommenderConfig28.getSimilarityClass();
        itembasedRecommenderConfig28.setName("");
        java.lang.String str35 = itembasedRecommenderConfig28.getSimilarityClass();
        configuration27.addItembasedRecommender(itembasedRecommenderConfig28);
        itembasedRecommenderConfig28.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration12.addItembasedRecommender(itembasedRecommenderConfig28);
        itembasedRecommenderConfig28.setSimilarItemsPerItem(1);
// flaky:         configuration2.addItembasedRecommender(itembasedRecommenderConfig28);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration43 = null; // flaky: configuration2.getStorageConfiguration();
        java.lang.String str44 = null; // flaky: storageConfiguration43.getUsername();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(components7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(trainingScheduler10);
// flaky:         org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(components22);
        org.junit.Assert.assertNotNull(configuration23);
        org.junit.Assert.assertNull(trainingScheduler24);
        org.junit.Assert.assertNull(trainingScheduler25);
        org.junit.Assert.assertNotNull(configuration26);
        org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration43);
// flaky:         org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str44, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38408");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("batchSize");
        storageConfiguration0.setPassword("howMany");
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str12 = storageConfiguration0.getJdbcUrl();
        java.lang.String str13 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=52, itemID=-1, value=52.0}");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=0, itemID=100, value=-1.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "howMany" + "'", str13, "howMany");
    }

    @Test
    public void test38409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38409");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setAlpha((double) (-1));
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: howMany");
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((-1));
        factorizationbasedRecommenderConfig0.setAlpha((double) (byte) 10);
        factorizationbasedRecommenderConfig0.setLambda(10.0d);
        int int17 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test38410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38410");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components0.getConfiguration();
// flaky:         configuration12.setNumProcessorsForTraining((int) '#');
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(trainingScheduler11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
    }

    @Test
    public void test38411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38411");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        long long4 = mutablePreference0.getUserID();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.set((long) 100, 0L, (float) 10000L);
        mutablePreference0.set((long) (byte) 10, 10000L, (float) (byte) 100);
        mutablePreference0.setValue((float) 'a');
        mutablePreference0.setValue((float) 32);
        mutablePreference0.setValue((float) 10000);
        long long20 = mutablePreference0.getUserID();
        long long21 = mutablePreference0.getItemID();
        java.lang.String str22 = mutablePreference0.toString();
        long long23 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10L + "'", long20 == 10L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 10000L + "'", long21 == 10000L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "MutablePreference{userID=10, itemID=10000, value=10000.0}" + "'", str22, "MutablePreference{userID=10, itemID=10000, value=10000.0}");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 10L + "'", long23 == 10L);
    }

    @Test
    public void test38412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38412");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig3 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str6 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet7 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        setPreferenceServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet7.init((javax.servlet.ServletConfig) recommendServlet12);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet7);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        javax.servlet.ServletConfig servletConfig16 = batchDeleteCandidatesServlet4.getServletConfig();
        java.lang.String str17 = batchDeleteCandidatesServlet4.getServletInfo();
        batchDeleteCandidatesServlet4.init();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(servletConfig16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test38413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38413");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig2 = trainServlet0.getServletConfig();
        trainServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet4.init();
        java.lang.String str6 = batchAddCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str8 = batchDeleteCandidatesServlet7.getServletInfo();
        batchDeleteCandidatesServlet7.destroy();
        javax.servlet.ServletConfig servletConfig10 = batchDeleteCandidatesServlet7.getServletConfig();
        batchAddCandidatesServlet4.init(servletConfig10);
        batchAddCandidatesServlet4.init();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet13 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet14 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        setPreferenceServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet13.init((javax.servlet.ServletConfig) recommendServlet18);
        recommendServlet18.init();
        batchAddCandidatesServlet4.init((javax.servlet.ServletConfig) recommendServlet18);
        recommendServlet18.init();
        trainServlet0.init((javax.servlet.ServletConfig) recommendServlet18);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet24 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet24.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet26 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet27 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet28 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet27.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet28);
        setPreferenceServlet26.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet28);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet31 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet26.init((javax.servlet.ServletConfig) recommendServlet31);
        recommendServlet31.init();
        addCandidateServlet24.init((javax.servlet.ServletConfig) recommendServlet31);
        java.lang.String str35 = addCandidateServlet24.getServletInfo();
        addCandidateServlet24.init();
        javax.servlet.ServletConfig servletConfig37 = addCandidateServlet24.getServletConfig();
        java.lang.String str38 = addCandidateServlet24.getServletInfo();
        trainServlet0.init((javax.servlet.ServletConfig) addCandidateServlet24);
        org.plista.kornakapi.web.MissingParameterException missingParameterException44 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException46 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException44.addSuppressed((java.lang.Throwable) missingParameterException46);
        java.lang.Throwable[] throwableArray48 = missingParameterException46.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException46);
        java.lang.Throwable[] throwableArray50 = missingParameterException46.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException54 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException57 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException58 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException57);
        missingParameterException54.addSuppressed((java.lang.Throwable) invalidParameterException58);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException60 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: hi!", (java.lang.Throwable) invalidParameterException58);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException61 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: ", (java.lang.Throwable) invalidParameterException58);
        missingParameterException46.addSuppressed((java.lang.Throwable) invalidParameterException61);
        org.plista.kornakapi.web.MissingParameterException missingParameterException68 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException69 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException68);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException70 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException68);
        org.plista.kornakapi.web.MissingParameterException missingParameterException72 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException74 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException72.addSuppressed((java.lang.Throwable) missingParameterException74);
        invalidParameterException70.addSuppressed((java.lang.Throwable) missingParameterException74);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException77 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException70);
        org.plista.kornakapi.web.MissingParameterException missingParameterException81 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException82 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException81);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException83 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException81);
        invalidParameterException77.addSuppressed((java.lang.Throwable) missingParameterException81);
        org.plista.kornakapi.web.MissingParameterException missingParameterException89 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException90 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException89);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException91 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException89);
        java.lang.Throwable[] throwableArray92 = missingParameterException89.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException93 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException89);
        missingParameterException81.addSuppressed((java.lang.Throwable) missingParameterException89);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException95 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) missingParameterException81);
        missingParameterException46.addSuppressed((java.lang.Throwable) missingParameterException81);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException97 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: recommender", (java.lang.Throwable) missingParameterException81);
        java.lang.Throwable[] throwableArray98 = invalidParameterException97.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            trainServlet0.log("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=100.0}", (java.lang.Throwable) invalidParameterException97);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(servletConfig10);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNotNull(servletConfig37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(throwableArray98);
    }

    @Test
    public void test38414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38414");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str2 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (byte) 1);
        java.lang.String str5 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str6 = itembasedRecommenderConfig0.getSimilarityClass();
        int int7 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 10);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test38415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38415");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) 10);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer13 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double16 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) (byte) 1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer17 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer20 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer21 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
    }

    @Test
    public void test38416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38416");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getName();
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("");
        itembasedRecommenderConfig0.setName("itemIDs");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str10 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=-1, itemID=-1, value=0.0}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
    }

    @Test
    public void test38417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38417");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig14);
        factorizationbasedRecommenderConfig14.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig14.setNumberOfIterations((int) '#');
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        configuration0.setNumProcessorsForTraining((int) (byte) 10);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig24 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig24.setSimilarityClass("");
        java.lang.String str27 = itembasedRecommenderConfig24.getName();
        java.lang.String str28 = itembasedRecommenderConfig24.getSimilarityClass();
        itembasedRecommenderConfig24.setName("");
        itembasedRecommenderConfig24.setRetrainCronExpression("label");
        int int33 = itembasedRecommenderConfig24.getSimilarItemsPerItem();
        itembasedRecommenderConfig24.setSimilarItemsPerItem((int) '4');
        configuration0.addItembasedRecommender(itembasedRecommenderConfig24);
        java.lang.String str37 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration38 = configuration0.getStorageConfiguration();
        configuration0.setModelDirectory("");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str37, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertNotNull(storageConfiguration38);
    }

    @Test
    public void test38418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38418");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=0, itemID=0, value=100.0}");
        int int15 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) 'a');
        int int18 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000 + "'", int15 == 10000);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test38419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38419");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setRetrainAfterPreferenceChanges((int) (short) 100);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = null; // flaky: configuration4.getStorageConfiguration();
        java.lang.String str14 = null; // flaky: configuration4.getModelDirectory();
// flaky:         configuration4.setNumProcessorsForTraining(52);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration17 = null; // flaky: configuration4.getStorageConfiguration();
        java.lang.String str18 = null; // flaky: configuration4.getModelDirectory();
// flaky:         configuration4.setModelDirectory("MutablePreference{userID=0, itemID=10000, value=0.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration12);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "itemID" + "'", str14, "itemID");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration17);
// flaky:         org.junit.Assert.assertEquals("'" + str18 + "' != '" + "itemID" + "'", str18, "itemID");
    }

    @Test
    public void test38420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38420");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str8 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=1.0}");
        java.lang.String str12 = storageConfiguration0.getUsername();
        java.lang.String str13 = storageConfiguration0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str12, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test38421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38421");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig4.setNumberOfFeatures((int) (byte) 1);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        double double13 = factorizationbasedRecommenderConfig4.getAlpha();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(100);
        double double16 = factorizationbasedRecommenderConfig4.getLambda();
        factorizationbasedRecommenderConfig4.setUsesImplicitFeedback(false);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer19 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=10000, value=0.0}");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test38422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38422");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException4 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException3);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException3);
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException9 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException7.addSuppressed((java.lang.Throwable) missingParameterException9);
        invalidParameterException5.addSuppressed((java.lang.Throwable) missingParameterException9);
        java.lang.Throwable[] throwableArray12 = missingParameterException9.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException15 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException15);
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.MissingParameterException missingParameterException24 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException24.addSuppressed((java.lang.Throwable) missingParameterException26);
        invalidParameterException22.addSuppressed((java.lang.Throwable) missingParameterException26);
        java.lang.Throwable[] throwableArray29 = missingParameterException26.getSuppressed();
        invalidParameterException16.addSuppressed((java.lang.Throwable) missingParameterException26);
        missingParameterException9.addSuppressed((java.lang.Throwable) invalidParameterException16);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException36);
        java.lang.Throwable[] throwableArray38 = invalidParameterException37.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException42 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException42);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException44 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException42);
        org.plista.kornakapi.web.MissingParameterException missingParameterException46 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException48 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException46.addSuppressed((java.lang.Throwable) missingParameterException48);
        invalidParameterException44.addSuppressed((java.lang.Throwable) missingParameterException48);
        java.lang.Throwable[] throwableArray51 = missingParameterException48.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException54 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException55 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException54);
        org.plista.kornakapi.web.MissingParameterException missingParameterException59 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException60 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException59);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException61 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException59);
        org.plista.kornakapi.web.MissingParameterException missingParameterException63 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException65 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException63.addSuppressed((java.lang.Throwable) missingParameterException65);
        invalidParameterException61.addSuppressed((java.lang.Throwable) missingParameterException65);
        java.lang.Throwable[] throwableArray68 = missingParameterException65.getSuppressed();
        invalidParameterException55.addSuppressed((java.lang.Throwable) missingParameterException65);
        missingParameterException48.addSuppressed((java.lang.Throwable) invalidParameterException55);
        org.plista.kornakapi.web.MissingParameterException missingParameterException74 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException75 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException74);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException76 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException75);
        org.plista.kornakapi.web.MissingParameterException missingParameterException78 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}");
        invalidParameterException76.addSuppressed((java.lang.Throwable) missingParameterException78);
        missingParameterException48.addSuppressed((java.lang.Throwable) invalidParameterException76);
        org.plista.kornakapi.web.MissingParameterException missingParameterException82 = new org.plista.kornakapi.web.MissingParameterException("userID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException85 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException87 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException85.addSuppressed((java.lang.Throwable) missingParameterException87);
        java.lang.Throwable[] throwableArray89 = missingParameterException87.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException90 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException87);
        missingParameterException82.addSuppressed((java.lang.Throwable) invalidParameterException90);
        missingParameterException48.addSuppressed((java.lang.Throwable) missingParameterException82);
        invalidParameterException37.addSuppressed((java.lang.Throwable) missingParameterException82);
        invalidParameterException16.addSuppressed((java.lang.Throwable) invalidParameterException37);
        org.plista.kornakapi.web.MissingParameterException missingParameterException96 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=35, itemID=35, value=0.0}");
        invalidParameterException16.addSuppressed((java.lang.Throwable) missingParameterException96);
        java.lang.Throwable[] throwableArray98 = invalidParameterException16.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(throwableArray68);
        org.junit.Assert.assertNotNull(throwableArray89);
        org.junit.Assert.assertNotNull(throwableArray98);
    }

    @Test
    public void test38423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38423");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration12 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration13 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration14 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = null; // flaky: configuration14.getStorageConfiguration();
// flaky:         storageConfiguration15.setJdbcDriverClass("MutablePreference{userID=1, itemID=100, value=52.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(storage11);
// flaky:         org.junit.Assert.assertNotNull(configuration12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
// flaky:         org.junit.Assert.assertNotNull(configuration14);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration15);
    }

    @Test
    public void test38424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38424");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        boolean boolean9 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double12 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        double double16 = factorizationbasedRecommenderConfig14.getLambda();
        boolean boolean17 = factorizationbasedRecommenderConfig14.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig14);
        int int19 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        factorizationbasedRecommenderConfig14.setNumberOfFeatures((-1));
        double double22 = factorizationbasedRecommenderConfig14.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        configuration0.setNumProcessorsForTraining((int) (byte) 0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList26 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration27 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig28 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str29 = itembasedRecommenderConfig28.getSimilarityClass();
        java.lang.String str30 = itembasedRecommenderConfig28.getSimilarityClass();
        itembasedRecommenderConfig28.setSimilarItemsPerItem((int) (byte) 1);
        itembasedRecommenderConfig28.setRetrainAfterPreferenceChanges(10);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig28);
        itembasedRecommenderConfig28.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig28.setSimilarityClass("MutablePreference{userID=52, itemID=100, value=0.0}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList26);
        org.junit.Assert.assertNull(storageConfiguration27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test38425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38425");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setRetrainCronExpression("userID");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer5 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(97);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test38426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38426");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
// flaky:         preferenceChangeListener6.notifyOfPreferenceChange();
// flaky:         org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
    }

    @Test
    public void test38427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38427");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) ' ');
        double double11 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (-1.0d));
        double double14 = fixedCandidatesIDRescorer1.rescore(0L, (double) 10000);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = filteringLongPairRescorer15.isFiltered(longPair16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 32.0d + "'", double8 == 32.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10000.0d + "'", double14 == 10000.0d);
    }

    @Test
    public void test38428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38428");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet5 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet6 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet5.init((javax.servlet.ServletConfig) batchSetPreferencesServlet6);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) batchSetPreferencesServlet6);
        batchDeleteCandidatesServlet4.destroy();
        javax.servlet.ServletConfig servletConfig10 = batchDeleteCandidatesServlet4.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet11 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet13 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet13);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet12.getServletConfig();
        addCandidateServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        batchSetPreferencesServlet12.destroy();
        java.lang.String str18 = batchSetPreferencesServlet12.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet19 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str20 = trainServlet19.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet21 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet21.destroy();
        javax.servlet.ServletConfig servletConfig23 = deleteCandidateServlet21.getServletConfig();
        deleteCandidateServlet21.destroy();
        trainServlet19.init((javax.servlet.ServletConfig) deleteCandidateServlet21);
        javax.servlet.ServletConfig servletConfig26 = deleteCandidateServlet21.getServletConfig();
        batchSetPreferencesServlet12.init((javax.servlet.ServletConfig) deleteCandidateServlet21);
        deleteCandidateServlet21.init();
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) deleteCandidateServlet21);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        setPreferenceServlet0.destroy();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet32 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet32.destroy();
        java.lang.String str34 = addCandidateServlet32.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet35 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        addCandidateServlet32.init((javax.servlet.ServletConfig) setPreferenceServlet35);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) addCandidateServlet32);
        javax.servlet.ServletRequest servletRequest38 = null;
        javax.servlet.ServletResponse servletResponse39 = null;
        // The following exception was thrown during execution in test generation
        try {
            addCandidateServlet32.service(servletRequest38, servletResponse39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig10);
        org.junit.Assert.assertNotNull(servletConfig15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertNull(servletConfig26);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test38429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38429");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = batchDeleteCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        javax.servlet.ServletConfig servletConfig8 = setPreferenceServlet4.getServletConfig();
        java.lang.String str9 = setPreferenceServlet4.getServletInfo();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str14 = batchDeleteCandidatesServlet13.getServletInfo();
        java.lang.String str15 = batchDeleteCandidatesServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet16 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet17 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        setPreferenceServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet16.init((javax.servlet.ServletConfig) recommendServlet21);
        batchDeleteCandidatesServlet13.init((javax.servlet.ServletConfig) setPreferenceServlet16);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet24 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig28 = batchSetPreferencesServlet25.getServletConfig();
        addCandidateServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig30 = addCandidateServlet24.getServletConfig();
        batchDeleteCandidatesServlet13.init((javax.servlet.ServletConfig) addCandidateServlet24);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet32 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str33 = trainServlet32.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet34 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet34.destroy();
        javax.servlet.ServletConfig servletConfig36 = deleteCandidateServlet34.getServletConfig();
        deleteCandidateServlet34.destroy();
        trainServlet32.init((javax.servlet.ServletConfig) deleteCandidateServlet34);
        addCandidateServlet24.init((javax.servlet.ServletConfig) trainServlet32);
        trainServlet32.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet41 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet42 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet43 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet42.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        setPreferenceServlet41.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        trainServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        javax.servlet.ServletConfig servletConfig47 = batchDeleteCandidatesServlet43.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet48 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str49 = batchDeleteCandidatesServlet48.getServletInfo();
        batchDeleteCandidatesServlet48.init();
        javax.servlet.ServletConfig servletConfig51 = null;
        batchDeleteCandidatesServlet48.init(servletConfig51);
        javax.servlet.ServletConfig servletConfig53 = batchDeleteCandidatesServlet48.getServletConfig();
        batchDeleteCandidatesServlet48.init();
        javax.servlet.ServletConfig servletConfig55 = batchDeleteCandidatesServlet48.getServletConfig();
        java.lang.String str56 = batchDeleteCandidatesServlet48.getServletInfo();
        batchDeleteCandidatesServlet43.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet48);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = setPreferenceServlet4.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNull(servletConfig8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(servletConfig28);
        org.junit.Assert.assertNotNull(servletConfig30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(servletConfig36);
        org.junit.Assert.assertNull(servletConfig47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(servletConfig53);
        org.junit.Assert.assertNull(servletConfig55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test38430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38430");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) 'a');
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=0, itemID=0, value=10.0}");
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int15 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int17 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int18 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) 10L);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 97 + "'", int17 == 97);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test38431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38431");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str6 = storageConfiguration0.getUsername();
        java.lang.String str7 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.MissingParameterException: label");
        storageConfiguration0.setPassword("MutablePreference{userID=0, itemID=10, value=10.0}");
        storageConfiguration0.setUsername("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str6, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test38432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38432");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setPassword("howMany");
        java.lang.String str9 = storageConfiguration0.getUsername();
        storageConfiguration0.setUsername("label");
        java.lang.String str12 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=10, itemID=1, value=52.0}");
        java.lang.String str15 = storageConfiguration0.getPassword();
        storageConfiguration0.setPassword("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=-1.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str9, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "howMany" + "'", str15, "howMany");
    }

    @Test
    public void test38433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38433");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 1);
        long long6 = mutablePreference0.getUserID();
        java.lang.String str7 = mutablePreference0.toString();
        mutablePreference0.setValue((float) (short) -1);
        long long10 = mutablePreference0.getItemID();
        float float11 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) (short) 100);
        float float14 = mutablePreference0.getValue();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + (-1.0f) + "'", float11 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 100.0f + "'", float14 == 100.0f);
    }

    @Test
    public void test38434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38434");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet0.destroy();
        trainServlet0.destroy();
        java.lang.String str3 = trainServlet0.getServletInfo();
        trainServlet0.init();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str6 = batchDeleteCandidatesServlet5.getServletInfo();
        java.lang.String str7 = batchDeleteCandidatesServlet5.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet13 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet8.init((javax.servlet.ServletConfig) recommendServlet13);
        batchDeleteCandidatesServlet5.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        batchDeleteCandidatesServlet5.destroy();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet17 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet18 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet19 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet18.init((javax.servlet.ServletConfig) batchSetPreferencesServlet19);
        javax.servlet.ServletConfig servletConfig21 = batchSetPreferencesServlet18.getServletConfig();
        addCandidateServlet17.init((javax.servlet.ServletConfig) batchSetPreferencesServlet18);
        batchDeleteCandidatesServlet5.init((javax.servlet.ServletConfig) addCandidateServlet17);
        trainServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        batchDeleteCandidatesServlet5.init();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(servletConfig21);
    }

    @Test
    public void test38435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38435");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) 10L);
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) ' ');
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setLambda(97.0d);
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test38436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38436");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        int int9 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig7.setSimilarityClass("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem((int) '#');
        java.lang.String str17 = itembasedRecommenderConfig7.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
// flaky:         configuration6.addItembasedRecommender(itembasedRecommenderConfig7);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList20 = null; // flaky: configuration6.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components21 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration22 = null; // flaky: components21.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration23 = null; // flaky: components21.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage24 = null; // flaky: components21.storage();
        org.plista.kornakapi.core.storage.Storage storage25 = null; // flaky: components21.storage();
        org.plista.kornakapi.core.config.Configuration configuration26 = null; // flaky: components21.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig27 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double28 = factorizationbasedRecommenderConfig27.getAlpha();
        double double29 = factorizationbasedRecommenderConfig27.getLambda();
        int int30 = factorizationbasedRecommenderConfig27.getNumberOfFeatures();
        factorizationbasedRecommenderConfig27.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig27.setNumberOfFeatures((int) (short) 100);
        boolean boolean35 = factorizationbasedRecommenderConfig27.isUsesImplicitFeedback();
// flaky:         configuration26.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig27);
        org.plista.kornakapi.web.Components components37 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration38 = components37.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler39 = components37.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler40 = components37.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration41 = components37.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration42 = components37.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig43 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig43.setSimilarityClass("");
        java.lang.String str46 = itembasedRecommenderConfig43.getName();
        java.lang.String str47 = itembasedRecommenderConfig43.getSimilarityClass();
        itembasedRecommenderConfig43.setName("");
        java.lang.String str50 = itembasedRecommenderConfig43.getSimilarityClass();
        configuration42.addItembasedRecommender(itembasedRecommenderConfig43);
        itembasedRecommenderConfig43.setSimilarItemsPerItem((int) (byte) 1);
// flaky:         configuration26.addItembasedRecommender(itembasedRecommenderConfig43);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration55 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str56 = storageConfiguration55.getJdbcDriverClass();
        storageConfiguration55.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str59 = storageConfiguration55.getJdbcUrl();
        java.lang.String str60 = storageConfiguration55.getJdbcDriverClass();
        storageConfiguration55.setJdbcDriverClass("batchSize");
        java.lang.String str63 = storageConfiguration55.getPassword();
        storageConfiguration55.setUsername("batchSize");
        java.lang.String str66 = storageConfiguration55.getJdbcDriverClass();
        storageConfiguration55.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
// flaky:         configuration26.setStorageConfiguration(storageConfiguration55);
        storageConfiguration55.setPassword("");
        storageConfiguration55.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=100.0}");
// flaky:         configuration6.setStorageConfiguration(storageConfiguration55);
        java.lang.String str75 = storageConfiguration55.getUsername();
        storageConfiguration55.setJdbcUrl("MutablePreference{userID=1, itemID=10, value=10000.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str17);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList20);
// flaky:         org.junit.Assert.assertNotNull(components21);
// flaky:         org.junit.Assert.assertNotNull(configuration22);
// flaky:         org.junit.Assert.assertNotNull(configuration23);
        org.junit.Assert.assertNull(storage24);
        org.junit.Assert.assertNull(storage25);
// flaky:         org.junit.Assert.assertNotNull(configuration26);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(components37);
        org.junit.Assert.assertNotNull(configuration38);
        org.junit.Assert.assertNull(trainingScheduler39);
        org.junit.Assert.assertNull(trainingScheduler40);
        org.junit.Assert.assertNotNull(configuration41);
        org.junit.Assert.assertNotNull(configuration42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "batchSize" + "'", str66, "batchSize");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str75, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
    }

    @Test
    public void test38437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38437");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler4, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", (int) ' ');
        inMemoryPreferenceChangeListener7.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener7);
        inMemoryPreferenceChangeListener7.notifyOfPreferenceChange();
    }

    @Test
    public void test38438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38438");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        int int7 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getJdbcDriverClass();
        storageConfiguration9.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str13 = storageConfiguration9.getJdbcUrl();
        java.lang.String str14 = storageConfiguration9.getJdbcDriverClass();
        storageConfiguration9.setJdbcDriverClass("batchSize");
        java.lang.String str17 = storageConfiguration9.getPassword();
        storageConfiguration9.setUsername("batchSize");
        java.lang.String str20 = storageConfiguration9.getJdbcUrl();
        storageConfiguration9.setUsername("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration9.setPassword("batchSize");
        java.lang.String str25 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str26 = storageConfiguration9.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration9);
        java.lang.String str28 = storageConfiguration9.getPassword();
        storageConfiguration9.setPassword("MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 100 + "'", int7 == 100);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "batchSize" + "'", str25, "batchSize");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "batchSize" + "'", str26, "batchSize");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "batchSize" + "'", str28, "batchSize");
    }

    @Test
    public void test38439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38439");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener3);
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener11 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener11);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener17 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener17);
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components24 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration25 = null; // flaky: components24.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration26 = null; // flaky: components24.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler27 = null; // flaky: components24.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler28 = null; // flaky: components24.scheduler();
        org.plista.kornakapi.core.storage.Storage storage29 = null; // flaky: components24.storage();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components24.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration31 = null; // flaky: components24.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener32 = null; // flaky: components24.preferenceChangeListener();
        delegatingPreferenceChangeListener11.addDelegate(preferenceChangeListener32);
// flaky:         delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components35 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration36 = null; // flaky: components35.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration37 = null; // flaky: components35.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler38 = null; // flaky: components35.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler39 = null; // flaky: components35.scheduler();
        org.plista.kornakapi.core.storage.Storage storage40 = null; // flaky: components35.storage();
        org.plista.kornakapi.core.config.Configuration configuration41 = null; // flaky: components35.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener42 = null; // flaky: components35.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener43 = null; // flaky: components35.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage44 = null; // flaky: components35.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener45 = null; // flaky: components35.preferenceChangeListener();
// flaky:         preferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.addDelegate(preferenceChangeListener45);
// flaky:         org.junit.Assert.assertNotNull(components24);
// flaky:         org.junit.Assert.assertNotNull(configuration25);
// flaky:         org.junit.Assert.assertNotNull(configuration26);
        org.junit.Assert.assertNull(trainingScheduler27);
        org.junit.Assert.assertNull(trainingScheduler28);
        org.junit.Assert.assertNull(storage29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(configuration31);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener32);
// flaky:         org.junit.Assert.assertNotNull(components35);
// flaky:         org.junit.Assert.assertNotNull(configuration36);
// flaky:         org.junit.Assert.assertNotNull(configuration37);
        org.junit.Assert.assertNull(trainingScheduler38);
        org.junit.Assert.assertNull(trainingScheduler39);
        org.junit.Assert.assertNull(storage40);
// flaky:         org.junit.Assert.assertNotNull(configuration41);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener42);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener43);
        org.junit.Assert.assertNull(storage44);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener45);
    }

    @Test
    public void test38440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38440");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        mutablePreference0.setValue((float) 35);
        mutablePreference0.set((long) (short) 1, (long) (short) -1, (-1.0f));
        mutablePreference0.set((long) (byte) 0, (long) (byte) 1, 10000.0f);
        mutablePreference0.setValue((float) (short) 1);
        mutablePreference0.set((long) 97, (long) 10000, (float) 35);
        java.lang.String str24 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "MutablePreference{userID=97, itemID=10000, value=35.0}" + "'", str24, "MutablePreference{userID=97, itemID=10000, value=35.0}");
    }

    @Test
    public void test38441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38441");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) '4');
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setAlpha(35.0d);
        factorizationbasedRecommenderConfig0.setAlpha((double) 97L);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test38442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38442");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = batchDeleteCandidatesServlet0.getInitParameter("MutablePreference{userID=-1, itemID=10, value=-1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
    }

    @Test
    public void test38443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38443");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        int int3 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig4 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str5 = itembasedRecommenderConfig4.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig4);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        itembasedRecommenderConfig7.setSimilarityClass("");
        java.lang.String str11 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setName("label");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig7);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration15.getJdbcUrl();
        java.lang.String str20 = storageConfiguration15.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration15.getJdbcDriverClass();
        java.lang.String str22 = storageConfiguration15.getJdbcDriverClass();
        java.lang.String str23 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        configuration0.setStorageConfiguration(storageConfiguration15);
        configuration0.setModelDirectory("MutablePreference{userID=-1, itemID=97, value=52.0}");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList29 = configuration0.getItembasedRecommenders();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList29);
    }

    @Test
    public void test38444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38444");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet1 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet1.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet1);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str12 = batchDeleteCandidatesServlet11.getServletInfo();
        java.lang.String str13 = batchDeleteCandidatesServlet11.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet14 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet15 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet15.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        setPreferenceServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet14.init((javax.servlet.ServletConfig) recommendServlet19);
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) setPreferenceServlet14);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet14);
        javax.servlet.ServletConfig servletConfig23 = setPreferenceServlet4.getServletConfig();
        setPreferenceServlet4.init();
        addCandidateServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        setPreferenceServlet4.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet27 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet28 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet29 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet28.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet29);
        setPreferenceServlet27.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet29);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet32 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet32.init();
        java.lang.String str34 = batchAddCandidatesServlet32.getServletInfo();
        javax.servlet.ServletConfig servletConfig35 = batchAddCandidatesServlet32.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet36 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str37 = batchDeleteCandidatesServlet36.getServletInfo();
        java.lang.String str38 = batchDeleteCandidatesServlet36.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet39 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet40 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet41 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet40.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet41);
        setPreferenceServlet39.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet41);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet44 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet39.init((javax.servlet.ServletConfig) recommendServlet44);
        batchDeleteCandidatesServlet36.init((javax.servlet.ServletConfig) setPreferenceServlet39);
        batchAddCandidatesServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet36);
        batchDeleteCandidatesServlet36.init();
        java.lang.String str49 = batchDeleteCandidatesServlet36.getServletInfo();
        java.lang.String str50 = batchDeleteCandidatesServlet36.getServletInfo();
        batchDeleteCandidatesServlet36.init();
        batchDeleteCandidatesServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet36);
        java.lang.String str53 = batchDeleteCandidatesServlet36.getServletInfo();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet36);
        batchDeleteCandidatesServlet36.destroy();
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(servletConfig35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test38445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38445");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = null; // flaky: configuration5.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
    }

    @Test
    public void test38446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38446");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) '4');
        org.plista.kornakapi.core.config.Configuration configuration5 = new org.plista.kornakapi.core.config.Configuration();
        configuration5.setNumProcessorsForTraining((int) (short) 100);
        configuration5.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig10 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str11 = itembasedRecommenderConfig10.getRetrainCronExpression();
        int int12 = itembasedRecommenderConfig10.getRetrainAfterPreferenceChanges();
        java.lang.String str13 = itembasedRecommenderConfig10.getSimilarityClass();
        itembasedRecommenderConfig10.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig10.setRetrainCronExpression("value");
        int int18 = itembasedRecommenderConfig10.getRetrainAfterPreferenceChanges();
        configuration5.addItembasedRecommender(itembasedRecommenderConfig10);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration21 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str22 = storageConfiguration21.getJdbcDriverClass();
        storageConfiguration21.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str25 = storageConfiguration21.getJdbcUrl();
        java.lang.String str26 = storageConfiguration21.getJdbcUrl();
        java.lang.String str27 = storageConfiguration21.getJdbcUrl();
        storageConfiguration21.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: label");
        configuration0.setStorageConfiguration(storageConfiguration21);
        java.lang.String str31 = storageConfiguration21.getJdbcUrl();
        storageConfiguration21.setPassword("MutablePreference{userID=100, itemID=35, value=-1.0}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: label" + "'", str31, "org.plista.kornakapi.web.InvalidParameterException: label");
    }

    @Test
    public void test38447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38447");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNull(storage6);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
    }

    @Test
    public void test38448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38448");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig3 = batchAddCandidatesServlet0.getServletConfig();
        batchAddCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig5 = batchAddCandidatesServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext6 = batchAddCandidatesServlet0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNull(servletConfig5);
    }

    @Test
    public void test38449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38449");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet12 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str13 = trainServlet12.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet14 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet14.destroy();
        javax.servlet.ServletConfig servletConfig16 = deleteCandidateServlet14.getServletConfig();
        deleteCandidateServlet14.destroy();
        trainServlet12.init((javax.servlet.ServletConfig) deleteCandidateServlet14);
        javax.servlet.ServletConfig servletConfig19 = deleteCandidateServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet14);
        deleteCandidateServlet14.init();
        javax.servlet.ServletConfig servletConfig22 = deleteCandidateServlet14.getServletConfig();
        deleteCandidateServlet14.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet24 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str25 = trainServlet24.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet26 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet26.destroy();
        javax.servlet.ServletConfig servletConfig28 = deleteCandidateServlet26.getServletConfig();
        deleteCandidateServlet26.destroy();
        trainServlet24.init((javax.servlet.ServletConfig) deleteCandidateServlet26);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet31 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet31.init();
        java.lang.String str33 = batchAddCandidatesServlet31.getServletInfo();
        javax.servlet.ServletConfig servletConfig34 = batchAddCandidatesServlet31.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str36 = batchDeleteCandidatesServlet35.getServletInfo();
        java.lang.String str37 = batchDeleteCandidatesServlet35.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet38 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet39 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet40 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet39.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet40);
        setPreferenceServlet38.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet40);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet43 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet38.init((javax.servlet.ServletConfig) recommendServlet43);
        batchDeleteCandidatesServlet35.init((javax.servlet.ServletConfig) setPreferenceServlet38);
        batchAddCandidatesServlet31.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        batchDeleteCandidatesServlet35.init();
        java.lang.String str48 = batchDeleteCandidatesServlet35.getServletInfo();
        java.lang.String str49 = batchDeleteCandidatesServlet35.getServletInfo();
        trainServlet24.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        javax.servlet.ServletConfig servletConfig51 = trainServlet24.getServletConfig();
        java.lang.String str52 = trainServlet24.getServletInfo();
        deleteCandidateServlet14.init((javax.servlet.ServletConfig) trainServlet24);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext54 = trainServlet24.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig16);
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertNull(servletConfig22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(servletConfig28);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(servletConfig34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNotNull(servletConfig51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
    }

    @Test
    public void test38450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38450");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.init();
        batchSetPreferencesServlet1.init();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration5 = batchSetPreferencesServlet1.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
    }

    @Test
    public void test38451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38451");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException4 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException3);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException3);
        java.lang.Throwable[] throwableArray6 = missingParameterException3.getSuppressed();
        java.lang.Throwable[] throwableArray7 = missingParameterException3.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException12);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException14 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException13);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException13);
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.MissingParameterException missingParameterException24 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException24.addSuppressed((java.lang.Throwable) missingParameterException26);
        invalidParameterException22.addSuppressed((java.lang.Throwable) missingParameterException26);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException33 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException34 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException33);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException35 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException33);
        invalidParameterException29.addSuppressed((java.lang.Throwable) missingParameterException33);
        org.plista.kornakapi.web.MissingParameterException missingParameterException41 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException42 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException41);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException41);
        java.lang.Throwable[] throwableArray44 = missingParameterException41.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException45 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException41);
        missingParameterException33.addSuppressed((java.lang.Throwable) missingParameterException41);
        invalidParameterException15.addSuppressed((java.lang.Throwable) missingParameterException33);
        missingParameterException3.addSuppressed((java.lang.Throwable) missingParameterException33);
        java.lang.Throwable[] throwableArray49 = missingParameterException3.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray49);
    }

    @Test
    public void test38452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38452");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("");
        java.lang.String str6 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(52);
        int int9 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
    }

    @Test
    public void test38453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38453");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
// flaky:         configuration9.setNumProcessorsForTraining((int) '4');
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
    }

    @Test
    public void test38454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38454");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: file");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str13 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=0, value=97.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test38455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38455");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = null; // flaky: configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        int int9 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setSimilarityClass("MutablePreference{userID=100, itemID=0, value=0.0}");
        itembasedRecommenderConfig7.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=0.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setName("MutablePreference{userID=97, itemID=1, value=1.0}");
        int int19 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str20 = itembasedRecommenderConfig7.getRetrainCronExpression();
        java.lang.String str21 = itembasedRecommenderConfig7.getRetrainCronExpression();
        int int22 = itembasedRecommenderConfig7.getSimilarItemsPerItem();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test38456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38456");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        int int6 = factorizationbasedRecommenderConfig3.getNumberOfFeatures();
        factorizationbasedRecommenderConfig3.setUsesImplicitFeedback(true);
        double double9 = factorizationbasedRecommenderConfig3.getAlpha();
        java.lang.String str10 = factorizationbasedRecommenderConfig3.getRetrainCronExpression();
        int int11 = factorizationbasedRecommenderConfig3.getRetrainAfterPreferenceChanges();
        boolean boolean12 = factorizationbasedRecommenderConfig3.isUsesImplicitFeedback();
        int int13 = factorizationbasedRecommenderConfig3.getNumberOfIterations();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        double double15 = factorizationbasedRecommenderConfig3.getAlpha();
        factorizationbasedRecommenderConfig3.setName("MutablePreference{userID=-1, itemID=52, value=10.0}");
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig3);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test38457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38457");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig0.setAlpha((double) (short) 10);
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=0, value=100.0}");
        factorizationbasedRecommenderConfig0.setLambda(32.0d);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(1);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test38458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38458");
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.config.Configuration configuration1 = org.plista.kornakapi.core.config.Configuration.fromXML("MutablePreference{userID=100, itemID=0, value=10000.0}");
            org.junit.Assert.fail("Expected exception of type com.thoughtworks.xstream.io.StreamException; message:  : only whitespace content allowed before start tag and not M (position: START_DOCUMENT seen M... @1:1) ");
        } catch (com.thoughtworks.xstream.io.StreamException e) {
            // Expected exception.
        }
    }

    @Test
    public void test38459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38459");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str2 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setName("MutablePreference{userID=0, itemID=0, value=10.0}");
        java.lang.String str7 = itembasedRecommenderConfig0.getSimilarityClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test38460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38460");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener3);
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener11 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener11);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener17 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener17);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener23 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener23.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener25 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener23.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler31 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler31, "MutablePreference{userID=100, itemID=0, value=0.0}", (int) ' ');
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener34);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener36 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener39 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener41 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener39.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener41);
        delegatingPreferenceChangeListener36.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener39);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler45 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener48 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler45, "label", (int) ' ');
        inMemoryPreferenceChangeListener48.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener48);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener51 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener53 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener51.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener53);
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener53);
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener36);
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
    }

    @Test
    public void test38461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38461");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = null; // flaky: configuration4.getItembasedRecommenders();
        int int6 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getUsername();
        storageConfiguration7.setUsername("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str18 = storageConfiguration7.getJdbcDriverClass();
// flaky:         configuration4.setStorageConfiguration(storageConfiguration7);
        org.plista.kornakapi.web.Components components20 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration21 = null; // flaky: components20.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration22 = null; // flaky: components20.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler23 = null; // flaky: components20.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration24 = null; // flaky: components20.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = null; // flaky: configuration24.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration26 = new org.plista.kornakapi.core.config.Configuration();
        int int27 = configuration26.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList28 = configuration26.getItembasedRecommenders();
        int int29 = configuration26.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig30 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str31 = itembasedRecommenderConfig30.getRetrainCronExpression();
        configuration26.addItembasedRecommender(itembasedRecommenderConfig30);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig33 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str34 = itembasedRecommenderConfig33.getRetrainCronExpression();
        itembasedRecommenderConfig33.setSimilarityClass("");
        java.lang.String str37 = itembasedRecommenderConfig33.getSimilarityClass();
        itembasedRecommenderConfig33.setName("label");
        configuration26.addItembasedRecommender(itembasedRecommenderConfig33);
// flaky:         configuration24.addItembasedRecommender(itembasedRecommenderConfig33);
        itembasedRecommenderConfig33.setName("MutablePreference{userID=0, itemID=0, value=0.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer44 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig33);
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig33);
        itembasedRecommenderConfig33.setRetrainAfterPreferenceChanges((int) 'a');
        itembasedRecommenderConfig33.setSimilarityClass("MutablePreference{userID=32, itemID=1, value=97.0}");
        itembasedRecommenderConfig33.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        itembasedRecommenderConfig33.setName("MutablePreference{userID=0, itemID=100, value=-1.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str15, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str18);
// flaky:         org.junit.Assert.assertNotNull(components20);
// flaky:         org.junit.Assert.assertNotNull(configuration21);
// flaky:         org.junit.Assert.assertNotNull(configuration22);
        org.junit.Assert.assertNull(trainingScheduler23);
// flaky:         org.junit.Assert.assertNotNull(configuration24);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
    }

    @Test
    public void test38462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38462");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str13 = itembasedRecommenderConfig12.getSimilarityClass();
        int int14 = itembasedRecommenderConfig12.getSimilarItemsPerItem();
        itembasedRecommenderConfig12.setSimilarItemsPerItem(1);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig12);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig18 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig18.setSimilarityClass("");
        java.lang.String str21 = itembasedRecommenderConfig18.getSimilarityClass();
        itembasedRecommenderConfig18.setRetrainCronExpression("userID");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer24 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig18);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer25 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig18);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig18);
        org.plista.kornakapi.core.storage.Storage storage27 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap28 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap29 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler30 = null;
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener31 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener33 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener31.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener33);
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener38 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener40 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener40);
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener33.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener40);
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener48 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener48.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener50 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener50.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener48.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener50);
        delegatingPreferenceChangeListener50.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener50.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener55 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener55.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener57 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener57.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener57.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener55.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener57);
        delegatingPreferenceChangeListener57.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener50.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener57);
        delegatingPreferenceChangeListener33.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener50);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener64 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener66 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener66);
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener71 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener73 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener73.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener73.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener71.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener73);
        delegatingPreferenceChangeListener73.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener66.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener73);
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener80 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener80.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener82 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener82.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener82.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener80.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener82);
        delegatingPreferenceChangeListener66.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener82);
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener50.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener66);
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration0, storage27, strMap28, strMap29, trainingScheduler30, (org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener50);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertNull(storageConfiguration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test38463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38463");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double9 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test38464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38464");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet3 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str4 = batchDeleteCandidatesServlet3.getServletInfo();
        batchDeleteCandidatesServlet3.destroy();
        javax.servlet.ServletConfig servletConfig6 = batchDeleteCandidatesServlet3.getServletConfig();
        batchAddCandidatesServlet0.init(servletConfig6);
        batchAddCandidatesServlet0.init();
        batchAddCandidatesServlet0.init();
        java.lang.String str10 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig11 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet12 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet12.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet14 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        addCandidateServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet14);
        java.lang.String str18 = batchSetPreferencesServlet14.getServletInfo();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str20 = recommendServlet19.getServletInfo();
        javax.servlet.ServletConfig servletConfig21 = recommendServlet19.getServletConfig();
        java.lang.String str22 = recommendServlet19.getServletInfo();
        javax.servlet.ServletConfig servletConfig23 = recommendServlet19.getServletConfig();
        recommendServlet19.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet25 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str26 = batchDeleteCandidatesServlet25.getServletInfo();
        java.lang.String str27 = batchDeleteCandidatesServlet25.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet28 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet29 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet30 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        setPreferenceServlet28.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet33 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet28.init((javax.servlet.ServletConfig) recommendServlet33);
        batchDeleteCandidatesServlet25.init((javax.servlet.ServletConfig) setPreferenceServlet28);
        batchDeleteCandidatesServlet25.destroy();
        batchDeleteCandidatesServlet25.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet38 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str39 = trainServlet38.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet40 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet40.destroy();
        javax.servlet.ServletConfig servletConfig42 = deleteCandidateServlet40.getServletConfig();
        deleteCandidateServlet40.destroy();
        trainServlet38.init((javax.servlet.ServletConfig) deleteCandidateServlet40);
        java.lang.String str45 = trainServlet38.getServletInfo();
        batchDeleteCandidatesServlet25.init((javax.servlet.ServletConfig) trainServlet38);
        batchDeleteCandidatesServlet25.init();
        recommendServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet25);
        batchSetPreferencesServlet14.init((javax.servlet.ServletConfig) recommendServlet19);
        javax.servlet.ServletConfig servletConfig50 = batchSetPreferencesServlet14.getServletConfig();
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet14);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str53 = batchAddCandidatesServlet0.getInitParameter("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(servletConfig6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(servletConfig11);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(servletConfig42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(servletConfig50);
    }

    @Test
    public void test38465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38465");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainCronExpression("userID");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 0);
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=0, itemID=1, value=-1.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file12 = null;
        org.plista.kornakapi.core.storage.Storage storage13 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender14 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer11.train(file12, storage13, recommender14, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test38466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38466");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        long long14 = mutableCandidate0.getItemID();
        long long15 = mutableCandidate0.getItemID();
        long long16 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (long) 1);
        long long20 = mutableCandidate0.getItemID();
        java.lang.String str21 = mutableCandidate0.getLabel();
        long long22 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=35, itemID=97, value=-1.0}", (long) 10000);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 35L + "'", long12 == 35L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 35L + "'", long14 == 35L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 35L + "'", long15 == 35L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 35L + "'", long16 == 35L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str21, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 1L + "'", long22 == 1L);
    }

    @Test
    public void test38467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38467");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage9 = components0.storage();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(storage9);
    }

    @Test
    public void test38468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38468");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) '#');
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double11 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha(10000.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test38469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38469");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.Throwable[] throwableArray2 = missingParameterException1.getSuppressed();
        java.lang.String str3 = missingParameterException1.toString();
        org.junit.Assert.assertNotNull(throwableArray2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str3, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38470");
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet0 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet3 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str4 = batchDeleteCandidatesServlet3.getServletInfo();
        batchDeleteCandidatesServlet3.init();
        javax.servlet.ServletConfig servletConfig6 = null;
        batchDeleteCandidatesServlet3.init(servletConfig6);
        recommendServlet0.init(servletConfig6);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet9 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        javax.servlet.ServletConfig servletConfig12 = batchSetPreferencesServlet9.getServletConfig();
        batchSetPreferencesServlet9.destroy();
        javax.servlet.ServletConfig servletConfig14 = batchSetPreferencesServlet9.getServletConfig();
        batchSetPreferencesServlet9.init();
        recommendServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet9);
        javax.servlet.ServletConfig servletConfig17 = batchSetPreferencesServlet9.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet18.init();
        java.lang.String str20 = batchAddCandidatesServlet18.getServletInfo();
        javax.servlet.ServletConfig servletConfig21 = batchAddCandidatesServlet18.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str23 = batchDeleteCandidatesServlet22.getServletInfo();
        java.lang.String str24 = batchDeleteCandidatesServlet22.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet25 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet27 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet26.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet27);
        setPreferenceServlet25.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet27);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet30 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet25.init((javax.servlet.ServletConfig) recommendServlet30);
        batchDeleteCandidatesServlet22.init((javax.servlet.ServletConfig) setPreferenceServlet25);
        batchAddCandidatesServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        batchDeleteCandidatesServlet22.init();
        java.lang.String str35 = batchDeleteCandidatesServlet22.getServletInfo();
        java.lang.String str36 = batchDeleteCandidatesServlet22.getServletInfo();
        batchDeleteCandidatesServlet22.init();
        batchDeleteCandidatesServlet22.destroy();
        batchSetPreferencesServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException42 = new org.plista.kornakapi.web.MissingParameterException("userID");
        java.lang.Throwable[] throwableArray43 = missingParameterException42.getSuppressed();
        java.lang.Throwable[] throwableArray44 = missingParameterException42.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet22.log("MutablePreference{userID=52, itemID=100, value=10.0}", (java.lang.Throwable) missingParameterException42);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(servletConfig12);
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertNotNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwableArray44);
    }

    @Test
    public void test38471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38471");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) (byte) 1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer8 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double11 = fixedCandidatesIDRescorer1.rescore(100L, (double) 0.0f);
        double double14 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 100L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double18 = fixedCandidatesIDRescorer1.rescore((long) '4', (double) 1L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 1.0d + "'", double18 == 1.0d);
    }

    @Test
    public void test38472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38472");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = configuration7.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration9.getJdbcUrl();
        storageConfiguration9.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=1.0}");
        storageConfiguration9.setUsername("recommender");
        java.lang.String str16 = storageConfiguration9.getPassword();
        java.lang.String str17 = storageConfiguration9.getJdbcUrl();
        java.lang.String str18 = storageConfiguration9.getJdbcUrl();
        storageConfiguration9.setJdbcUrl("userID");
        storageConfiguration9.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        configuration7.setStorageConfiguration(storageConfiguration9);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration24 = configuration7.getStorageConfiguration();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str17, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str18, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertNotNull(storageConfiguration24);
    }

    @Test
    public void test38473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38473");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration1.getItembasedRecommenders();
        java.lang.String str3 = configuration1.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = configuration1.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components5 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration6 = components5.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = components5.getConfiguration();
        java.lang.String str8 = configuration7.getModelDirectory();
        int int9 = configuration7.getNumProcessorsForTraining();
        int int10 = configuration7.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str12 = storageConfiguration11.getJdbcDriverClass();
        storageConfiguration11.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str15 = storageConfiguration11.getJdbcUrl();
        java.lang.String str16 = storageConfiguration11.getJdbcDriverClass();
        java.lang.String str17 = storageConfiguration11.getJdbcDriverClass();
        java.lang.String str18 = storageConfiguration11.getPassword();
        java.lang.String str19 = storageConfiguration11.getUsername();
        java.lang.String str20 = storageConfiguration11.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration11.getJdbcDriverClass();
        java.lang.String str22 = storageConfiguration11.getJdbcDriverClass();
        configuration7.setStorageConfiguration(storageConfiguration11);
        storageConfiguration11.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        configuration1.setStorageConfiguration(storageConfiguration11);
        java.lang.String str27 = storageConfiguration11.getJdbcUrl();
        storageConfiguration11.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: itemID");
        java.lang.String str30 = storageConfiguration11.getJdbcUrl();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=10000, value=0.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNotNull(components5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=10000, value=0.0}" + "'", str8, "MutablePreference{userID=0, itemID=10000, value=0.0}");
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
// flaky:         org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str19, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str27, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemID" + "'", str30, "org.plista.kornakapi.web.InvalidParameterException: itemID");
    }

    @Test
    public void test38474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38474");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components26 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration27 = components26.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler28 = components26.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler29 = components26.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration30 = components26.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage31 = components26.storage();
        org.plista.kornakapi.core.storage.Storage storage32 = components26.storage();
        org.plista.kornakapi.core.config.Configuration configuration33 = components26.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration34 = components26.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener35 = components26.preferenceChangeListener();
// flaky:         preferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate(preferenceChangeListener35);
        org.junit.Assert.assertNotNull(components26);
        org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(trainingScheduler28);
        org.junit.Assert.assertNull(trainingScheduler29);
        org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertNull(storage31);
        org.junit.Assert.assertNull(storage32);
        org.junit.Assert.assertNotNull(configuration33);
        org.junit.Assert.assertNotNull(configuration34);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener35);
    }

    @Test
    public void test38475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38475");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str3 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet4.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchAddCandidatesServlet4);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str9 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet10 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str11 = trainServlet10.getServletInfo();
        javax.servlet.ServletConfig servletConfig12 = trainServlet10.getServletConfig();
        trainServlet10.destroy();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet14.init();
        java.lang.String str16 = batchAddCandidatesServlet14.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str18 = batchDeleteCandidatesServlet17.getServletInfo();
        batchDeleteCandidatesServlet17.destroy();
        javax.servlet.ServletConfig servletConfig20 = batchDeleteCandidatesServlet17.getServletConfig();
        batchAddCandidatesServlet14.init(servletConfig20);
        batchAddCandidatesServlet14.init();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet23 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet24 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet25 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet24.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet25);
        setPreferenceServlet23.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet25);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet28 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet23.init((javax.servlet.ServletConfig) recommendServlet28);
        recommendServlet28.init();
        batchAddCandidatesServlet14.init((javax.servlet.ServletConfig) recommendServlet28);
        recommendServlet28.init();
        trainServlet10.init((javax.servlet.ServletConfig) recommendServlet28);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) recommendServlet28);
        recommendServlet28.init();
        recommendServlet28.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = recommendServlet28.getInitParameter("itemID");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(servletConfig20);
    }

    @Test
    public void test38476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38476");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.Configuration configuration3 = new org.plista.kornakapi.core.config.Configuration();
        int int4 = configuration3.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = configuration3.getStorageConfiguration();
        configuration3.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = configuration3.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getJdbcDriverClass();
        storageConfiguration9.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str13 = storageConfiguration9.getPassword();
        java.lang.String str14 = storageConfiguration9.getJdbcDriverClass();
        storageConfiguration9.setUsername("hi!");
        storageConfiguration9.setJdbcDriverClass("file");
        configuration3.setStorageConfiguration(storageConfiguration9);
        java.lang.String str20 = storageConfiguration9.getJdbcUrl();
        storageConfiguration9.setJdbcDriverClass("MutablePreference{userID=100, itemID=0, value=1.0}");
        java.lang.String str23 = storageConfiguration9.getPassword();
        configuration1.setStorageConfiguration(storageConfiguration9);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = configuration1.getStorageConfiguration();
        configuration1.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(storageConfiguration5);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(storageConfiguration25);
    }

    @Test
    public void test38477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38477");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig8 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str12 = batchDeleteCandidatesServlet11.getServletInfo();
        java.lang.String str13 = batchDeleteCandidatesServlet11.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet14 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet15 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet15.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        setPreferenceServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet14.init((javax.servlet.ServletConfig) recommendServlet19);
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) setPreferenceServlet14);
        batchDeleteCandidatesServlet11.destroy();
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet24 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        batchDeleteCandidatesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig29 = batchSetPreferencesServlet26.getServletConfig();
        batchSetPreferencesServlet26.init();
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        batchSetPreferencesServlet26.init();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str34 = batchDeleteCandidatesServlet33.getServletInfo();
        batchDeleteCandidatesServlet33.init();
        java.lang.String str36 = batchDeleteCandidatesServlet33.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet37 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet37.init();
        batchDeleteCandidatesServlet33.init((javax.servlet.ServletConfig) batchAddCandidatesServlet37);
        batchDeleteCandidatesServlet33.destroy();
        batchDeleteCandidatesServlet33.init();
        javax.servlet.ServletConfig servletConfig42 = batchDeleteCandidatesServlet33.getServletConfig();
        batchSetPreferencesServlet26.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        javax.servlet.ServletConfig servletConfig44 = batchSetPreferencesServlet26.getServletConfig();
        batchSetPreferencesServlet26.init();
        java.lang.String str46 = batchSetPreferencesServlet26.getServletInfo();
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        java.lang.Throwable throwable50 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException51 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=35, itemID=10000, value=52.0}", throwable50);
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet26.log("MutablePreference{userID=32, itemID=97, value=52.0}", throwable50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNull(servletConfig8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig29);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(servletConfig42);
        org.junit.Assert.assertNotNull(servletConfig44);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
    }

    @Test
    public void test38478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38478");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        int int9 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig7.setSimilarityClass("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem((int) '#');
        java.lang.String str17 = itembasedRecommenderConfig7.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        configuration6.addItembasedRecommender(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=97, value=52.0}");
        itembasedRecommenderConfig7.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: userID");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test38479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38479");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10);
        java.lang.String str12 = itembasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test38480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38480");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener3);
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components12 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage13 = components12.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener14 = components12.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler15 = components12.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration16 = components12.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration17 = components12.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener18 = components12.preferenceChangeListener();
        delegatingPreferenceChangeListener3.addDelegate(preferenceChangeListener18);
// flaky:         delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components21 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration22 = components21.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler23 = components21.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener24 = components21.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage25 = components21.storage();
        org.plista.kornakapi.core.storage.Storage storage26 = components21.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener27 = components21.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener28 = components21.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage29 = components21.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener30 = components21.preferenceChangeListener();
        delegatingPreferenceChangeListener3.addDelegate(preferenceChangeListener30);
        org.junit.Assert.assertNotNull(components12);
        org.junit.Assert.assertNull(storage13);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener14);
        org.junit.Assert.assertNull(trainingScheduler15);
        org.junit.Assert.assertNotNull(configuration16);
        org.junit.Assert.assertNotNull(configuration17);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener18);
        org.junit.Assert.assertNotNull(components21);
        org.junit.Assert.assertNotNull(configuration22);
        org.junit.Assert.assertNull(trainingScheduler23);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener24);
        org.junit.Assert.assertNull(storage25);
        org.junit.Assert.assertNull(storage26);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener27);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener28);
        org.junit.Assert.assertNull(storage29);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener30);
    }

    @Test
    public void test38481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38481");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components6 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration7 = components6.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = components6.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components6.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = components6.scheduler();
        org.plista.kornakapi.core.storage.Storage storage11 = components6.storage();
        org.plista.kornakapi.core.config.Configuration configuration12 = components6.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = components6.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration14 = components6.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = configuration14.getStorageConfiguration();
        storageConfiguration15.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str18 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("MutablePreference{userID=0, itemID=0, value=52.0}");
        configuration0.setStorageConfiguration(storageConfiguration15);
        storageConfiguration15.setPassword("MutablePreference{userID=52, itemID=52, value=-1.0}");
        storageConfiguration15.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10, itemID=1, value=52.0}");
        java.lang.String str26 = storageConfiguration15.getJdbcUrl();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
        org.junit.Assert.assertNotNull(components6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(storage11);
        org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(trainingScheduler13);
        org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNotNull(storageConfiguration15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=100, itemID=0, value=1.0}" + "'", str18, "MutablePreference{userID=100, itemID=0, value=1.0}");
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test38482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38482");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=-1, value=0.0}");
    }

    @Test
    public void test38483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38483");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((-1));
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setAlpha(0.0d);
        boolean boolean18 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        boolean boolean19 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test38484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38484");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str10 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=97, itemID=1, value=97.0}");
        java.lang.Class<?> wildcardClass15 = factorizationbasedRecommenderConfig0.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test38485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38485");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        boolean boolean13 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test38486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38486");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        java.lang.String str5 = mutablePreference0.toString();
        long long6 = mutablePreference0.getItemID();
        float float7 = mutablePreference0.getValue();
        long long8 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) '#');
        mutablePreference0.setValue(35.0f);
        mutablePreference0.setValue((float) 10000);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + float7 + "' != '" + 1.0f + "'", float7 == 1.0f);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test38487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38487");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = components0.preferenceChangeListener();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNotNull(configuration7);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener8);
    }

    @Test
    public void test38488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38488");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: file");
        java.lang.String str13 = storageConfiguration0.getUsername();
        storageConfiguration0.setPassword("file");
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=52, itemID=-1, value=32.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str13, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38489");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig19 = batchSetPreferencesServlet16.getServletConfig();
        batchSetPreferencesServlet16.init();
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        batchSetPreferencesServlet16.init();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str24 = batchDeleteCandidatesServlet23.getServletInfo();
        batchDeleteCandidatesServlet23.init();
        java.lang.String str26 = batchDeleteCandidatesServlet23.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet27 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet27.init();
        batchDeleteCandidatesServlet23.init((javax.servlet.ServletConfig) batchAddCandidatesServlet27);
        batchDeleteCandidatesServlet23.destroy();
        batchDeleteCandidatesServlet23.init();
        javax.servlet.ServletConfig servletConfig32 = batchDeleteCandidatesServlet23.getServletConfig();
        batchSetPreferencesServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet34 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str35 = batchDeleteCandidatesServlet34.getServletInfo();
        batchDeleteCandidatesServlet34.init();
        java.lang.String str37 = batchDeleteCandidatesServlet34.getServletInfo();
        batchDeleteCandidatesServlet34.init();
        batchDeleteCandidatesServlet34.init();
        batchDeleteCandidatesServlet23.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet34);
        batchDeleteCandidatesServlet23.init();
        javax.servlet.ServletConfig servletConfig42 = batchDeleteCandidatesServlet23.getServletConfig();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNotNull(servletConfig32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(servletConfig42);
    }

    @Test
    public void test38490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38490");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(1);
        java.lang.String str10 = itembasedRecommenderConfig0.getSimilarityClass();
        int int11 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=-1, itemID=35, value=1.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test38491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38491");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getUsername();
        java.lang.String str2 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str3 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("file");
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration0.getPassword();
        java.lang.String str9 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("");
        java.lang.String str12 = storageConfiguration0.getJdbcUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test38492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38492");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.lang.String str5 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration6 = new org.plista.kornakapi.core.config.Configuration();
        configuration6.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig9 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double10 = factorizationbasedRecommenderConfig9.getAlpha();
        double double11 = factorizationbasedRecommenderConfig9.getLambda();
        configuration6.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig9);
        java.lang.String str13 = configuration6.getModelDirectory();
        int int14 = configuration6.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = configuration6.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str17 = storageConfiguration16.getJdbcDriverClass();
        storageConfiguration16.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str20 = storageConfiguration16.getJdbcUrl();
        java.lang.String str21 = storageConfiguration16.getJdbcUrl();
        storageConfiguration16.setJdbcUrl("label");
        configuration6.setStorageConfiguration(storageConfiguration16);
        java.lang.String str25 = storageConfiguration16.getPassword();
        storageConfiguration16.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        configuration0.setStorageConfiguration(storageConfiguration16);
        java.lang.String str29 = storageConfiguration16.getJdbcDriverClass();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: " + "'", str29, "org.plista.kornakapi.web.InvalidParameterException: ");
    }

    @Test
    public void test38493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38493");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.lang.String str2 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) '#');
        java.lang.String str5 = configuration0.getModelDirectory();
        org.plista.kornakapi.web.Components components6 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration7 = components6.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList8 = configuration7.getItembasedRecommenders();
        java.lang.String str9 = configuration7.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig10 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double11 = factorizationbasedRecommenderConfig10.getAlpha();
        double double12 = factorizationbasedRecommenderConfig10.getLambda();
        int int13 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        factorizationbasedRecommenderConfig10.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig10);
        configuration7.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration18 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str19 = storageConfiguration18.getJdbcDriverClass();
        storageConfiguration18.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str22 = storageConfiguration18.getJdbcUrl();
        java.lang.String str23 = storageConfiguration18.getJdbcDriverClass();
        java.lang.String str24 = storageConfiguration18.getJdbcDriverClass();
        storageConfiguration18.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str27 = storageConfiguration18.getJdbcDriverClass();
        storageConfiguration18.setPassword("hi!");
        java.lang.String str30 = storageConfiguration18.getPassword();
        java.lang.String str31 = storageConfiguration18.getUsername();
        configuration7.setStorageConfiguration(storageConfiguration18);
        java.lang.String str33 = storageConfiguration18.getJdbcUrl();
        java.lang.String str34 = storageConfiguration18.getUsername();
        storageConfiguration18.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        configuration0.setStorageConfiguration(storageConfiguration18);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(components6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany" + "'", str9, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany");
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi!" + "'", str30, "hi!");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str31, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str34, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test38494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38494");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray7 = missingParameterException6.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=32.0}", (java.lang.Throwable) invalidParameterException9);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) invalidParameterException10);
        java.lang.Throwable[] throwableArray12 = invalidParameterException10.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException18 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException16.addSuppressed((java.lang.Throwable) missingParameterException18);
        java.lang.Throwable[] throwableArray20 = missingParameterException18.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException18);
        java.lang.Throwable[] throwableArray22 = missingParameterException18.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException29 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException29);
        missingParameterException26.addSuppressed((java.lang.Throwable) invalidParameterException30);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException32 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: hi!", (java.lang.Throwable) invalidParameterException30);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException33 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: ", (java.lang.Throwable) invalidParameterException30);
        missingParameterException18.addSuppressed((java.lang.Throwable) invalidParameterException33);
        org.plista.kornakapi.web.MissingParameterException missingParameterException36 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=1, itemID=0, value=10.0}");
        missingParameterException18.addSuppressed((java.lang.Throwable) missingParameterException36);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=35.0}", (java.lang.Throwable) missingParameterException18);
        invalidParameterException10.addSuppressed((java.lang.Throwable) invalidParameterException38);
        java.lang.Throwable[] throwableArray40 = invalidParameterException38.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException41 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=97, value=10.0}", (java.lang.Throwable) invalidParameterException38);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray40);
    }

    @Test
    public void test38495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38495");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        java.lang.String str10 = configuration9.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig11 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig11.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig11);
        itembasedRecommenderConfig11.setRetrainCronExpression("");
        itembasedRecommenderConfig11.setSimilarityClass("label");
        itembasedRecommenderConfig11.setRetrainCronExpression("recommender");
        configuration9.addItembasedRecommender(itembasedRecommenderConfig11);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration22 = configuration9.getStorageConfiguration();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany" + "'", str10, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany");
        org.junit.Assert.assertNotNull(storageConfiguration22);
    }

    @Test
    public void test38496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38496");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage8 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage9 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = new org.plista.kornakapi.core.config.Configuration();
        configuration11.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str14 = configuration11.getModelDirectory();
        configuration11.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig17 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig17.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig17);
        itembasedRecommenderConfig17.setRetrainCronExpression("");
        itembasedRecommenderConfig17.setSimilarItemsPerItem(10);
        java.lang.String str25 = itembasedRecommenderConfig17.getName();
        int int26 = itembasedRecommenderConfig17.getRetrainAfterPreferenceChanges();
        java.lang.String str27 = itembasedRecommenderConfig17.getName();
        configuration11.addItembasedRecommender(itembasedRecommenderConfig17);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig29 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double30 = factorizationbasedRecommenderConfig29.getAlpha();
        double double31 = factorizationbasedRecommenderConfig29.getLambda();
        int int32 = factorizationbasedRecommenderConfig29.getNumberOfFeatures();
        factorizationbasedRecommenderConfig29.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig29.setLambda((double) '4');
        factorizationbasedRecommenderConfig29.setLambda((double) 100L);
        configuration11.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig29);
        int int40 = factorizationbasedRecommenderConfig29.getNumberOfIterations();
        factorizationbasedRecommenderConfig29.setName("MutablePreference{userID=1, itemID=-1, value=10000.0}");
        configuration10.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig29);
        factorizationbasedRecommenderConfig29.setAlpha((double) 52);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(storage9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test38497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38497");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException10.addSuppressed((java.lang.Throwable) missingParameterException12);
        invalidParameterException8.addSuppressed((java.lang.Throwable) missingParameterException12);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException26.addSuppressed((java.lang.Throwable) missingParameterException28);
        invalidParameterException24.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException24);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException35);
        invalidParameterException31.addSuppressed((java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.MissingParameterException missingParameterException40 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException43 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException44 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException43);
        missingParameterException40.addSuppressed((java.lang.Throwable) invalidParameterException44);
        invalidParameterException31.addSuppressed((java.lang.Throwable) missingParameterException40);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException47 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) invalidParameterException31);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException47);
        invalidParameterException15.addSuppressed((java.lang.Throwable) invalidParameterException48);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException15);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException51 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=0.0}", (java.lang.Throwable) invalidParameterException50);
        org.plista.kornakapi.web.MissingParameterException missingParameterException53 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        invalidParameterException50.addSuppressed((java.lang.Throwable) missingParameterException53);
    }

    @Test
    public void test38498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38498");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double7 = factorizationbasedRecommenderConfig0.getAlpha();
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str10 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test38499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38499");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) 10000);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double13 = fixedCandidatesIDRescorer1.rescore((long) 10000, (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer14 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double18 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) 100.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10000.0d + "'", double9 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 100.0d + "'", double18 == 100.0d);
    }

    @Test
    public void test38500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest76.test38500");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        java.lang.String str3 = configuration2.getModelDirectory();
        int int4 = configuration2.getNumProcessorsForTraining();
        int int5 = configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = configuration2.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = configuration2.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = configuration2.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.Configuration configuration9 = new org.plista.kornakapi.core.config.Configuration();
        configuration9.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str12 = configuration9.getModelDirectory();
        configuration9.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setPassword("itemIDs");
        configuration9.setStorageConfiguration(storageConfiguration15);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = configuration9.getStorageConfiguration();
        java.lang.String str21 = storageConfiguration20.getPassword();
        storageConfiguration20.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        configuration2.setStorageConfiguration(storageConfiguration20);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany" + "'", str3, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany");
// flaky:         org.junit.Assert.assertTrue("'" + int4 + "' != '" + 52 + "'", int4 == 52);
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(storageConfiguration6);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(storageConfiguration20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "itemIDs" + "'", str21, "itemIDs");
    }
}
