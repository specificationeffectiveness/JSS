package org.plista.kornakapi;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest59 {

    public static boolean debug = false;

    @Test
    public void test29501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29501");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", 100);
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
    }

    @Test
    public void test29502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29502");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.web.Components components5 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = null; // flaky: components5.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components5.storage();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components5.storage();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components5.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration10.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig12.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig12);
        itembasedRecommenderConfig12.setRetrainCronExpression("");
        itembasedRecommenderConfig12.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig12.setRetrainCronExpression("");
// flaky:         configuration10.addItembasedRecommender(itembasedRecommenderConfig12);
        int int23 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig12);
        org.plista.kornakapi.web.Components components25 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration26 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration27 = null; // flaky: components25.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage28 = null; // flaky: components25.storage();
        org.plista.kornakapi.core.storage.Storage storage29 = null; // flaky: components25.storage();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components25.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList31 = null; // flaky: configuration30.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig32 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double33 = factorizationbasedRecommenderConfig32.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer34 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig32);
        factorizationbasedRecommenderConfig32.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig32.setNumberOfIterations((int) '#');
        double double39 = factorizationbasedRecommenderConfig32.getLambda();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer40 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig32);
        factorizationbasedRecommenderConfig32.setUsesImplicitFeedback(false);
// flaky:         configuration30.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig32);
// flaky:         configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig32);
        int int45 = 0; // flaky: configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components46 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration47 = null; // flaky: components46.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration48 = null; // flaky: components46.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler49 = null; // flaky: components46.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration50 = null; // flaky: components46.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList51 = null; // flaky: configuration50.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration52 = null; // flaky: configuration50.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig53 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str54 = itembasedRecommenderConfig53.getRetrainCronExpression();
        int int55 = itembasedRecommenderConfig53.getRetrainAfterPreferenceChanges();
        java.lang.String str56 = itembasedRecommenderConfig53.getSimilarityClass();
        itembasedRecommenderConfig53.setSimilarityClass("MutablePreference{userID=100, itemID=0, value=0.0}");
        itembasedRecommenderConfig53.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=0.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer61 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig53);
// flaky:         configuration50.addItembasedRecommender(itembasedRecommenderConfig53);
        int int63 = itembasedRecommenderConfig53.getSimilarItemsPerItem();
        itembasedRecommenderConfig53.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer66 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig53);
        int int67 = itembasedRecommenderConfig53.getSimilarItemsPerItem();
// flaky:         configuration4.addItembasedRecommender(itembasedRecommenderConfig53);
        java.lang.String str69 = itembasedRecommenderConfig53.getSimilarityClass();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(components5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
// flaky:         org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(storage9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
// flaky:         org.junit.Assert.assertNotNull(components25);
// flaky:         org.junit.Assert.assertNotNull(configuration26);
// flaky:         org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(storage28);
        org.junit.Assert.assertNull(storage29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList31);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
// flaky:         org.junit.Assert.assertNotNull(components46);
// flaky:         org.junit.Assert.assertNotNull(configuration47);
// flaky:         org.junit.Assert.assertNotNull(configuration48);
        org.junit.Assert.assertNull(trainingScheduler49);
// flaky:         org.junit.Assert.assertNotNull(configuration50);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList51);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration52);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str69, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test29503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29503");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        java.lang.String str5 = batchSetPreferencesServlet2.getServletInfo();
        batchSetPreferencesServlet2.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str8 = batchDeleteCandidatesServlet7.getServletInfo();
        java.lang.String str9 = batchDeleteCandidatesServlet7.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet10 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet11 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet12 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        setPreferenceServlet10.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet15 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet10.init((javax.servlet.ServletConfig) recommendServlet15);
        batchDeleteCandidatesServlet7.init((javax.servlet.ServletConfig) setPreferenceServlet10);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet18.init();
        java.lang.String str20 = batchAddCandidatesServlet18.getServletInfo();
        javax.servlet.ServletConfig servletConfig21 = batchAddCandidatesServlet18.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str23 = batchDeleteCandidatesServlet22.getServletInfo();
        java.lang.String str24 = batchDeleteCandidatesServlet22.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet25 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet27 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet26.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet27);
        setPreferenceServlet25.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet27);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet30 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet25.init((javax.servlet.ServletConfig) recommendServlet30);
        batchDeleteCandidatesServlet22.init((javax.servlet.ServletConfig) setPreferenceServlet25);
        batchAddCandidatesServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        batchDeleteCandidatesServlet7.init((javax.servlet.ServletConfig) batchAddCandidatesServlet18);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet35 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str36 = recommendServlet35.getServletInfo();
        javax.servlet.ServletConfig servletConfig37 = recommendServlet35.getServletConfig();
        javax.servlet.ServletConfig servletConfig38 = recommendServlet35.getServletConfig();
        javax.servlet.ServletConfig servletConfig39 = recommendServlet35.getServletConfig();
        batchAddCandidatesServlet18.init((javax.servlet.ServletConfig) recommendServlet35);
        batchSetPreferencesServlet2.init((javax.servlet.ServletConfig) recommendServlet35);
        java.lang.String str42 = batchSetPreferencesServlet2.getServletInfo();
        java.lang.String str43 = batchSetPreferencesServlet2.getServletInfo();
        javax.servlet.ServletRequest servletRequest44 = null;
        javax.servlet.ServletResponse servletResponse45 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet2.service(servletRequest44, servletResponse45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(servletConfig37);
        org.junit.Assert.assertNull(servletConfig38);
        org.junit.Assert.assertNull(servletConfig39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test29504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29504");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
        java.lang.String str3 = null; // flaky: configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig4.setNumberOfFeatures((int) (byte) 1);
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = null; // flaky: configuration1.getStorageConfiguration();
// flaky:         storageConfiguration13.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=100.0}");
// flaky:         storageConfiguration13.setPassword("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
// flaky:         storageConfiguration13.setUsername("MutablePreference{userID=97, itemID=97, value=52.0}");
// flaky:         storageConfiguration13.setJdbcDriverClass("MutablePreference{userID=35, itemID=0, value=52.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str3, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration13);
    }

    @Test
    public void test29505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29505");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10000);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: label");
        boolean boolean17 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double20 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        double double27 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
    }

    @Test
    public void test29506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29506");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException7);
        java.lang.Throwable[] throwableArray10 = missingParameterException7.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException7);
        java.lang.Throwable[] throwableArray12 = missingParameterException7.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: file", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException16);
        invalidParameterException13.addSuppressed((java.lang.Throwable) invalidParameterException17);
        java.lang.Throwable[] throwableArray19 = invalidParameterException13.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=35, itemID=35, value=0.0}", (java.lang.Throwable) invalidParameterException13);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10, itemID=10000, value=100.0}", (java.lang.Throwable) invalidParameterException20);
        java.lang.Throwable[] throwableArray22 = invalidParameterException20.getSuppressed();
        java.lang.String str23 = invalidParameterException20.toString();
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=35, itemID=35, value=0.0}" + "'", str23, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=35, itemID=35, value=0.0}");
    }

    @Test
    public void test29507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29507");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        java.lang.String str2 = mutablePreference0.toString();
        float float3 = mutablePreference0.getValue();
        float float4 = mutablePreference0.getValue();
        mutablePreference0.set((long) (byte) 10, (long) ' ', (float) 35L);
        mutablePreference0.set(100L, (long) (short) 100, 100.0f);
        float float13 = mutablePreference0.getValue();
        java.lang.String str14 = mutablePreference0.toString();
        mutablePreference0.set((long) 52, 32L, (float) 52L);
        long long19 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str2, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 0.0f + "'", float3 == 0.0f);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 100.0f + "'", float13 == 100.0f);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=100, itemID=100, value=100.0}" + "'", str14, "MutablePreference{userID=100, itemID=100, value=100.0}");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
    }

    @Test
    public void test29508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29508");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        java.lang.String str2 = mutableCandidate0.getLabel();
        mutableCandidate0.set("file", (long) (short) 1);
        long long6 = mutableCandidate0.getItemID();
        long long7 = mutableCandidate0.getItemID();
        long long8 = mutableCandidate0.getItemID();
        long long9 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: file", 52L);
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}", (long) 100);
        long long16 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
    }

    @Test
    public void test29509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29509");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig0.setAlpha((double) ' ');
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setAlpha(52.0d);
        factorizationbasedRecommenderConfig0.setAlpha((double) '4');
        factorizationbasedRecommenderConfig0.setAlpha((double) 52);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
    }

    @Test
    public void test29510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29510");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair6 = null;
        double double8 = filteringLongPairRescorer5.rescore(longPair6, 52.0d);
        org.apache.mahout.common.LongPair longPair9 = null;
        double double11 = filteringLongPairRescorer5.rescore(longPair9, (double) '#');
        org.apache.mahout.common.LongPair longPair12 = null;
        double double14 = filteringLongPairRescorer5.rescore(longPair12, (double) 100.0f);
        org.apache.mahout.common.LongPair longPair15 = null;
        double double17 = filteringLongPairRescorer5.rescore(longPair15, (double) ' ');
        org.apache.mahout.common.LongPair longPair18 = null;
        double double20 = filteringLongPairRescorer5.rescore(longPair18, (double) 0L);
        org.apache.mahout.common.LongPair longPair21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = filteringLongPairRescorer5.isFiltered(longPair21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 32.0d + "'", double17 == 32.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test29511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29511");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig14);
        factorizationbasedRecommenderConfig14.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig14.setNumberOfIterations((int) '#');
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList22 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components23 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration24 = null; // flaky: components23.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList25 = null; // flaky: configuration24.getItembasedRecommenders();
        java.lang.String str26 = null; // flaky: configuration24.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig27 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double28 = factorizationbasedRecommenderConfig27.getAlpha();
        double double29 = factorizationbasedRecommenderConfig27.getLambda();
        int int30 = factorizationbasedRecommenderConfig27.getNumberOfFeatures();
        factorizationbasedRecommenderConfig27.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer33 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig27);
// flaky:         configuration24.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig27);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList35 = null; // flaky: configuration24.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList36 = null; // flaky: configuration24.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig37 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig37.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer40 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig37);
        itembasedRecommenderConfig37.setRetrainCronExpression("");
        itembasedRecommenderConfig37.setSimilarItemsPerItem(10);
        java.lang.String str45 = itembasedRecommenderConfig37.getName();
        int int46 = itembasedRecommenderConfig37.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig37.setName("MutablePreference{userID=100, itemID=0, value=0.0}");
        int int49 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
// flaky:         configuration24.addItembasedRecommender(itembasedRecommenderConfig37);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig37);
        itembasedRecommenderConfig37.setSimilarItemsPerItem((int) (byte) -1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList22);
// flaky:         org.junit.Assert.assertNotNull(components23);
// flaky:         org.junit.Assert.assertNotNull(configuration24);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList25);
// flaky:         org.junit.Assert.assertEquals("'" + str26 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str26, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList35);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList36);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 10 + "'", int49 == 10);
    }

    @Test
    public void test29512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29512");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
// flaky:         configuration9.setNumProcessorsForTraining(52);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str13 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str16 = storageConfiguration12.getJdbcUrl();
        java.lang.String str17 = storageConfiguration12.getJdbcDriverClass();
        java.lang.String str18 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        java.lang.String str21 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setPassword("hi!");
        java.lang.String str24 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: userID");
// flaky:         configuration9.setStorageConfiguration(storageConfiguration12);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration28 = null; // flaky: configuration9.getStorageConfiguration();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration28);
    }

    @Test
    public void test29513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29513");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: ", (long) (short) 1);
        long long15 = mutableCandidate0.getItemID();
        java.lang.String str16 = mutableCandidate0.getLabel();
        long long17 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", (long) (byte) 1);
        long long21 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", 1L);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=100, value=100.0}", 0L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: " + "'", str16, "org.plista.kornakapi.web.InvalidParameterException: ");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
    }

    @Test
    public void test29514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29514");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage8 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage9 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage11 = null; // flaky: components0.storage();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(storage9);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener10);
        org.junit.Assert.assertNull(storage11);
    }

    @Test
    public void test29515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29515");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (byte) 1, (double) (byte) 100);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) '4', (double) ' ');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = fixedCandidatesIDRescorer1.isFiltered((long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 32.0d + "'", double9 == 32.0d);
    }

    @Test
    public void test29516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29516");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (byte) 1, (double) 10000.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer7 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer8 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair9 = null;
        double double11 = filteringLongPairRescorer8.rescore(longPair9, (double) 1L);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 10000.0d + "'", double6 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test29517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29517");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException4 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException3);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException4);
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}");
        invalidParameterException5.addSuppressed((java.lang.Throwable) missingParameterException7);
        java.lang.Throwable[] throwableArray9 = invalidParameterException5.getSuppressed();
        java.lang.Throwable throwable12 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: howMany", throwable12);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException14 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", throwable12);
        // The following exception was thrown during execution in test generation
        try {
            invalidParameterException5.addSuppressed(throwable12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test29518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29518");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) recommendServlet5);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet8 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet9 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet8.init((javax.servlet.ServletConfig) batchSetPreferencesServlet9);
        java.lang.String str11 = batchSetPreferencesServlet9.getServletInfo();
        batchSetPreferencesServlet9.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str14 = batchDeleteCandidatesServlet13.getServletInfo();
        java.lang.String str15 = batchDeleteCandidatesServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet16 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet17 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        setPreferenceServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet16.init((javax.servlet.ServletConfig) recommendServlet21);
        batchDeleteCandidatesServlet13.init((javax.servlet.ServletConfig) setPreferenceServlet16);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet24 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig28 = batchSetPreferencesServlet25.getServletConfig();
        addCandidateServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig30 = addCandidateServlet24.getServletConfig();
        batchDeleteCandidatesServlet13.init((javax.servlet.ServletConfig) addCandidateServlet24);
        addCandidateServlet24.destroy();
        batchSetPreferencesServlet9.init((javax.servlet.ServletConfig) addCandidateServlet24);
        batchSetPreferencesServlet9.init();
        batchDeleteCandidatesServlet7.init((javax.servlet.ServletConfig) batchSetPreferencesServlet9);
        batchDeleteCandidatesServlet7.init();
        javax.servlet.ServletConfig servletConfig37 = batchDeleteCandidatesServlet7.getServletConfig();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet7);
        java.lang.String str39 = recommendServlet5.getServletInfo();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext40 = recommendServlet5.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(servletConfig28);
        org.junit.Assert.assertNotNull(servletConfig30);
        org.junit.Assert.assertNotNull(servletConfig37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test29519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29519");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig12 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double13 = factorizationbasedRecommenderConfig12.getAlpha();
        double double14 = factorizationbasedRecommenderConfig12.getLambda();
        int int15 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        java.lang.String str16 = factorizationbasedRecommenderConfig12.getRetrainCronExpression();
        int int17 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        factorizationbasedRecommenderConfig12.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig12.setRetrainAfterPreferenceChanges(10000);
        double double22 = factorizationbasedRecommenderConfig12.getLambda();
        int int23 = factorizationbasedRecommenderConfig12.getNumberOfIterations();
        factorizationbasedRecommenderConfig12.setAlpha((double) 0L);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig12);
        factorizationbasedRecommenderConfig12.setNumberOfIterations(10);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test29520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29520");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=97, itemID=1, value=100.0}", (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test29521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29521");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        long long5 = mutableCandidate0.getItemID();
        long long6 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: itemIDs", (long) (byte) -1);
        java.lang.String str10 = mutableCandidate0.getLabel();
        long long11 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", (long) (short) -1);
        long long15 = mutableCandidate0.getItemID();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=-1.0}", 0L);
        java.lang.String str19 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str10, "org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + (-1L) + "'", long15 == (-1L));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=0, itemID=0, value=-1.0}" + "'", str19, "MutablePreference{userID=0, itemID=0, value=-1.0}");
    }

    @Test
    public void test29522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29522");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) (-1.0f));
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getName();
        double double10 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setLambda((double) 'a');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test29523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29523");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration4.getPassword();
        java.lang.String str12 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration4.getPassword();
        storageConfiguration4.setUsername("MutablePreference{userID=100, itemID=0, value=0.0}");
        storageConfiguration4.setPassword("itemID");
        java.lang.String str18 = storageConfiguration4.getUsername();
        configuration0.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str21 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str24 = storageConfiguration20.getJdbcUrl();
        java.lang.String str25 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str26 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setPassword("org.plista.kornakapi.web.MissingParameterException: itemID");
        storageConfiguration20.setUsername("");
        configuration0.setStorageConfiguration(storageConfiguration20);
        java.lang.String str32 = storageConfiguration20.getUsername();
        java.lang.String str33 = storageConfiguration20.getJdbcUrl();
        java.lang.String str34 = storageConfiguration20.getJdbcDriverClass();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str18, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test29524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29524");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str7 = itembasedRecommenderConfig6.getSimilarityClass();
        int int8 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        int int9 = itembasedRecommenderConfig6.getRetrainAfterPreferenceChanges();
        int int10 = itembasedRecommenderConfig6.getRetrainAfterPreferenceChanges();
        java.lang.String str11 = itembasedRecommenderConfig6.getSimilarityClass();
        java.lang.String str12 = itembasedRecommenderConfig6.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        java.lang.String str14 = itembasedRecommenderConfig6.getName();
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) (byte) -1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test29525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29525");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        int int4 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration7.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration7);
        java.lang.String str18 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setSimilarityClass("");
        java.lang.String str24 = itembasedRecommenderConfig21.getName();
        java.lang.String str25 = itembasedRecommenderConfig21.getSimilarityClass();
        java.lang.String str26 = itembasedRecommenderConfig21.getSimilarityClass();
        int int27 = itembasedRecommenderConfig21.getSimilarItemsPerItem();
        itembasedRecommenderConfig21.setSimilarItemsPerItem((int) (byte) 10);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig21);
        int int31 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration32 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str33 = storageConfiguration32.getUsername();
        java.lang.String str34 = storageConfiguration32.getJdbcDriverClass();
        java.lang.String str35 = storageConfiguration32.getPassword();
        storageConfiguration32.setJdbcUrl("file");
        java.lang.String str38 = storageConfiguration32.getUsername();
        storageConfiguration32.setUsername("");
        configuration0.setStorageConfiguration(storageConfiguration32);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration42 = configuration0.getStorageConfiguration();
        int int43 = configuration0.getNumProcessorsForTraining();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(storageConfiguration42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
    }

    @Test
    public void test29526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29526");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(100);
        factorizationbasedRecommenderConfig0.setLambda((double) 10000.0f);
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 0);
        factorizationbasedRecommenderConfig0.setAlpha((double) (byte) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(0);
        factorizationbasedRecommenderConfig0.setName("hi!");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test29527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29527");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 1);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setAlpha((double) (short) 10);
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setAlpha((double) 1.0f);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer19 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double20 = factorizationbasedRecommenderConfig0.getAlpha();
        double double21 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 1.0d + "'", double20 == 1.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 1.0d + "'", double21 == 1.0d);
    }

    @Test
    public void test29528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29528");
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.config.Configuration configuration1 = org.plista.kornakapi.core.config.Configuration.fromXML("MutablePreference{userID=0, itemID=97, value=-1.0}");
            org.junit.Assert.fail("Expected exception of type com.thoughtworks.xstream.io.StreamException; message:  : only whitespace content allowed before start tag and not M (position: START_DOCUMENT seen M... @1:1) ");
        } catch (com.thoughtworks.xstream.io.StreamException e) {
            // Expected exception.
        }
    }

    @Test
    public void test29529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29529");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig0.setAlpha((double) ' ');
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int16 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        double double17 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test29530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29530");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = null; // flaky: configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str4 = storageConfiguration3.getJdbcDriverClass();
        java.lang.String str5 = storageConfiguration3.getUsername();
        storageConfiguration3.setPassword("label");
// flaky:         configuration1.setStorageConfiguration(storageConfiguration3);
// flaky:         configuration1.setNumProcessorsForTraining(10);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = null; // flaky: configuration1.getItembasedRecommenders();
        java.lang.String str12 = null; // flaky: configuration1.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList13 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
// flaky:         configuration1.setNumProcessorsForTraining(100);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
// flaky:         org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str12, "MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList13);
    }

    @Test
    public void test29531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29531");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 0);
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double15 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test29532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29532");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) 1L);
        double double15 = fixedCandidatesIDRescorer1.rescore(10000L, (double) 52);
        double double18 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) 35);
        double double21 = fixedCandidatesIDRescorer1.rescore((long) 10000, 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 35.0d + "'", double18 == 35.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
    }

    @Test
    public void test29533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29533");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '4');
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10000);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(100);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test29534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29534");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        java.lang.String str3 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) recommendServlet4);
        java.lang.String str6 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet8 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet8);
        recommendServlet7.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        recommendServlet7.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig16 = batchSetPreferencesServlet12.getServletConfig();
        batchSetPreferencesServlet12.init();
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet12.log("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=10, value=1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNull(servletConfig16);
    }

    @Test
    public void test29535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29535");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
// flaky:         configuration1.setNumProcessorsForTraining((int) (byte) 1);
        org.plista.kornakapi.core.config.Configuration configuration4 = new org.plista.kornakapi.core.config.Configuration();
        configuration4.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        java.lang.String str11 = configuration4.getModelDirectory();
        int int12 = configuration4.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList13 = configuration4.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList14 = configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration15.getJdbcUrl();
        java.lang.String str20 = storageConfiguration15.getJdbcUrl();
        java.lang.String str21 = storageConfiguration15.getJdbcUrl();
        storageConfiguration15.setUsername("recommender");
        java.lang.String str24 = storageConfiguration15.getJdbcDriverClass();
        configuration4.setStorageConfiguration(storageConfiguration15);
        org.plista.kornakapi.web.Components components26 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration27 = null; // flaky: components26.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler28 = null; // flaky: components26.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler29 = null; // flaky: components26.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration30 = null; // flaky: components26.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration31 = null; // flaky: components26.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList32 = null; // flaky: configuration31.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration33 = null; // flaky: configuration31.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration34 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str35 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str38 = storageConfiguration34.getJdbcUrl();
        java.lang.String str39 = storageConfiguration34.getJdbcDriverClass();
        java.lang.String str40 = storageConfiguration34.getJdbcDriverClass();
        java.lang.String str41 = storageConfiguration34.getPassword();
        java.lang.String str42 = storageConfiguration34.getUsername();
        java.lang.String str43 = storageConfiguration34.getJdbcDriverClass();
        java.lang.String str44 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: recommender");
        storageConfiguration34.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
// flaky:         configuration31.setStorageConfiguration(storageConfiguration34);
        configuration4.setStorageConfiguration(storageConfiguration34);
// flaky:         configuration1.setStorageConfiguration(storageConfiguration34);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig52 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double53 = factorizationbasedRecommenderConfig52.getAlpha();
        double double54 = factorizationbasedRecommenderConfig52.getLambda();
        int int55 = factorizationbasedRecommenderConfig52.getNumberOfFeatures();
        factorizationbasedRecommenderConfig52.setLambda((double) 1);
        double double58 = factorizationbasedRecommenderConfig52.getAlpha();
        factorizationbasedRecommenderConfig52.setRetrainCronExpression("hi!");
        factorizationbasedRecommenderConfig52.setLambda((double) '#');
// flaky:         configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig52);
        int int64 = 0; // flaky: configuration1.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList65 = null; // flaky: configuration1.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 100 + "'", int12 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList13);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
// flaky:         org.junit.Assert.assertNotNull(components26);
// flaky:         org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(trainingScheduler28);
        org.junit.Assert.assertNull(trainingScheduler29);
// flaky:         org.junit.Assert.assertNotNull(configuration30);
// flaky:         org.junit.Assert.assertNotNull(configuration31);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList32);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str42, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList65);
    }

    @Test
    public void test29536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29536");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(100);
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        int int16 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((-1));
        factorizationbasedRecommenderConfig0.setAlpha((double) 10000);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=32, itemID=32, value=97.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
    }

    @Test
    public void test29537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29537");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        java.lang.String str8 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet9 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig13 = batchSetPreferencesServlet10.getServletConfig();
        addCandidateServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet10.getServletConfig();
        batchSetPreferencesServlet10.destroy();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        java.lang.Throwable throwable19 = null;
        // The following exception was thrown during execution in test generation
        try {
            setPreferenceServlet0.log("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=1, itemID=-1, value=35.0}", throwable19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig15);
    }

    @Test
    public void test29538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29538");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = null; // flaky: configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = null; // flaky: configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str9 = itembasedRecommenderConfig8.getRetrainCronExpression();
        int int10 = itembasedRecommenderConfig8.getRetrainAfterPreferenceChanges();
        java.lang.String str11 = itembasedRecommenderConfig8.getSimilarityClass();
        itembasedRecommenderConfig8.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig8.setSimilarityClass("");
        itembasedRecommenderConfig8.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig8.setSimilarItemsPerItem(10000);
        itembasedRecommenderConfig8.setName("MutablePreference{userID=0, itemID=0, value=1.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer22 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig8);
// flaky:         configuration5.addItembasedRecommender(itembasedRecommenderConfig8);
        java.lang.String str24 = itembasedRecommenderConfig8.getSimilarityClass();
        java.lang.String str25 = itembasedRecommenderConfig8.getName();
        itembasedRecommenderConfig8.setRetrainAfterPreferenceChanges((int) '4');
        itembasedRecommenderConfig8.setRetrainAfterPreferenceChanges((int) (byte) 1);
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str25, "MutablePreference{userID=0, itemID=0, value=1.0}");
    }

    @Test
    public void test29539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29539");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 1);
        long long6 = mutablePreference0.getUserID();
        java.lang.String str7 = mutablePreference0.toString();
        mutablePreference0.setValue((float) (short) -1);
        float float10 = mutablePreference0.getValue();
        long long11 = mutablePreference0.getItemID();
        java.lang.String str12 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + (-1.0f) + "'", float10 == (-1.0f));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=0, itemID=0, value=-1.0}" + "'", str12, "MutablePreference{userID=0, itemID=0, value=-1.0}");
    }

    @Test
    public void test29540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29540");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        javax.servlet.ServletConfig servletConfig7 = setPreferenceServlet0.getServletConfig();
        java.lang.String str8 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet9 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet9.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet11 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet12.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet13);
        setPreferenceServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet13);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet16 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet11.init((javax.servlet.ServletConfig) recommendServlet16);
        recommendServlet16.init();
        addCandidateServlet9.init((javax.servlet.ServletConfig) recommendServlet16);
        java.lang.String str20 = addCandidateServlet9.getServletInfo();
        addCandidateServlet9.init();
        javax.servlet.ServletConfig servletConfig22 = addCandidateServlet9.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet23 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet24 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig27 = batchSetPreferencesServlet24.getServletConfig();
        addCandidateServlet23.init((javax.servlet.ServletConfig) batchSetPreferencesServlet24);
        batchSetPreferencesServlet24.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet30 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str31 = recommendServlet30.getServletInfo();
        javax.servlet.ServletConfig servletConfig32 = recommendServlet30.getServletConfig();
        java.lang.String str33 = recommendServlet30.getServletInfo();
        batchSetPreferencesServlet24.init((javax.servlet.ServletConfig) recommendServlet30);
        addCandidateServlet9.init((javax.servlet.ServletConfig) recommendServlet30);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet36 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet36.destroy();
        trainServlet36.destroy();
        java.lang.String str39 = trainServlet36.getServletInfo();
        java.lang.String str40 = trainServlet36.getServletInfo();
        javax.servlet.ServletConfig servletConfig41 = trainServlet36.getServletConfig();
        javax.servlet.ServletConfig servletConfig42 = trainServlet36.getServletConfig();
        trainServlet36.destroy();
        trainServlet36.init();
        addCandidateServlet9.init((javax.servlet.ServletConfig) trainServlet36);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet46 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet47 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet46.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet47);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet49 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str50 = batchDeleteCandidatesServlet49.getServletInfo();
        batchDeleteCandidatesServlet49.init();
        javax.servlet.ServletConfig servletConfig52 = null;
        batchDeleteCandidatesServlet49.init(servletConfig52);
        recommendServlet46.init(servletConfig52);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet55 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet56 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet55.init((javax.servlet.ServletConfig) batchSetPreferencesServlet56);
        javax.servlet.ServletConfig servletConfig58 = batchSetPreferencesServlet55.getServletConfig();
        batchSetPreferencesServlet55.destroy();
        javax.servlet.ServletConfig servletConfig60 = batchSetPreferencesServlet55.getServletConfig();
        batchSetPreferencesServlet55.init();
        recommendServlet46.init((javax.servlet.ServletConfig) batchSetPreferencesServlet55);
        trainServlet36.init((javax.servlet.ServletConfig) batchSetPreferencesServlet55);
        batchSetPreferencesServlet55.destroy();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet55);
        java.lang.String str66 = batchSetPreferencesServlet55.getServletInfo();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet67 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet67.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet69 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet70 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet69.init((javax.servlet.ServletConfig) batchSetPreferencesServlet70);
        addCandidateServlet67.init((javax.servlet.ServletConfig) batchSetPreferencesServlet69);
        java.lang.String str73 = batchSetPreferencesServlet69.getServletInfo();
        javax.servlet.ServletConfig servletConfig74 = batchSetPreferencesServlet69.getServletConfig();
        batchSetPreferencesServlet69.destroy();
        java.lang.String str76 = batchSetPreferencesServlet69.getServletInfo();
        java.lang.String str77 = batchSetPreferencesServlet69.getServletInfo();
        java.lang.String str78 = batchSetPreferencesServlet69.getServletInfo();
        javax.servlet.ServletConfig servletConfig79 = batchSetPreferencesServlet69.getServletConfig();
        batchSetPreferencesServlet69.destroy();
        batchSetPreferencesServlet55.init((javax.servlet.ServletConfig) batchSetPreferencesServlet69);
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(servletConfig22);
        org.junit.Assert.assertNotNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(servletConfig41);
        org.junit.Assert.assertNull(servletConfig42);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
        org.junit.Assert.assertNotNull(servletConfig58);
        org.junit.Assert.assertNotNull(servletConfig60);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(servletConfig74);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "" + "'", str78, "");
        org.junit.Assert.assertNotNull(servletConfig79);
    }

    @Test
    public void test29541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29541");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (byte) 1, (double) (byte) 100);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) '4');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer13 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair14 = null;
        double double16 = filteringLongPairRescorer13.rescore(longPair14, (double) (short) 100);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 100.0d + "'", double16 == 100.0d);
    }

    @Test
    public void test29542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29542");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("batchSize");
        storageConfiguration0.setPassword("howMany");
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str12 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str15 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setPassword("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        java.lang.String str18 = storageConfiguration0.getJdbcUrl();
        java.lang.String str19 = storageConfiguration0.getJdbcUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "howMany" + "'", str12, "howMany");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "batchSize" + "'", str15, "batchSize");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
    }

    @Test
    public void test29543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29543");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        java.lang.String str8 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        java.lang.String str10 = setPreferenceServlet0.getServletInfo();
        java.lang.String str11 = setPreferenceServlet0.getServletInfo();
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test29544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29544");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("");
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=0, itemID=10000, value=10.0}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test29545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29545");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair6 = null;
        double double8 = filteringLongPairRescorer5.rescore(longPair6, (double) 10L);
        org.apache.mahout.common.LongPair longPair9 = null;
        double double11 = filteringLongPairRescorer5.rescore(longPair9, (double) (short) -1);
        org.apache.mahout.common.LongPair longPair12 = null;
        double double14 = filteringLongPairRescorer5.rescore(longPair12, (double) (short) 0);
        org.apache.mahout.common.LongPair longPair15 = null;
        double double17 = filteringLongPairRescorer5.rescore(longPair15, (double) 100);
        org.apache.mahout.common.LongPair longPair18 = null;
        double double20 = filteringLongPairRescorer5.rescore(longPair18, (double) (short) -1);
        org.apache.mahout.common.LongPair longPair21 = null;
        double double23 = filteringLongPairRescorer5.rescore(longPair21, (double) 52L);
        org.apache.mahout.common.LongPair longPair24 = null;
        double double26 = filteringLongPairRescorer5.rescore(longPair24, 0.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 52.0d + "'", double23 == 52.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test29546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29546");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet7.init();
        java.lang.String str9 = batchAddCandidatesServlet7.getServletInfo();
        javax.servlet.ServletConfig servletConfig10 = batchAddCandidatesServlet7.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str12 = batchDeleteCandidatesServlet11.getServletInfo();
        java.lang.String str13 = batchDeleteCandidatesServlet11.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet14 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet15 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet15.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        setPreferenceServlet14.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet16);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet14.init((javax.servlet.ServletConfig) recommendServlet19);
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) setPreferenceServlet14);
        batchAddCandidatesServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        batchDeleteCandidatesServlet11.init();
        java.lang.String str24 = batchDeleteCandidatesServlet11.getServletInfo();
        java.lang.String str25 = batchDeleteCandidatesServlet11.getServletInfo();
        trainServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        javax.servlet.ServletConfig servletConfig27 = batchDeleteCandidatesServlet11.getServletConfig();
        batchDeleteCandidatesServlet11.init();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet29 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str30 = batchDeleteCandidatesServlet29.getServletInfo();
        java.lang.String str31 = batchDeleteCandidatesServlet29.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet32 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet33 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet34 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet33.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet34);
        setPreferenceServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet34);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet37 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet32.init((javax.servlet.ServletConfig) recommendServlet37);
        batchDeleteCandidatesServlet29.init((javax.servlet.ServletConfig) setPreferenceServlet32);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet40 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet40.init();
        java.lang.String str42 = batchAddCandidatesServlet40.getServletInfo();
        javax.servlet.ServletConfig servletConfig43 = batchAddCandidatesServlet40.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet44 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str45 = batchDeleteCandidatesServlet44.getServletInfo();
        java.lang.String str46 = batchDeleteCandidatesServlet44.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet47 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet48 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet49 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet48.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet49);
        setPreferenceServlet47.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet49);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet52 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet47.init((javax.servlet.ServletConfig) recommendServlet52);
        batchDeleteCandidatesServlet44.init((javax.servlet.ServletConfig) setPreferenceServlet47);
        batchAddCandidatesServlet40.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet44);
        batchDeleteCandidatesServlet29.init((javax.servlet.ServletConfig) batchAddCandidatesServlet40);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet57 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str58 = recommendServlet57.getServletInfo();
        javax.servlet.ServletConfig servletConfig59 = recommendServlet57.getServletConfig();
        javax.servlet.ServletConfig servletConfig60 = recommendServlet57.getServletConfig();
        javax.servlet.ServletConfig servletConfig61 = recommendServlet57.getServletConfig();
        batchAddCandidatesServlet40.init((javax.servlet.ServletConfig) recommendServlet57);
        recommendServlet57.init();
        batchDeleteCandidatesServlet11.init((javax.servlet.ServletConfig) recommendServlet57);
        recommendServlet57.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNotNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertNull(servletConfig43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertNull(servletConfig59);
        org.junit.Assert.assertNull(servletConfig60);
        org.junit.Assert.assertNull(servletConfig61);
    }

    @Test
    public void test29547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29547");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) (short) 10);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double14 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda(1.0d);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=0, itemID=10000, value=1.0}");
        double double19 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=100, itemID=1, value=10000.0}");
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
    }

    @Test
    public void test29548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29548");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 1);
        factorizationbasedRecommenderConfig0.setLambda((double) 100);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig0.setAlpha((double) 1);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 100);
        factorizationbasedRecommenderConfig0.setLambda((double) ' ');
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 100);
        java.lang.String str22 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test29549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29549");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) (byte) 1);
        double double10 = fixedCandidatesIDRescorer1.rescore((long) (byte) 10, (double) 100);
        double double13 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) ' ');
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 32.0d + "'", double13 == 32.0d);
    }

    @Test
    public void test29550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29550");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(10000);
        factorizationbasedRecommenderConfig0.setLambda((double) (-1L));
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test29551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29551");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair11 = null;
        double double13 = filteringLongPairRescorer10.rescore(longPair11, (double) (short) 100);
        org.apache.mahout.common.LongPair longPair14 = null;
        double double16 = filteringLongPairRescorer10.rescore(longPair14, (double) 1);
        org.apache.mahout.common.LongPair longPair17 = null;
        double double19 = filteringLongPairRescorer10.rescore(longPair17, (double) 35.0f);
        org.apache.mahout.common.LongPair longPair20 = null;
        double double22 = filteringLongPairRescorer10.rescore(longPair20, (double) (byte) -1);
        org.apache.mahout.common.LongPair longPair23 = null;
        double double25 = filteringLongPairRescorer10.rescore(longPair23, (double) 97L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 97.0d + "'", double25 == 97.0d);
    }

    @Test
    public void test29552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29552");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getUserID();
        float float4 = mutablePreference0.getValue();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.setValue((float) 35L);
        java.lang.String str8 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=0, value=35.0}" + "'", str8, "MutablePreference{userID=0, itemID=0, value=35.0}");
    }

    @Test
    public void test29553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29553");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer4 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 100, (double) 'a');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer8 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) 'a', (double) 52);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) 'a', (double) 52);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer16 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 97.0d + "'", double7 == 97.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 52.0d + "'", double11 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 52.0d + "'", double14 == 52.0d);
    }

    @Test
    public void test29554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29554");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10);
        java.lang.String str8 = itembasedRecommenderConfig0.getName();
        int int9 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=0, itemID=0, value=52.0}");
        int int14 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str16 = itembasedRecommenderConfig0.getName();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test29555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29555");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
    }

    @Test
    public void test29556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29556");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        long long4 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", 0L);
        long long8 = mutableCandidate0.getItemID();
        long long9 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) 100);
        long long13 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 100L + "'", long13 == 100L);
    }

    @Test
    public void test29557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29557");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener17 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener37 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener37);
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener42 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener44 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener42.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener44);
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener37.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener44);
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener51 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener53 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener51.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener53);
        delegatingPreferenceChangeListener37.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener53);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener37);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler61 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener64 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler61, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=-1.0}", (int) (byte) 100);
        inMemoryPreferenceChangeListener64.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener64.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener64.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener64);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
    }

    @Test
    public void test29558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29558");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = null; // flaky: components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = null; // flaky: components0.scheduler();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(trainingScheduler5);
// flaky:         org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(trainingScheduler10);
    }

    @Test
    public void test29559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29559");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("MutablePreference{userID=0, itemID=0, value=0.0}");
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setAlpha((double) 35);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test29560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29560");
        org.plista.kornakapi.web.MissingParameterException missingParameterException2 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray3 = missingParameterException2.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException4 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException2);
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray8 = missingParameterException7.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=0.0}", (java.lang.Throwable) invalidParameterException15);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: howMany", (java.lang.Throwable) invalidParameterException15);
        invalidParameterException9.addSuppressed((java.lang.Throwable) invalidParameterException17);
        missingParameterException2.addSuppressed((java.lang.Throwable) invalidParameterException9);
        org.plista.kornakapi.web.MissingParameterException missingParameterException23 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException23);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException25 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException23);
        java.lang.Throwable[] throwableArray26 = missingParameterException23.getSuppressed();
        java.lang.Throwable[] throwableArray27 = missingParameterException23.getSuppressed();
        missingParameterException2.addSuppressed((java.lang.Throwable) missingParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException32 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray33 = missingParameterException32.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException34 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException32);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException35 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) missingParameterException32);
        missingParameterException23.addSuppressed((java.lang.Throwable) missingParameterException32);
        java.lang.String str37 = missingParameterException23.toString();
        org.junit.Assert.assertNotNull(throwableArray3);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str37, "org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test29561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29561");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 10);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) 35);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) 100L);
        double double17 = fixedCandidatesIDRescorer1.rescore((long) 0, (double) (-1));
        double double20 = fixedCandidatesIDRescorer1.rescore((long) (byte) 100, (double) 'a');
        double double23 = fixedCandidatesIDRescorer1.rescore(100L, 0.0d);
        double double26 = fixedCandidatesIDRescorer1.rescore((long) 'a', (double) 0L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 97.0d + "'", double20 == 97.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test29562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29562");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        java.lang.String str1 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet2 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet3 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        setPreferenceServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        java.lang.String str7 = setPreferenceServlet2.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        setPreferenceServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet10);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        batchDeleteCandidatesServlet14.init();
        batchDeleteCandidatesServlet14.destroy();
        java.lang.String str18 = batchDeleteCandidatesServlet14.getServletInfo();
        batchDeleteCandidatesServlet14.destroy();
        setPreferenceServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet14);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet14);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str23 = batchDeleteCandidatesServlet22.getServletInfo();
        java.lang.String str24 = batchDeleteCandidatesServlet22.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet25 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet27 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet26.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet27);
        setPreferenceServlet25.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet27);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet30 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet25.init((javax.servlet.ServletConfig) recommendServlet30);
        batchDeleteCandidatesServlet22.init((javax.servlet.ServletConfig) setPreferenceServlet25);
        batchDeleteCandidatesServlet22.destroy();
        batchDeleteCandidatesServlet22.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet35 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str36 = trainServlet35.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet37 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet37.destroy();
        javax.servlet.ServletConfig servletConfig39 = deleteCandidateServlet37.getServletConfig();
        deleteCandidateServlet37.destroy();
        trainServlet35.init((javax.servlet.ServletConfig) deleteCandidateServlet37);
        java.lang.String str42 = trainServlet35.getServletInfo();
        batchDeleteCandidatesServlet22.init((javax.servlet.ServletConfig) trainServlet35);
        batchDeleteCandidatesServlet22.init();
        java.lang.String str45 = batchDeleteCandidatesServlet22.getServletInfo();
        batchDeleteCandidatesServlet22.destroy();
        batchDeleteCandidatesServlet22.init();
        batchDeleteCandidatesServlet22.destroy();
        batchDeleteCandidatesServlet22.init();
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet22);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext51 = batchDeleteCandidatesServlet22.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(servletConfig39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test29563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29563");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=32.0}", (int) (short) 10);
    }

    @Test
    public void test29564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29564");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = null; // flaky: configuration9.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components11 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage12 = null; // flaky: components11.storage();
        org.plista.kornakapi.core.config.Configuration configuration13 = null; // flaky: components11.getConfiguration();
        java.lang.String str14 = null; // flaky: configuration13.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration15.getJdbcUrl();
        java.lang.String str20 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setJdbcDriverClass("batchSize");
        java.lang.String str23 = storageConfiguration15.getPassword();
        java.lang.String str24 = storageConfiguration15.getJdbcUrl();
// flaky:         configuration13.setStorageConfiguration(storageConfiguration15);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = null; // flaky: configuration13.getStorageConfiguration();
// flaky:         configuration9.setStorageConfiguration(storageConfiguration26);
// flaky:         configuration9.setModelDirectory("MutablePreference{userID=35, itemID=0, value=52.0}");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList30 = null; // flaky: configuration9.getItembasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
// flaky:         org.junit.Assert.assertNotNull(components11);
        org.junit.Assert.assertNull(storage12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str14, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration26);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList30);
    }

    @Test
    public void test29565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29565");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList10 = null; // flaky: configuration9.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList11 = null; // flaky: configuration9.getFactorizationbasedRecommenders();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
// flaky:         org.junit.Assert.assertNotNull(configuration4);
// flaky:         org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList10);
// flaky:         org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList11);
    }

    @Test
    public void test29566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29566");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        java.lang.String str5 = mutableCandidate0.getLabel();
        long long6 = mutableCandidate0.getItemID();
        java.lang.String str7 = mutableCandidate0.getLabel();
        long long8 = mutableCandidate0.getItemID();
        long long9 = mutableCandidate0.getItemID();
        long long10 = mutableCandidate0.getItemID();
        long long11 = mutableCandidate0.getItemID();
        java.lang.String str12 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=97, itemID=97, value=52.0}", (long) '#');
        long long16 = mutableCandidate0.getItemID();
        long long17 = mutableCandidate0.getItemID();
        java.lang.String str18 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "itemIDs" + "'", str5, "itemIDs");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "itemIDs" + "'", str7, "itemIDs");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "itemIDs" + "'", str12, "itemIDs");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 35L + "'", long16 == 35L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 35L + "'", long17 == 35L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=97, itemID=97, value=52.0}" + "'", str18, "MutablePreference{userID=97, itemID=97, value=52.0}");
    }

    @Test
    public void test29567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29567");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair6 = null;
        double double8 = filteringLongPairRescorer5.rescore(longPair6, (double) 10L);
        org.apache.mahout.common.LongPair longPair9 = null;
        double double11 = filteringLongPairRescorer5.rescore(longPair9, (double) (short) -1);
        org.apache.mahout.common.LongPair longPair12 = null;
        double double14 = filteringLongPairRescorer5.rescore(longPair12, (double) 100.0f);
        org.apache.mahout.common.LongPair longPair15 = null;
        double double17 = filteringLongPairRescorer5.rescore(longPair15, (double) 97L);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 97.0d + "'", double17 == 97.0d);
    }

    @Test
    public void test29568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29568");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener17 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
    }

    @Test
    public void test29569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29569");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (-1));
        float float6 = mutablePreference0.getValue();
        long long7 = mutablePreference0.getUserID();
        long long8 = mutablePreference0.getUserID();
        java.lang.String str9 = mutablePreference0.toString();
        mutablePreference0.set((long) 10000, (long) (byte) 0, 0.0f);
        long long14 = mutablePreference0.getUserID();
        mutablePreference0.set((long) 97, (long) 10, 10000.0f);
        java.lang.String str19 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + (-1.0f) + "'", float6 == (-1.0f));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "MutablePreference{userID=0, itemID=0, value=-1.0}" + "'", str9, "MutablePreference{userID=0, itemID=0, value=-1.0}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 10000L + "'", long14 == 10000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=97, itemID=10, value=10000.0}" + "'", str19, "MutablePreference{userID=97, itemID=10, value=10000.0}");
    }

    @Test
    public void test29570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29570");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = null; // flaky: configuration9.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components11 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage12 = null; // flaky: components11.storage();
        org.plista.kornakapi.core.config.Configuration configuration13 = null; // flaky: components11.getConfiguration();
        java.lang.String str14 = null; // flaky: configuration13.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration15.getJdbcUrl();
        java.lang.String str20 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setJdbcDriverClass("batchSize");
        java.lang.String str23 = storageConfiguration15.getPassword();
        java.lang.String str24 = storageConfiguration15.getJdbcUrl();
// flaky:         configuration13.setStorageConfiguration(storageConfiguration15);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = null; // flaky: configuration13.getStorageConfiguration();
// flaky:         configuration9.setStorageConfiguration(storageConfiguration26);
        java.lang.String str28 = null; // flaky: storageConfiguration26.getJdbcDriverClass();
        java.lang.String str29 = null; // flaky: storageConfiguration26.getUsername();
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
// flaky:         org.junit.Assert.assertNotNull(configuration8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
// flaky:         org.junit.Assert.assertNotNull(components11);
        org.junit.Assert.assertNull(storage12);
// flaky:         org.junit.Assert.assertNotNull(configuration13);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=35, itemID=0, value=52.0}" + "'", str14, "MutablePreference{userID=35, itemID=0, value=52.0}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration26);
// flaky:         org.junit.Assert.assertEquals("'" + str28 + "' != '" + "batchSize" + "'", str28, "batchSize");
// flaky:         org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str29, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test29571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29571");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        java.lang.String str6 = mutablePreference0.toString();
        mutablePreference0.setValue((float) 1);
        mutablePreference0.setValue((float) 10);
        java.lang.String str11 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=0, itemID=0, value=10.0}" + "'", str11, "MutablePreference{userID=0, itemID=0, value=10.0}");
    }

    @Test
    public void test29572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29572");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet13 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str14 = trainServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet15 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet15.destroy();
        javax.servlet.ServletConfig servletConfig17 = deleteCandidateServlet15.getServletConfig();
        deleteCandidateServlet15.destroy();
        trainServlet13.init((javax.servlet.ServletConfig) deleteCandidateServlet15);
        java.lang.String str20 = trainServlet13.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet13);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet24 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet24.init();
        java.lang.String str26 = batchAddCandidatesServlet24.getServletInfo();
        javax.servlet.ServletConfig servletConfig27 = batchAddCandidatesServlet24.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet28 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str29 = batchDeleteCandidatesServlet28.getServletInfo();
        java.lang.String str30 = batchDeleteCandidatesServlet28.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet31 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet32 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        setPreferenceServlet31.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet33);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet36 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet31.init((javax.servlet.ServletConfig) recommendServlet36);
        batchDeleteCandidatesServlet28.init((javax.servlet.ServletConfig) setPreferenceServlet31);
        batchAddCandidatesServlet24.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet28);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet28);
        javax.servlet.ServletConfig servletConfig41 = batchDeleteCandidatesServlet28.getServletConfig();
        javax.servlet.ServletConfig servletConfig42 = batchDeleteCandidatesServlet28.getServletConfig();
        batchDeleteCandidatesServlet28.init();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(servletConfig27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNotNull(servletConfig41);
        org.junit.Assert.assertNotNull(servletConfig42);
    }

    @Test
    public void test29573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29573");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: file");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10000);
        itembasedRecommenderConfig0.setName("MutablePreference{userID=100, itemID=100, value=97.0}");
    }

    @Test
    public void test29574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29574");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) 'a');
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int9 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        factorizationbasedRecommenderConfig0.setName("org.plista.kornakapi.web.MissingParameterException: file");
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double16 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 97 + "'", int9 == 97);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
    }

    @Test
    public void test29575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29575");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        int int3 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int4 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((-1));
        java.lang.String str7 = itembasedRecommenderConfig0.getName();
        java.lang.String str8 = itembasedRecommenderConfig0.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str10 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig0.getSimilarityClass();
        int int12 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str13 = itembasedRecommenderConfig0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test29576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29576");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        java.lang.String str3 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        javax.servlet.ServletConfig servletConfig5 = setPreferenceServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet6 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet6.destroy();
        deleteCandidateServlet6.destroy();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet6);
        javax.servlet.ServletRequest servletRequest10 = null;
        javax.servlet.ServletResponse servletResponse11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteCandidateServlet6.service(servletRequest10, servletResponse11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(servletConfig5);
    }

    @Test
    public void test29577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29577");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 0);
        java.lang.String str7 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str8 = itembasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setName("MutablePreference{userID=100, itemID=-1, value=97.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str7, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test29578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29578");
        org.plista.kornakapi.web.Components components0 = null; // flaky: org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = null; // flaky: components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null; // flaky: components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = null; // flaky: components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = null; // flaky: components0.getConfiguration();
        int int11 = 0; // flaky: configuration10.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig12 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double13 = factorizationbasedRecommenderConfig12.getAlpha();
        double double14 = factorizationbasedRecommenderConfig12.getLambda();
        int int15 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        factorizationbasedRecommenderConfig12.setLambda((double) 1);
        double double18 = factorizationbasedRecommenderConfig12.getAlpha();
        double double19 = factorizationbasedRecommenderConfig12.getLambda();
        int int20 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        factorizationbasedRecommenderConfig12.setRetrainAfterPreferenceChanges((int) (short) 100);
        factorizationbasedRecommenderConfig12.setLambda((double) 97L);
// flaky:         configuration10.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig12);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig26 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double27 = factorizationbasedRecommenderConfig26.getAlpha();
        double double28 = factorizationbasedRecommenderConfig26.getLambda();
        double double29 = factorizationbasedRecommenderConfig26.getAlpha();
// flaky:         configuration10.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig26);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer31 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig26);
        factorizationbasedRecommenderConfig26.setRetrainAfterPreferenceChanges((int) 'a');
        double double34 = factorizationbasedRecommenderConfig26.getLambda();
        double double35 = factorizationbasedRecommenderConfig26.getLambda();
        factorizationbasedRecommenderConfig26.setRetrainCronExpression("MutablePreference{userID=0, itemID=52, value=-1.0}");
// flaky:         org.junit.Assert.assertNotNull(components0);
// flaky:         org.junit.Assert.assertNotNull(configuration1);
// flaky:         org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
// flaky:         org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
// flaky:         org.junit.Assert.assertNotNull(configuration9);
// flaky:         org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
    }

    @Test
    public void test29579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29579");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.destroy();
        setPreferenceServlet0.destroy();
        java.lang.String str8 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        batchDeleteCandidatesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet14 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        java.lang.String str17 = batchSetPreferencesServlet15.getServletInfo();
        java.lang.String str18 = batchSetPreferencesServlet15.getServletInfo();
        batchSetPreferencesServlet15.destroy();
        batchDeleteCandidatesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str22 = recommendServlet21.getServletInfo();
        recommendServlet21.destroy();
        javax.servlet.ServletConfig servletConfig24 = recommendServlet21.getServletConfig();
        batchDeleteCandidatesServlet9.init(servletConfig24);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        setPreferenceServlet0.destroy();
        setPreferenceServlet0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            setPreferenceServlet0.log("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig24);
    }

    @Test
    public void test29580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29580");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        configuration0.setModelDirectory("");
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.Configuration configuration10 = new org.plista.kornakapi.core.config.Configuration();
        configuration10.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = configuration10.getStorageConfiguration();
        configuration10.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str17 = storageConfiguration16.getJdbcDriverClass();
        storageConfiguration16.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str20 = storageConfiguration16.getJdbcUrl();
        java.lang.String str21 = storageConfiguration16.getJdbcUrl();
        java.lang.String str22 = storageConfiguration16.getJdbcUrl();
        storageConfiguration16.setUsername("recommender");
        configuration10.setStorageConfiguration(storageConfiguration16);
        java.lang.String str26 = storageConfiguration16.getJdbcDriverClass();
        java.lang.String str27 = storageConfiguration16.getPassword();
        java.lang.String str28 = storageConfiguration16.getUsername();
        java.lang.String str29 = storageConfiguration16.getUsername();
        storageConfiguration16.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration16);
        configuration0.setModelDirectory("MutablePreference{userID=100, itemID=0, value=1.0}");
        configuration0.setNumProcessorsForTraining(52);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration37 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration38 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str39 = storageConfiguration38.getJdbcDriverClass();
        storageConfiguration38.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str42 = storageConfiguration38.getJdbcUrl();
        java.lang.String str43 = storageConfiguration38.getJdbcDriverClass();
        storageConfiguration38.setJdbcDriverClass("batchSize");
        java.lang.String str46 = storageConfiguration38.getPassword();
        storageConfiguration38.setUsername("batchSize");
        storageConfiguration38.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        configuration0.setStorageConfiguration(storageConfiguration38);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList52 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.storage.Storage storage53 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap54 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap55 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler56 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler57 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener60 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler57, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=97, itemID=1, value=97.0}", (int) (byte) 10);
        inMemoryPreferenceChangeListener60.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener60.notifyOfPreferenceChange();
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration0, storage53, strMap54, strMap55, trainingScheduler56, (org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener60);
// flaky:             org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(storageConfiguration13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "recommender" + "'", str28, "recommender");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "recommender" + "'", str29, "recommender");
        org.junit.Assert.assertNotNull(storageConfiguration37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList52);
    }

    @Test
    public void test29581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29581");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = batchDeleteCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        javax.servlet.ServletConfig servletConfig8 = setPreferenceServlet4.getServletConfig();
        java.lang.String str9 = setPreferenceServlet4.getServletInfo();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str14 = batchDeleteCandidatesServlet13.getServletInfo();
        java.lang.String str15 = batchDeleteCandidatesServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet16 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet17 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        setPreferenceServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet16.init((javax.servlet.ServletConfig) recommendServlet21);
        batchDeleteCandidatesServlet13.init((javax.servlet.ServletConfig) setPreferenceServlet16);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet24 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig28 = batchSetPreferencesServlet25.getServletConfig();
        addCandidateServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig30 = addCandidateServlet24.getServletConfig();
        batchDeleteCandidatesServlet13.init((javax.servlet.ServletConfig) addCandidateServlet24);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet32 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str33 = trainServlet32.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet34 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet34.destroy();
        javax.servlet.ServletConfig servletConfig36 = deleteCandidateServlet34.getServletConfig();
        deleteCandidateServlet34.destroy();
        trainServlet32.init((javax.servlet.ServletConfig) deleteCandidateServlet34);
        addCandidateServlet24.init((javax.servlet.ServletConfig) trainServlet32);
        trainServlet32.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet41 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet42 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet43 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet42.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        setPreferenceServlet41.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        trainServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        javax.servlet.ServletConfig servletConfig47 = batchDeleteCandidatesServlet43.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet48 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str49 = batchDeleteCandidatesServlet48.getServletInfo();
        batchDeleteCandidatesServlet48.init();
        javax.servlet.ServletConfig servletConfig51 = null;
        batchDeleteCandidatesServlet48.init(servletConfig51);
        javax.servlet.ServletConfig servletConfig53 = batchDeleteCandidatesServlet48.getServletConfig();
        batchDeleteCandidatesServlet48.init();
        javax.servlet.ServletConfig servletConfig55 = batchDeleteCandidatesServlet48.getServletConfig();
        java.lang.String str56 = batchDeleteCandidatesServlet48.getServletInfo();
        batchDeleteCandidatesServlet43.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet48);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        batchDeleteCandidatesServlet43.init();
        batchDeleteCandidatesServlet43.init();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration61 = batchDeleteCandidatesServlet43.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNull(servletConfig8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(servletConfig28);
        org.junit.Assert.assertNotNull(servletConfig30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(servletConfig36);
        org.junit.Assert.assertNull(servletConfig47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(servletConfig53);
        org.junit.Assert.assertNull(servletConfig55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
    }

    @Test
    public void test29582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29582");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setRetrainAfterPreferenceChanges((int) (short) 100);
        configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = null;
        configuration4.addItembasedRecommender(itembasedRecommenderConfig12);
        configuration4.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.web.Components components17 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage18 = components17.storage();
        org.plista.kornakapi.core.config.Configuration configuration19 = components17.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig20 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double21 = factorizationbasedRecommenderConfig20.getAlpha();
        double double22 = factorizationbasedRecommenderConfig20.getLambda();
        boolean boolean23 = factorizationbasedRecommenderConfig20.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer24 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig20);
        double double25 = factorizationbasedRecommenderConfig20.getAlpha();
        configuration19.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig20);
        double double27 = factorizationbasedRecommenderConfig20.getAlpha();
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(true);
        java.lang.String str30 = factorizationbasedRecommenderConfig20.getName();
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig20.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(false);
        double double37 = factorizationbasedRecommenderConfig20.getAlpha();
        factorizationbasedRecommenderConfig20.setNumberOfIterations((int) (short) 0);
        configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig20);
        int int41 = factorizationbasedRecommenderConfig20.getNumberOfIterations();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig20);
        factorizationbasedRecommenderConfig20.setRetrainCronExpression("MutablePreference{userID=1, itemID=-1, value=10.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(storageConfiguration16);
        org.junit.Assert.assertNotNull(components17);
        org.junit.Assert.assertNull(storage18);
        org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test29583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29583");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=10000, itemID=52, value=10.0}");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test29584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29584");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        double double12 = factorizationbasedRecommenderConfig0.getLambda();
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setLambda((-1.0d));
        factorizationbasedRecommenderConfig0.setLambda((double) (byte) 1);
        factorizationbasedRecommenderConfig0.setName("recommender");
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test29585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29585");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener6 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener6.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener8 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener6.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener8);
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener8);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener21 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener21);
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler26 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler26, "label", (int) ' ');
        delegatingPreferenceChangeListener21.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener29);
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener21);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener32 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener32.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener32.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener34);
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener39 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener41 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener39.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener41);
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener34.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener41);
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener49 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener51 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener51);
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener56 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener58 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener58.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener58.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener56.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener58);
        delegatingPreferenceChangeListener58.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener51.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener58);
        delegatingPreferenceChangeListener34.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener51);
        delegatingPreferenceChangeListener21.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener34);
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener21);
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener21.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener70 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener70.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener72 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener72.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener70.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener72);
        delegatingPreferenceChangeListener72.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener72.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener77 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener77.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener79 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener79.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener79.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener77.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener79);
        delegatingPreferenceChangeListener79.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener72.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener79);
        delegatingPreferenceChangeListener21.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener79);
        delegatingPreferenceChangeListener79.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener79.notifyOfPreferenceChange();
    }

    @Test
    public void test29586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29586");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setLambda((double) (-1));
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        factorizationbasedRecommenderConfig0.setAlpha((double) 10L);
        boolean boolean13 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test29587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29587");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig6.getSimilarityClass();
        int int12 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) (byte) 1);
        java.lang.String str15 = itembasedRecommenderConfig6.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        java.lang.String str18 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        itembasedRecommenderConfig6.setRetrainAfterPreferenceChanges(10000);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test29588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29588");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str2 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=1.0}");
        storageConfiguration0.setUsername("recommender");
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: itemID");
        java.lang.String str11 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("MutablePreference{userID=97, itemID=1, value=0.0}");
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=35, itemID=97, value=52.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str8, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test29589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29589");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig3 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str6 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet7 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        setPreferenceServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet7.init((javax.servlet.ServletConfig) recommendServlet12);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet7);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet16 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str17 = trainServlet16.getServletInfo();
        javax.servlet.ServletConfig servletConfig18 = trainServlet16.getServletConfig();
        batchAddCandidatesServlet0.init(servletConfig18);
        batchAddCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet21 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str22 = trainServlet21.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet23 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet23.destroy();
        javax.servlet.ServletConfig servletConfig25 = deleteCandidateServlet23.getServletConfig();
        deleteCandidateServlet23.destroy();
        trainServlet21.init((javax.servlet.ServletConfig) deleteCandidateServlet23);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet28 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet28.init();
        java.lang.String str30 = batchAddCandidatesServlet28.getServletInfo();
        javax.servlet.ServletConfig servletConfig31 = batchAddCandidatesServlet28.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet32 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str33 = batchDeleteCandidatesServlet32.getServletInfo();
        java.lang.String str34 = batchDeleteCandidatesServlet32.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet35 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet36 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet37 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet36.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet37);
        setPreferenceServlet35.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet37);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet40 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet35.init((javax.servlet.ServletConfig) recommendServlet40);
        batchDeleteCandidatesServlet32.init((javax.servlet.ServletConfig) setPreferenceServlet35);
        batchAddCandidatesServlet28.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet32);
        batchDeleteCandidatesServlet32.init();
        java.lang.String str45 = batchDeleteCandidatesServlet32.getServletInfo();
        java.lang.String str46 = batchDeleteCandidatesServlet32.getServletInfo();
        trainServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet32);
        javax.servlet.ServletConfig servletConfig48 = trainServlet21.getServletConfig();
        trainServlet21.destroy();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet50 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str51 = recommendServlet50.getServletInfo();
        javax.servlet.ServletConfig servletConfig52 = recommendServlet50.getServletConfig();
        java.lang.String str53 = recommendServlet50.getServletInfo();
        trainServlet21.init((javax.servlet.ServletConfig) recommendServlet50);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) recommendServlet50);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig25);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertNull(servletConfig31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(servletConfig48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertNull(servletConfig52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "" + "'", str53, "");
    }

    @Test
    public void test29590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29590");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "howMany", (int) '#');
    }

    @Test
    public void test29591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29591");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 1.0d + "'", double9 == 1.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test29592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29592");
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet0 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet0.init();
        java.lang.String str2 = deleteCandidateServlet0.getServletInfo();
        deleteCandidateServlet0.init();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet5.init();
        java.lang.String str7 = batchAddCandidatesServlet5.getServletInfo();
        deleteCandidateServlet0.init((javax.servlet.ServletConfig) batchAddCandidatesServlet5);
        java.lang.String str9 = batchAddCandidatesServlet5.getServletInfo();
        org.plista.kornakapi.web.MissingParameterException missingParameterException13 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException15 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException13.addSuppressed((java.lang.Throwable) missingParameterException15);
        java.lang.Throwable[] throwableArray17 = missingParameterException13.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) missingParameterException13);
        // The following exception was thrown during execution in test generation
        try {
            batchAddCandidatesServlet5.log("MutablePreference{userID=10000, itemID=1, value=97.0}", (java.lang.Throwable) invalidParameterException18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test29593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29593");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setRetrainAfterPreferenceChanges((int) (short) 100);
        configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = null;
        configuration4.addItembasedRecommender(itembasedRecommenderConfig12);
        configuration4.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.web.Components components17 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage18 = components17.storage();
        org.plista.kornakapi.core.config.Configuration configuration19 = components17.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig20 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double21 = factorizationbasedRecommenderConfig20.getAlpha();
        double double22 = factorizationbasedRecommenderConfig20.getLambda();
        boolean boolean23 = factorizationbasedRecommenderConfig20.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer24 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig20);
        double double25 = factorizationbasedRecommenderConfig20.getAlpha();
        configuration19.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig20);
        double double27 = factorizationbasedRecommenderConfig20.getAlpha();
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(true);
        java.lang.String str30 = factorizationbasedRecommenderConfig20.getName();
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig20.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(false);
        double double37 = factorizationbasedRecommenderConfig20.getAlpha();
        factorizationbasedRecommenderConfig20.setNumberOfIterations((int) (short) 0);
        configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig20);
        int int41 = configuration4.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList42 = configuration4.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList43 = configuration4.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(storageConfiguration16);
        org.junit.Assert.assertNotNull(components17);
        org.junit.Assert.assertNull(storage18);
        org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList42);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList43);
    }

    @Test
    public void test29594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29594");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getUsername();
        java.lang.String str11 = storageConfiguration9.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration9.getPassword();
        storageConfiguration9.setJdbcUrl("file");
        configuration0.setStorageConfiguration(storageConfiguration9);
        org.plista.kornakapi.web.Components components16 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = components16.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList18 = configuration17.getFactorizationbasedRecommenders();
        java.lang.String str19 = configuration17.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList20 = configuration17.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setName("recommender");
        configuration17.addItembasedRecommender(itembasedRecommenderConfig21);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig21);
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=10000, value=0.0}");
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.plista.kornakapi.web.Components components30 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration31 = components30.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration32 = components30.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage33 = components30.storage();
        org.plista.kornakapi.core.storage.Storage storage34 = components30.storage();
        org.plista.kornakapi.core.config.Configuration configuration35 = components30.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList36 = configuration35.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList37 = configuration35.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig38 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str39 = itembasedRecommenderConfig38.getRetrainCronExpression();
        int int40 = itembasedRecommenderConfig38.getRetrainAfterPreferenceChanges();
        java.lang.String str41 = itembasedRecommenderConfig38.getSimilarityClass();
        itembasedRecommenderConfig38.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig38.setSimilarityClass("");
        itembasedRecommenderConfig38.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig38.setSimilarItemsPerItem(10000);
        itembasedRecommenderConfig38.setName("MutablePreference{userID=0, itemID=0, value=1.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer52 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig38);
        configuration35.addItembasedRecommender(itembasedRecommenderConfig38);
        configuration35.setModelDirectory("hi!");
        org.plista.kornakapi.web.Components components56 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage57 = components56.storage();
        org.plista.kornakapi.core.config.Configuration configuration58 = components56.getConfiguration();
        java.lang.String str59 = configuration58.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration60 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str61 = storageConfiguration60.getJdbcDriverClass();
        storageConfiguration60.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str64 = storageConfiguration60.getJdbcUrl();
        java.lang.String str65 = storageConfiguration60.getJdbcDriverClass();
        storageConfiguration60.setJdbcDriverClass("batchSize");
        java.lang.String str68 = storageConfiguration60.getPassword();
        java.lang.String str69 = storageConfiguration60.getJdbcUrl();
        configuration58.setStorageConfiguration(storageConfiguration60);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration71 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str72 = storageConfiguration71.getJdbcDriverClass();
        storageConfiguration71.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str75 = storageConfiguration71.getPassword();
        java.lang.String str76 = storageConfiguration71.getJdbcDriverClass();
        storageConfiguration71.setUsername("hi!");
        storageConfiguration71.setJdbcDriverClass("file");
        configuration58.setStorageConfiguration(storageConfiguration71);
        storageConfiguration71.setUsername("recommender");
        storageConfiguration71.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=1.0}");
        configuration35.setStorageConfiguration(storageConfiguration71);
        storageConfiguration71.setUsername("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str89 = storageConfiguration71.getUsername();
        storageConfiguration71.setPassword("org.plista.kornakapi.web.InvalidParameterException: ");
        storageConfiguration71.setJdbcDriverClass("MutablePreference{userID=100, itemID=35, value=1.0}");
        java.lang.String str94 = storageConfiguration71.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration71);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(components16);
        org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "itemID" + "'", str19, "itemID");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList20);
        org.junit.Assert.assertNotNull(components30);
        org.junit.Assert.assertNotNull(configuration31);
        org.junit.Assert.assertNotNull(configuration32);
        org.junit.Assert.assertNull(storage33);
        org.junit.Assert.assertNull(storage34);
        org.junit.Assert.assertNotNull(configuration35);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList36);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(components56);
        org.junit.Assert.assertNull(storage57);
        org.junit.Assert.assertNotNull(configuration58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "hi!" + "'", str59, "hi!");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str89, "org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: " + "'", str94, "org.plista.kornakapi.web.InvalidParameterException: ");
    }

    @Test
    public void test29595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29595");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        boolean boolean5 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double7 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test29596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29596");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage11 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration13 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration14 = new org.plista.kornakapi.core.config.Configuration();
        int int15 = configuration14.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList16 = configuration14.getItembasedRecommenders();
        int int17 = configuration14.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration18 = configuration14.getStorageConfiguration();
        configuration14.setModelDirectory("recommender");
        configuration14.setModelDirectory("MutablePreference{userID=100, itemID=0, value=1.0}");
        configuration14.setNumProcessorsForTraining((-1));
        configuration14.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.plista.kornakapi.web.Components components27 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener28 = components27.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage29 = components27.storage();
        org.plista.kornakapi.core.config.Configuration configuration30 = components27.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration31 = configuration30.getStorageConfiguration();
        java.lang.String str32 = storageConfiguration31.getUsername();
        storageConfiguration31.setJdbcDriverClass("itemID");
        storageConfiguration31.setJdbcUrl("MutablePreference{userID=0, itemID=100, value=1.0}");
        configuration14.setStorageConfiguration(storageConfiguration31);
        java.lang.String str38 = storageConfiguration31.getJdbcUrl();
        configuration13.setStorageConfiguration(storageConfiguration31);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(storage11);
        org.junit.Assert.assertNull(trainingScheduler12);
        org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(storageConfiguration18);
        org.junit.Assert.assertNotNull(components27);
        org.junit.Assert.assertNotNull(preferenceChangeListener28);
        org.junit.Assert.assertNull(storage29);
        org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertNotNull(storageConfiguration31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str32, "org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "MutablePreference{userID=0, itemID=100, value=1.0}" + "'", str38, "MutablePreference{userID=0, itemID=100, value=1.0}");
    }

    @Test
    public void test29597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29597");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) ' ');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair10 = null;
        double double12 = filteringLongPairRescorer9.rescore(longPair10, (double) 35L);
        org.apache.mahout.common.LongPair longPair13 = null;
        double double15 = filteringLongPairRescorer9.rescore(longPair13, (double) (-1));
        org.apache.mahout.common.LongPair longPair16 = null;
        double double18 = filteringLongPairRescorer9.rescore(longPair16, (double) 35.0f);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 32.0d + "'", double8 == 32.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 35.0d + "'", double12 == 35.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 35.0d + "'", double18 == 35.0d);
    }

    @Test
    public void test29598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29598");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getName();
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str5 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str8 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=-1, itemID=0, value=100.0}");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: batchSize");
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test29599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29599");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener10 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler7, "label", (int) ' ');
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener10);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener17 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener17);
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler24 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler24, "", (int) (short) 100);
        delegatingPreferenceChangeListener17.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener27);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener17);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components31 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage32 = components31.storage();
        org.plista.kornakapi.core.storage.Storage storage33 = components31.storage();
        org.plista.kornakapi.core.config.Configuration configuration34 = components31.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener35 = components31.preferenceChangeListener();
        delegatingPreferenceChangeListener2.addDelegate(preferenceChangeListener35);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener37 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener39 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener37.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener39);
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener39.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener39);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.junit.Assert.assertNotNull(components31);
        org.junit.Assert.assertNull(storage32);
        org.junit.Assert.assertNull(storage33);
        org.junit.Assert.assertNotNull(configuration34);
        org.junit.Assert.assertNotNull(preferenceChangeListener35);
    }

    @Test
    public void test29600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29600");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException10.addSuppressed((java.lang.Throwable) missingParameterException12);
        invalidParameterException8.addSuppressed((java.lang.Throwable) missingParameterException12);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException19);
        invalidParameterException15.addSuppressed((java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.MissingParameterException missingParameterException24 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException27 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException28 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException27);
        missingParameterException24.addSuppressed((java.lang.Throwable) invalidParameterException28);
        invalidParameterException15.addSuppressed((java.lang.Throwable) missingParameterException24);
        org.plista.kornakapi.web.MissingParameterException missingParameterException33 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException34 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException33);
        org.plista.kornakapi.web.MissingParameterException missingParameterException38 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException39 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException38);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException38);
        org.plista.kornakapi.web.MissingParameterException missingParameterException42 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException44 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException42.addSuppressed((java.lang.Throwable) missingParameterException44);
        invalidParameterException40.addSuppressed((java.lang.Throwable) missingParameterException44);
        java.lang.Throwable[] throwableArray47 = missingParameterException44.getSuppressed();
        invalidParameterException34.addSuppressed((java.lang.Throwable) missingParameterException44);
        missingParameterException24.addSuppressed((java.lang.Throwable) invalidParameterException34);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException34);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException51 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) invalidParameterException50);
        org.plista.kornakapi.web.MissingParameterException missingParameterException55 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=97, value=10.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException56 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=52, itemID=97, value=-1.0}", (java.lang.Throwable) missingParameterException55);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException57 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) invalidParameterException56);
        invalidParameterException50.addSuppressed((java.lang.Throwable) invalidParameterException57);
        java.lang.Throwable[] throwableArray59 = invalidParameterException50.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray59);
    }

    @Test
    public void test29601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29601");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        mutablePreference0.setValue((float) '4');
        mutablePreference0.set((long) (short) 1, (long) (byte) 10, (float) 10000);
        mutablePreference0.set((long) (byte) 1, (long) (byte) -1, (float) 10000);
        mutablePreference0.set((long) (short) 10, (long) '4', (float) 10000);
        mutablePreference0.setValue((float) (byte) 0);
    }

    @Test
    public void test29602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29602");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage2 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration3 = components0.getConfiguration();
        java.lang.String str4 = configuration3.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double6 = factorizationbasedRecommenderConfig5.getAlpha();
        double double7 = factorizationbasedRecommenderConfig5.getLambda();
        int int8 = factorizationbasedRecommenderConfig5.getNumberOfFeatures();
        factorizationbasedRecommenderConfig5.setLambda((double) 1);
        factorizationbasedRecommenderConfig5.setUsesImplicitFeedback(false);
        double double13 = factorizationbasedRecommenderConfig5.getAlpha();
        factorizationbasedRecommenderConfig5.setNumberOfIterations(100);
        factorizationbasedRecommenderConfig5.setLambda((double) 10000.0f);
        factorizationbasedRecommenderConfig5.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig5.setNumberOfFeatures((int) (short) 100);
        double double22 = factorizationbasedRecommenderConfig5.getLambda();
        configuration3.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList24 = configuration3.getFactorizationbasedRecommenders();
        org.plista.kornakapi.web.Components components25 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration26 = components25.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration27 = components25.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage28 = components25.storage();
        org.plista.kornakapi.core.storage.Storage storage29 = components25.storage();
        org.plista.kornakapi.core.config.Configuration configuration30 = components25.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage31 = components25.storage();
        org.plista.kornakapi.core.config.Configuration configuration32 = components25.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener33 = components25.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration34 = components25.getConfiguration();
        org.plista.kornakapi.web.Components components35 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration36 = components35.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler37 = components35.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler38 = components35.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration39 = components35.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration40 = components35.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration41 = components35.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration42 = configuration41.getStorageConfiguration();
        configuration34.setStorageConfiguration(storageConfiguration42);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration44 = configuration34.getStorageConfiguration();
        configuration3.setStorageConfiguration(storageConfiguration44);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNull(storage2);
        org.junit.Assert.assertNotNull(configuration3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10000.0d + "'", double22 == 10000.0d);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList24);
        org.junit.Assert.assertNotNull(components25);
        org.junit.Assert.assertNotNull(configuration26);
        org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(storage28);
        org.junit.Assert.assertNull(storage29);
        org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertNull(storage31);
        org.junit.Assert.assertNotNull(configuration32);
        org.junit.Assert.assertNotNull(preferenceChangeListener33);
        org.junit.Assert.assertNotNull(configuration34);
        org.junit.Assert.assertNotNull(components35);
        org.junit.Assert.assertNotNull(configuration36);
        org.junit.Assert.assertNull(trainingScheduler37);
        org.junit.Assert.assertNull(trainingScheduler38);
        org.junit.Assert.assertNotNull(configuration39);
        org.junit.Assert.assertNotNull(configuration40);
        org.junit.Assert.assertNotNull(configuration41);
        org.junit.Assert.assertNotNull(storageConfiguration42);
        org.junit.Assert.assertNotNull(storageConfiguration44);
    }

    @Test
    public void test29603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29603");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) (byte) 100);
        double double8 = fixedCandidatesIDRescorer1.rescore(10000L, (double) (byte) 0);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) 1, 0.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair13 = null;
        double double15 = filteringLongPairRescorer12.rescore(longPair13, (double) 52.0f);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 52.0d + "'", double15 == 52.0d);
    }

    @Test
    public void test29604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29604");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("");
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        int int5 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test29605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29605");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("recommender");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: itemID");
        int int7 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) 'a');
        java.lang.String str10 = itembasedRecommenderConfig0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test29606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29606");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        configuration5.setStorageConfiguration(storageConfiguration7);
        java.lang.String str16 = configuration5.getModelDirectory();
        int int17 = configuration5.getNumProcessorsForTraining();
        configuration5.setNumProcessorsForTraining((int) (byte) 0);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList20 = configuration5.getItembasedRecommenders();
        int int21 = configuration5.getNumProcessorsForTraining();
        java.lang.String str22 = configuration5.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList23 = configuration5.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components24 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration25 = components24.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList26 = configuration25.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration27 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str28 = storageConfiguration27.getJdbcDriverClass();
        java.lang.String str29 = storageConfiguration27.getUsername();
        storageConfiguration27.setPassword("label");
        configuration25.setStorageConfiguration(storageConfiguration27);
        java.lang.String str33 = storageConfiguration27.getJdbcDriverClass();
        storageConfiguration27.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str36 = storageConfiguration27.getJdbcUrl();
        java.lang.String str37 = storageConfiguration27.getUsername();
        java.lang.String str38 = storageConfiguration27.getPassword();
        java.lang.String str39 = storageConfiguration27.getJdbcDriverClass();
        configuration5.setStorageConfiguration(storageConfiguration27);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList23);
        org.junit.Assert.assertNotNull(components24);
        org.junit.Assert.assertNotNull(configuration25);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str38, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test29607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29607");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = configuration0.getItembasedRecommenders();
        configuration0.setNumProcessorsForTraining(100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setJdbcDriverClass("batchSize");
        storageConfiguration7.setPassword("howMany");
        storageConfiguration7.setJdbcUrl("hi!");
        java.lang.String str19 = storageConfiguration7.getJdbcUrl();
        configuration0.setStorageConfiguration(storageConfiguration7);
        int int21 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.Configuration configuration22 = new org.plista.kornakapi.core.config.Configuration();
        configuration22.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig25 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double26 = factorizationbasedRecommenderConfig25.getAlpha();
        double double27 = factorizationbasedRecommenderConfig25.getLambda();
        configuration22.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig25);
        java.lang.String str29 = configuration22.getModelDirectory();
        int int30 = configuration22.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList31 = configuration22.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration32 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str33 = storageConfiguration32.getJdbcDriverClass();
        storageConfiguration32.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str36 = storageConfiguration32.getJdbcUrl();
        java.lang.String str37 = storageConfiguration32.getJdbcUrl();
        storageConfiguration32.setJdbcUrl("label");
        configuration22.setStorageConfiguration(storageConfiguration32);
        java.lang.String str41 = storageConfiguration32.getPassword();
        storageConfiguration32.setJdbcDriverClass("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str44 = storageConfiguration32.getPassword();
        java.lang.String str45 = storageConfiguration32.getJdbcUrl();
        java.lang.String str46 = storageConfiguration32.getJdbcUrl();
        configuration0.setStorageConfiguration(storageConfiguration32);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 100 + "'", int21 == 100);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "label" + "'", str45, "label");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "label" + "'", str46, "label");
    }

    @Test
    public void test29608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29608");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        javax.servlet.ServletConfig servletConfig3 = batchDeleteCandidatesServlet0.getServletConfig();
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet6 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet6.destroy();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet8 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet9 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet8.init((javax.servlet.ServletConfig) batchSetPreferencesServlet9);
        addCandidateServlet6.init((javax.servlet.ServletConfig) batchSetPreferencesServlet8);
        java.lang.String str12 = batchSetPreferencesServlet8.getServletInfo();
        java.lang.String str13 = batchSetPreferencesServlet8.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        batchDeleteCandidatesServlet14.init();
        batchDeleteCandidatesServlet14.destroy();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet18 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet18.destroy();
        javax.servlet.ServletConfig servletConfig20 = deleteCandidateServlet18.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str22 = batchDeleteCandidatesServlet21.getServletInfo();
        java.lang.String str23 = batchDeleteCandidatesServlet21.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet24 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet25 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet26 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet25.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet26);
        setPreferenceServlet24.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet26);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet29 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet24.init((javax.servlet.ServletConfig) recommendServlet29);
        batchDeleteCandidatesServlet21.init((javax.servlet.ServletConfig) setPreferenceServlet24);
        setPreferenceServlet24.destroy();
        deleteCandidateServlet18.init((javax.servlet.ServletConfig) setPreferenceServlet24);
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) setPreferenceServlet24);
        setPreferenceServlet24.destroy();
        batchSetPreferencesServlet8.init((javax.servlet.ServletConfig) setPreferenceServlet24);
        setPreferenceServlet24.destroy();
        javax.servlet.ServletConfig servletConfig38 = setPreferenceServlet24.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet39 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet40 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str41 = batchDeleteCandidatesServlet40.getServletInfo();
        java.lang.String str42 = batchDeleteCandidatesServlet40.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet43 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet44 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet45 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet44.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet45);
        setPreferenceServlet43.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet45);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet48 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet43.init((javax.servlet.ServletConfig) recommendServlet48);
        batchDeleteCandidatesServlet40.init((javax.servlet.ServletConfig) setPreferenceServlet43);
        batchDeleteCandidatesServlet40.destroy();
        batchDeleteCandidatesServlet39.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet40);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet53 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str54 = batchDeleteCandidatesServlet53.getServletInfo();
        batchDeleteCandidatesServlet53.destroy();
        javax.servlet.ServletConfig servletConfig56 = batchDeleteCandidatesServlet53.getServletConfig();
        batchDeleteCandidatesServlet39.init(servletConfig56);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet58 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str59 = recommendServlet58.getServletInfo();
        batchDeleteCandidatesServlet39.init((javax.servlet.ServletConfig) recommendServlet58);
        javax.servlet.ServletConfig servletConfig61 = batchDeleteCandidatesServlet39.getServletConfig();
        batchDeleteCandidatesServlet39.init();
        javax.servlet.ServletConfig servletConfig63 = batchDeleteCandidatesServlet39.getServletConfig();
        setPreferenceServlet24.init(servletConfig63);
        javax.servlet.ServletConfig servletConfig65 = setPreferenceServlet24.getServletConfig();
        batchDeleteCandidatesServlet0.init(servletConfig65);
        batchDeleteCandidatesServlet0.init();
        java.lang.String str68 = batchDeleteCandidatesServlet0.getServletInfo();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(servletConfig20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNotNull(servletConfig38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(servletConfig56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(servletConfig61);
        org.junit.Assert.assertNotNull(servletConfig63);
        org.junit.Assert.assertNotNull(servletConfig65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
    }

    @Test
    public void test29609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29609");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        configuration5.setStorageConfiguration(storageConfiguration7);
        int int16 = configuration5.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration17 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str18 = storageConfiguration17.getJdbcDriverClass();
        storageConfiguration17.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str21 = storageConfiguration17.getJdbcUrl();
        java.lang.String str22 = storageConfiguration17.getJdbcUrl();
        java.lang.String str23 = storageConfiguration17.getJdbcUrl();
        java.lang.String str24 = storageConfiguration17.getUsername();
        configuration5.setStorageConfiguration(storageConfiguration17);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig26 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str27 = itembasedRecommenderConfig26.getSimilarityClass();
        itembasedRecommenderConfig26.setName("");
        configuration5.addItembasedRecommender(itembasedRecommenderConfig26);
        configuration5.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=-1.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig33 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double34 = factorizationbasedRecommenderConfig33.getAlpha();
        double double35 = factorizationbasedRecommenderConfig33.getLambda();
        int int36 = factorizationbasedRecommenderConfig33.getNumberOfFeatures();
        java.lang.String str37 = factorizationbasedRecommenderConfig33.getRetrainCronExpression();
        factorizationbasedRecommenderConfig33.setNumberOfIterations((int) (short) 100);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer40 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig33);
        factorizationbasedRecommenderConfig33.setName("MutablePreference{userID=0, itemID=0, value=1.0}");
        factorizationbasedRecommenderConfig33.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig33.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig33.setAlpha(97.0d);
        int int49 = factorizationbasedRecommenderConfig33.getNumberOfIterations();
        int int50 = factorizationbasedRecommenderConfig33.getNumberOfFeatures();
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig33);
        configuration5.setModelDirectory("");
        configuration5.setNumProcessorsForTraining(97);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str24, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test29610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29610");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        java.lang.String str1 = mutableCandidate0.getLabel();
        long long2 = mutableCandidate0.getItemID();
        java.lang.String str3 = mutableCandidate0.getLabel();
        long long4 = mutableCandidate0.getItemID();
        java.lang.String str5 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=10000, itemID=-1, value=32.0}", (long) '#');
        long long9 = mutableCandidate0.getItemID();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 35L + "'", long9 == 35L);
    }

    @Test
    public void test29611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29611");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getName();
        java.lang.String str10 = itembasedRecommenderConfig6.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig6.getSimilarityClass();
        int int12 = itembasedRecommenderConfig6.getSimilarItemsPerItem();
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) (byte) 1);
        java.lang.String str15 = itembasedRecommenderConfig6.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList17 = configuration0.getItembasedRecommenders();
        int int18 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str20 = storageConfiguration19.getJdbcDriverClass();
        storageConfiguration19.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str23 = storageConfiguration19.getJdbcUrl();
        java.lang.String str24 = storageConfiguration19.getJdbcDriverClass();
        storageConfiguration19.setJdbcDriverClass("batchSize");
        java.lang.String str27 = storageConfiguration19.getPassword();
        storageConfiguration19.setUsername("batchSize");
        java.lang.String str30 = storageConfiguration19.getJdbcDriverClass();
        storageConfiguration19.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration19.setJdbcDriverClass("howMany");
        storageConfiguration19.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration19.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration19);
        storageConfiguration19.setPassword("MutablePreference{userID=1, itemID=0, value=1.0}");
        java.lang.String str42 = storageConfiguration19.getJdbcUrl();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "batchSize" + "'", str30, "batchSize");
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test29612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29612");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getUsername();
        java.lang.String str2 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str3 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("file");
        java.lang.String str6 = storageConfiguration0.getUsername();
        java.lang.String str7 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration0.getUsername();
        storageConfiguration0.setPassword("MutablePreference{userID=32, itemID=97, value=52.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test29613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29613");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainCronExpression("userID");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) '#');
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=100, itemID=-1, value=100.0}");
        java.lang.String str11 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=32, itemID=10, value=10.0}");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=1, value=-1.0}");
        java.lang.String str17 = itembasedRecommenderConfig0.getSimilarityClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=100.0}" + "'", str11, "MutablePreference{userID=100, itemID=-1, value=100.0}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=1, value=-1.0}" + "'", str17, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=1, value=-1.0}");
    }

    @Test
    public void test29614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29614");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) '#');
        java.lang.String str10 = itembasedRecommenderConfig0.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 0);
        int int14 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) 'a');
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test29615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29615");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        java.lang.String str5 = mutableCandidate0.getLabel();
        long long6 = mutableCandidate0.getItemID();
        java.lang.String str7 = mutableCandidate0.getLabel();
        long long8 = mutableCandidate0.getItemID();
        long long9 = mutableCandidate0.getItemID();
        long long10 = mutableCandidate0.getItemID();
        long long11 = mutableCandidate0.getItemID();
        java.lang.String str12 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=97, itemID=97, value=52.0}", (long) '#');
        long long16 = mutableCandidate0.getItemID();
        long long17 = mutableCandidate0.getItemID();
        long long18 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "itemIDs" + "'", str5, "itemIDs");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "itemIDs" + "'", str7, "itemIDs");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "itemIDs" + "'", str12, "itemIDs");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 35L + "'", long16 == 35L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 35L + "'", long17 == 35L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 35L + "'", long18 == 35L);
    }

    @Test
    public void test29616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29616");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components7 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = components7.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components7.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = components7.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage11 = components7.storage();
        org.plista.kornakapi.core.storage.Storage storage12 = components7.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener13 = components7.preferenceChangeListener();
        delegatingPreferenceChangeListener2.addDelegate(preferenceChangeListener13);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler15 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler15, "MutablePreference{userID=100, itemID=0, value=35.0}", 32);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener18);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.junit.Assert.assertNotNull(components7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNotNull(preferenceChangeListener10);
        org.junit.Assert.assertNull(storage11);
        org.junit.Assert.assertNull(storage12);
        org.junit.Assert.assertNotNull(preferenceChangeListener13);
    }

    @Test
    public void test29617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29617");
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet0 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        java.lang.String str1 = deleteCandidateServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig2 = deleteCandidateServlet0.getServletConfig();
        deleteCandidateServlet0.destroy();
        java.lang.String str4 = deleteCandidateServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig5 = deleteCandidateServlet0.getServletConfig();
        deleteCandidateServlet0.init();
        javax.servlet.ServletConfig servletConfig7 = null;
        deleteCandidateServlet0.init(servletConfig7);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(servletConfig5);
    }

    @Test
    public void test29618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29618");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException8.addSuppressed((java.lang.Throwable) missingParameterException10);
        invalidParameterException6.addSuppressed((java.lang.Throwable) missingParameterException10);
        java.lang.Throwable[] throwableArray13 = missingParameterException10.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.MissingParameterException missingParameterException25 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException27 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException25.addSuppressed((java.lang.Throwable) missingParameterException27);
        invalidParameterException23.addSuppressed((java.lang.Throwable) missingParameterException27);
        java.lang.Throwable[] throwableArray30 = missingParameterException27.getSuppressed();
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException27);
        missingParameterException10.addSuppressed((java.lang.Throwable) invalidParameterException17);
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: howMany");
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender", (java.lang.Throwable) missingParameterException34);
        java.lang.Throwable[] throwableArray37 = invalidParameterException36.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException42 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) missingParameterException42);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException44 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender", (java.lang.Throwable) invalidParameterException43);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException45 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) invalidParameterException44);
        java.lang.Throwable throwable47 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("hi!", throwable47);
        org.plista.kornakapi.web.MissingParameterException missingParameterException53 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException54 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException53);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException55 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException53);
        org.plista.kornakapi.web.MissingParameterException missingParameterException57 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException59 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException57.addSuppressed((java.lang.Throwable) missingParameterException59);
        invalidParameterException55.addSuppressed((java.lang.Throwable) missingParameterException59);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException62 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=100.0}", (java.lang.Throwable) invalidParameterException55);
        invalidParameterException48.addSuppressed((java.lang.Throwable) invalidParameterException62);
        invalidParameterException45.addSuppressed((java.lang.Throwable) invalidParameterException62);
        invalidParameterException36.addSuppressed((java.lang.Throwable) invalidParameterException45);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test29619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29619");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = components0.preferenceChangeListener();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(preferenceChangeListener10);
    }

    @Test
    public void test29620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29620");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet10 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig14 = batchSetPreferencesServlet11.getServletConfig();
        addCandidateServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig16 = batchSetPreferencesServlet11.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet1.getServletConfig();
        batchSetPreferencesServlet1.destroy();
        java.lang.String str20 = batchSetPreferencesServlet1.getServletInfo();
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertNotNull(servletConfig16);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test29621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29621");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig7.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
        configuration5.addItembasedRecommender(itembasedRecommenderConfig7);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        java.lang.String str19 = itembasedRecommenderConfig7.getRetrainCronExpression();
        int int20 = itembasedRecommenderConfig7.getSimilarItemsPerItem();
        itembasedRecommenderConfig7.setName("org.plista.kornakapi.web.InvalidParameterException: batchSize");
        itembasedRecommenderConfig7.setSimilarityClass("MutablePreference{userID=52, itemID=32, value=-1.0}");
        int int25 = itembasedRecommenderConfig7.getSimilarItemsPerItem();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
    }

    @Test
    public void test29622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29622");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        setPreferenceServlet3.destroy();
        setPreferenceServlet3.destroy();
        setPreferenceServlet3.init();
        setPreferenceServlet3.destroy();
        setPreferenceServlet3.destroy();
        javax.servlet.ServletConfig servletConfig16 = setPreferenceServlet3.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            setPreferenceServlet3.log("MutablePreference{userID=10000, itemID=52, value=10.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(servletConfig16);
    }

    @Test
    public void test29623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29623");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        configuration2.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getUsername();
        configuration2.setStorageConfiguration(storageConfiguration7);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration2.getStorageConfiguration();
        java.lang.String str12 = storageConfiguration11.getPassword();
        java.lang.String str13 = storageConfiguration11.getPassword();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test29624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29624");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (byte) 1, (double) (byte) 100);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) (short) 100, (double) '4');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) 97, (double) 'a');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair16 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean17 = filteringLongPairRescorer15.isFiltered(longPair16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 52.0d + "'", double9 == 52.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 97.0d + "'", double14 == 97.0d);
    }

    @Test
    public void test29625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29625");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener17 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components35 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener36 = components35.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage37 = components35.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler38 = components35.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener39 = components35.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener40 = components35.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener41 = components35.preferenceChangeListener();
        delegatingPreferenceChangeListener2.addDelegate(preferenceChangeListener41);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener43 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener44 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener44.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener46 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener44.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener46);
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener51 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener51.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener53 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener51.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener53);
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener46.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener53);
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener60 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener62 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener60.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
        delegatingPreferenceChangeListener46.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler68 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener71 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler68, "itemID", (int) '#');
        inMemoryPreferenceChangeListener71.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener46.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener71);
        delegatingPreferenceChangeListener43.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener46);
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener46.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener46);
        org.junit.Assert.assertNotNull(components35);
        org.junit.Assert.assertNotNull(preferenceChangeListener36);
        org.junit.Assert.assertNull(storage37);
        org.junit.Assert.assertNull(trainingScheduler38);
        org.junit.Assert.assertNotNull(preferenceChangeListener39);
        org.junit.Assert.assertNotNull(preferenceChangeListener40);
        org.junit.Assert.assertNotNull(preferenceChangeListener41);
    }

    @Test
    public void test29626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29626");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=100, itemID=0, value=0.0}");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(32);
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) -1);
        itembasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test29627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29627");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("batchSize");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("batchSize");
        java.lang.String str11 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration0.getUsername();
        java.lang.String str13 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setPassword("MutablePreference{userID=97, itemID=52, value=-1.0}");
        storageConfiguration0.setUsername("MutablePreference{userID=100, itemID=1, value=100.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "batchSize" + "'", str11, "batchSize");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "batchSize" + "'", str12, "batchSize");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "batchSize" + "'", str13, "batchSize");
    }

    @Test
    public void test29628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29628");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig8 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double9 = factorizationbasedRecommenderConfig8.getAlpha();
        double double10 = factorizationbasedRecommenderConfig8.getLambda();
        factorizationbasedRecommenderConfig8.setNumberOfFeatures((int) (short) 10);
        factorizationbasedRecommenderConfig8.setUsesImplicitFeedback(false);
        boolean boolean15 = factorizationbasedRecommenderConfig8.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig8.setNumberOfIterations(10000);
        factorizationbasedRecommenderConfig8.setUsesImplicitFeedback(false);
        double double20 = factorizationbasedRecommenderConfig8.getAlpha();
        configuration7.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig8);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test29629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29629");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        long long6 = mutablePreference0.getItemID();
        java.lang.String str7 = mutablePreference0.toString();
        java.lang.String str8 = mutablePreference0.toString();
        long long9 = mutablePreference0.getUserID();
        java.lang.String str10 = mutablePreference0.toString();
        java.lang.Class<?> wildcardClass11 = mutablePreference0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str8, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str10, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test29630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29630");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration5.getItembasedRecommenders();
        configuration5.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        int int9 = configuration5.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components10 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration11 = components10.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = components10.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage13 = components10.storage();
        org.plista.kornakapi.core.storage.Storage storage14 = components10.storage();
        org.plista.kornakapi.core.config.Configuration configuration15 = components10.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList16 = configuration15.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig17 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig17.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig17);
        itembasedRecommenderConfig17.setRetrainCronExpression("");
        itembasedRecommenderConfig17.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig17.setRetrainCronExpression("");
        configuration15.addItembasedRecommender(itembasedRecommenderConfig17);
        int int28 = itembasedRecommenderConfig17.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig17.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer31 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig17);
        configuration5.addItembasedRecommender(itembasedRecommenderConfig17);
        itembasedRecommenderConfig17.setSimilarityClass("MutablePreference{userID=32, itemID=97, value=52.0}");
        itembasedRecommenderConfig17.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: userID");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 97 + "'", int9 == 97);
        org.junit.Assert.assertNotNull(components10);
        org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(storage13);
        org.junit.Assert.assertNull(storage14);
        org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList16);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test29631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29631");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 0);
        factorizationbasedRecommenderConfig0.setAlpha(52.0d);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) 'a');
        java.lang.Class<?> wildcardClass14 = factorizationbasedRecommenderConfig0.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test29632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29632");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet3 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet4 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet3.init((javax.servlet.ServletConfig) batchSetPreferencesServlet4);
        batchDeleteCandidatesServlet2.init((javax.servlet.ServletConfig) batchSetPreferencesServlet4);
        javax.servlet.ServletConfig servletConfig7 = batchSetPreferencesServlet4.getServletConfig();
        addCandidateServlet0.init(servletConfig7);
        javax.servlet.ServletConfig servletConfig9 = addCandidateServlet0.getServletConfig();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet11 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet11.init();
        setPreferenceServlet11.init();
        setPreferenceServlet11.destroy();
        javax.servlet.ServletConfig servletConfig15 = setPreferenceServlet11.getServletConfig();
        setPreferenceServlet11.init();
        setPreferenceServlet11.init();
        java.lang.String str18 = setPreferenceServlet11.getServletInfo();
        addCandidateServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet11);
        java.lang.String str20 = addCandidateServlet0.getServletInfo();
        addCandidateServlet0.destroy();
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertNull(servletConfig9);
        org.junit.Assert.assertNull(servletConfig15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test29633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29633");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(1);
        int int10 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        java.lang.String str11 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str12 = itembasedRecommenderConfig0.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str15 = itembasedRecommenderConfig0.getName();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test29634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29634");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) 10000);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double13 = fixedCandidatesIDRescorer1.rescore((long) 10000, (double) (short) 100);
        double double16 = fixedCandidatesIDRescorer1.rescore((long) (byte) 10, (double) 10000);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer17 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double20 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) (byte) -1);
        double double23 = fixedCandidatesIDRescorer1.rescore((long) 35, (double) 0.0f);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10000.0d + "'", double9 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 100.0d + "'", double13 == 100.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10000.0d + "'", double16 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + (-1.0d) + "'", double20 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
    }

    @Test
    public void test29635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29635");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException5);
        java.lang.Throwable[] throwableArray8 = missingParameterException5.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException9);
        java.lang.Throwable[] throwableArray11 = invalidParameterException9.getSuppressed();
        java.lang.Throwable[] throwableArray12 = invalidParameterException9.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test29636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29636");
        java.lang.Throwable throwable1 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException2 = new org.plista.kornakapi.web.InvalidParameterException("", throwable1);
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=35.0}", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=52, itemID=32, value=0.0}", (java.lang.Throwable) invalidParameterException10);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException11);
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException19);
        java.lang.Throwable[] throwableArray22 = missingParameterException19.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException29 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException29);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException29);
        org.plista.kornakapi.web.MissingParameterException missingParameterException33 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException33.addSuppressed((java.lang.Throwable) missingParameterException35);
        invalidParameterException31.addSuppressed((java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException31);
        org.plista.kornakapi.web.MissingParameterException missingParameterException42 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException42);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException44 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException42);
        invalidParameterException38.addSuppressed((java.lang.Throwable) missingParameterException42);
        org.plista.kornakapi.web.MissingParameterException missingParameterException48 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException48);
        missingParameterException42.addSuppressed((java.lang.Throwable) invalidParameterException49);
        java.lang.Throwable[] throwableArray51 = missingParameterException42.getSuppressed();
        invalidParameterException24.addSuppressed((java.lang.Throwable) missingParameterException42);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException53 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=1.0}", (java.lang.Throwable) invalidParameterException24);
        invalidParameterException11.addSuppressed((java.lang.Throwable) invalidParameterException24);
        invalidParameterException2.addSuppressed((java.lang.Throwable) invalidParameterException24);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test29637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29637");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        java.lang.String str12 = mutableCandidate0.getLabel();
        long long13 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: howMany", (long) (byte) 100);
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=0.0}", (long) '#');
        mutableCandidate0.set("MutablePreference{userID=10, itemID=32, value=10000.0}", (long) (short) 1);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 35L + "'", long13 == 35L);
    }

    @Test
    public void test29638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29638");
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet0 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet0.destroy();
        javax.servlet.ServletConfig servletConfig2 = deleteCandidateServlet0.getServletConfig();
        java.lang.String str3 = deleteCandidateServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet4 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet5 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet4.init((javax.servlet.ServletConfig) batchSetPreferencesServlet5);
        java.lang.String str7 = batchSetPreferencesServlet5.getServletInfo();
        javax.servlet.ServletConfig servletConfig8 = batchSetPreferencesServlet5.getServletConfig();
        deleteCandidateServlet0.init(servletConfig8);
        deleteCandidateServlet0.destroy();
        org.junit.Assert.assertNull(servletConfig2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig8);
    }

    @Test
    public void test29639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29639");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int4 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        boolean boolean5 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int6 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int7 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test29640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29640");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getRetrainCronExpression();
        int int7 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig5.setRetrainCronExpression("value");
        int int13 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig5);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList15 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig16.setSimilarityClass("");
        java.lang.String str19 = itembasedRecommenderConfig16.getName();
        java.lang.String str20 = itembasedRecommenderConfig16.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig16);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList22 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration23 = configuration0.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList24 = configuration0.getFactorizationbasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList25 = configuration0.getItembasedRecommenders();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList15);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList22);
        org.junit.Assert.assertNull(storageConfiguration23);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList24);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList25);
    }

    @Test
    public void test29641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29641");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        java.lang.String str3 = configuration2.getModelDirectory();
        int int4 = configuration2.getNumProcessorsForTraining();
        int int5 = configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = configuration2.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList7 = configuration2.getFactorizationbasedRecommenders();
        configuration2.setNumProcessorsForTraining((int) '#');
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig10 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double11 = factorizationbasedRecommenderConfig10.getAlpha();
        double double12 = factorizationbasedRecommenderConfig10.getLambda();
        int int13 = factorizationbasedRecommenderConfig10.getNumberOfFeatures();
        factorizationbasedRecommenderConfig10.setUsesImplicitFeedback(true);
        double double16 = factorizationbasedRecommenderConfig10.getAlpha();
        java.lang.String str17 = factorizationbasedRecommenderConfig10.getRetrainCronExpression();
        java.lang.String str18 = factorizationbasedRecommenderConfig10.getRetrainCronExpression();
        factorizationbasedRecommenderConfig10.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig10.setNumberOfIterations((int) '4');
        configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig10);
        int int24 = configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components25 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage26 = components25.storage();
        org.plista.kornakapi.core.config.Configuration configuration27 = components25.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig28 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double29 = factorizationbasedRecommenderConfig28.getAlpha();
        double double30 = factorizationbasedRecommenderConfig28.getLambda();
        boolean boolean31 = factorizationbasedRecommenderConfig28.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer32 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig28);
        double double33 = factorizationbasedRecommenderConfig28.getAlpha();
        configuration27.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig28);
        double double35 = factorizationbasedRecommenderConfig28.getAlpha();
        factorizationbasedRecommenderConfig28.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig28.setName("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
        double double40 = factorizationbasedRecommenderConfig28.getLambda();
        configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig28);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str3, "org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 97 + "'", int4 == 97);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 97 + "'", int5 == 97);
        org.junit.Assert.assertNotNull(storageConfiguration6);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList7);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 35 + "'", int24 == 35);
        org.junit.Assert.assertNotNull(components25);
        org.junit.Assert.assertNull(storage26);
        org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 0.0d + "'", double30 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
    }

    @Test
    public void test29642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29642");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = configuration0.getStorageConfiguration();
        java.lang.String str7 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str9 = itembasedRecommenderConfig8.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig8);
        itembasedRecommenderConfig8.setSimilarityClass("recommender");
        java.lang.String str13 = itembasedRecommenderConfig8.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig8);
        configuration0.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig17 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str18 = itembasedRecommenderConfig17.getSimilarityClass();
        int int19 = itembasedRecommenderConfig17.getSimilarItemsPerItem();
        int int20 = itembasedRecommenderConfig17.getRetrainAfterPreferenceChanges();
        int int21 = itembasedRecommenderConfig17.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer22 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig17);
        int int23 = itembasedRecommenderConfig17.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig17);
        java.lang.String str25 = configuration0.getModelDirectory();
        org.plista.kornakapi.web.Components components26 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration27 = components26.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration28 = components26.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler29 = components26.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler30 = components26.scheduler();
        org.plista.kornakapi.core.storage.Storage storage31 = components26.storage();
        org.plista.kornakapi.core.config.Configuration configuration32 = components26.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage33 = components26.storage();
        org.plista.kornakapi.core.config.Configuration configuration34 = components26.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration35 = components26.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList36 = configuration35.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components37 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage38 = components37.storage();
        org.plista.kornakapi.core.config.Configuration configuration39 = components37.getConfiguration();
        java.lang.String str40 = configuration39.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration41 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str42 = storageConfiguration41.getJdbcDriverClass();
        storageConfiguration41.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str45 = storageConfiguration41.getJdbcUrl();
        java.lang.String str46 = storageConfiguration41.getJdbcDriverClass();
        storageConfiguration41.setJdbcDriverClass("batchSize");
        java.lang.String str49 = storageConfiguration41.getPassword();
        java.lang.String str50 = storageConfiguration41.getJdbcUrl();
        configuration39.setStorageConfiguration(storageConfiguration41);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration52 = configuration39.getStorageConfiguration();
        configuration35.setStorageConfiguration(storageConfiguration52);
        storageConfiguration52.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        storageConfiguration52.setPassword("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration52.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        configuration0.setStorageConfiguration(storageConfiguration52);
        configuration0.setModelDirectory("itemID");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList63 = configuration0.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(storageConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "recommender" + "'", str13, "recommender");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "itemID" + "'", str25, "itemID");
        org.junit.Assert.assertNotNull(components26);
        org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNotNull(configuration28);
        org.junit.Assert.assertNull(trainingScheduler29);
        org.junit.Assert.assertNull(trainingScheduler30);
        org.junit.Assert.assertNull(storage31);
        org.junit.Assert.assertNotNull(configuration32);
        org.junit.Assert.assertNull(storage33);
        org.junit.Assert.assertNotNull(configuration34);
        org.junit.Assert.assertNotNull(configuration35);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList36);
        org.junit.Assert.assertNotNull(components37);
        org.junit.Assert.assertNull(storage38);
        org.junit.Assert.assertNotNull(configuration39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemIDs" + "'", str40, "org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(storageConfiguration52);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList63);
    }

    @Test
    public void test29643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29643");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("label", (-1L));
        java.lang.String str17 = mutableCandidate0.getLabel();
        java.lang.String str18 = mutableCandidate0.getLabel();
        java.lang.String str19 = mutableCandidate0.getLabel();
        java.lang.String str20 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "itemID" + "'", str13, "itemID");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "label" + "'", str17, "label");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "label" + "'", str18, "label");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "label" + "'", str19, "label");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "label" + "'", str20, "label");
    }

    @Test
    public void test29644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29644");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 1);
        long long6 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) (short) 0);
        float float9 = mutablePreference0.getValue();
        java.lang.String str10 = mutablePreference0.toString();
        mutablePreference0.setValue((float) 35);
        mutablePreference0.setValue(1.0f);
        long long15 = mutablePreference0.getItemID();
        java.lang.String str16 = mutablePreference0.toString();
        long long17 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (-1), 0L, (float) (-1L));
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9 == 0.0f);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str10, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str16, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test29645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29645");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        float float1 = mutablePreference0.getValue();
        long long2 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) 'a');
        long long5 = mutablePreference0.getItemID();
        java.lang.String str6 = mutablePreference0.toString();
        java.lang.String str7 = mutablePreference0.toString();
        java.lang.String str8 = mutablePreference0.toString();
        org.junit.Assert.assertTrue("'" + float1 + "' != '" + 0.0f + "'", float1 == 0.0f);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=97.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=97.0}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=97.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=97.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=0, itemID=0, value=97.0}" + "'", str8, "MutablePreference{userID=0, itemID=0, value=97.0}");
    }

    @Test
    public void test29646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29646");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage9 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage10 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration11 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = configuration11.getItembasedRecommenders();
        org.plista.kornakapi.core.storage.Storage storage13 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap14 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap15 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = null;
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener17 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener36 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener34.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener36);
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener41 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener43 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener43.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener43.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener43);
        delegatingPreferenceChangeListener43.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener43);
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener36);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration11, storage13, strMap14, strMap15, trainingScheduler16, (org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNull(storage9);
        org.junit.Assert.assertNull(storage10);
        org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
    }

    @Test
    public void test29647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29647");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) recommendServlet5);
        recommendServlet5.init();
        java.lang.String str8 = recommendServlet5.getServletInfo();
        recommendServlet5.destroy();
        recommendServlet5.destroy();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test29648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29648");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        float float8 = mutablePreference0.getValue();
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (short) 100);
        long long12 = mutablePreference0.getUserID();
        mutablePreference0.set(35L, (long) 35, 0.0f);
        long long17 = mutablePreference0.getItemID();
        java.lang.String str18 = mutablePreference0.toString();
        mutablePreference0.setValue((float) 32L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 100L + "'", long12 == 100L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 35L + "'", long17 == 35L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=35, itemID=35, value=0.0}" + "'", str18, "MutablePreference{userID=35, itemID=35, value=0.0}");
    }

    @Test
    public void test29649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29649");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig0.setAlpha((double) ' ');
        double double14 = factorizationbasedRecommenderConfig0.getAlpha();
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 32.0d + "'", double14 == 32.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 35 + "'", int15 == 35);
    }

    @Test
    public void test29650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29650");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.set((long) 32, (long) (short) 1, (float) 97L);
        mutablePreference0.setValue((float) (-1L));
        java.lang.String str12 = mutablePreference0.toString();
        long long13 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=32, itemID=1, value=-1.0}" + "'", str12, "MutablePreference{userID=32, itemID=1, value=-1.0}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
    }

    @Test
    public void test29651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29651");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        java.lang.String str1 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str3 = batchDeleteCandidatesServlet2.getServletInfo();
        java.lang.String str4 = batchDeleteCandidatesServlet2.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet5 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet6 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet7 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet6.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet7);
        setPreferenceServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet7);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet10 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet5.init((javax.servlet.ServletConfig) recommendServlet10);
        batchDeleteCandidatesServlet2.init((javax.servlet.ServletConfig) setPreferenceServlet5);
        batchDeleteCandidatesServlet2.destroy();
        batchDeleteCandidatesServlet2.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet15 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str16 = trainServlet15.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet17 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet17.destroy();
        javax.servlet.ServletConfig servletConfig19 = deleteCandidateServlet17.getServletConfig();
        deleteCandidateServlet17.destroy();
        trainServlet15.init((javax.servlet.ServletConfig) deleteCandidateServlet17);
        java.lang.String str22 = trainServlet15.getServletInfo();
        batchDeleteCandidatesServlet2.init((javax.servlet.ServletConfig) trainServlet15);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet24 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet24.init();
        java.lang.String str26 = batchAddCandidatesServlet24.getServletInfo();
        batchAddCandidatesServlet24.init();
        java.lang.String str28 = batchAddCandidatesServlet24.getServletInfo();
        batchAddCandidatesServlet24.init();
        batchAddCandidatesServlet24.init();
        batchAddCandidatesServlet24.init();
        trainServlet15.init((javax.servlet.ServletConfig) batchAddCandidatesServlet24);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet15);
        batchAddCandidatesServlet0.destroy();
        java.lang.String str35 = batchAddCandidatesServlet0.getServletInfo();
        batchAddCandidatesServlet0.init();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test29652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29652");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str6 = factorizationbasedRecommenderConfig0.getName();
        int int7 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getName();
        double double9 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(35);
        int int12 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test29653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29653");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) '4', (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer7 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double10 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) 52.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer11 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 52.0d + "'", double10 == 52.0d);
    }

    @Test
    public void test29654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29654");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        java.lang.String str9 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        batchDeleteCandidatesServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet12.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet16 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str17 = batchDeleteCandidatesServlet16.getServletInfo();
        java.lang.String str18 = batchDeleteCandidatesServlet16.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet19 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet20 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet20.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        setPreferenceServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet24 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet19.init((javax.servlet.ServletConfig) recommendServlet24);
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) setPreferenceServlet19);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet27 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet28 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet29 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet28.init((javax.servlet.ServletConfig) batchSetPreferencesServlet29);
        javax.servlet.ServletConfig servletConfig31 = batchSetPreferencesServlet28.getServletConfig();
        addCandidateServlet27.init((javax.servlet.ServletConfig) batchSetPreferencesServlet28);
        javax.servlet.ServletConfig servletConfig33 = addCandidateServlet27.getServletConfig();
        batchDeleteCandidatesServlet16.init((javax.servlet.ServletConfig) addCandidateServlet27);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet35 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str36 = trainServlet35.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet37 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet37.destroy();
        javax.servlet.ServletConfig servletConfig39 = deleteCandidateServlet37.getServletConfig();
        deleteCandidateServlet37.destroy();
        trainServlet35.init((javax.servlet.ServletConfig) deleteCandidateServlet37);
        addCandidateServlet27.init((javax.servlet.ServletConfig) trainServlet35);
        batchSetPreferencesServlet12.init((javax.servlet.ServletConfig) addCandidateServlet27);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet44 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet45 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet44.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet45);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet47 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str48 = batchDeleteCandidatesServlet47.getServletInfo();
        batchDeleteCandidatesServlet47.init();
        javax.servlet.ServletConfig servletConfig50 = null;
        batchDeleteCandidatesServlet47.init(servletConfig50);
        recommendServlet44.init(servletConfig50);
        batchSetPreferencesServlet12.init(servletConfig50);
        batchSetPreferencesServlet12.destroy();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        batchSetPreferencesServlet12.init();
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet12.log("MutablePreference{userID=10000, itemID=35, value=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(servletConfig31);
        org.junit.Assert.assertNotNull(servletConfig33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(servletConfig39);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test29655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29655");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = components0.getConfiguration();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNotNull(preferenceChangeListener9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNotNull(configuration11);
    }

    @Test
    public void test29656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29656");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage8 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        int int10 = configuration9.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList11 = configuration9.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.storage.Storage storage12 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap13 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap14 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler15 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler16, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=-1, value=10.0}", (int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration9, storage12, strMap13, strMap14, trainingScheduler15, (org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList11);
    }

    @Test
    public void test29657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29657");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("recommender");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: ", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=100.0}", (java.lang.Throwable) missingParameterException4);
    }

    @Test
    public void test29658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29658");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet3.init();
        setPreferenceServlet3.destroy();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        javax.servlet.ServletConfig servletConfig7 = setPreferenceServlet3.getServletConfig();
        setPreferenceServlet3.destroy();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet9 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet11 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet11);
        javax.servlet.ServletConfig servletConfig13 = batchSetPreferencesServlet10.getServletConfig();
        addCandidateServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        batchSetPreferencesServlet10.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet16 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str17 = recommendServlet16.getServletInfo();
        javax.servlet.ServletConfig servletConfig18 = recommendServlet16.getServletConfig();
        java.lang.String str19 = recommendServlet16.getServletInfo();
        batchSetPreferencesServlet10.init((javax.servlet.ServletConfig) recommendServlet16);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet16);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = recommendServlet16.getInitParameter("MutablePreference{userID=100, itemID=35, value=1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertNotNull(servletConfig13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test29659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29659");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = configuration4.getStorageConfiguration();
        int int9 = configuration4.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList10 = configuration4.getFactorizationbasedRecommenders();
        configuration4.setModelDirectory("MutablePreference{userID=0, itemID=0, value=-1.0}");
        org.plista.kornakapi.web.Components components13 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = components13.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration15 = components13.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = components13.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration17 = components13.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig18 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        int int19 = itembasedRecommenderConfig18.getSimilarItemsPerItem();
        configuration17.addItembasedRecommender(itembasedRecommenderConfig18);
        itembasedRecommenderConfig18.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=0.0}");
        java.lang.String str23 = itembasedRecommenderConfig18.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer24 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig18);
        java.lang.String str25 = itembasedRecommenderConfig18.getSimilarityClass();
        itembasedRecommenderConfig18.setRetrainCronExpression("MutablePreference{userID=0, itemID=0, value=1.0}");
        java.lang.String str28 = itembasedRecommenderConfig18.getRetrainCronExpression();
        configuration4.addItembasedRecommender(itembasedRecommenderConfig18);
        int int30 = itembasedRecommenderConfig18.getRetrainAfterPreferenceChanges();
        java.lang.String str31 = itembasedRecommenderConfig18.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer32 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig18);
        itembasedRecommenderConfig18.setName("MutablePreference{userID=52, itemID=32, value=10000.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNotNull(storageConfiguration6);
        org.junit.Assert.assertNotNull(storageConfiguration7);
        org.junit.Assert.assertNotNull(storageConfiguration8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList10);
        org.junit.Assert.assertNotNull(components13);
        org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNull(trainingScheduler16);
        org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str25, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str28, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str31, "MutablePreference{userID=0, itemID=0, value=0.0}");
    }

    @Test
    public void test29660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29660");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}", (int) '4');
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
    }

    @Test
    public void test29661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29661");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setName("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.lang.String str5 = itembasedRecommenderConfig0.getRetrainCronExpression();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str8 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=100, itemID=0, value=32.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test29662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29662");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) 'a');
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        int int9 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 97 + "'", int12 == 97);
    }

    @Test
    public void test29663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29663");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet11.init();
        java.lang.String str13 = batchAddCandidatesServlet11.getServletInfo();
        javax.servlet.ServletConfig servletConfig14 = batchAddCandidatesServlet11.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str16 = batchDeleteCandidatesServlet15.getServletInfo();
        java.lang.String str17 = batchDeleteCandidatesServlet15.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet18 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet20 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        setPreferenceServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet23 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet18.init((javax.servlet.ServletConfig) recommendServlet23);
        batchDeleteCandidatesServlet15.init((javax.servlet.ServletConfig) setPreferenceServlet18);
        batchAddCandidatesServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchAddCandidatesServlet11);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet28 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str29 = recommendServlet28.getServletInfo();
        javax.servlet.ServletConfig servletConfig30 = recommendServlet28.getServletConfig();
        javax.servlet.ServletConfig servletConfig31 = recommendServlet28.getServletConfig();
        javax.servlet.ServletConfig servletConfig32 = recommendServlet28.getServletConfig();
        batchAddCandidatesServlet11.init((javax.servlet.ServletConfig) recommendServlet28);
        recommendServlet28.init();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet35.init();
        java.lang.String str37 = batchAddCandidatesServlet35.getServletInfo();
        batchAddCandidatesServlet35.init();
        java.lang.String str39 = batchAddCandidatesServlet35.getServletInfo();
        batchAddCandidatesServlet35.init();
        batchAddCandidatesServlet35.init();
        recommendServlet28.init((javax.servlet.ServletConfig) batchAddCandidatesServlet35);
        java.lang.String str43 = recommendServlet28.getServletInfo();
        java.lang.String str44 = recommendServlet28.getServletInfo();
        // The following exception was thrown during execution in test generation
        try {
            recommendServlet28.log("MutablePreference{userID=-1, itemID=32, value=1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(servletConfig30);
        org.junit.Assert.assertNull(servletConfig31);
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
    }

    @Test
    public void test29664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29664");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setRetrainAfterPreferenceChanges((int) (short) 100);
        configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = null;
        configuration4.addItembasedRecommender(itembasedRecommenderConfig12);
        configuration4.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str16 = configuration4.getModelDirectory();
        configuration4.setNumProcessorsForTraining((int) (short) 1);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList19 = configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig20 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig20.setSimilarityClass("");
        java.lang.String str23 = itembasedRecommenderConfig20.getName();
        java.lang.String str24 = itembasedRecommenderConfig20.getSimilarityClass();
        java.lang.String str25 = itembasedRecommenderConfig20.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer26 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig20);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer27 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig20);
        java.lang.String str28 = itembasedRecommenderConfig20.getSimilarityClass();
        configuration4.addItembasedRecommender(itembasedRecommenderConfig20);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=0, itemID=0, value=-1.0}" + "'", str16, "MutablePreference{userID=0, itemID=0, value=-1.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
    }

    @Test
    public void test29665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29665");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getAlpha();
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(32);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(32);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(52);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test29666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29666");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        java.lang.String str1 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig2 = batchAddCandidatesServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration3 = batchAddCandidatesServlet0.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig2);
    }

    @Test
    public void test29667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29667");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration0.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=100, itemID=-1, value=100.0}");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration0.getUsername();
        java.lang.String str20 = storageConfiguration0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str19, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str20, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test29668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29668");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
        configuration1.setStorageConfiguration(storageConfiguration2);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig11 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double12 = factorizationbasedRecommenderConfig11.getAlpha();
        double double13 = factorizationbasedRecommenderConfig11.getLambda();
        int int14 = factorizationbasedRecommenderConfig11.getNumberOfFeatures();
        java.lang.String str15 = factorizationbasedRecommenderConfig11.getRetrainCronExpression();
        int int16 = factorizationbasedRecommenderConfig11.getNumberOfFeatures();
        factorizationbasedRecommenderConfig11.setName("MutablePreference{userID=0, itemID=0, value=0.0}");
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig11);
        java.lang.String str20 = factorizationbasedRecommenderConfig11.getRetrainCronExpression();
        factorizationbasedRecommenderConfig11.setRetrainCronExpression("MutablePreference{userID=97, itemID=1, value=0.0}");
        boolean boolean23 = factorizationbasedRecommenderConfig11.isUsesImplicitFeedback();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test29669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29669");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig0.setLambda((double) 35);
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(32);
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
    }

    @Test
    public void test29670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29670");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
        configuration1.setStorageConfiguration(storageConfiguration2);
        java.lang.String str11 = storageConfiguration2.getPassword();
        storageConfiguration2.setJdbcUrl("batchSize");
        storageConfiguration2.setUsername("MutablePreference{userID=-1, itemID=0, value=100.0}");
        java.lang.String str16 = storageConfiguration2.getPassword();
        storageConfiguration2.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=0, value=97.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test29671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29671");
        org.plista.kornakapi.web.MissingParameterException missingParameterException2 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException3 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException2);
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.MissingParameterException missingParameterException11 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException13 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException11.addSuppressed((java.lang.Throwable) missingParameterException13);
        invalidParameterException9.addSuppressed((java.lang.Throwable) missingParameterException13);
        java.lang.Throwable[] throwableArray16 = missingParameterException13.getSuppressed();
        invalidParameterException3.addSuppressed((java.lang.Throwable) missingParameterException13);
        java.lang.Throwable[] throwableArray18 = invalidParameterException3.getSuppressed();
        java.lang.Throwable[] throwableArray19 = invalidParameterException3.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test29672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29672");
        org.plista.kornakapi.web.servlets.BigBangServletContextListener bigBangServletContextListener0 = new org.plista.kornakapi.web.servlets.BigBangServletContextListener();
        javax.servlet.ServletContextEvent servletContextEvent1 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent1);
        javax.servlet.ServletContextEvent servletContextEvent3 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent3);
        javax.servlet.ServletContextEvent servletContextEvent5 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent5);
        javax.servlet.ServletContextEvent servletContextEvent7 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent7);
        javax.servlet.ServletContextEvent servletContextEvent9 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent9);
        javax.servlet.ServletContextEvent servletContextEvent11 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent11);
        javax.servlet.ServletContextEvent servletContextEvent13 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent13);
        javax.servlet.ServletContextEvent servletContextEvent15 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent15);
        javax.servlet.ServletContextEvent servletContextEvent17 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent17);
        javax.servlet.ServletContextEvent servletContextEvent19 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent19);
        javax.servlet.ServletContextEvent servletContextEvent21 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent21);
        javax.servlet.ServletContextEvent servletContextEvent23 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent23);
        javax.servlet.ServletContextEvent servletContextEvent25 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent25);
        javax.servlet.ServletContextEvent servletContextEvent27 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent27);
        javax.servlet.ServletContextEvent servletContextEvent29 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent29);
        javax.servlet.ServletContextEvent servletContextEvent31 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent31);
        javax.servlet.ServletContextEvent servletContextEvent33 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent33);
        javax.servlet.ServletContextEvent servletContextEvent35 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent35);
        javax.servlet.ServletContextEvent servletContextEvent37 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent37);
        javax.servlet.ServletContextEvent servletContextEvent39 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent39);
        javax.servlet.ServletContextEvent servletContextEvent41 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent41);
        javax.servlet.ServletContextEvent servletContextEvent43 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent43);
        javax.servlet.ServletContextEvent servletContextEvent45 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent45);
        javax.servlet.ServletContextEvent servletContextEvent47 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent47);
        javax.servlet.ServletContextEvent servletContextEvent49 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent49);
        javax.servlet.ServletContextEvent servletContextEvent51 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent51);
        javax.servlet.ServletContextEvent servletContextEvent53 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent53);
        javax.servlet.ServletContextEvent servletContextEvent55 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent55);
        javax.servlet.ServletContextEvent servletContextEvent57 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent57);
        javax.servlet.ServletContextEvent servletContextEvent59 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent59);
        javax.servlet.ServletContextEvent servletContextEvent61 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent61);
        javax.servlet.ServletContextEvent servletContextEvent63 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent63);
        javax.servlet.ServletContextEvent servletContextEvent65 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent65);
        javax.servlet.ServletContextEvent servletContextEvent67 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent67);
        javax.servlet.ServletContextEvent servletContextEvent69 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent69);
        javax.servlet.ServletContextEvent servletContextEvent71 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent71);
        javax.servlet.ServletContextEvent servletContextEvent73 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent73);
        javax.servlet.ServletContextEvent servletContextEvent75 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent75);
        javax.servlet.ServletContextEvent servletContextEvent77 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent77);
        javax.servlet.ServletContextEvent servletContextEvent79 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent79);
        javax.servlet.ServletContextEvent servletContextEvent81 = null;
        bigBangServletContextListener0.contextDestroyed(servletContextEvent81);
        javax.servlet.ServletContextEvent servletContextEvent83 = null;
        // The following exception was thrown during execution in test generation
        try {
            bigBangServletContextListener0.contextInitialized(servletContextEvent83);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: java.lang.IllegalStateException: configuration file not set!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
    }

    @Test
    public void test29673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29673");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        configuration5.setStorageConfiguration(storageConfiguration7);
        java.lang.String str16 = storageConfiguration7.getUsername();
        java.lang.String str17 = storageConfiguration7.getPassword();
        java.lang.String str18 = storageConfiguration7.getPassword();
        java.lang.String str19 = storageConfiguration7.getUsername();
        storageConfiguration7.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
        storageConfiguration7.setPassword("org.plista.kornakapi.web.MissingParameterException: batchSize");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str16, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str19, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test29674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29674");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setName("recommender");
        double double13 = factorizationbasedRecommenderConfig0.getAlpha();
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) ' ');
        double double17 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str18 = factorizationbasedRecommenderConfig0.getName();
        int int19 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "recommender" + "'", str18, "recommender");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test29675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29675");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcDriverClass("file");
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=100.0}");
        java.lang.String str13 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration0.getJdbcUrl();
        java.lang.String str15 = storageConfiguration0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "file" + "'", str13, "file");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str14, "MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str15, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test29676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29676");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener11 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler8, "org.plista.kornakapi.web.InvalidParameterException: recommender", 100);
        inMemoryPreferenceChangeListener11.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener11.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener11);
        inMemoryPreferenceChangeListener11.notifyOfPreferenceChange();
    }

    @Test
    public void test29677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29677");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=100, itemID=0, value=35.0}", (int) (short) 100);
    }

    @Test
    public void test29678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29678");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        long long12 = mutableCandidate0.getItemID();
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("label", (-1L));
        long long17 = mutableCandidate0.getItemID();
        java.lang.String str18 = mutableCandidate0.getLabel();
        long long19 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}", (long) (short) 1);
        java.lang.String str23 = mutableCandidate0.getLabel();
        java.lang.String str24 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-1L) + "'", long12 == (-1L));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "itemID" + "'", str13, "itemID");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "label" + "'", str18, "label");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str23, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str24, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
    }

    @Test
    public void test29679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29679");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet13 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str14 = trainServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet15 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet15.destroy();
        javax.servlet.ServletConfig servletConfig17 = deleteCandidateServlet15.getServletConfig();
        deleteCandidateServlet15.destroy();
        trainServlet13.init((javax.servlet.ServletConfig) deleteCandidateServlet15);
        java.lang.String str20 = trainServlet13.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet13);
        batchDeleteCandidatesServlet0.init();
        java.lang.String str23 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str27 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet28 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str29 = trainServlet28.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet30 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet30.destroy();
        javax.servlet.ServletConfig servletConfig32 = deleteCandidateServlet30.getServletConfig();
        deleteCandidateServlet30.destroy();
        trainServlet28.init((javax.servlet.ServletConfig) deleteCandidateServlet30);
        javax.servlet.ServletConfig servletConfig35 = deleteCandidateServlet30.getServletConfig();
        javax.servlet.ServletConfig servletConfig36 = deleteCandidateServlet30.getServletConfig();
        deleteCandidateServlet30.init();
        java.lang.String str38 = deleteCandidateServlet30.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet39 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet40 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet39.init((javax.servlet.ServletConfig) batchSetPreferencesServlet40);
        javax.servlet.ServletConfig servletConfig42 = batchSetPreferencesServlet39.getServletConfig();
        batchSetPreferencesServlet39.init();
        batchSetPreferencesServlet39.init();
        deleteCandidateServlet30.init((javax.servlet.ServletConfig) batchSetPreferencesServlet39);
        javax.servlet.ServletConfig servletConfig46 = deleteCandidateServlet30.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet30);
        batchDeleteCandidatesServlet0.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertNull(servletConfig35);
        org.junit.Assert.assertNull(servletConfig36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertNotNull(servletConfig42);
        org.junit.Assert.assertNotNull(servletConfig46);
    }

    @Test
    public void test29680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29680");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener17 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener17.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener17.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler34 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener37 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler34, "org.plista.kornakapi.web.InvalidParameterException: recommender", 52);
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener37);
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
    }

    @Test
    public void test29681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29681");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (-1.0f));
        double double12 = fixedCandidatesIDRescorer1.rescore((long) 10, (double) 100);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer13 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double16 = fixedCandidatesIDRescorer1.rescore((long) 52, 0.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer17 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair18 = null;
        double double20 = filteringLongPairRescorer17.rescore(longPair18, (double) 100);
        org.apache.mahout.common.LongPair longPair21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = filteringLongPairRescorer17.isFiltered(longPair21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 100.0d + "'", double20 == 100.0d);
    }

    @Test
    public void test29682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29682");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet11 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet12 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet13 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet13);
        javax.servlet.ServletConfig servletConfig15 = batchSetPreferencesServlet12.getServletConfig();
        addCandidateServlet11.init((javax.servlet.ServletConfig) batchSetPreferencesServlet12);
        javax.servlet.ServletConfig servletConfig17 = addCandidateServlet11.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet11);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet19 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str20 = trainServlet19.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet21 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet21.destroy();
        javax.servlet.ServletConfig servletConfig23 = deleteCandidateServlet21.getServletConfig();
        deleteCandidateServlet21.destroy();
        trainServlet19.init((javax.servlet.ServletConfig) deleteCandidateServlet21);
        addCandidateServlet11.init((javax.servlet.ServletConfig) trainServlet19);
        trainServlet19.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet28 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet29 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet30 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet29.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        setPreferenceServlet28.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        trainServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet30);
        javax.servlet.ServletConfig servletConfig34 = batchDeleteCandidatesServlet30.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str36 = batchDeleteCandidatesServlet35.getServletInfo();
        batchDeleteCandidatesServlet35.init();
        javax.servlet.ServletConfig servletConfig38 = null;
        batchDeleteCandidatesServlet35.init(servletConfig38);
        javax.servlet.ServletConfig servletConfig40 = batchDeleteCandidatesServlet35.getServletConfig();
        batchDeleteCandidatesServlet35.init();
        javax.servlet.ServletConfig servletConfig42 = batchDeleteCandidatesServlet35.getServletConfig();
        java.lang.String str43 = batchDeleteCandidatesServlet35.getServletInfo();
        batchDeleteCandidatesServlet30.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet35);
        java.lang.String str45 = batchDeleteCandidatesServlet30.getServletInfo();
        org.plista.kornakapi.web.MissingParameterException missingParameterException48 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}");
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet30.log("MutablePreference{userID=35, itemID=97, value=52.0}", (java.lang.Throwable) missingParameterException48);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNotNull(servletConfig15);
        org.junit.Assert.assertNotNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertNull(servletConfig34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNull(servletConfig40);
        org.junit.Assert.assertNull(servletConfig42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
    }

    @Test
    public void test29683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29683");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.init();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        batchSetPreferencesServlet1.destroy();
        java.lang.String str9 = batchSetPreferencesServlet1.getServletInfo();
        javax.servlet.ServletConfig servletConfig10 = batchSetPreferencesServlet1.getServletConfig();
        batchSetPreferencesServlet1.init();
        javax.servlet.ServletConfig servletConfig12 = batchSetPreferencesServlet1.getServletConfig();
        javax.servlet.ServletConfig servletConfig13 = batchSetPreferencesServlet1.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext14 = batchSetPreferencesServlet1.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(servletConfig10);
        org.junit.Assert.assertNotNull(servletConfig12);
        org.junit.Assert.assertNotNull(servletConfig13);
    }

    @Test
    public void test29684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29684");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) (short) 10);
        factorizationbasedRecommenderConfig0.setLambda(97.0d);
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double16 = factorizationbasedRecommenderConfig0.getAlpha();
        double double17 = factorizationbasedRecommenderConfig0.getAlpha();
        int int18 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 10.0d + "'", double17 == 10.0d);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test29685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29685");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration1.getItembasedRecommenders();
        java.lang.String str3 = configuration1.getModelDirectory();
        java.lang.String str4 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null;
        configuration1.setStorageConfiguration(storageConfiguration5);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        int int10 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        java.lang.String str11 = factorizationbasedRecommenderConfig7.getRetrainCronExpression();
        int int12 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setNumberOfIterations((int) (short) 0);
        boolean boolean15 = factorizationbasedRecommenderConfig7.isUsesImplicitFeedback();
        java.lang.String str16 = factorizationbasedRecommenderConfig7.getRetrainCronExpression();
        int int17 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        int int18 = factorizationbasedRecommenderConfig7.getNumberOfIterations();
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        factorizationbasedRecommenderConfig7.setName("batchSize");
        factorizationbasedRecommenderConfig7.setRetrainCronExpression("MutablePreference{userID=10, itemID=100, value=10.0}");
        int int24 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setNumberOfFeatures((int) 'a');
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "value" + "'", str3, "value");
// flaky:         org.junit.Assert.assertEquals("'" + str4 + "' != '" + "value" + "'", str4, "value");
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test29686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29686");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig5.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        itembasedRecommenderConfig5.setRetrainCronExpression("");
        itembasedRecommenderConfig5.setSimilarItemsPerItem(10);
        java.lang.String str13 = itembasedRecommenderConfig5.getName();
        java.lang.String str14 = itembasedRecommenderConfig5.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig5);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        boolean boolean19 = factorizationbasedRecommenderConfig16.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig16);
        double double21 = factorizationbasedRecommenderConfig16.getAlpha();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        configuration0.setNumProcessorsForTraining((int) '4');
        java.lang.String str25 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=52, value=-1.0}");
        configuration0.setModelDirectory("MutablePreference{userID=32, itemID=97, value=52.0}");
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList30 = configuration0.getItembasedRecommenders();
        java.lang.String str31 = configuration0.getModelDirectory();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "MutablePreference{userID=32, itemID=97, value=52.0}" + "'", str31, "MutablePreference{userID=32, itemID=97, value=52.0}");
    }

    @Test
    public void test29687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29687");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        java.lang.String str7 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet8 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet8.init();
        java.lang.String str10 = batchAddCandidatesServlet8.getServletInfo();
        javax.servlet.ServletConfig servletConfig11 = batchAddCandidatesServlet8.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet12 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str13 = batchDeleteCandidatesServlet12.getServletInfo();
        java.lang.String str14 = batchDeleteCandidatesServlet12.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet15 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet16 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet17);
        setPreferenceServlet15.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet17);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet20 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet15.init((javax.servlet.ServletConfig) recommendServlet20);
        batchDeleteCandidatesServlet12.init((javax.servlet.ServletConfig) setPreferenceServlet15);
        batchAddCandidatesServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        batchDeleteCandidatesServlet12.destroy();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet26 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet26.init();
        batchDeleteCandidatesServlet12.init((javax.servlet.ServletConfig) setPreferenceServlet26);
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(servletConfig11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test29688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29688");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 10);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) 35);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer13 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double16 = fixedCandidatesIDRescorer1.rescore(10L, 0.0d);
        double double19 = fixedCandidatesIDRescorer1.rescore((long) '#', 35.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer20 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double23 = fixedCandidatesIDRescorer1.rescore((long) 1, 100.0d);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 100.0d + "'", double23 == 100.0d);
    }

    @Test
    public void test29689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29689");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setName("");
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((-1));
        int int10 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 10000.0f);
        factorizationbasedRecommenderConfig0.setAlpha(10.0d);
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test29690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29690");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 100L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        long long5 = mutablePreference0.getUserID();
        float float6 = mutablePreference0.getValue();
        java.lang.String str7 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 100.0f + "'", float6 == 100.0f);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=100.0}");
    }

    @Test
    public void test29691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29691");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage9 = components0.storage();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(storage9);
    }

    @Test
    public void test29692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29692");
        org.plista.kornakapi.web.MissingParameterException missingParameterException3 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException4 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException3);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException4);
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException10);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException10);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs", (java.lang.Throwable) invalidParameterException12);
        invalidParameterException4.addSuppressed((java.lang.Throwable) invalidParameterException12);
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        invalidParameterException12.addSuppressed((java.lang.Throwable) missingParameterException16);
    }

    @Test
    public void test29693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29693");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(1);
        int int10 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: label");
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (short) 0);
        java.lang.String str15 = itembasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test29694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29694");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        boolean boolean9 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double12 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        factorizationbasedRecommenderConfig6.setRetrainCronExpression("value");
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig6);
        int int17 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setAlpha((double) 52L);
        factorizationbasedRecommenderConfig6.setNumberOfIterations((int) (short) 1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test29695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29695");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet13 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str14 = trainServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet15 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet15.destroy();
        javax.servlet.ServletConfig servletConfig17 = deleteCandidateServlet15.getServletConfig();
        deleteCandidateServlet15.destroy();
        trainServlet13.init((javax.servlet.ServletConfig) deleteCandidateServlet15);
        java.lang.String str20 = trainServlet13.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) trainServlet13);
        batchDeleteCandidatesServlet0.init();
        java.lang.String str23 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        java.lang.Throwable throwable29 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet0.log("", throwable29);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test29696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29696");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str3 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig0.setSimilarityClass("");
        int int8 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        int int10 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test29697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29697");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
        configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
        configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig34 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str35 = itembasedRecommenderConfig34.getRetrainCronExpression();
        int int36 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
        int int37 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
        configuration5.addItembasedRecommender(itembasedRecommenderConfig34);
        int int39 = configuration5.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components40 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration41 = components40.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList42 = configuration41.getItembasedRecommenders();
        java.lang.String str43 = configuration41.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration44 = configuration41.getStorageConfiguration();
        configuration41.setNumProcessorsForTraining((int) '#');
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration47 = configuration41.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration48 = new org.plista.kornakapi.core.config.Configuration();
        configuration48.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig51 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double52 = factorizationbasedRecommenderConfig51.getAlpha();
        double double53 = factorizationbasedRecommenderConfig51.getLambda();
        configuration48.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig51);
        java.lang.String str55 = configuration48.getModelDirectory();
        int int56 = configuration48.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList57 = configuration48.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList58 = configuration48.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration59 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str60 = storageConfiguration59.getJdbcDriverClass();
        storageConfiguration59.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str63 = storageConfiguration59.getJdbcUrl();
        java.lang.String str64 = storageConfiguration59.getJdbcUrl();
        java.lang.String str65 = storageConfiguration59.getJdbcUrl();
        storageConfiguration59.setUsername("recommender");
        java.lang.String str68 = storageConfiguration59.getJdbcDriverClass();
        configuration48.setStorageConfiguration(storageConfiguration59);
        configuration41.setStorageConfiguration(storageConfiguration59);
        configuration5.setStorageConfiguration(storageConfiguration59);
        java.lang.String str72 = storageConfiguration59.getUsername();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(components16);
        org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
        org.junit.Assert.assertNotNull(configuration20);
        org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int39 + "' != '" + 32 + "'", int39 == 32);
        org.junit.Assert.assertNotNull(components40);
        org.junit.Assert.assertNotNull(configuration41);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList42);
// flaky:         org.junit.Assert.assertEquals("'" + str43 + "' != '" + "itemID" + "'", str43, "itemID");
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration44);
// flaky:         org.junit.Assert.assertNotNull(storageConfiguration47);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList57);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "recommender" + "'", str72, "recommender");
    }

    @Test
    public void test29698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29698");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = configuration1.getFactorizationbasedRecommenders();
        configuration1.setNumProcessorsForTraining(0);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = configuration1.getStorageConfiguration();
        int int6 = configuration1.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = configuration1.getItembasedRecommenders();
        java.lang.String str8 = configuration1.getModelDirectory();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
        org.junit.Assert.assertNotNull(storageConfiguration5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
// flaky:         org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
    }

    @Test
    public void test29699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29699");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) 10000);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair11 = null;
        double double13 = filteringLongPairRescorer10.rescore(longPair11, 0.0d);
        org.apache.mahout.common.LongPair longPair14 = null;
        double double16 = filteringLongPairRescorer10.rescore(longPair14, (double) 1.0f);
        org.apache.mahout.common.LongPair longPair17 = null;
        double double19 = filteringLongPairRescorer10.rescore(longPair17, 0.0d);
        org.apache.mahout.common.LongPair longPair20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = filteringLongPairRescorer10.isFiltered(longPair20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10000.0d + "'", double9 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 1.0d + "'", double16 == 1.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
    }

    @Test
    public void test29700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29700");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) (short) 0);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (short) 10);
        double double12 = fixedCandidatesIDRescorer1.rescore(10000L, (double) (byte) 0);
        double double15 = fixedCandidatesIDRescorer1.rescore(1L, 10000.0d);
        double double18 = fixedCandidatesIDRescorer1.rescore(100L, (double) 0);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = fixedCandidatesIDRescorer1.isFiltered(1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10000.0d + "'", double15 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test29701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29701");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str3 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet4.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchAddCandidatesServlet4);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str9 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet11 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet11);
        addCandidateServlet11.init();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test29702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29702");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.lang.String str9 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration10.getJdbcUrl();
        java.lang.String str15 = storageConfiguration10.getJdbcUrl();
        storageConfiguration10.setPassword("MutablePreference{userID=0, itemID=0, value=1.0}");
        configuration0.setStorageConfiguration(storageConfiguration10);
        storageConfiguration10.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration10.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: batchSize");
        java.lang.String str23 = storageConfiguration10.getUsername();
        storageConfiguration10.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
        storageConfiguration10.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str28 = storageConfiguration10.getPassword();
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str23, "org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str28, "MutablePreference{userID=0, itemID=0, value=1.0}");
    }

    @Test
    public void test29703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29703");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int7 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        boolean boolean11 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test29704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29704");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        configuration1.setNumProcessorsForTraining((int) (byte) 1);
        int int4 = configuration1.getNumProcessorsForTraining();
        java.lang.String str5 = configuration1.getModelDirectory();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
// flaky:         org.junit.Assert.assertEquals("'" + str5 + "' != '" + "itemID" + "'", str5, "itemID");
    }

    @Test
    public void test29705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29705");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(32);
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test29706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29706");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getLambda();
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        boolean boolean7 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test29707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29707");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double9 = factorizationbasedRecommenderConfig0.getAlpha();
        double double10 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setLambda(52.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
    }

    @Test
    public void test29708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29708");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        java.lang.String str8 = mutablePreference0.toString();
        float float9 = mutablePreference0.getValue();
        float float10 = mutablePreference0.getValue();
        mutablePreference0.set((long) 0, (long) (byte) 0, (float) (byte) 0);
        long long15 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str8, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 0.0f + "'", float9 == 0.0f);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.0f + "'", float10 == 0.0f);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test29709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29709");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration12 = components0.getConfiguration();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(trainingScheduler11);
        org.junit.Assert.assertNotNull(configuration12);
    }

    @Test
    public void test29710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29710");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = configuration7.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = new org.plista.kornakapi.core.config.Configuration();
        int int10 = configuration9.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration9.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig12.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig12);
        itembasedRecommenderConfig12.setRetrainCronExpression("");
        itembasedRecommenderConfig12.setSimilarItemsPerItem(10);
        java.lang.String str20 = itembasedRecommenderConfig12.getName();
        java.lang.String str21 = itembasedRecommenderConfig12.getName();
        int int22 = itembasedRecommenderConfig12.getSimilarItemsPerItem();
        configuration9.addItembasedRecommender(itembasedRecommenderConfig12);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList24 = configuration9.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig25 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig25.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer28 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig25);
        itembasedRecommenderConfig25.setRetrainCronExpression("");
        itembasedRecommenderConfig25.setName("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        itembasedRecommenderConfig25.setSimilarItemsPerItem((int) (byte) 100);
        java.lang.String str35 = itembasedRecommenderConfig25.getRetrainCronExpression();
        int int36 = itembasedRecommenderConfig25.getSimilarItemsPerItem();
        configuration9.addItembasedRecommender(itembasedRecommenderConfig25);
        itembasedRecommenderConfig25.setRetrainCronExpression("MutablePreference{userID=0, itemID=0, value=35.0}");
        itembasedRecommenderConfig25.setRetrainAfterPreferenceChanges((int) (short) 1);
        configuration7.addItembasedRecommender(itembasedRecommenderConfig25);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(storageConfiguration8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10 + "'", int22 == 10);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList24);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 100 + "'", int36 == 100);
    }

    @Test
    public void test29711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29711");
        org.plista.kornakapi.web.MissingParameterException missingParameterException2 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException3 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) missingParameterException2);
        java.lang.Throwable[] throwableArray4 = missingParameterException2.getSuppressed();
        java.lang.Throwable[] throwableArray5 = missingParameterException2.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test29712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29712");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setLambda((double) 10.0f);
        double double14 = factorizationbasedRecommenderConfig0.getLambda();
        int int15 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double16 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 10.0d + "'", double14 == 10.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 10.0d + "'", double16 == 10.0d);
    }

    @Test
    public void test29713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29713");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        float float8 = mutablePreference0.getValue();
        long long9 = mutablePreference0.getItemID();
        float float10 = mutablePreference0.getValue();
        mutablePreference0.set((long) 52, 10000L, (float) 35);
        mutablePreference0.setValue((float) 1);
        long long17 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) '#');
        float float20 = mutablePreference0.getValue();
        mutablePreference0.set(32L, (long) '#', (float) (short) 0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float8 + "' != '" + 0.0f + "'", float8 == 0.0f);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + float10 + "' != '" + 0.0f + "'", float10 == 0.0f);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 52L + "'", long17 == 52L);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 35.0f + "'", float20 == 35.0f);
    }

    @Test
    public void test29714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29714");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig9 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str10 = itembasedRecommenderConfig9.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig9);
        java.lang.String str12 = itembasedRecommenderConfig9.getSimilarityClass();
        java.lang.String str13 = itembasedRecommenderConfig9.getSimilarityClass();
        configuration8.addItembasedRecommender(itembasedRecommenderConfig9);
        int int15 = configuration8.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = configuration8.getStorageConfiguration();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(storageConfiguration16);
    }

    @Test
    public void test29715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29715");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        int int10 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setAlpha((double) '4');
        factorizationbasedRecommenderConfig0.setLambda((double) (short) 1);
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int17 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double18 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 52.0d + "'", double18 == 52.0d);
    }

    @Test
    public void test29716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29716");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        int int7 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean11 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setAlpha((double) 35L);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test29717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29717");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNull(trainingScheduler6);
    }

    @Test
    public void test29718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29718");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        configuration4.setNumProcessorsForTraining(0);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration7.getPassword();
        java.lang.String str17 = storageConfiguration7.getJdbcUrl();
        storageConfiguration7.setUsername("org.plista.kornakapi.web.InvalidParameterException: label");
        configuration4.setStorageConfiguration(storageConfiguration7);
        int int21 = configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration22 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str23 = storageConfiguration22.getJdbcDriverClass();
        storageConfiguration22.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str26 = storageConfiguration22.getJdbcUrl();
        java.lang.String str27 = storageConfiguration22.getJdbcDriverClass();
        storageConfiguration22.setJdbcDriverClass("batchSize");
        java.lang.String str30 = storageConfiguration22.getPassword();
        storageConfiguration22.setUsername("batchSize");
        java.lang.String str33 = storageConfiguration22.getJdbcUrl();
        storageConfiguration22.setUsername("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration22.setPassword("batchSize");
        storageConfiguration22.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=35.0}");
        configuration4.setStorageConfiguration(storageConfiguration22);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration41 = configuration4.getStorageConfiguration();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(storageConfiguration41);
    }

    @Test
    public void test29719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29719");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet0.init();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletConfig servletConfig4 = setPreferenceServlet0.getServletConfig();
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        java.lang.String str6 = setPreferenceServlet0.getServletInfo();
        java.lang.String str7 = setPreferenceServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig8 = null;
        setPreferenceServlet0.init(servletConfig8);
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
    }

    @Test
    public void test29720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29720");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        java.lang.String str6 = mutablePreference0.toString();
        mutablePreference0.setValue((float) 1);
        long long9 = mutablePreference0.getUserID();
        long long10 = mutablePreference0.getUserID();
        long long11 = mutablePreference0.getUserID();
        mutablePreference0.set((long) (short) 100, 0L, 97.0f);
        long long16 = mutablePreference0.getUserID();
        float float17 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) 52L);
        long long20 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str6, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 100L + "'", long16 == 100L);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 97.0f + "'", float17 == 97.0f);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test29721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29721");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        configuration0.setModelDirectory("");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig8 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double9 = factorizationbasedRecommenderConfig8.getAlpha();
        factorizationbasedRecommenderConfig8.setLambda((double) (-1));
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig8);
        org.plista.kornakapi.web.Components components13 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = components13.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration15 = components13.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = components13.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler17 = components13.scheduler();
        org.plista.kornakapi.core.storage.Storage storage18 = components13.storage();
        org.plista.kornakapi.core.config.Configuration configuration19 = components13.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig20 = null;
        configuration19.addItembasedRecommender(itembasedRecommenderConfig20);
        configuration19.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration24 = configuration19.getStorageConfiguration();
        configuration0.setStorageConfiguration(storageConfiguration24);
        configuration0.setNumProcessorsForTraining((int) '#');
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList28 = configuration0.getItembasedRecommenders();
        configuration0.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=100.0}");
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(storageConfiguration7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(components13);
        org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNull(trainingScheduler16);
        org.junit.Assert.assertNull(trainingScheduler17);
        org.junit.Assert.assertNull(storage18);
        org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertNotNull(storageConfiguration24);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList28);
    }

    @Test
    public void test29722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29722");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        java.lang.String str2 = mutablePreference0.toString();
        float float3 = mutablePreference0.getValue();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        float float6 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) '4');
        float float9 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) (byte) -1);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str2, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 0.0f + "'", float3 == 0.0f);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.0f + "'", float6 == 0.0f);
        org.junit.Assert.assertTrue("'" + float9 + "' != '" + 52.0f + "'", float9 == 52.0f);
    }

    @Test
    public void test29723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29723");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        java.lang.String str6 = setPreferenceServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig7 = setPreferenceServlet0.getServletConfig();
        setPreferenceServlet0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            setPreferenceServlet0.log("MutablePreference{userID=32, itemID=32, value=97.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(servletConfig7);
    }

    @Test
    public void test29724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29724");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 10);
        java.lang.String str10 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        double double12 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test29725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29725");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        configuration7.setModelDirectory("file");
        configuration7.setModelDirectory("");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = configuration7.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        int int15 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        boolean boolean16 = factorizationbasedRecommenderConfig13.isUsesImplicitFeedback();
        int int17 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        factorizationbasedRecommenderConfig13.setAlpha((double) (byte) 100);
        configuration7.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(storageConfiguration12);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test29726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29726");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        batchDeleteCandidatesServlet14.destroy();
        javax.servlet.ServletConfig servletConfig17 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init(servletConfig17);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet19 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str20 = batchDeleteCandidatesServlet19.getServletInfo();
        java.lang.String str21 = batchDeleteCandidatesServlet19.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet22 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet23 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet24 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet23.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet24);
        setPreferenceServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet24);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet27 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet22.init((javax.servlet.ServletConfig) recommendServlet27);
        batchDeleteCandidatesServlet19.init((javax.servlet.ServletConfig) setPreferenceServlet22);
        batchDeleteCandidatesServlet19.destroy();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet31 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str32 = trainServlet31.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet33 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet33.destroy();
        javax.servlet.ServletConfig servletConfig35 = deleteCandidateServlet33.getServletConfig();
        deleteCandidateServlet33.destroy();
        trainServlet31.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        javax.servlet.ServletConfig servletConfig38 = deleteCandidateServlet33.getServletConfig();
        batchDeleteCandidatesServlet19.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        deleteCandidateServlet33.init();
        javax.servlet.ServletConfig servletConfig41 = deleteCandidateServlet33.getServletConfig();
        deleteCandidateServlet33.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        javax.servlet.ServletConfig servletConfig44 = deleteCandidateServlet33.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet45 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet46 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str47 = batchDeleteCandidatesServlet46.getServletInfo();
        java.lang.String str48 = batchDeleteCandidatesServlet46.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet49 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet50 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet51 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet50.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet51);
        setPreferenceServlet49.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet51);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet54 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet49.init((javax.servlet.ServletConfig) recommendServlet54);
        batchDeleteCandidatesServlet46.init((javax.servlet.ServletConfig) setPreferenceServlet49);
        batchDeleteCandidatesServlet46.destroy();
        batchDeleteCandidatesServlet45.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet46);
        java.lang.String str59 = batchDeleteCandidatesServlet45.getServletInfo();
        javax.servlet.ServletConfig servletConfig60 = batchDeleteCandidatesServlet45.getServletConfig();
        javax.servlet.ServletConfig servletConfig61 = batchDeleteCandidatesServlet45.getServletConfig();
        deleteCandidateServlet33.init(servletConfig61);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet63 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet64 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet63.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet64);
        recommendServlet63.destroy();
        javax.servlet.ServletConfig servletConfig67 = recommendServlet63.getServletConfig();
        recommendServlet63.destroy();
        deleteCandidateServlet33.init((javax.servlet.ServletConfig) recommendServlet63);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(servletConfig35);
        org.junit.Assert.assertNull(servletConfig38);
        org.junit.Assert.assertNull(servletConfig41);
        org.junit.Assert.assertNull(servletConfig44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNotNull(servletConfig60);
        org.junit.Assert.assertNotNull(servletConfig61);
        org.junit.Assert.assertNotNull(servletConfig67);
    }

    @Test
    public void test29727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29727");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=-1, itemID=10, value=10.0}", (long) ' ');
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("file", (-1L));
        long long17 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=-1, value=100.0}", (long) 52);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemID" + "'", str9, "itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str13, "MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + (-1L) + "'", long17 == (-1L));
    }

    @Test
    public void test29728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29728");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        org.plista.kornakapi.web.Components components15 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration16 = components15.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration17 = components15.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = components15.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = components15.scheduler();
        org.plista.kornakapi.core.storage.Storage storage20 = components15.storage();
        org.plista.kornakapi.core.config.Configuration configuration21 = components15.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener22 = components15.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener23 = components15.preferenceChangeListener();
        delegatingPreferenceChangeListener9.addDelegate(preferenceChangeListener23);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener31 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener29.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener31);
        delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener36 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener38 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener31.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener45 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener47 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener47.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener45.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener47);
        delegatingPreferenceChangeListener31.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener47);
        delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components54 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration55 = components54.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler56 = components54.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler57 = components54.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration58 = components54.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage59 = components54.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener60 = components54.preferenceChangeListener();
        delegatingPreferenceChangeListener31.addDelegate(preferenceChangeListener60);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener31);
// flaky:         delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
        org.junit.Assert.assertNotNull(components15);
        org.junit.Assert.assertNotNull(configuration16);
        org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
        org.junit.Assert.assertNull(storage20);
        org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNotNull(preferenceChangeListener22);
        org.junit.Assert.assertNotNull(preferenceChangeListener23);
        org.junit.Assert.assertNotNull(components54);
        org.junit.Assert.assertNotNull(configuration55);
        org.junit.Assert.assertNull(trainingScheduler56);
        org.junit.Assert.assertNull(trainingScheduler57);
        org.junit.Assert.assertNotNull(configuration58);
        org.junit.Assert.assertNull(storage59);
        org.junit.Assert.assertNotNull(preferenceChangeListener60);
    }

    @Test
    public void test29729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29729");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        mutablePreference0.setValue((float) 35);
        long long10 = mutablePreference0.getItemID();
        long long11 = mutablePreference0.getUserID();
        java.lang.String str12 = mutablePreference0.toString();
        long long13 = mutablePreference0.getItemID();
        java.lang.String str14 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=100, itemID=0, value=35.0}" + "'", str12, "MutablePreference{userID=100, itemID=0, value=35.0}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=100, itemID=0, value=35.0}" + "'", str14, "MutablePreference{userID=100, itemID=0, value=35.0}");
    }

    @Test
    public void test29730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29730");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        int int3 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) 'a');
        org.plista.kornakapi.core.config.Configuration configuration6 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = configuration6.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = configuration6.getStorageConfiguration();
        configuration6.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList11 = configuration6.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig12.setSimilarityClass("");
        java.lang.String str15 = itembasedRecommenderConfig12.getName();
        java.lang.String str16 = itembasedRecommenderConfig12.getSimilarityClass();
        java.lang.String str17 = itembasedRecommenderConfig12.getSimilarityClass();
        int int18 = itembasedRecommenderConfig12.getSimilarItemsPerItem();
        itembasedRecommenderConfig12.setSimilarItemsPerItem((int) (byte) 1);
        java.lang.String str21 = itembasedRecommenderConfig12.getRetrainCronExpression();
        configuration6.addItembasedRecommender(itembasedRecommenderConfig12);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer23 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig12);
        java.lang.String str24 = itembasedRecommenderConfig12.getRetrainCronExpression();
        int int25 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig12);
        java.lang.String str27 = itembasedRecommenderConfig12.getName();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
        org.junit.Assert.assertNull(storageConfiguration8);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test29731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29731");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration1.getItembasedRecommenders();
        java.lang.String str3 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = configuration1.getStorageConfiguration();
        configuration1.setNumProcessorsForTraining((int) '#');
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration1.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = new org.plista.kornakapi.core.config.Configuration();
        configuration8.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig11 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double12 = factorizationbasedRecommenderConfig11.getAlpha();
        double double13 = factorizationbasedRecommenderConfig11.getLambda();
        configuration8.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig11);
        java.lang.String str15 = configuration8.getModelDirectory();
        int int16 = configuration8.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList17 = configuration8.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList18 = configuration8.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str20 = storageConfiguration19.getJdbcDriverClass();
        storageConfiguration19.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str23 = storageConfiguration19.getJdbcUrl();
        java.lang.String str24 = storageConfiguration19.getJdbcUrl();
        java.lang.String str25 = storageConfiguration19.getJdbcUrl();
        storageConfiguration19.setUsername("recommender");
        java.lang.String str28 = storageConfiguration19.getJdbcDriverClass();
        configuration8.setStorageConfiguration(storageConfiguration19);
        configuration1.setStorageConfiguration(storageConfiguration19);
        java.lang.String str31 = storageConfiguration19.getUsername();
        java.lang.String str32 = storageConfiguration19.getJdbcUrl();
        java.lang.String str33 = storageConfiguration19.getPassword();
        storageConfiguration19.setJdbcDriverClass("");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertNotNull(storageConfiguration4);
        org.junit.Assert.assertNotNull(storageConfiguration7);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList17);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "recommender" + "'", str31, "recommender");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test29732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29732");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        java.lang.String str16 = batchDeleteCandidatesServlet14.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet17 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet19 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        setPreferenceServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet17.init((javax.servlet.ServletConfig) recommendServlet22);
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) setPreferenceServlet17);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet25 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet27 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet26.init((javax.servlet.ServletConfig) batchSetPreferencesServlet27);
        javax.servlet.ServletConfig servletConfig29 = batchSetPreferencesServlet26.getServletConfig();
        addCandidateServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig31 = addCandidateServlet25.getServletConfig();
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) addCandidateServlet25);
        javax.servlet.ServletConfig servletConfig33 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet14);
        javax.servlet.ServletConfig servletConfig35 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet14.init();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet37 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet37.init();
        java.lang.String str39 = deleteCandidateServlet37.getServletInfo();
        deleteCandidateServlet37.init();
        javax.servlet.ServletConfig servletConfig41 = deleteCandidateServlet37.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet42 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet43 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet44 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet43.init((javax.servlet.ServletConfig) batchSetPreferencesServlet44);
        javax.servlet.ServletConfig servletConfig46 = batchSetPreferencesServlet43.getServletConfig();
        addCandidateServlet42.init((javax.servlet.ServletConfig) batchSetPreferencesServlet43);
        javax.servlet.ServletConfig servletConfig48 = addCandidateServlet42.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet49 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet50 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet51 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet50.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet51);
        setPreferenceServlet49.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet51);
        javax.servlet.ServletConfig servletConfig54 = setPreferenceServlet49.getServletConfig();
        addCandidateServlet42.init((javax.servlet.ServletConfig) setPreferenceServlet49);
        deleteCandidateServlet37.init((javax.servlet.ServletConfig) addCandidateServlet42);
        deleteCandidateServlet37.destroy();
        deleteCandidateServlet37.init();
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) deleteCandidateServlet37);
        org.plista.kornakapi.web.MissingParameterException missingParameterException66 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException67 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException66);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException68 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException66);
        java.lang.Throwable[] throwableArray69 = missingParameterException66.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException70 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException66);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException71 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) invalidParameterException70);
        org.plista.kornakapi.web.MissingParameterException missingParameterException77 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException78 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException77);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException79 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException77);
        java.lang.Throwable[] throwableArray80 = missingParameterException77.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException81 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException77);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException82 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) invalidParameterException81);
        java.lang.Throwable[] throwableArray83 = invalidParameterException82.getSuppressed();
        java.lang.Throwable[] throwableArray84 = invalidParameterException82.getSuppressed();
        invalidParameterException70.addSuppressed((java.lang.Throwable) invalidParameterException82);
        // The following exception was thrown during execution in test generation
        try {
            deleteCandidateServlet37.log("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=10, itemID=10000, value=100.0}", (java.lang.Throwable) invalidParameterException70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(servletConfig29);
        org.junit.Assert.assertNotNull(servletConfig31);
        org.junit.Assert.assertNotNull(servletConfig33);
        org.junit.Assert.assertNotNull(servletConfig35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(servletConfig41);
        org.junit.Assert.assertNotNull(servletConfig46);
        org.junit.Assert.assertNotNull(servletConfig48);
        org.junit.Assert.assertNotNull(servletConfig54);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(throwableArray84);
    }

    @Test
    public void test29733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29733");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = configuration1.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration1.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcUrl();
        java.lang.String str10 = storageConfiguration4.getJdbcUrl();
        configuration1.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str13 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str16 = storageConfiguration12.getPassword();
        java.lang.String str17 = storageConfiguration12.getJdbcDriverClass();
        storageConfiguration12.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str20 = storageConfiguration12.getJdbcUrl();
        java.lang.String str21 = storageConfiguration12.getUsername();
        java.lang.String str22 = storageConfiguration12.getJdbcDriverClass();
        java.lang.String str23 = storageConfiguration12.getJdbcUrl();
        java.lang.String str24 = storageConfiguration12.getUsername();
        configuration1.setStorageConfiguration(storageConfiguration12);
        configuration1.setNumProcessorsForTraining((int) (byte) 10);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
        org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str21, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str24, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test29734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29734");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        long long5 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID", 35L);
        java.lang.String str9 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: howMany", (long) '4');
        java.lang.String str13 = mutableCandidate0.getLabel();
        java.lang.String str14 = mutableCandidate0.getLabel();
        long long15 = mutableCandidate0.getItemID();
        long long16 = mutableCandidate0.getItemID();
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}", 35L);
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID", (long) (byte) 100);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str9, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: howMany" + "'", str13, "org.plista.kornakapi.web.InvalidParameterException: howMany");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: howMany" + "'", str14, "org.plista.kornakapi.web.InvalidParameterException: howMany");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 52L + "'", long15 == 52L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 52L + "'", long16 == 52L);
    }

    @Test
    public void test29735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29735");
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.config.Configuration configuration1 = org.plista.kornakapi.core.config.Configuration.fromXML("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
            org.junit.Assert.fail("Expected exception of type com.thoughtworks.xstream.io.StreamException; message:  : only whitespace content allowed before start tag and not o (position: START_DOCUMENT seen o... @1:1) ");
        } catch (com.thoughtworks.xstream.io.StreamException e) {
            // Expected exception.
        }
    }

    @Test
    public void test29736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29736");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 1);
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getName();
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test29737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29737");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration1.getItembasedRecommenders();
        java.lang.String str3 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = configuration1.getStorageConfiguration();
        configuration1.setNumProcessorsForTraining((int) '#');
        configuration1.setModelDirectory("value");
        org.plista.kornakapi.web.Components components9 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration10 = components9.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = components9.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = components9.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration13 = components9.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = configuration13.getStorageConfiguration();
        int int15 = configuration13.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        int int19 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        factorizationbasedRecommenderConfig16.setUsesImplicitFeedback(true);
        double double22 = factorizationbasedRecommenderConfig16.getAlpha();
        java.lang.String str23 = factorizationbasedRecommenderConfig16.getRetrainCronExpression();
        int int24 = factorizationbasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        boolean boolean25 = factorizationbasedRecommenderConfig16.isUsesImplicitFeedback();
        int int26 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        double double27 = factorizationbasedRecommenderConfig16.getLambda();
        factorizationbasedRecommenderConfig16.setAlpha(52.0d);
        java.lang.String str30 = factorizationbasedRecommenderConfig16.getName();
        configuration13.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        boolean boolean32 = factorizationbasedRecommenderConfig16.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer33 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig16);
        factorizationbasedRecommenderConfig16.setNumberOfFeatures(0);
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        org.plista.kornakapi.core.config.Configuration configuration37 = new org.plista.kornakapi.core.config.Configuration();
        int int38 = configuration37.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration39 = configuration37.getStorageConfiguration();
        configuration37.setNumProcessorsForTraining(0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList42 = configuration37.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration43 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str44 = storageConfiguration43.getJdbcDriverClass();
        storageConfiguration43.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str47 = storageConfiguration43.getPassword();
        java.lang.String str48 = storageConfiguration43.getJdbcDriverClass();
        storageConfiguration43.setUsername("hi!");
        storageConfiguration43.setJdbcDriverClass("file");
        configuration37.setStorageConfiguration(storageConfiguration43);
        java.lang.String str54 = storageConfiguration43.getJdbcUrl();
        storageConfiguration43.setJdbcDriverClass("MutablePreference{userID=100, itemID=0, value=1.0}");
        storageConfiguration43.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: userID");
        configuration1.setStorageConfiguration(storageConfiguration43);
        java.lang.String str60 = storageConfiguration43.getUsername();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertNotNull(storageConfiguration4);
        org.junit.Assert.assertNotNull(components9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(trainingScheduler12);
        org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertNotNull(storageConfiguration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 35 + "'", int15 == 35);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(storageConfiguration39);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
    }

    @Test
    public void test29738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29738");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        java.lang.String str3 = configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setJdbcDriverClass("batchSize");
        java.lang.String str12 = storageConfiguration4.getPassword();
        java.lang.String str13 = storageConfiguration4.getJdbcUrl();
        configuration2.setStorageConfiguration(storageConfiguration4);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig17 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double18 = factorizationbasedRecommenderConfig17.getAlpha();
        double double19 = factorizationbasedRecommenderConfig17.getLambda();
        int int20 = factorizationbasedRecommenderConfig17.getNumberOfFeatures();
        factorizationbasedRecommenderConfig17.setUsesImplicitFeedback(true);
        double double23 = factorizationbasedRecommenderConfig17.getAlpha();
        java.lang.String str24 = factorizationbasedRecommenderConfig17.getRetrainCronExpression();
        int int25 = factorizationbasedRecommenderConfig17.getRetrainAfterPreferenceChanges();
        configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig17);
        configuration2.setModelDirectory("MutablePreference{userID=100, itemID=-1, value=100.0}");
        configuration2.setNumProcessorsForTraining((int) ' ');
        org.plista.kornakapi.web.Components components31 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration32 = components31.getConfiguration();
        int int33 = configuration32.getNumProcessorsForTraining();
        int int34 = configuration32.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration35 = configuration32.getStorageConfiguration();
        storageConfiguration35.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
        storageConfiguration35.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
        configuration2.setStorageConfiguration(storageConfiguration35);
        org.plista.kornakapi.web.Components components41 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration42 = components41.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration43 = components41.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration44 = components41.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration45 = configuration44.getStorageConfiguration();
        storageConfiguration45.setUsername("MutablePreference{userID=100, itemID=0, value=10.0}");
        configuration2.setStorageConfiguration(storageConfiguration45);
        storageConfiguration45.setPassword("MutablePreference{userID=-1, itemID=-1, value=0.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "value" + "'", str3, "value");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(storageConfiguration15);
        org.junit.Assert.assertNotNull(storageConfiguration16);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(components31);
        org.junit.Assert.assertNotNull(configuration32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 32 + "'", int33 == 32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
        org.junit.Assert.assertNotNull(storageConfiguration35);
        org.junit.Assert.assertNotNull(components41);
        org.junit.Assert.assertNotNull(configuration42);
        org.junit.Assert.assertNotNull(configuration43);
        org.junit.Assert.assertNotNull(configuration44);
        org.junit.Assert.assertNotNull(storageConfiguration45);
    }

    @Test
    public void test29739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29739");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener8 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener11 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener13 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener13.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener11.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener13);
        delegatingPreferenceChangeListener8.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener11);
        delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components18 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration19 = components18.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration20 = components18.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler21 = components18.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler22 = components18.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener23 = components18.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration24 = components18.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener25 = components18.preferenceChangeListener();
        delegatingPreferenceChangeListener11.addDelegate(preferenceChangeListener25);
// flaky:         delegatingPreferenceChangeListener11.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener28 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener30 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener30.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener28.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener30);
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener34 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener34.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener36 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener34.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener36);
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener28.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener36);
        delegatingPreferenceChangeListener11.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener28);
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components43 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener44 = components43.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage45 = components43.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler46 = components43.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener47 = components43.preferenceChangeListener();
        delegatingPreferenceChangeListener28.addDelegate(preferenceChangeListener47);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler49 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener52 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler49, "MutablePreference{userID=0, itemID=0, value=1.0}", 52);
        inMemoryPreferenceChangeListener52.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener28.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener52);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener52);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener56 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener58 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener58.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener58.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener56.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener58);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler62 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener65 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler62, "", (int) 'a');
        delegatingPreferenceChangeListener58.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener65);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener58);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.junit.Assert.assertNotNull(components18);
        org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertNotNull(configuration20);
        org.junit.Assert.assertNull(trainingScheduler21);
        org.junit.Assert.assertNull(trainingScheduler22);
        org.junit.Assert.assertNotNull(preferenceChangeListener23);
        org.junit.Assert.assertNotNull(configuration24);
        org.junit.Assert.assertNotNull(preferenceChangeListener25);
        org.junit.Assert.assertNotNull(components43);
        org.junit.Assert.assertNotNull(preferenceChangeListener44);
        org.junit.Assert.assertNull(storage45);
        org.junit.Assert.assertNull(trainingScheduler46);
        org.junit.Assert.assertNotNull(preferenceChangeListener47);
    }

    @Test
    public void test29740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29740");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer2 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) '#');
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        double double10 = factorizationbasedRecommenderConfig0.getAlpha();
        int int11 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test29741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29741");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double11 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: label");
        int int14 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test29742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29742");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
        configuration1.setStorageConfiguration(storageConfiguration2);
        java.lang.String str11 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration12 = configuration1.getStorageConfiguration();
        int int13 = configuration1.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str15 = itembasedRecommenderConfig14.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig14);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig14);
        itembasedRecommenderConfig14.setSimilarItemsPerItem((int) '#');
        configuration1.addItembasedRecommender(itembasedRecommenderConfig14);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=100.0}" + "'", str11, "MutablePreference{userID=100, itemID=-1, value=100.0}");
        org.junit.Assert.assertNotNull(storageConfiguration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test29743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29743");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getSimilarityClass();
        java.lang.String str9 = itembasedRecommenderConfig7.getSimilarityClass();
        int int10 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        configuration6.addItembasedRecommender(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setSimilarItemsPerItem((int) '4');
        java.lang.String str14 = itembasedRecommenderConfig7.getSimilarityClass();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test29744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29744");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        configuration2.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getUsername();
        configuration2.setStorageConfiguration(storageConfiguration7);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration2.getItembasedRecommenders();
        int int11 = configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str13 = itembasedRecommenderConfig12.getSimilarityClass();
        int int14 = itembasedRecommenderConfig12.getSimilarItemsPerItem();
        int int15 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        int int16 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        configuration2.addItembasedRecommender(itembasedRecommenderConfig12);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration18 = configuration2.getStorageConfiguration();
        java.lang.String str19 = configuration2.getModelDirectory();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(storageConfiguration18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "itemID" + "'", str19, "itemID");
    }

    @Test
    public void test29745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29745");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException7);
        java.lang.Throwable[] throwableArray10 = missingParameterException7.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) invalidParameterException11);
        java.lang.Throwable[] throwableArray13 = invalidParameterException11.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException14 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=-1, value=1.0}", (java.lang.Throwable) invalidParameterException11);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=10, value=10.0}", (java.lang.Throwable) invalidParameterException11);
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException20);
        org.plista.kornakapi.web.MissingParameterException missingParameterException27 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException28 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException27);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException27);
        java.lang.Throwable[] throwableArray30 = missingParameterException27.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException27);
        invalidParameterException22.addSuppressed((java.lang.Throwable) invalidParameterException31);
        org.plista.kornakapi.web.MissingParameterException missingParameterException36 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException37 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException36);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException38 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException36);
        java.lang.Throwable[] throwableArray39 = invalidParameterException38.getSuppressed();
        invalidParameterException31.addSuppressed((java.lang.Throwable) invalidParameterException38);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException41 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException38);
        java.lang.Throwable[] throwableArray42 = invalidParameterException38.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException44 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        java.lang.Throwable[] throwableArray45 = missingParameterException44.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException51 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException52 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException51);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException53 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException51);
        org.plista.kornakapi.web.MissingParameterException missingParameterException55 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException57 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException55.addSuppressed((java.lang.Throwable) missingParameterException57);
        invalidParameterException53.addSuppressed((java.lang.Throwable) missingParameterException57);
        org.plista.kornakapi.web.MissingParameterException missingParameterException63 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException64 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException63);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException65 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException63);
        org.plista.kornakapi.web.MissingParameterException missingParameterException67 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException69 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException67.addSuppressed((java.lang.Throwable) missingParameterException69);
        invalidParameterException65.addSuppressed((java.lang.Throwable) missingParameterException69);
        missingParameterException57.addSuppressed((java.lang.Throwable) missingParameterException69);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException73 = new org.plista.kornakapi.web.InvalidParameterException("userID", (java.lang.Throwable) missingParameterException69);
        java.lang.Throwable[] throwableArray74 = missingParameterException69.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException75 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs", (java.lang.Throwable) missingParameterException69);
        missingParameterException44.addSuppressed((java.lang.Throwable) missingParameterException69);
        invalidParameterException38.addSuppressed((java.lang.Throwable) missingParameterException69);
        java.lang.Throwable[] throwableArray78 = invalidParameterException38.getSuppressed();
        invalidParameterException15.addSuppressed((java.lang.Throwable) invalidParameterException38);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray74);
        org.junit.Assert.assertNotNull(throwableArray78);
    }

    @Test
    public void test29746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29746");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 1);
        boolean boolean5 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(0);
        factorizationbasedRecommenderConfig0.setAlpha((double) (-1.0f));
        factorizationbasedRecommenderConfig0.setLambda((double) (byte) -1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test29747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29747");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = configuration9.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig11 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str12 = itembasedRecommenderConfig11.getRetrainCronExpression();
        int int13 = itembasedRecommenderConfig11.getRetrainAfterPreferenceChanges();
        java.lang.String str14 = itembasedRecommenderConfig11.getSimilarityClass();
        itembasedRecommenderConfig11.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig11.setRetrainCronExpression("value");
        int int19 = itembasedRecommenderConfig11.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig11);
        java.lang.String str21 = itembasedRecommenderConfig11.getRetrainCronExpression();
        configuration9.addItembasedRecommender(itembasedRecommenderConfig11);
        java.lang.String str23 = configuration9.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList24 = configuration9.getItembasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(storageConfiguration10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "value" + "'", str21, "value");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "itemID" + "'", str23, "itemID");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList24);
    }

    @Test
    public void test29748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29748");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration1.getItembasedRecommenders();
        java.lang.String str3 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration13.getPassword();
        java.lang.String str21 = storageConfiguration13.getJdbcDriverClass();
        configuration1.setStorageConfiguration(storageConfiguration13);
        configuration1.setModelDirectory("value");
        org.plista.kornakapi.web.Components components25 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration26 = components25.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration27 = components25.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage28 = components25.storage();
        org.plista.kornakapi.core.storage.Storage storage29 = components25.storage();
        org.plista.kornakapi.core.config.Configuration configuration30 = components25.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        factorizationbasedRecommenderConfig31.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig31.setNumberOfFeatures((int) (short) 100);
        boolean boolean39 = factorizationbasedRecommenderConfig31.isUsesImplicitFeedback();
        configuration30.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        org.plista.kornakapi.web.Components components41 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration42 = components41.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler43 = components41.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler44 = components41.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration45 = components41.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration46 = components41.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig47 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig47.setSimilarityClass("");
        java.lang.String str50 = itembasedRecommenderConfig47.getName();
        java.lang.String str51 = itembasedRecommenderConfig47.getSimilarityClass();
        itembasedRecommenderConfig47.setName("");
        java.lang.String str54 = itembasedRecommenderConfig47.getSimilarityClass();
        configuration46.addItembasedRecommender(itembasedRecommenderConfig47);
        itembasedRecommenderConfig47.setSimilarItemsPerItem((int) (byte) 1);
        configuration30.addItembasedRecommender(itembasedRecommenderConfig47);
        java.lang.String str59 = configuration30.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig60 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str61 = itembasedRecommenderConfig60.getRetrainCronExpression();
        int int62 = itembasedRecommenderConfig60.getRetrainAfterPreferenceChanges();
        java.lang.String str63 = itembasedRecommenderConfig60.getSimilarityClass();
        itembasedRecommenderConfig60.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig60.setSimilarityClass("");
        int int68 = itembasedRecommenderConfig60.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer69 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig60);
        configuration30.addItembasedRecommender(itembasedRecommenderConfig60);
        configuration1.addItembasedRecommender(itembasedRecommenderConfig60);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration72 = configuration1.getStorageConfiguration();
        java.lang.String str73 = storageConfiguration72.getJdbcDriverClass();
        java.lang.String str74 = storageConfiguration72.getJdbcDriverClass();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(components25);
        org.junit.Assert.assertNotNull(configuration26);
        org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(storage28);
        org.junit.Assert.assertNull(storage29);
        org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(components41);
        org.junit.Assert.assertNotNull(configuration42);
        org.junit.Assert.assertNull(trainingScheduler43);
        org.junit.Assert.assertNull(trainingScheduler44);
        org.junit.Assert.assertNotNull(configuration45);
        org.junit.Assert.assertNotNull(configuration46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "value" + "'", str59, "value");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(storageConfiguration72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str74);
    }

    @Test
    public void test29749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29749");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs", (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test29750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29750");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        boolean boolean9 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double12 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        factorizationbasedRecommenderConfig6.setRetrainCronExpression("value");
        boolean boolean16 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        java.lang.String str17 = factorizationbasedRecommenderConfig6.getRetrainCronExpression();
        factorizationbasedRecommenderConfig6.setNumberOfIterations((-1));
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "value" + "'", str17, "value");
    }

    @Test
    public void test29751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29751");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) (byte) 10, (double) (byte) 10);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) 10000, 52.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer13 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair14 = null;
        double double16 = filteringLongPairRescorer13.rescore(longPair14, 97.0d);
        org.apache.mahout.common.LongPair longPair17 = null;
        double double19 = filteringLongPairRescorer13.rescore(longPair17, (double) 100.0f);
        org.apache.mahout.common.LongPair longPair20 = null;
        double double22 = filteringLongPairRescorer13.rescore(longPair20, (double) 52);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 52.0d + "'", double12 == 52.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 97.0d + "'", double16 == 97.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 100.0d + "'", double19 == 100.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
    }

    @Test
    public void test29752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29752");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}", 0L);
        java.lang.String str13 = mutableCandidate0.getLabel();
        long long14 = mutableCandidate0.getItemID();
        java.lang.String str15 = mutableCandidate0.getLabel();
        long long16 = mutableCandidate0.getItemID();
        java.lang.String str17 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemID" + "'", str9, "itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str15, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str17, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
    }

    @Test
    public void test29753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29753");
        org.plista.kornakapi.web.MissingParameterException missingParameterException2 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=52, itemID=52, value=-1.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException8);
        java.lang.Throwable[] throwableArray11 = missingParameterException8.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException8);
        java.lang.Throwable[] throwableArray13 = missingParameterException8.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException14 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=100.0}", (java.lang.Throwable) missingParameterException8);
        missingParameterException2.addSuppressed((java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException16 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=1, value=-1.0}", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException26.addSuppressed((java.lang.Throwable) missingParameterException28);
        invalidParameterException24.addSuppressed((java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException35 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.MissingParameterException missingParameterException38 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException40 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException38.addSuppressed((java.lang.Throwable) missingParameterException40);
        invalidParameterException36.addSuppressed((java.lang.Throwable) missingParameterException40);
        missingParameterException28.addSuppressed((java.lang.Throwable) missingParameterException40);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException44 = new org.plista.kornakapi.web.InvalidParameterException("userID", (java.lang.Throwable) missingParameterException40);
        java.lang.Throwable[] throwableArray45 = missingParameterException40.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs", (java.lang.Throwable) missingParameterException40);
        org.plista.kornakapi.web.MissingParameterException missingParameterException52 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException53 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException52);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException54 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException52);
        org.plista.kornakapi.web.MissingParameterException missingParameterException56 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException58 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException56.addSuppressed((java.lang.Throwable) missingParameterException58);
        invalidParameterException54.addSuppressed((java.lang.Throwable) missingParameterException58);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException61 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException54);
        org.plista.kornakapi.web.MissingParameterException missingParameterException65 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException66 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException65);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException67 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException65);
        invalidParameterException61.addSuppressed((java.lang.Throwable) missingParameterException65);
        org.plista.kornakapi.web.MissingParameterException missingParameterException71 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException72 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException71);
        missingParameterException65.addSuppressed((java.lang.Throwable) invalidParameterException72);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException74 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) missingParameterException65);
        invalidParameterException46.addSuppressed((java.lang.Throwable) invalidParameterException74);
        invalidParameterException16.addSuppressed((java.lang.Throwable) invalidParameterException46);
        java.lang.Throwable[] throwableArray77 = invalidParameterException16.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray77);
    }

    @Test
    public void test29754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29754");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener9);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler24 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler24, "org.plista.kornakapi.web.InvalidParameterException: file", (int) (byte) 10);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener27);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler32 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler32, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", 32);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener35);
    }

    @Test
    public void test29755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29755");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage10 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration11 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = configuration11.getItembasedRecommenders();
        int int13 = configuration11.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList14 = configuration11.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(storage10);
        org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList14);
    }

    @Test
    public void test29756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29756");
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet0 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet3 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str4 = batchDeleteCandidatesServlet3.getServletInfo();
        batchDeleteCandidatesServlet3.init();
        javax.servlet.ServletConfig servletConfig6 = null;
        batchDeleteCandidatesServlet3.init(servletConfig6);
        recommendServlet0.init(servletConfig6);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet9 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet10 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet9.init((javax.servlet.ServletConfig) batchSetPreferencesServlet10);
        javax.servlet.ServletConfig servletConfig12 = batchSetPreferencesServlet9.getServletConfig();
        batchSetPreferencesServlet9.destroy();
        javax.servlet.ServletConfig servletConfig14 = batchSetPreferencesServlet9.getServletConfig();
        batchSetPreferencesServlet9.init();
        recommendServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet9);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet17 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str18 = recommendServlet17.getServletInfo();
        javax.servlet.ServletConfig servletConfig19 = recommendServlet17.getServletConfig();
        java.lang.String str20 = recommendServlet17.getServletInfo();
        javax.servlet.ServletConfig servletConfig21 = recommendServlet17.getServletConfig();
        recommendServlet17.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str24 = batchDeleteCandidatesServlet23.getServletInfo();
        java.lang.String str25 = batchDeleteCandidatesServlet23.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet26 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet27 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet28 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet27.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet28);
        setPreferenceServlet26.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet28);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet31 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet26.init((javax.servlet.ServletConfig) recommendServlet31);
        batchDeleteCandidatesServlet23.init((javax.servlet.ServletConfig) setPreferenceServlet26);
        batchDeleteCandidatesServlet23.destroy();
        batchDeleteCandidatesServlet23.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet36 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str37 = trainServlet36.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet38 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet38.destroy();
        javax.servlet.ServletConfig servletConfig40 = deleteCandidateServlet38.getServletConfig();
        deleteCandidateServlet38.destroy();
        trainServlet36.init((javax.servlet.ServletConfig) deleteCandidateServlet38);
        java.lang.String str43 = trainServlet36.getServletInfo();
        batchDeleteCandidatesServlet23.init((javax.servlet.ServletConfig) trainServlet36);
        batchDeleteCandidatesServlet23.init();
        recommendServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        batchSetPreferencesServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        javax.servlet.ServletRequest servletRequest48 = null;
        javax.servlet.ServletResponse servletResponse49 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet23.service(servletRequest48, servletResponse49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNotNull(servletConfig12);
        org.junit.Assert.assertNotNull(servletConfig14);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(servletConfig19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNull(servletConfig40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
    }

    @Test
    public void test29757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29757");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setLambda((double) '4');
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("");
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 52.0d + "'", double10 == 52.0d);
    }

    @Test
    public void test29758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29758");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        javax.servlet.ServletConfig servletConfig7 = batchDeleteCandidatesServlet0.getServletConfig();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertNotNull(servletConfig7);
    }

    @Test
    public void test29759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29759");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        java.lang.String str2 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (long) (short) 1);
        long long6 = mutableCandidate0.getItemID();
        mutableCandidate0.set("hi!", (-1L));
        java.lang.String str10 = mutableCandidate0.getLabel();
        long long11 = mutableCandidate0.getItemID();
        mutableCandidate0.set("", (long) (byte) 0);
        java.lang.String str15 = mutableCandidate0.getLabel();
        long long16 = mutableCandidate0.getItemID();
        long long17 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test29760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29760");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage12 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler14 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage15 = components0.storage();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNotNull(preferenceChangeListener10);
        org.junit.Assert.assertNotNull(preferenceChangeListener11);
        org.junit.Assert.assertNull(storage12);
        org.junit.Assert.assertNull(trainingScheduler13);
        org.junit.Assert.assertNull(trainingScheduler14);
        org.junit.Assert.assertNull(storage15);
    }

    @Test
    public void test29761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29761");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) 'a');
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(10000);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test29762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29762");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = configuration1.getFactorizationbasedRecommenders();
        java.lang.String str3 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig4.setNumberOfFeatures((int) (byte) 1);
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        int int13 = configuration1.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig14.setSimilarityClass("");
        java.lang.String str17 = itembasedRecommenderConfig14.getSimilarityClass();
        java.lang.String str18 = itembasedRecommenderConfig14.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer19 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig14);
        configuration1.addItembasedRecommender(itembasedRecommenderConfig14);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig21 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double22 = factorizationbasedRecommenderConfig21.getAlpha();
        double double23 = factorizationbasedRecommenderConfig21.getLambda();
        int int24 = factorizationbasedRecommenderConfig21.getNumberOfFeatures();
        java.lang.String str25 = factorizationbasedRecommenderConfig21.getRetrainCronExpression();
        int int26 = factorizationbasedRecommenderConfig21.getNumberOfFeatures();
        factorizationbasedRecommenderConfig21.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig21.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double31 = factorizationbasedRecommenderConfig21.getLambda();
        factorizationbasedRecommenderConfig21.setAlpha((double) (short) 10);
        int int34 = factorizationbasedRecommenderConfig21.getNumberOfFeatures();
        boolean boolean35 = factorizationbasedRecommenderConfig21.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer36 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig21);
        factorizationbasedRecommenderConfig21.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        factorizationbasedRecommenderConfig21.setAlpha((double) (short) 100);
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig21);
        int int42 = configuration1.getNumProcessorsForTraining();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "value" + "'", str3, "value");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
    }

    @Test
    public void test29763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29763");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = configuration5.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setJdbcDriverClass("batchSize");
        storageConfiguration7.setPassword("howMany");
        storageConfiguration7.setJdbcUrl("hi!");
        configuration5.setStorageConfiguration(storageConfiguration7);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList20 = configuration5.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList21 = configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig22 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double23 = factorizationbasedRecommenderConfig22.getAlpha();
        double double24 = factorizationbasedRecommenderConfig22.getLambda();
        int int25 = factorizationbasedRecommenderConfig22.getNumberOfFeatures();
        factorizationbasedRecommenderConfig22.setUsesImplicitFeedback(false);
        int int28 = factorizationbasedRecommenderConfig22.getNumberOfFeatures();
        java.lang.String str29 = factorizationbasedRecommenderConfig22.getRetrainCronExpression();
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig22);
        int int31 = factorizationbasedRecommenderConfig22.getNumberOfIterations();
        int int32 = factorizationbasedRecommenderConfig22.getNumberOfFeatures();
        factorizationbasedRecommenderConfig22.setLambda((double) 97.0f);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList20);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test29764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29764");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double11 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha(52.0d);
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double15 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) (-1L));
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=0, itemID=10000, value=-1.0}");
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        double double22 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) (byte) 1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + (-1.0d) + "'", double22 == (-1.0d));
    }

    @Test
    public void test29765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29765");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        float float4 = mutablePreference0.getValue();
        float float5 = mutablePreference0.getValue();
        mutablePreference0.setValue(97.0f);
        long long8 = mutablePreference0.getUserID();
        java.lang.String str9 = mutablePreference0.toString();
        mutablePreference0.setValue((float) 35L);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + float5 + "' != '" + 0.0f + "'", float5 == 0.0f);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "MutablePreference{userID=0, itemID=0, value=97.0}" + "'", str9, "MutablePreference{userID=0, itemID=0, value=97.0}");
    }

    @Test
    public void test29766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29766");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(configuration7);
    }

    @Test
    public void test29767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29767");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = new org.plista.kornakapi.core.config.Configuration();
        configuration6.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str9 = configuration6.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration6.getItembasedRecommenders();
        configuration6.setNumProcessorsForTraining(100);
        org.plista.kornakapi.web.Components components13 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = components13.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration15 = components13.getConfiguration();
        java.lang.String str16 = configuration15.getModelDirectory();
        int int17 = configuration15.getNumProcessorsForTraining();
        int int18 = configuration15.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = configuration15.getStorageConfiguration();
        configuration6.setStorageConfiguration(storageConfiguration19);
        storageConfiguration19.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=0.0}");
        storageConfiguration19.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration19);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig26 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double27 = factorizationbasedRecommenderConfig26.getAlpha();
        double double28 = factorizationbasedRecommenderConfig26.getLambda();
        int int29 = factorizationbasedRecommenderConfig26.getNumberOfFeatures();
        factorizationbasedRecommenderConfig26.setUsesImplicitFeedback(true);
        double double32 = factorizationbasedRecommenderConfig26.getAlpha();
        java.lang.String str33 = factorizationbasedRecommenderConfig26.getRetrainCronExpression();
        factorizationbasedRecommenderConfig26.setNumberOfIterations(1);
        int int36 = factorizationbasedRecommenderConfig26.getNumberOfIterations();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig26);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration38 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str39 = storageConfiguration38.getJdbcDriverClass();
        storageConfiguration38.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str42 = storageConfiguration38.getJdbcUrl();
        java.lang.String str43 = storageConfiguration38.getJdbcDriverClass();
        java.lang.String str44 = storageConfiguration38.getJdbcDriverClass();
        java.lang.String str45 = storageConfiguration38.getPassword();
        java.lang.String str46 = storageConfiguration38.getJdbcDriverClass();
        java.lang.String str47 = storageConfiguration38.getPassword();
        storageConfiguration38.setUsername("MutablePreference{userID=100, itemID=0, value=0.0}");
        java.lang.String str50 = storageConfiguration38.getPassword();
        storageConfiguration38.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=52.0}");
        storageConfiguration38.setPassword("MutablePreference{userID=100, itemID=-1, value=100.0}");
        java.lang.String str55 = storageConfiguration38.getUsername();
        java.lang.String str56 = storageConfiguration38.getJdbcUrl();
        configuration0.setStorageConfiguration(storageConfiguration38);
        storageConfiguration38.setUsername("MutablePreference{userID=0, itemID=0, value=32.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNull(storageConfiguration5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertNotNull(components13);
        org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "value" + "'", str16, "value");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNotNull(storageConfiguration19);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str55, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str56, "MutablePreference{userID=0, itemID=0, value=52.0}");
    }

    @Test
    public void test29768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29768");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) 'a');
        factorizationbasedRecommenderConfig0.setLambda((double) 10000L);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
    }

    @Test
    public void test29769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29769");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=32, itemID=97, value=52.0}");
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException12.addSuppressed((java.lang.Throwable) missingParameterException14);
        invalidParameterException10.addSuppressed((java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException10);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: howMany", (java.lang.Throwable) invalidParameterException17);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException19 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs", (java.lang.Throwable) invalidParameterException18);
        missingParameterException1.addSuppressed((java.lang.Throwable) invalidParameterException18);
    }

    @Test
    public void test29770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29770");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        batchDeleteCandidatesServlet14.destroy();
        javax.servlet.ServletConfig servletConfig17 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init(servletConfig17);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet19 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str20 = batchDeleteCandidatesServlet19.getServletInfo();
        batchDeleteCandidatesServlet19.init();
        java.lang.String str22 = batchDeleteCandidatesServlet19.getServletInfo();
        batchDeleteCandidatesServlet19.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        batchDeleteCandidatesServlet0.init();
        batchDeleteCandidatesServlet0.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = batchDeleteCandidatesServlet0.getInitParameter("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=52, itemID=32, value=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test29771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29771");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        java.lang.String str13 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = null;
        configuration0.setStorageConfiguration(storageConfiguration14);
        org.plista.kornakapi.web.Components components16 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration18 = components16.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage19 = components16.storage();
        org.plista.kornakapi.core.storage.Storage storage20 = components16.storage();
        org.plista.kornakapi.core.config.Configuration configuration21 = components16.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig22 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double23 = factorizationbasedRecommenderConfig22.getAlpha();
        double double24 = factorizationbasedRecommenderConfig22.getLambda();
        int int25 = factorizationbasedRecommenderConfig22.getNumberOfFeatures();
        factorizationbasedRecommenderConfig22.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig22.setNumberOfFeatures((int) (short) 100);
        boolean boolean30 = factorizationbasedRecommenderConfig22.isUsesImplicitFeedback();
        configuration21.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig22);
        int int32 = factorizationbasedRecommenderConfig22.getNumberOfFeatures();
        java.lang.String str33 = factorizationbasedRecommenderConfig22.getName();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig22);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration35 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration36 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str37 = storageConfiguration36.getJdbcDriverClass();
        storageConfiguration36.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str40 = storageConfiguration36.getJdbcUrl();
        java.lang.String str41 = storageConfiguration36.getJdbcDriverClass();
        java.lang.String str42 = storageConfiguration36.getPassword();
        storageConfiguration36.setUsername("");
        configuration0.setStorageConfiguration(storageConfiguration36);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig46 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double47 = factorizationbasedRecommenderConfig46.getAlpha();
        double double48 = factorizationbasedRecommenderConfig46.getLambda();
        int int49 = factorizationbasedRecommenderConfig46.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer50 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig46);
        int int51 = factorizationbasedRecommenderConfig46.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer52 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig46);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig46);
        org.plista.kornakapi.core.config.Configuration configuration54 = new org.plista.kornakapi.core.config.Configuration();
        configuration54.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str57 = configuration54.getModelDirectory();
        configuration54.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig60 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig60.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer63 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig60);
        itembasedRecommenderConfig60.setRetrainCronExpression("");
        itembasedRecommenderConfig60.setSimilarItemsPerItem(10);
        java.lang.String str68 = itembasedRecommenderConfig60.getName();
        int int69 = itembasedRecommenderConfig60.getRetrainAfterPreferenceChanges();
        java.lang.String str70 = itembasedRecommenderConfig60.getName();
        configuration54.addItembasedRecommender(itembasedRecommenderConfig60);
        int int72 = itembasedRecommenderConfig60.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig60);
        int int74 = itembasedRecommenderConfig60.getSimilarItemsPerItem();
        itembasedRecommenderConfig60.setSimilarItemsPerItem(10000);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer77 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig60);
        itembasedRecommenderConfig60.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(components16);
        org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNotNull(configuration18);
        org.junit.Assert.assertNull(storage19);
        org.junit.Assert.assertNull(storage20);
        org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(storageConfiguration35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 10 + "'", int74 == 10);
    }

    @Test
    public void test29772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29772");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setModelDirectory("MutablePreference{userID=0, itemID=0, value=1.0}");
        int int3 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration0.getItembasedRecommenders();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
    }

    @Test
    public void test29773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29773");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener6 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener6.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener8 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener8.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener6.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener8);
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener6);
        delegatingPreferenceChangeListener6.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener6.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener6.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener14);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener31 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener29.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener31);
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener29);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler35 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener38 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler35, "label", (int) ' ');
        inMemoryPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener38);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener41 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener41.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener43 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener43.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener41.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener43);
        delegatingPreferenceChangeListener43.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener43);
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener43);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener49 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener52 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener54 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener52.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener54);
        delegatingPreferenceChangeListener49.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener52);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler58 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener61 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler58, "label", (int) ' ');
        inMemoryPreferenceChangeListener61.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener61);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener64 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener66 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener66);
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener49.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener66);
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener49);
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener49);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler75 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener78 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler75, "MutablePreference{userID=52, itemID=32, value=-1.0}", (int) (short) 10);
        delegatingPreferenceChangeListener49.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener78);
        delegatingPreferenceChangeListener49.notifyOfPreferenceChange();
    }

    @Test
    public void test29774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29774");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        long long4 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) (byte) 1);
        java.lang.String str8 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "label" + "'", str8, "label");
    }

    @Test
    public void test29775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29775");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        java.lang.String str12 = mutableCandidate0.getLabel();
        java.lang.String str13 = mutableCandidate0.getLabel();
        java.lang.String str14 = mutableCandidate0.getLabel();
        java.lang.String str15 = mutableCandidate0.getLabel();
        mutableCandidate0.set("itemIDs", (-1L));
        long long19 = mutableCandidate0.getItemID();
        long long20 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str14, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str15, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
    }

    @Test
    public void test29776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29776");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        configuration2.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getUsername();
        configuration2.setStorageConfiguration(storageConfiguration7);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str13 = itembasedRecommenderConfig12.getSimilarityClass();
        int int14 = itembasedRecommenderConfig12.getSimilarItemsPerItem();
        int int15 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        int int16 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        int int17 = itembasedRecommenderConfig12.getSimilarItemsPerItem();
        itembasedRecommenderConfig12.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=52.0}");
        java.lang.String str20 = itembasedRecommenderConfig12.getSimilarityClass();
        configuration2.addItembasedRecommender(itembasedRecommenderConfig12);
        configuration2.setNumProcessorsForTraining(10);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList24 = configuration2.getItembasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str20, "MutablePreference{userID=0, itemID=0, value=52.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList24);
    }

    @Test
    public void test29777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29777");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException6);
        java.lang.Throwable[] throwableArray9 = missingParameterException6.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=32, itemID=10, value=10.0}", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.MissingParameterException missingParameterException16 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException18 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException16);
        org.plista.kornakapi.web.MissingParameterException missingParameterException20 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException20.addSuppressed((java.lang.Throwable) missingParameterException22);
        invalidParameterException18.addSuppressed((java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.MissingParameterException missingParameterException28 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException29 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException28);
        org.plista.kornakapi.web.MissingParameterException missingParameterException32 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException32.addSuppressed((java.lang.Throwable) missingParameterException34);
        invalidParameterException30.addSuppressed((java.lang.Throwable) missingParameterException34);
        missingParameterException22.addSuppressed((java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.MissingParameterException missingParameterException40 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException41 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException40);
        missingParameterException34.addSuppressed((java.lang.Throwable) missingParameterException40);
        org.plista.kornakapi.web.MissingParameterException missingParameterException47 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException47);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException48);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException50 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException48);
        missingParameterException34.addSuppressed((java.lang.Throwable) invalidParameterException50);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException52 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) missingParameterException34);
        invalidParameterException11.addSuppressed((java.lang.Throwable) invalidParameterException52);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException54 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10, itemID=10000, value=100.0}", (java.lang.Throwable) invalidParameterException11);
        java.lang.Throwable[] throwableArray55 = invalidParameterException11.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray55);
    }

    @Test
    public void test29778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29778");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
    }

    @Test
    public void test29779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29779");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        double double7 = factorizationbasedRecommenderConfig0.getLambda();
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 100);
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 100);
        int int14 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
    }

    @Test
    public void test29780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29780");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) '4', (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore(10000L, 35.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double13 = fixedCandidatesIDRescorer1.rescore((long) 97, 0.0d);
        double double16 = fixedCandidatesIDRescorer1.rescore((long) (-1), (double) 35.0f);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 35.0d + "'", double9 == 35.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 35.0d + "'", double16 == 35.0d);
    }

    @Test
    public void test29781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29781");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration2.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str6 = storageConfiguration5.getJdbcDriverClass();
        storageConfiguration5.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str9 = storageConfiguration5.getJdbcUrl();
        java.lang.String str10 = storageConfiguration5.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration5.getJdbcDriverClass();
        java.lang.String str12 = storageConfiguration5.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration5.getJdbcUrl();
        java.lang.String str14 = storageConfiguration5.getUsername();
        java.lang.String str15 = storageConfiguration5.getPassword();
        storageConfiguration5.setJdbcUrl("file");
        java.lang.String str18 = storageConfiguration5.getJdbcUrl();
        configuration2.setStorageConfiguration(storageConfiguration5);
        java.lang.String str20 = configuration2.getModelDirectory();
        int int21 = configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig22 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double23 = factorizationbasedRecommenderConfig22.getAlpha();
        double double24 = factorizationbasedRecommenderConfig22.getLambda();
        int int25 = factorizationbasedRecommenderConfig22.getNumberOfFeatures();
        java.lang.String str26 = factorizationbasedRecommenderConfig22.getRetrainCronExpression();
        int int27 = factorizationbasedRecommenderConfig22.getNumberOfFeatures();
        factorizationbasedRecommenderConfig22.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig22.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double32 = factorizationbasedRecommenderConfig22.getLambda();
        factorizationbasedRecommenderConfig22.setAlpha((double) (short) 10);
        int int35 = factorizationbasedRecommenderConfig22.getNumberOfFeatures();
        java.lang.String str36 = factorizationbasedRecommenderConfig22.getName();
        configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig22);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer38 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig22);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNotNull(storageConfiguration3);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str14, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "file" + "'", str18, "file");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "itemID" + "'", str20, "itemID");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test29782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29782");
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.config.Configuration configuration1 = org.plista.kornakapi.core.config.Configuration.fromXML("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=0, value=97.0}");
            org.junit.Assert.fail("Expected exception of type com.thoughtworks.xstream.io.StreamException; message:  : only whitespace content allowed before start tag and not o (position: START_DOCUMENT seen o... @1:1) ");
        } catch (com.thoughtworks.xstream.io.StreamException e) {
            // Expected exception.
        }
    }

    @Test
    public void test29783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29783");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str10 = storageConfiguration6.getJdbcUrl();
        java.lang.String str11 = storageConfiguration6.getJdbcUrl();
        java.lang.String str12 = storageConfiguration6.getJdbcUrl();
        storageConfiguration6.setUsername("recommender");
        configuration0.setStorageConfiguration(storageConfiguration6);
        java.lang.String str16 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str19 = storageConfiguration6.getJdbcUrl();
        storageConfiguration6.setUsername("MutablePreference{userID=100, itemID=0, value=1.0}");
        storageConfiguration6.setUsername("");
        storageConfiguration6.setPassword("org.plista.kornakapi.web.InvalidParameterException: recommender");
        java.lang.String str26 = storageConfiguration6.getUsername();
        java.lang.String str27 = storageConfiguration6.getJdbcDriverClass();
        java.lang.String str28 = storageConfiguration6.getJdbcUrl();
        java.lang.String str29 = storageConfiguration6.getJdbcUrl();
        java.lang.String str30 = storageConfiguration6.getJdbcDriverClass();
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str19, "org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str28, "org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str29, "org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test29784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29784");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (byte) 1, (double) (byte) 100);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer7 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair8 = null;
        double double10 = filteringLongPairRescorer7.rescore(longPair8, (double) 100.0f);
        org.apache.mahout.common.LongPair longPair11 = null;
        double double13 = filteringLongPairRescorer7.rescore(longPair11, 32.0d);
        org.apache.mahout.common.LongPair longPair14 = null;
        double double16 = filteringLongPairRescorer7.rescore(longPair14, (double) 'a');
        org.apache.mahout.common.LongPair longPair17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = filteringLongPairRescorer7.isFiltered(longPair17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 100.0d + "'", double6 == 100.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 32.0d + "'", double13 == 32.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 97.0d + "'", double16 == 97.0d);
    }

    @Test
    public void test29785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29785");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = configuration4.getStorageConfiguration();
        java.lang.String str6 = configuration4.getModelDirectory();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(storageConfiguration5);
// flaky:         org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test29786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29786");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        int int9 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig7.setSimilarityClass("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem((int) '#');
        java.lang.String str17 = itembasedRecommenderConfig7.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        configuration6.addItembasedRecommender(itembasedRecommenderConfig7);
        configuration6.setModelDirectory("itemIDs");
        java.lang.String str22 = configuration6.getModelDirectory();
        int int23 = configuration6.getNumProcessorsForTraining();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "itemIDs" + "'", str22, "itemIDs");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
    }

    @Test
    public void test29787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29787");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig5);
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setRetrainAfterPreferenceChanges((int) (short) 100);
        configuration4.addItembasedRecommender(itembasedRecommenderConfig5);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = null;
        configuration4.addItembasedRecommender(itembasedRecommenderConfig12);
        configuration4.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration16 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.web.Components components17 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage18 = components17.storage();
        org.plista.kornakapi.core.config.Configuration configuration19 = components17.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig20 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double21 = factorizationbasedRecommenderConfig20.getAlpha();
        double double22 = factorizationbasedRecommenderConfig20.getLambda();
        boolean boolean23 = factorizationbasedRecommenderConfig20.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer24 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig20);
        double double25 = factorizationbasedRecommenderConfig20.getAlpha();
        configuration19.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig20);
        double double27 = factorizationbasedRecommenderConfig20.getAlpha();
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(true);
        java.lang.String str30 = factorizationbasedRecommenderConfig20.getName();
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig20.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(false);
        double double37 = factorizationbasedRecommenderConfig20.getAlpha();
        factorizationbasedRecommenderConfig20.setNumberOfIterations((int) (short) 0);
        configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig20);
        int int41 = factorizationbasedRecommenderConfig20.getNumberOfIterations();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig20);
        factorizationbasedRecommenderConfig20.setNumberOfIterations(1);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(storageConfiguration16);
        org.junit.Assert.assertNotNull(components17);
        org.junit.Assert.assertNull(storage18);
        org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test29788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29788");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 0);
        factorizationbasedRecommenderConfig0.setName("userID");
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test29789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29789");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}", (int) (short) 10);
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
    }

    @Test
    public void test29790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29790");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig7);
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig7.setNumberOfIterations((int) '#');
        double double14 = factorizationbasedRecommenderConfig7.getLambda();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig7);
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(false);
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration19 = null;
        configuration5.setStorageConfiguration(storageConfiguration19);
        configuration5.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig23 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double24 = factorizationbasedRecommenderConfig23.getAlpha();
        double double25 = factorizationbasedRecommenderConfig23.getLambda();
        int int26 = factorizationbasedRecommenderConfig23.getNumberOfFeatures();
        java.lang.String str27 = factorizationbasedRecommenderConfig23.getRetrainCronExpression();
        int int28 = factorizationbasedRecommenderConfig23.getNumberOfFeatures();
        factorizationbasedRecommenderConfig23.setNumberOfIterations((int) (short) 0);
        boolean boolean31 = factorizationbasedRecommenderConfig23.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig23.setNumberOfIterations((int) (short) 0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer34 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig23);
        factorizationbasedRecommenderConfig23.setRetrainAfterPreferenceChanges(32);
        factorizationbasedRecommenderConfig23.setLambda((double) '4');
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer39 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig23);
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig23);
        org.plista.kornakapi.web.Components components41 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration42 = components41.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration43 = components41.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler44 = components41.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration45 = components41.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig46 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double47 = factorizationbasedRecommenderConfig46.getAlpha();
        double double48 = factorizationbasedRecommenderConfig46.getLambda();
        int int49 = factorizationbasedRecommenderConfig46.getNumberOfFeatures();
        factorizationbasedRecommenderConfig46.setUsesImplicitFeedback(true);
        double double52 = factorizationbasedRecommenderConfig46.getAlpha();
        java.lang.String str53 = factorizationbasedRecommenderConfig46.getRetrainCronExpression();
        int int54 = factorizationbasedRecommenderConfig46.getRetrainAfterPreferenceChanges();
        int int55 = factorizationbasedRecommenderConfig46.getNumberOfIterations();
        factorizationbasedRecommenderConfig46.setNumberOfFeatures((int) '#');
        double double58 = factorizationbasedRecommenderConfig46.getLambda();
        boolean boolean59 = factorizationbasedRecommenderConfig46.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig46.setUsesImplicitFeedback(false);
        configuration45.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig46);
        java.lang.String str63 = configuration45.getModelDirectory();
        configuration45.setModelDirectory("userID");
        java.lang.String str66 = configuration45.getModelDirectory();
        configuration45.setModelDirectory("howMany");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList69 = configuration45.getFactorizationbasedRecommenders();
        java.lang.String str70 = configuration45.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig71 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double72 = factorizationbasedRecommenderConfig71.getAlpha();
        double double73 = factorizationbasedRecommenderConfig71.getLambda();
        int int74 = factorizationbasedRecommenderConfig71.getNumberOfFeatures();
        factorizationbasedRecommenderConfig71.setUsesImplicitFeedback(false);
        int int77 = factorizationbasedRecommenderConfig71.getNumberOfFeatures();
        int int78 = factorizationbasedRecommenderConfig71.getNumberOfFeatures();
        factorizationbasedRecommenderConfig71.setAlpha((double) '4');
        boolean boolean81 = factorizationbasedRecommenderConfig71.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig71.setRetrainAfterPreferenceChanges((int) (short) -1);
        factorizationbasedRecommenderConfig71.setName("org.plista.kornakapi.web.InvalidParameterException: batchSize");
        configuration45.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig71);
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig71);
        java.lang.String str88 = factorizationbasedRecommenderConfig71.getName();
        factorizationbasedRecommenderConfig71.setNumberOfFeatures((int) (byte) 0);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(components41);
        org.junit.Assert.assertNotNull(configuration42);
        org.junit.Assert.assertNotNull(configuration43);
        org.junit.Assert.assertNull(trainingScheduler44);
        org.junit.Assert.assertNotNull(configuration45);
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str63, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "userID" + "'", str66, "userID");
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "howMany" + "'", str70, "howMany");
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: batchSize" + "'", str88, "org.plista.kornakapi.web.InvalidParameterException: batchSize");
    }

    @Test
    public void test29791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29791");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getUserID();
        long long4 = mutablePreference0.getUserID();
        mutablePreference0.set(97L, (long) 1, (float) 97L);
        long long9 = mutablePreference0.getItemID();
        mutablePreference0.setValue((float) (byte) 1);
        float float12 = mutablePreference0.getValue();
        java.lang.String str13 = mutablePreference0.toString();
        java.lang.String str14 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 1.0f + "'", float12 == 1.0f);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=97, itemID=1, value=1.0}" + "'", str13, "MutablePreference{userID=97, itemID=1, value=1.0}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=97, itemID=1, value=1.0}" + "'", str14, "MutablePreference{userID=97, itemID=1, value=1.0}");
    }

    @Test
    public void test29792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29792");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig3 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double4 = factorizationbasedRecommenderConfig3.getAlpha();
        double double5 = factorizationbasedRecommenderConfig3.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig3);
        java.lang.String str7 = configuration0.getModelDirectory();
        int int8 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration10.getJdbcUrl();
        java.lang.String str15 = storageConfiguration10.getJdbcUrl();
        storageConfiguration10.setJdbcUrl("label");
        configuration0.setStorageConfiguration(storageConfiguration10);
        java.lang.String str19 = storageConfiguration10.getUsername();
        java.lang.String str20 = storageConfiguration10.getUsername();
        java.lang.String str21 = storageConfiguration10.getPassword();
        java.lang.String str22 = storageConfiguration10.getJdbcUrl();
        java.lang.String str23 = storageConfiguration10.getPassword();
        java.lang.String str24 = storageConfiguration10.getUsername();
        java.lang.String str25 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("");
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str19, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str20, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "label" + "'", str22, "label");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str24, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test29793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29793");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) 100, (-1L), (float) (short) 100);
        java.lang.String str8 = mutablePreference0.toString();
        mutablePreference0.setValue((float) (byte) -1);
        long long11 = mutablePreference0.getUserID();
        float float12 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) 10000L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=100.0}" + "'", str8, "MutablePreference{userID=100, itemID=-1, value=100.0}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + (-1.0f) + "'", float12 == (-1.0f));
    }

    @Test
    public void test29794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29794");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str3 = factorizationbasedRecommenderConfig0.getName();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double7 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
    }

    @Test
    public void test29795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29795");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair4 = null;
        double double6 = filteringLongPairRescorer3.rescore(longPair4, 1.0d);
        org.apache.mahout.common.LongPair longPair7 = null;
        double double9 = filteringLongPairRescorer3.rescore(longPair7, (double) 10L);
        org.apache.mahout.common.LongPair longPair10 = null;
        double double12 = filteringLongPairRescorer3.rescore(longPair10, (double) (byte) 10);
        org.apache.mahout.common.LongPair longPair13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = filteringLongPairRescorer3.isFiltered(longPair13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 1.0d + "'", double6 == 1.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
    }

    @Test
    public void test29796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29796");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration0.getJdbcUrl();
        storageConfiguration0.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration0.setUsername("");
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration0.setUsername("label");
        storageConfiguration0.setJdbcUrl("");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=10, itemID=1, value=52.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test29797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29797");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener12 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener13 = components0.preferenceChangeListener();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNotNull(preferenceChangeListener12);
        org.junit.Assert.assertNotNull(preferenceChangeListener13);
    }

    @Test
    public void test29798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29798");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage8 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener9 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = components0.scheduler();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNotNull(preferenceChangeListener9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(trainingScheduler11);
        org.junit.Assert.assertNull(trainingScheduler12);
    }

    @Test
    public void test29799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29799");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        javax.servlet.ServletConfig servletConfig3 = batchDeleteCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        javax.servlet.ServletConfig servletConfig8 = setPreferenceServlet4.getServletConfig();
        java.lang.String str9 = setPreferenceServlet4.getServletInfo();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str14 = batchDeleteCandidatesServlet13.getServletInfo();
        java.lang.String str15 = batchDeleteCandidatesServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet16 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet17 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        setPreferenceServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet16.init((javax.servlet.ServletConfig) recommendServlet21);
        batchDeleteCandidatesServlet13.init((javax.servlet.ServletConfig) setPreferenceServlet16);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet24 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet25 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig28 = batchSetPreferencesServlet25.getServletConfig();
        addCandidateServlet24.init((javax.servlet.ServletConfig) batchSetPreferencesServlet25);
        javax.servlet.ServletConfig servletConfig30 = addCandidateServlet24.getServletConfig();
        batchDeleteCandidatesServlet13.init((javax.servlet.ServletConfig) addCandidateServlet24);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet32 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str33 = trainServlet32.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet34 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet34.destroy();
        javax.servlet.ServletConfig servletConfig36 = deleteCandidateServlet34.getServletConfig();
        deleteCandidateServlet34.destroy();
        trainServlet32.init((javax.servlet.ServletConfig) deleteCandidateServlet34);
        addCandidateServlet24.init((javax.servlet.ServletConfig) trainServlet32);
        trainServlet32.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet41 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet42 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet43 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet42.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        setPreferenceServlet41.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        trainServlet32.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        javax.servlet.ServletConfig servletConfig47 = batchDeleteCandidatesServlet43.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet48 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str49 = batchDeleteCandidatesServlet48.getServletInfo();
        batchDeleteCandidatesServlet48.init();
        javax.servlet.ServletConfig servletConfig51 = null;
        batchDeleteCandidatesServlet48.init(servletConfig51);
        javax.servlet.ServletConfig servletConfig53 = batchDeleteCandidatesServlet48.getServletConfig();
        batchDeleteCandidatesServlet48.init();
        javax.servlet.ServletConfig servletConfig55 = batchDeleteCandidatesServlet48.getServletConfig();
        java.lang.String str56 = batchDeleteCandidatesServlet48.getServletInfo();
        batchDeleteCandidatesServlet43.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet48);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet43);
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet59 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet60 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str61 = batchDeleteCandidatesServlet60.getServletInfo();
        batchDeleteCandidatesServlet60.init();
        javax.servlet.ServletConfig servletConfig63 = null;
        batchDeleteCandidatesServlet60.init(servletConfig63);
        batchDeleteCandidatesServlet60.destroy();
        java.lang.String str66 = batchDeleteCandidatesServlet60.getServletInfo();
        javax.servlet.ServletConfig servletConfig67 = batchDeleteCandidatesServlet60.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet68 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet69 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet70 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet69.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet70);
        setPreferenceServlet68.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet70);
        java.lang.String str73 = setPreferenceServlet68.getServletInfo();
        setPreferenceServlet68.destroy();
        batchDeleteCandidatesServlet60.init((javax.servlet.ServletConfig) setPreferenceServlet68);
        batchDeleteCandidatesServlet60.init();
        batchSetPreferencesServlet59.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet60);
        batchDeleteCandidatesServlet43.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet60);
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext79 = batchDeleteCandidatesServlet60.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNull(servletConfig8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(servletConfig28);
        org.junit.Assert.assertNotNull(servletConfig30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "" + "'", str33, "");
        org.junit.Assert.assertNull(servletConfig36);
        org.junit.Assert.assertNull(servletConfig47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
        org.junit.Assert.assertNull(servletConfig53);
        org.junit.Assert.assertNull(servletConfig55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "" + "'", str56, "");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(servletConfig67);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
    }

    @Test
    public void test29800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29800");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage8 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList10 = configuration9.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList10);
    }

    @Test
    public void test29801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29801");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = configuration1.getFactorizationbasedRecommenders();
        java.lang.String str3 = configuration1.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList4 = configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig5.setName("recommender");
        configuration1.addItembasedRecommender(itembasedRecommenderConfig5);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration1.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components10 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration11 = components10.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = components10.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage13 = components10.storage();
        org.plista.kornakapi.core.storage.Storage storage14 = components10.storage();
        org.plista.kornakapi.core.config.Configuration configuration15 = components10.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        int int19 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        factorizationbasedRecommenderConfig16.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig16.setNumberOfFeatures((int) (short) 100);
        boolean boolean24 = factorizationbasedRecommenderConfig16.isUsesImplicitFeedback();
        configuration15.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        org.plista.kornakapi.web.Components components26 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration27 = components26.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler28 = components26.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler29 = components26.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration30 = components26.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration31 = components26.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig32 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig32.setSimilarityClass("");
        java.lang.String str35 = itembasedRecommenderConfig32.getName();
        java.lang.String str36 = itembasedRecommenderConfig32.getSimilarityClass();
        itembasedRecommenderConfig32.setName("");
        java.lang.String str39 = itembasedRecommenderConfig32.getSimilarityClass();
        configuration31.addItembasedRecommender(itembasedRecommenderConfig32);
        itembasedRecommenderConfig32.setSimilarItemsPerItem((int) (byte) 1);
        configuration15.addItembasedRecommender(itembasedRecommenderConfig32);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration44 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str45 = storageConfiguration44.getJdbcDriverClass();
        storageConfiguration44.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str48 = storageConfiguration44.getJdbcUrl();
        java.lang.String str49 = storageConfiguration44.getJdbcDriverClass();
        storageConfiguration44.setJdbcDriverClass("batchSize");
        java.lang.String str52 = storageConfiguration44.getPassword();
        storageConfiguration44.setUsername("batchSize");
        java.lang.String str55 = storageConfiguration44.getJdbcDriverClass();
        storageConfiguration44.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        configuration15.setStorageConfiguration(storageConfiguration44);
        configuration1.setStorageConfiguration(storageConfiguration44);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList60 = configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration61 = configuration1.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration62 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str63 = storageConfiguration62.getJdbcDriverClass();
        storageConfiguration62.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str66 = storageConfiguration62.getJdbcUrl();
        java.lang.String str67 = storageConfiguration62.getJdbcDriverClass();
        storageConfiguration62.setJdbcUrl("hi!");
        storageConfiguration62.setUsername("MutablePreference{userID=0, itemID=0, value=1.0}");
        storageConfiguration62.setJdbcDriverClass("MutablePreference{userID=100, itemID=0, value=0.0}");
        storageConfiguration62.setJdbcDriverClass("MutablePreference{userID=-1, itemID=10, value=10.0}");
        configuration1.setStorageConfiguration(storageConfiguration62);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList77 = configuration1.getItembasedRecommenders();
        int int78 = configuration1.getNumProcessorsForTraining();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "howMany" + "'", str3, "howMany");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList4);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNotNull(components10);
        org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(storage13);
        org.junit.Assert.assertNull(storage14);
        org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(components26);
        org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(trainingScheduler28);
        org.junit.Assert.assertNull(trainingScheduler29);
        org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertNotNull(configuration31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "batchSize" + "'", str55, "batchSize");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList60);
        org.junit.Assert.assertNotNull(storageConfiguration61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList77);
// flaky:         org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10000 + "'", int78 == 10000);
    }

    @Test
    public void test29802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29802");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) ' ');
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double12 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((-1));
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(100);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test29803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29803");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration3 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener7 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNotNull(configuration3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNotNull(preferenceChangeListener7);
        org.junit.Assert.assertNotNull(configuration8);
    }

    @Test
    public void test29804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29804");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        long long3 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) 100, (-1L), (float) (short) 100);
        java.lang.String str8 = mutablePreference0.toString();
        mutablePreference0.set((long) 0, (long) 0, (-1.0f));
        java.lang.String str13 = mutablePreference0.toString();
        float float14 = mutablePreference0.getValue();
        float float15 = mutablePreference0.getValue();
        float float16 = mutablePreference0.getValue();
        java.lang.String str17 = mutablePreference0.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "MutablePreference{userID=100, itemID=-1, value=100.0}" + "'", str8, "MutablePreference{userID=100, itemID=-1, value=100.0}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "MutablePreference{userID=0, itemID=0, value=-1.0}" + "'", str13, "MutablePreference{userID=0, itemID=0, value=-1.0}");
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float15 + "' != '" + (-1.0f) + "'", float15 == (-1.0f));
        org.junit.Assert.assertTrue("'" + float16 + "' != '" + (-1.0f) + "'", float16 == (-1.0f));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=0, itemID=0, value=-1.0}" + "'", str17, "MutablePreference{userID=0, itemID=0, value=-1.0}");
    }

    @Test
    public void test29805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29805");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException4);
        java.lang.Throwable[] throwableArray6 = missingParameterException4.getSuppressed();
        java.lang.Throwable[] throwableArray7 = missingParameterException4.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("userID", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=-1, value=32.0}", (java.lang.Throwable) missingParameterException4);
        java.lang.String str10 = missingParameterException4.toString();
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str10, "org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test29806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29806");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
        configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
        configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig34 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str35 = itembasedRecommenderConfig34.getRetrainCronExpression();
        int int36 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
        int int37 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
        configuration5.addItembasedRecommender(itembasedRecommenderConfig34);
        org.plista.kornakapi.core.config.Configuration configuration39 = new org.plista.kornakapi.core.config.Configuration();
        configuration39.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str42 = configuration39.getModelDirectory();
        configuration39.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig45 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double46 = factorizationbasedRecommenderConfig45.getAlpha();
        int int47 = factorizationbasedRecommenderConfig45.getNumberOfFeatures();
        factorizationbasedRecommenderConfig45.setUsesImplicitFeedback(true);
        double double50 = factorizationbasedRecommenderConfig45.getLambda();
        configuration39.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig45);
        factorizationbasedRecommenderConfig45.setAlpha((double) (short) 0);
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig45);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer55 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig45);
        double double56 = factorizationbasedRecommenderConfig45.getAlpha();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(components16);
        org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
        org.junit.Assert.assertNotNull(configuration20);
        org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test29807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29807");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) '4');
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int14 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test29808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29808");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        mutablePreference0.set((long) (byte) 100, (long) (byte) 0, (float) (short) 0);
        mutablePreference0.setValue((float) 35);
        long long10 = mutablePreference0.getItemID();
        long long11 = mutablePreference0.getUserID();
        float float12 = mutablePreference0.getValue();
        long long13 = mutablePreference0.getItemID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 35.0f + "'", float12 == 35.0f);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test29809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29809");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage10 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration11 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList12 = configuration11.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNull(storage10);
        org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList12);
    }

    @Test
    public void test29810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29810");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        configuration4.setModelDirectory("userID");
        configuration4.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig9 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str10 = itembasedRecommenderConfig9.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig9.getSimilarityClass();
        int int12 = itembasedRecommenderConfig9.getRetrainAfterPreferenceChanges();
        int int13 = itembasedRecommenderConfig9.getSimilarItemsPerItem();
        java.lang.String str14 = itembasedRecommenderConfig9.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig9);
        java.lang.String str16 = itembasedRecommenderConfig9.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer17 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig9);
        int int18 = itembasedRecommenderConfig9.getSimilarItemsPerItem();
        configuration4.addItembasedRecommender(itembasedRecommenderConfig9);
        itembasedRecommenderConfig9.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test29811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29811");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        mutablePreference0.setValue((float) '4');
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.set(100L, (long) 100, 100.0f);
        long long10 = mutablePreference0.getItemID();
        mutablePreference0.set(0L, (long) ' ', 0.0f);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=52.0}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 100L + "'", long10 == 100L);
    }

    @Test
    public void test29812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29812");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        java.lang.String str2 = mutableCandidate0.getLabel();
        mutableCandidate0.set("file", (long) (short) 1);
        long long6 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 1L + "'", long6 == 1L);
    }

    @Test
    public void test29813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29813");
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet0 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet0.init();
        deleteCandidateServlet0.init();
        java.lang.String str3 = deleteCandidateServlet0.getServletInfo();
        deleteCandidateServlet0.destroy();
        javax.servlet.ServletConfig servletConfig5 = deleteCandidateServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet6 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str7 = recommendServlet6.getServletInfo();
        javax.servlet.ServletConfig servletConfig8 = recommendServlet6.getServletConfig();
        java.lang.String str9 = recommendServlet6.getServletInfo();
        javax.servlet.ServletConfig servletConfig10 = recommendServlet6.getServletConfig();
        recommendServlet6.destroy();
        deleteCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet6);
        javax.servlet.ServletConfig servletConfig13 = recommendServlet6.getServletConfig();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig10);
        org.junit.Assert.assertNull(servletConfig13);
    }

    @Test
    public void test29814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29814");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("batchSize");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("batchSize");
        java.lang.String str11 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str14 = storageConfiguration0.getPassword();
        java.lang.String str15 = storageConfiguration0.getJdbcUrl();
        java.lang.String str16 = storageConfiguration0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "batchSize" + "'", str11, "batchSize");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "batchSize" + "'", str16, "batchSize");
    }

    @Test
    public void test29815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29815");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration9.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList11 = configuration9.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig12 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double13 = factorizationbasedRecommenderConfig12.getAlpha();
        double double14 = factorizationbasedRecommenderConfig12.getLambda();
        int int15 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        factorizationbasedRecommenderConfig12.setLambda((double) 1);
        factorizationbasedRecommenderConfig12.setNumberOfFeatures((int) (short) -1);
        factorizationbasedRecommenderConfig12.setRetrainAfterPreferenceChanges(0);
        boolean boolean22 = factorizationbasedRecommenderConfig12.isUsesImplicitFeedback();
        int int23 = factorizationbasedRecommenderConfig12.getNumberOfIterations();
        factorizationbasedRecommenderConfig12.setAlpha((double) 0.0f);
        configuration9.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig12);
        factorizationbasedRecommenderConfig12.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig12.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig12.setLambda((double) (short) -1);
        boolean boolean33 = factorizationbasedRecommenderConfig12.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig12.setNumberOfFeatures((int) 'a');
        factorizationbasedRecommenderConfig12.setRetrainAfterPreferenceChanges(0);
        boolean boolean38 = factorizationbasedRecommenderConfig12.isUsesImplicitFeedback();
        boolean boolean39 = factorizationbasedRecommenderConfig12.isUsesImplicitFeedback();
        java.lang.String str40 = factorizationbasedRecommenderConfig12.getName();
        int int41 = factorizationbasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        int int42 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 97 + "'", int42 == 97);
    }

    @Test
    public void test29816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29816");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 10);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) 35);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer12 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer13 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double16 = fixedCandidatesIDRescorer1.rescore(10L, 0.0d);
        double double19 = fixedCandidatesIDRescorer1.rescore((long) '#', 35.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer20 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer21 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 35.0d + "'", double19 == 35.0d);
    }

    @Test
    public void test29817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29817");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        configuration5.setStorageConfiguration(storageConfiguration7);
        java.lang.String str16 = configuration5.getModelDirectory();
        int int17 = configuration5.getNumProcessorsForTraining();
        configuration5.setModelDirectory("label");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig20 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double21 = factorizationbasedRecommenderConfig20.getAlpha();
        double double22 = factorizationbasedRecommenderConfig20.getLambda();
        int int23 = factorizationbasedRecommenderConfig20.getNumberOfFeatures();
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(true);
        double double26 = factorizationbasedRecommenderConfig20.getAlpha();
        java.lang.String str27 = factorizationbasedRecommenderConfig20.getRetrainCronExpression();
        java.lang.String str28 = factorizationbasedRecommenderConfig20.getRetrainCronExpression();
        factorizationbasedRecommenderConfig20.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig20.setNumberOfIterations((int) '4');
        factorizationbasedRecommenderConfig20.setNumberOfIterations((int) (short) 0);
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig20);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig36 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double37 = factorizationbasedRecommenderConfig36.getAlpha();
        double double38 = factorizationbasedRecommenderConfig36.getLambda();
        int int39 = factorizationbasedRecommenderConfig36.getNumberOfFeatures();
        java.lang.String str40 = factorizationbasedRecommenderConfig36.getRetrainCronExpression();
        int int41 = factorizationbasedRecommenderConfig36.getNumberOfFeatures();
        java.lang.String str42 = factorizationbasedRecommenderConfig36.getName();
        int int43 = factorizationbasedRecommenderConfig36.getNumberOfIterations();
        int int44 = factorizationbasedRecommenderConfig36.getNumberOfFeatures();
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig36);
        int int46 = configuration5.getNumProcessorsForTraining();
        org.plista.kornakapi.core.storage.Storage storage47 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap48 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap49 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler50 = null;
        org.plista.kornakapi.web.Components components51 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage52 = components51.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener53 = components51.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler54 = components51.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration55 = components51.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration56 = components51.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener57 = components51.preferenceChangeListener();
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration5, storage47, strMap48, strMap49, trainingScheduler50, preferenceChangeListener57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "itemID" + "'", str16, "itemID");
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000 + "'", int17 == 10000);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 0.0d + "'", double21 == 0.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
// flaky:         org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10000 + "'", int46 == 10000);
        org.junit.Assert.assertNotNull(components51);
        org.junit.Assert.assertNull(storage52);
        org.junit.Assert.assertNotNull(preferenceChangeListener53);
        org.junit.Assert.assertNull(trainingScheduler54);
        org.junit.Assert.assertNotNull(configuration55);
        org.junit.Assert.assertNotNull(configuration56);
        org.junit.Assert.assertNotNull(preferenceChangeListener57);
    }

    @Test
    public void test29818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29818");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        java.lang.String str16 = batchDeleteCandidatesServlet14.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet17 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet19 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        setPreferenceServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet17.init((javax.servlet.ServletConfig) recommendServlet22);
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) setPreferenceServlet17);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet25 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet27 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet26.init((javax.servlet.ServletConfig) batchSetPreferencesServlet27);
        javax.servlet.ServletConfig servletConfig29 = batchSetPreferencesServlet26.getServletConfig();
        addCandidateServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig31 = addCandidateServlet25.getServletConfig();
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) addCandidateServlet25);
        javax.servlet.ServletConfig servletConfig33 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet14);
        javax.servlet.ServletConfig servletConfig35 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet14.init();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext37 = batchDeleteCandidatesServlet14.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(servletConfig29);
        org.junit.Assert.assertNotNull(servletConfig31);
        org.junit.Assert.assertNotNull(servletConfig33);
        org.junit.Assert.assertNotNull(servletConfig35);
    }

    @Test
    public void test29819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29819");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        int int9 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig7.setSimilarityClass("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem((int) '#');
        java.lang.String str17 = itembasedRecommenderConfig7.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer18 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        configuration6.addItembasedRecommender(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=97, itemID=97, value=52.0}");
        itembasedRecommenderConfig7.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test29820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29820");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        java.lang.String str5 = mutablePreference0.toString();
        long long6 = mutablePreference0.getUserID();
        java.lang.String str7 = mutablePreference0.toString();
        mutablePreference0.set(0L, (long) (byte) 0, 100.0f);
        long long12 = mutablePreference0.getUserID();
        mutablePreference0.setValue((float) (-1L));
        long long15 = mutablePreference0.getUserID();
        java.lang.String str16 = mutablePreference0.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str7, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=0, itemID=0, value=-1.0}" + "'", str16, "MutablePreference{userID=0, itemID=0, value=-1.0}");
    }

    @Test
    public void test29821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29821");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = configuration0.getStorageConfiguration();
        configuration0.setModelDirectory("value");
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig9 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double10 = factorizationbasedRecommenderConfig9.getAlpha();
        double double11 = factorizationbasedRecommenderConfig9.getLambda();
        int int12 = factorizationbasedRecommenderConfig9.getNumberOfFeatures();
        factorizationbasedRecommenderConfig9.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig9.setNumberOfFeatures((int) (short) 100);
        double double17 = factorizationbasedRecommenderConfig9.getAlpha();
        factorizationbasedRecommenderConfig9.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer20 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig9);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer21 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig9);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig9);
        factorizationbasedRecommenderConfig9.setNumberOfIterations(97);
        factorizationbasedRecommenderConfig9.setRetrainAfterPreferenceChanges((int) (byte) 100);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(storageConfiguration5);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
    }

    @Test
    public void test29822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29822");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) 10);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) (-1));
        double double18 = fixedCandidatesIDRescorer1.rescore((long) 0, (double) 32);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair20 = null;
        double double22 = filteringLongPairRescorer19.rescore(longPair20, 10.0d);
        org.apache.mahout.common.LongPair longPair23 = null;
        double double25 = filteringLongPairRescorer19.rescore(longPair23, (double) '#');
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 32.0d + "'", double18 == 32.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 10.0d + "'", double22 == 10.0d);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 35.0d + "'", double25 == 35.0d);
    }

    @Test
    public void test29823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29823");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        long long2 = mutableCandidate0.getItemID();
        long long3 = mutableCandidate0.getItemID();
        java.lang.String str4 = mutableCandidate0.getLabel();
        long long5 = mutableCandidate0.getItemID();
        java.lang.String str6 = mutableCandidate0.getLabel();
        java.lang.String str7 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=0, itemID=0, value=1.0}", (long) 0);
        long long11 = mutableCandidate0.getItemID();
        java.lang.String str12 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str12, "MutablePreference{userID=0, itemID=0, value=1.0}");
    }

    @Test
    public void test29824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29824");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        int int11 = configuration10.getNumProcessorsForTraining();
        org.plista.kornakapi.web.Components components12 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration13 = components12.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList14 = configuration13.getItembasedRecommenders();
        java.lang.String str15 = configuration13.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        int int19 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        factorizationbasedRecommenderConfig16.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer22 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig16);
        configuration13.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList24 = configuration13.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str26 = storageConfiguration25.getJdbcDriverClass();
        storageConfiguration25.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str29 = storageConfiguration25.getJdbcUrl();
        java.lang.String str30 = storageConfiguration25.getJdbcDriverClass();
        java.lang.String str31 = storageConfiguration25.getJdbcDriverClass();
        java.lang.String str32 = storageConfiguration25.getPassword();
        java.lang.String str33 = storageConfiguration25.getJdbcDriverClass();
        configuration13.setStorageConfiguration(storageConfiguration25);
        java.lang.String str35 = storageConfiguration25.getUsername();
        storageConfiguration25.setUsername("org.plista.kornakapi.web.InvalidParameterException: label");
        java.lang.String str38 = storageConfiguration25.getJdbcDriverClass();
        storageConfiguration25.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str41 = storageConfiguration25.getPassword();
        storageConfiguration25.setJdbcUrl("MutablePreference{userID=1, itemID=10, value=0.0}");
        configuration10.setStorageConfiguration(storageConfiguration25);
        storageConfiguration25.setUsername("MutablePreference{userID=0, itemID=35, value=10000.0}");
        java.lang.String str47 = storageConfiguration25.getJdbcDriverClass();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(configuration10);
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10000 + "'", int11 == 10000);
        org.junit.Assert.assertNotNull(components12);
        org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "label" + "'", str15, "label");
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str35, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str41, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test29825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29825");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration1.getItembasedRecommenders();
        java.lang.String str3 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration13 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str14 = storageConfiguration13.getJdbcDriverClass();
        storageConfiguration13.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str17 = storageConfiguration13.getJdbcUrl();
        java.lang.String str18 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str19 = storageConfiguration13.getJdbcDriverClass();
        java.lang.String str20 = storageConfiguration13.getPassword();
        java.lang.String str21 = storageConfiguration13.getJdbcDriverClass();
        configuration1.setStorageConfiguration(storageConfiguration13);
        configuration1.setModelDirectory("value");
        org.plista.kornakapi.web.Components components25 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration26 = components25.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration27 = components25.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage28 = components25.storage();
        org.plista.kornakapi.core.storage.Storage storage29 = components25.storage();
        org.plista.kornakapi.core.config.Configuration configuration30 = components25.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig31 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double32 = factorizationbasedRecommenderConfig31.getAlpha();
        double double33 = factorizationbasedRecommenderConfig31.getLambda();
        int int34 = factorizationbasedRecommenderConfig31.getNumberOfFeatures();
        factorizationbasedRecommenderConfig31.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig31.setNumberOfFeatures((int) (short) 100);
        boolean boolean39 = factorizationbasedRecommenderConfig31.isUsesImplicitFeedback();
        configuration30.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig31);
        org.plista.kornakapi.web.Components components41 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration42 = components41.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler43 = components41.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler44 = components41.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration45 = components41.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration46 = components41.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig47 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig47.setSimilarityClass("");
        java.lang.String str50 = itembasedRecommenderConfig47.getName();
        java.lang.String str51 = itembasedRecommenderConfig47.getSimilarityClass();
        itembasedRecommenderConfig47.setName("");
        java.lang.String str54 = itembasedRecommenderConfig47.getSimilarityClass();
        configuration46.addItembasedRecommender(itembasedRecommenderConfig47);
        itembasedRecommenderConfig47.setSimilarItemsPerItem((int) (byte) 1);
        configuration30.addItembasedRecommender(itembasedRecommenderConfig47);
        java.lang.String str59 = configuration30.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig60 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str61 = itembasedRecommenderConfig60.getRetrainCronExpression();
        int int62 = itembasedRecommenderConfig60.getRetrainAfterPreferenceChanges();
        java.lang.String str63 = itembasedRecommenderConfig60.getSimilarityClass();
        itembasedRecommenderConfig60.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig60.setSimilarityClass("");
        int int68 = itembasedRecommenderConfig60.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer69 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig60);
        configuration30.addItembasedRecommender(itembasedRecommenderConfig60);
        configuration1.addItembasedRecommender(itembasedRecommenderConfig60);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList72 = configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration73 = configuration1.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig74 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double75 = factorizationbasedRecommenderConfig74.getAlpha();
        double double76 = factorizationbasedRecommenderConfig74.getLambda();
        boolean boolean77 = factorizationbasedRecommenderConfig74.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer78 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig74);
        int int79 = factorizationbasedRecommenderConfig74.getNumberOfFeatures();
        factorizationbasedRecommenderConfig74.setAlpha(100.0d);
        factorizationbasedRecommenderConfig74.setNumberOfIterations((int) (byte) 10);
        factorizationbasedRecommenderConfig74.setRetrainCronExpression("file");
        java.lang.String str86 = factorizationbasedRecommenderConfig74.getRetrainCronExpression();
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig74);
        org.plista.kornakapi.web.Components components88 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage89 = components88.storage();
        org.plista.kornakapi.core.config.Configuration configuration90 = components88.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration91 = configuration90.getStorageConfiguration();
        storageConfiguration91.setUsername("howMany");
        java.lang.String str94 = storageConfiguration91.getJdbcDriverClass();
        java.lang.String str95 = storageConfiguration91.getJdbcDriverClass();
        java.lang.String str96 = storageConfiguration91.getUsername();
        configuration1.setStorageConfiguration(storageConfiguration91);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList98 = configuration1.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "label" + "'", str3, "label");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(components25);
        org.junit.Assert.assertNotNull(configuration26);
        org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNull(storage28);
        org.junit.Assert.assertNull(storage29);
        org.junit.Assert.assertNotNull(configuration30);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(components41);
        org.junit.Assert.assertNotNull(configuration42);
        org.junit.Assert.assertNull(trainingScheduler43);
        org.junit.Assert.assertNull(trainingScheduler44);
        org.junit.Assert.assertNotNull(configuration45);
        org.junit.Assert.assertNotNull(configuration46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "" + "'", str51, "");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "value" + "'", str59, "value");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList72);
        org.junit.Assert.assertNotNull(storageConfiguration73);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "file" + "'", str86, "file");
        org.junit.Assert.assertNotNull(components88);
        org.junit.Assert.assertNull(storage89);
        org.junit.Assert.assertNotNull(configuration90);
        org.junit.Assert.assertNotNull(storageConfiguration91);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "howMany" + "'", str96, "howMany");
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList98);
    }

    @Test
    public void test29826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29826");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 10);
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int7 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.io.File file9 = null;
        org.plista.kornakapi.core.storage.Storage storage10 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender11 = null;
        // The following exception was thrown during execution in test generation
        try {
            factorizationbasedInMemoryTrainer8.train(file9, storage10, recommender11, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    }

    @Test
    public void test29827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29827");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage11 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener12 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration14 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage15 = components0.storage();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(storage11);
        org.junit.Assert.assertNotNull(preferenceChangeListener12);
        org.junit.Assert.assertNull(trainingScheduler13);
        org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNull(storage15);
    }

    @Test
    public void test29828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29828");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        mutablePreference0.setValue((float) 1L);
        java.lang.String str3 = mutablePreference0.toString();
        java.lang.String str4 = mutablePreference0.toString();
        java.lang.String str5 = mutablePreference0.toString();
        long long6 = mutablePreference0.getUserID();
        mutablePreference0.set((long) 10000, 0L, (float) 97L);
        mutablePreference0.set((long) 0, (long) 'a', (float) (short) 10);
        java.lang.String str15 = mutablePreference0.toString();
        long long16 = mutablePreference0.getItemID();
        float float17 = mutablePreference0.getValue();
        long long18 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str4, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=1.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=1.0}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=0, itemID=97, value=10.0}" + "'", str15, "MutablePreference{userID=0, itemID=97, value=10.0}");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 97L + "'", long16 == 97L);
        org.junit.Assert.assertTrue("'" + float17 + "' != '" + 10.0f + "'", float17 == 10.0f);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test29829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29829");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        long long5 = mutableCandidate0.getItemID();
        java.lang.String str6 = mutableCandidate0.getLabel();
        java.lang.String str7 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", 10000L);
        mutableCandidate0.set("MutablePreference{userID=-1, itemID=0, value=97.0}", (long) 'a');
        java.lang.String str14 = mutableCandidate0.getLabel();
        java.lang.String str15 = mutableCandidate0.getLabel();
        java.lang.String str16 = mutableCandidate0.getLabel();
        java.lang.String str17 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "itemIDs" + "'", str6, "itemIDs");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "itemIDs" + "'", str7, "itemIDs");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=-1, itemID=0, value=97.0}" + "'", str14, "MutablePreference{userID=-1, itemID=0, value=97.0}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=-1, itemID=0, value=97.0}" + "'", str15, "MutablePreference{userID=-1, itemID=0, value=97.0}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=-1, itemID=0, value=97.0}" + "'", str16, "MutablePreference{userID=-1, itemID=0, value=97.0}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=-1, itemID=0, value=97.0}" + "'", str17, "MutablePreference{userID=-1, itemID=0, value=97.0}");
    }

    @Test
    public void test29830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29830");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        java.lang.String str10 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setLambda((double) 1.0f);
        factorizationbasedRecommenderConfig0.setAlpha((double) 100.0f);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 0);
        factorizationbasedRecommenderConfig0.setName("");
        factorizationbasedRecommenderConfig0.setAlpha(35.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test29831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29831");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig3 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str6 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet7 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        setPreferenceServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet7.init((javax.servlet.ServletConfig) recommendServlet12);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet7);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        java.lang.String str16 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str17 = batchDeleteCandidatesServlet4.getServletInfo();
        batchDeleteCandidatesServlet4.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet19 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet20 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str21 = batchDeleteCandidatesServlet20.getServletInfo();
        java.lang.String str22 = batchDeleteCandidatesServlet20.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet23 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet24 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet25 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet24.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet25);
        setPreferenceServlet23.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet25);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet28 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet23.init((javax.servlet.ServletConfig) recommendServlet28);
        batchDeleteCandidatesServlet20.init((javax.servlet.ServletConfig) setPreferenceServlet23);
        batchDeleteCandidatesServlet20.destroy();
        batchDeleteCandidatesServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str34 = batchDeleteCandidatesServlet33.getServletInfo();
        batchDeleteCandidatesServlet33.destroy();
        javax.servlet.ServletConfig servletConfig36 = batchDeleteCandidatesServlet33.getServletConfig();
        batchDeleteCandidatesServlet19.init(servletConfig36);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet38 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str39 = recommendServlet38.getServletInfo();
        batchDeleteCandidatesServlet19.init((javax.servlet.ServletConfig) recommendServlet38);
        recommendServlet38.destroy();
        java.lang.String str42 = recommendServlet38.getServletInfo();
        recommendServlet38.destroy();
        java.lang.String str44 = recommendServlet38.getServletInfo();
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) recommendServlet38);
        javax.servlet.ServletConfig servletConfig46 = recommendServlet38.getServletConfig();
        javax.servlet.ServletConfig servletConfig47 = recommendServlet38.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str48 = recommendServlet38.getServletName();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(servletConfig36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "" + "'", str42, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertNull(servletConfig46);
        org.junit.Assert.assertNull(servletConfig47);
    }

    @Test
    public void test29832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29832");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=-1, itemID=10, value=10.0}", (long) ' ');
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: file", 10L);
        java.lang.String str16 = mutableCandidate0.getLabel();
        java.lang.String str17 = mutableCandidate0.getLabel();
        long long18 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemID" + "'", str9, "itemID");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: file" + "'", str16, "org.plista.kornakapi.web.InvalidParameterException: file");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: file" + "'", str17, "org.plista.kornakapi.web.InvalidParameterException: file");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10L + "'", long18 == 10L);
    }

    @Test
    public void test29833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29833");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener10 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener11 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage12 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration13 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener14 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage15 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration16 = components0.getConfiguration();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNotNull(preferenceChangeListener10);
        org.junit.Assert.assertNotNull(preferenceChangeListener11);
        org.junit.Assert.assertNull(storage12);
        org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertNotNull(preferenceChangeListener14);
        org.junit.Assert.assertNull(storage15);
        org.junit.Assert.assertNotNull(configuration16);
    }

    @Test
    public void test29834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29834");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig5 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str6 = itembasedRecommenderConfig5.getRetrainCronExpression();
        int int7 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        java.lang.String str8 = itembasedRecommenderConfig5.getSimilarityClass();
        itembasedRecommenderConfig5.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig5.setRetrainCronExpression("value");
        int int13 = itembasedRecommenderConfig5.getRetrainAfterPreferenceChanges();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig5);
        itembasedRecommenderConfig5.setSimilarityClass("itemIDs");
        int int17 = itembasedRecommenderConfig5.getSimilarItemsPerItem();
        java.lang.String str18 = itembasedRecommenderConfig5.getRetrainCronExpression();
        java.lang.String str19 = itembasedRecommenderConfig5.getRetrainCronExpression();
        itembasedRecommenderConfig5.setSimilarityClass("MutablePreference{userID=32, itemID=1, value=32.0}");
        itembasedRecommenderConfig5.setSimilarityClass("MutablePreference{userID=100, itemID=35, value=-1.0}");
        itembasedRecommenderConfig5.setSimilarItemsPerItem(0);
        int int26 = itembasedRecommenderConfig5.getSimilarItemsPerItem();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "value" + "'", str18, "value");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "value" + "'", str19, "value");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test29835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29835");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = configuration4.getStorageConfiguration();
        int int6 = configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig7 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double8 = factorizationbasedRecommenderConfig7.getAlpha();
        double double9 = factorizationbasedRecommenderConfig7.getLambda();
        int int10 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(true);
        double double13 = factorizationbasedRecommenderConfig7.getAlpha();
        java.lang.String str14 = factorizationbasedRecommenderConfig7.getRetrainCronExpression();
        int int15 = factorizationbasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        boolean boolean16 = factorizationbasedRecommenderConfig7.isUsesImplicitFeedback();
        int int17 = factorizationbasedRecommenderConfig7.getNumberOfFeatures();
        double double18 = factorizationbasedRecommenderConfig7.getLambda();
        factorizationbasedRecommenderConfig7.setAlpha(52.0d);
        java.lang.String str21 = factorizationbasedRecommenderConfig7.getName();
        configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig7);
        factorizationbasedRecommenderConfig7.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        factorizationbasedRecommenderConfig7.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig7.setRetrainAfterPreferenceChanges((int) (short) 10);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(storageConfiguration5);
// flaky:         org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10000 + "'", int6 == 10000);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test29836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29836");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining(0);
        configuration0.setModelDirectory("");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig8 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double9 = factorizationbasedRecommenderConfig8.getAlpha();
        factorizationbasedRecommenderConfig8.setLambda((double) (-1));
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig8);
        org.plista.kornakapi.web.Components components13 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = components13.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration15 = components13.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = components13.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler17 = components13.scheduler();
        org.plista.kornakapi.core.storage.Storage storage18 = components13.storage();
        org.plista.kornakapi.core.config.Configuration configuration19 = components13.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig20 = null;
        configuration19.addItembasedRecommender(itembasedRecommenderConfig20);
        configuration19.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration24 = configuration19.getStorageConfiguration();
        configuration0.setStorageConfiguration(storageConfiguration24);
        configuration0.setNumProcessorsForTraining((int) '#');
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList28 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration29 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str30 = storageConfiguration29.getJdbcDriverClass();
        storageConfiguration29.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str33 = storageConfiguration29.getJdbcUrl();
        java.lang.String str34 = storageConfiguration29.getJdbcDriverClass();
        storageConfiguration29.setJdbcDriverClass("batchSize");
        storageConfiguration29.setPassword("howMany");
        storageConfiguration29.setJdbcUrl("hi!");
        java.lang.String str41 = storageConfiguration29.getJdbcUrl();
        java.lang.String str42 = storageConfiguration29.getPassword();
        storageConfiguration29.setJdbcDriverClass("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        storageConfiguration29.setJdbcDriverClass("MutablePreference{userID=52, itemID=-1, value=52.0}");
        storageConfiguration29.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
        configuration0.setStorageConfiguration(storageConfiguration29);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList50 = configuration0.getFactorizationbasedRecommenders();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(storageConfiguration7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNotNull(components13);
        org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNull(trainingScheduler16);
        org.junit.Assert.assertNull(trainingScheduler17);
        org.junit.Assert.assertNull(storage18);
        org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertNotNull(storageConfiguration24);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "howMany" + "'", str42, "howMany");
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList50);
    }

    @Test
    public void test29837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29837");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getRetrainCronExpression();
        int int2 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=10.0}");
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(1);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer7 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) ' ');
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file14 = null;
        org.plista.kornakapi.core.storage.Storage storage15 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender16 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer13.train(file14, storage15, recommender16, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test29838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29838");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig0.setLambda((double) (short) 1);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        double double13 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getName();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 1.0d + "'", double10 == 1.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str14, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test29839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29839");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=52, itemID=32, value=0.0}");
        java.lang.String str2 = missingParameterException1.toString();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=52, itemID=32, value=0.0}" + "'", str2, "org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=52, itemID=32, value=0.0}");
    }

    @Test
    public void test29840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29840");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        javax.servlet.ServletConfig servletConfig7 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.init();
        deleteCandidateServlet2.init();
        deleteCandidateServlet2.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNull(servletConfig7);
    }

    @Test
    public void test29841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29841");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException8.addSuppressed((java.lang.Throwable) missingParameterException10);
        invalidParameterException6.addSuppressed((java.lang.Throwable) missingParameterException10);
        java.lang.Throwable[] throwableArray13 = invalidParameterException6.getSuppressed();
        java.lang.Throwable[] throwableArray14 = invalidParameterException6.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}", (java.lang.Throwable) invalidParameterException6);
        org.plista.kornakapi.web.MissingParameterException missingParameterException22 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException22);
        java.lang.Throwable[] throwableArray25 = missingParameterException22.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException26 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException22);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException27 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException26);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException28 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=10, value=10.0}", (java.lang.Throwable) invalidParameterException27);
        invalidParameterException15.addSuppressed((java.lang.Throwable) invalidParameterException28);
        java.lang.Throwable[] throwableArray30 = invalidParameterException28.getSuppressed();
        java.lang.Throwable[] throwableArray31 = invalidParameterException28.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test29842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29842");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener1 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage2 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList7 = configuration6.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components8 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration9 = components8.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = components8.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage11 = components8.storage();
        org.plista.kornakapi.core.storage.Storage storage12 = components8.storage();
        org.plista.kornakapi.core.config.Configuration configuration13 = components8.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig14 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double15 = factorizationbasedRecommenderConfig14.getAlpha();
        double double16 = factorizationbasedRecommenderConfig14.getLambda();
        int int17 = factorizationbasedRecommenderConfig14.getNumberOfFeatures();
        factorizationbasedRecommenderConfig14.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig14.setNumberOfFeatures((int) (short) 100);
        boolean boolean22 = factorizationbasedRecommenderConfig14.isUsesImplicitFeedback();
        configuration13.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig14);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration24 = configuration13.getStorageConfiguration();
        storageConfiguration24.setPassword("label");
        configuration6.setStorageConfiguration(storageConfiguration24);
        storageConfiguration24.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=100, itemID=0, value=1.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(preferenceChangeListener1);
        org.junit.Assert.assertNull(storage2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList7);
        org.junit.Assert.assertNotNull(components8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(storage11);
        org.junit.Assert.assertNull(storage12);
        org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(storageConfiguration24);
    }

    @Test
    public void test29843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29843");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        batchDeleteCandidatesServlet1.init();
        javax.servlet.ServletConfig servletConfig4 = null;
        batchDeleteCandidatesServlet1.init(servletConfig4);
        batchDeleteCandidatesServlet1.destroy();
        java.lang.String str7 = batchDeleteCandidatesServlet1.getServletInfo();
        javax.servlet.ServletConfig servletConfig8 = batchDeleteCandidatesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet9 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet10 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet10.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        setPreferenceServlet9.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet11);
        java.lang.String str14 = setPreferenceServlet9.getServletInfo();
        setPreferenceServlet9.destroy();
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet9);
        batchDeleteCandidatesServlet1.init();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration19 = batchDeleteCandidatesServlet1.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig8);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test29844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29844");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        mutableCandidate0.set("org.plista.kornakapi.web.MissingParameterException: itemID", (long) '#');
        java.lang.String str12 = mutableCandidate0.getLabel();
        java.lang.String str13 = mutableCandidate0.getLabel();
        java.lang.String str14 = mutableCandidate0.getLabel();
        java.lang.String str15 = mutableCandidate0.getLabel();
        long long16 = mutableCandidate0.getItemID();
        long long17 = mutableCandidate0.getItemID();
        java.lang.String str18 = mutableCandidate0.getLabel();
        java.lang.String str19 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str13, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str14, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str15, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 35L + "'", long16 == 35L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 35L + "'", long17 == 35L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str18, "org.plista.kornakapi.web.MissingParameterException: itemID");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: itemID" + "'", str19, "org.plista.kornakapi.web.MissingParameterException: itemID");
    }

    @Test
    public void test29845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29845");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=-1, itemID=10, value=10.0}", (long) ' ');
        mutableCandidate0.set("org.plista.kornakapi.web.InvalidParameterException: file", 10L);
        java.lang.String str16 = mutableCandidate0.getLabel();
        long long17 = mutableCandidate0.getItemID();
        java.lang.String str18 = mutableCandidate0.getLabel();
        long long19 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemID" + "'", str9, "itemID");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: file" + "'", str16, "org.plista.kornakapi.web.InvalidParameterException: file");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 10L + "'", long17 == 10L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: file" + "'", str18, "org.plista.kornakapi.web.InvalidParameterException: file");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10L + "'", long19 == 10L);
    }

    @Test
    public void test29846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29846");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) '4', (double) 0L);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) 'a', (double) 52);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer10 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean12 = fixedCandidatesIDRescorer1.isFiltered((long) 52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 52.0d + "'", double8 == 52.0d);
    }

    @Test
    public void test29847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29847");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList2 = configuration1.getFactorizationbasedRecommenders();
        java.lang.String str3 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig4.setNumberOfFeatures((int) (byte) 1);
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        factorizationbasedRecommenderConfig4.setNumberOfFeatures(10000);
        int int15 = factorizationbasedRecommenderConfig4.getNumberOfIterations();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test29848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29848");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str2 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcUrl("");
        storageConfiguration0.setJdbcUrl("");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.InvalidParameterException: file");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=100.0}");
        storageConfiguration0.setUsername("MutablePreference{userID=0, itemID=-1, value=32.0}");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file");
        java.lang.String str15 = storageConfiguration0.getUsername();
        java.lang.String str16 = storageConfiguration0.getJdbcDriverClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=0, itemID=-1, value=32.0}" + "'", str15, "MutablePreference{userID=0, itemID=-1, value=32.0}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str16, "MutablePreference{userID=0, itemID=0, value=100.0}");
    }

    @Test
    public void test29849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29849");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(10);
        java.lang.String str8 = itembasedRecommenderConfig0.getName();
        int int9 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str11 = itembasedRecommenderConfig0.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer12 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=100, itemID=0, value=0.0}");
        java.lang.String str15 = itembasedRecommenderConfig0.getSimilarityClass();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str15, "MutablePreference{userID=100, itemID=0, value=0.0}");
    }

    @Test
    public void test29850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29850");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) -1, (long) (byte) 10, (float) (short) 10);
        mutablePreference0.set((long) 10000, (long) (short) -1, 0.0f);
        mutablePreference0.setValue((float) (byte) 0);
        float float13 = mutablePreference0.getValue();
        float float14 = mutablePreference0.getValue();
        long long15 = mutablePreference0.getUserID();
        java.lang.String str16 = mutablePreference0.toString();
        java.lang.String str17 = mutablePreference0.toString();
        long long18 = mutablePreference0.getUserID();
        java.lang.String str19 = mutablePreference0.toString();
        long long20 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 0.0f + "'", float13 == 0.0f);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 0.0f + "'", float14 == 0.0f);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 10000L + "'", long15 == 10000L);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=0.0}" + "'", str16, "MutablePreference{userID=10000, itemID=-1, value=0.0}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=0.0}" + "'", str17, "MutablePreference{userID=10000, itemID=-1, value=0.0}");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 10000L + "'", long18 == 10000L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=0.0}" + "'", str19, "MutablePreference{userID=10000, itemID=-1, value=0.0}");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 10000L + "'", long20 == 10000L);
    }

    @Test
    public void test29851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29851");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration1.getItembasedRecommenders();
        java.lang.String str3 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList12 = configuration1.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components13 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration14 = components13.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler15 = components13.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = components13.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration17 = components13.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration18 = components13.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList19 = configuration18.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str21 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str24 = storageConfiguration20.getJdbcUrl();
        java.lang.String str25 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str26 = storageConfiguration20.getJdbcDriverClass();
        java.lang.String str27 = storageConfiguration20.getJdbcDriverClass();
        configuration18.setStorageConfiguration(storageConfiguration20);
        configuration1.setStorageConfiguration(storageConfiguration20);
        java.lang.String str30 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.Configuration configuration31 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList32 = configuration31.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList33 = configuration31.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration34 = configuration31.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList35 = configuration31.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig36 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig36.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer39 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig36);
        itembasedRecommenderConfig36.setRetrainCronExpression("");
        itembasedRecommenderConfig36.setSimilarItemsPerItem(10);
        java.lang.String str44 = itembasedRecommenderConfig36.getName();
        java.lang.String str45 = itembasedRecommenderConfig36.getSimilarityClass();
        configuration31.addItembasedRecommender(itembasedRecommenderConfig36);
        java.lang.String str47 = itembasedRecommenderConfig36.getSimilarityClass();
        int int48 = itembasedRecommenderConfig36.getSimilarItemsPerItem();
        configuration1.addItembasedRecommender(itembasedRecommenderConfig36);
        int int50 = configuration1.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.Configuration configuration51 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList52 = configuration51.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList53 = configuration51.getItembasedRecommenders();
        configuration51.setNumProcessorsForTraining((int) (byte) 1);
        configuration51.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration58 = configuration51.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig59 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double60 = factorizationbasedRecommenderConfig59.getAlpha();
        double double61 = factorizationbasedRecommenderConfig59.getLambda();
        int int62 = factorizationbasedRecommenderConfig59.getNumberOfFeatures();
        factorizationbasedRecommenderConfig59.setUsesImplicitFeedback(true);
        double double65 = factorizationbasedRecommenderConfig59.getAlpha();
        java.lang.String str66 = factorizationbasedRecommenderConfig59.getRetrainCronExpression();
        java.lang.String str67 = factorizationbasedRecommenderConfig59.getRetrainCronExpression();
        factorizationbasedRecommenderConfig59.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig59.setNumberOfIterations((int) '4');
        int int72 = factorizationbasedRecommenderConfig59.getNumberOfIterations();
        factorizationbasedRecommenderConfig59.setAlpha((double) 1);
        double double75 = factorizationbasedRecommenderConfig59.getLambda();
        double double76 = factorizationbasedRecommenderConfig59.getLambda();
        int int77 = factorizationbasedRecommenderConfig59.getNumberOfIterations();
        configuration51.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig59);
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig59);
        int int80 = factorizationbasedRecommenderConfig59.getNumberOfFeatures();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str3, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList12);
        org.junit.Assert.assertNotNull(components13);
        org.junit.Assert.assertNotNull(configuration14);
        org.junit.Assert.assertNull(trainingScheduler15);
        org.junit.Assert.assertNull(trainingScheduler16);
        org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNotNull(configuration18);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
// flaky:         org.junit.Assert.assertEquals("'" + str30 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str30, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList32);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList33);
        org.junit.Assert.assertNull(storageConfiguration34);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList35);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
// flaky:         org.junit.Assert.assertTrue("'" + int50 + "' != '" + 32 + "'", int50 == 32);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList52);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList53);
        org.junit.Assert.assertNull(storageConfiguration58);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 52 + "'", int77 == 52);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test29852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29852");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener3);
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components10 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration11 = components10.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = components10.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = components10.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler14 = components10.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener15 = components10.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration16 = components10.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener17 = components10.preferenceChangeListener();
        delegatingPreferenceChangeListener3.addDelegate(preferenceChangeListener17);
// flaky:         delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener22 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener22);
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener28 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener28);
        delegatingPreferenceChangeListener28.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener28);
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
// flaky:         delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener38 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener40 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener40);
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener45 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener45);
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener35);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler51 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener54 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler51, "org.plista.kornakapi.web.MissingParameterException: file", (int) 'a');
        inMemoryPreferenceChangeListener54.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener54.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener54.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener54.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener54);
        org.junit.Assert.assertNotNull(components10);
        org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(trainingScheduler13);
        org.junit.Assert.assertNull(trainingScheduler14);
        org.junit.Assert.assertNotNull(preferenceChangeListener15);
        org.junit.Assert.assertNotNull(configuration16);
        org.junit.Assert.assertNotNull(preferenceChangeListener17);
    }

    @Test
    public void test29853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29853");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) 10L);
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(97);
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        double double13 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10.0d + "'", double11 == 10.0d);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
    }

    @Test
    public void test29854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29854");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str6 = factorizationbasedRecommenderConfig0.getName();
        boolean boolean7 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (short) 0);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test29855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29855");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration4.getItembasedRecommenders();
        configuration4.setNumProcessorsForTraining((int) (short) 1);
        org.plista.kornakapi.core.config.Configuration configuration8 = new org.plista.kornakapi.core.config.Configuration();
        configuration8.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig11 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double12 = factorizationbasedRecommenderConfig11.getAlpha();
        double double13 = factorizationbasedRecommenderConfig11.getLambda();
        configuration8.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig11);
        java.lang.String str15 = configuration8.getModelDirectory();
        int int16 = configuration8.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList17 = configuration8.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration18 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str19 = storageConfiguration18.getJdbcDriverClass();
        storageConfiguration18.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str22 = storageConfiguration18.getJdbcUrl();
        java.lang.String str23 = storageConfiguration18.getJdbcUrl();
        storageConfiguration18.setJdbcUrl("label");
        configuration8.setStorageConfiguration(storageConfiguration18);
        java.lang.String str27 = storageConfiguration18.getPassword();
        storageConfiguration18.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: ");
        configuration4.setStorageConfiguration(storageConfiguration18);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration31 = configuration4.getStorageConfiguration();
        storageConfiguration31.setJdbcUrl("MutablePreference{userID=0, itemID=100, value=97.0}");
        java.lang.String str34 = storageConfiguration31.getJdbcDriverClass();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(storageConfiguration31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: " + "'", str34, "org.plista.kornakapi.web.InvalidParameterException: ");
    }

    @Test
    public void test29856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29856");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        int int4 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        java.lang.String str7 = configuration0.getModelDirectory();
        org.plista.kornakapi.web.Components components8 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration9 = components8.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration9.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str12 = storageConfiguration11.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration11.getUsername();
        storageConfiguration11.setPassword("label");
        configuration9.setStorageConfiguration(storageConfiguration11);
        configuration9.setNumProcessorsForTraining(10);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList19 = configuration9.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration20 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str21 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str24 = storageConfiguration20.getJdbcUrl();
        java.lang.String str25 = storageConfiguration20.getJdbcDriverClass();
        storageConfiguration20.setJdbcDriverClass("batchSize");
        java.lang.String str28 = storageConfiguration20.getPassword();
        java.lang.String str29 = storageConfiguration20.getJdbcUrl();
        storageConfiguration20.setPassword("org.plista.kornakapi.web.MissingParameterException: file");
        storageConfiguration20.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=1.0}");
        configuration9.setStorageConfiguration(storageConfiguration20);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList35 = configuration9.getItembasedRecommenders();
        org.plista.kornakapi.core.config.Configuration configuration36 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList37 = configuration36.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration38 = configuration36.getStorageConfiguration();
        configuration36.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList41 = configuration36.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig42 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig42.setSimilarityClass("");
        java.lang.String str45 = itembasedRecommenderConfig42.getName();
        java.lang.String str46 = itembasedRecommenderConfig42.getSimilarityClass();
        java.lang.String str47 = itembasedRecommenderConfig42.getSimilarityClass();
        int int48 = itembasedRecommenderConfig42.getSimilarItemsPerItem();
        itembasedRecommenderConfig42.setSimilarItemsPerItem((int) (byte) 1);
        java.lang.String str51 = itembasedRecommenderConfig42.getRetrainCronExpression();
        configuration36.addItembasedRecommender(itembasedRecommenderConfig42);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer53 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig42);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer54 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig42);
        configuration9.addItembasedRecommender(itembasedRecommenderConfig42);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer56 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig42);
        int int57 = itembasedRecommenderConfig42.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig42);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer59 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig42);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(components8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList35);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList37);
        org.junit.Assert.assertNull(storageConfiguration38);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
    }

    @Test
    public void test29857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29857");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig11 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig11.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig11);
        itembasedRecommenderConfig11.setRetrainCronExpression("");
        itembasedRecommenderConfig11.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig11.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer21 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig11);
        itembasedRecommenderConfig11.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=32.0}");
        itembasedRecommenderConfig11.setRetrainAfterPreferenceChanges((int) (byte) -1);
        configuration10.addItembasedRecommender(itembasedRecommenderConfig11);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList27 = configuration10.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList27);
    }

    @Test
    public void test29858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29858");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = components0.getConfiguration();
        configuration11.setNumProcessorsForTraining(100);
        java.lang.String str14 = configuration11.getModelDirectory();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNotNull(configuration11);
// flaky:         org.junit.Assert.assertEquals("'" + str14 + "' != '" + "itemID" + "'", str14, "itemID");
    }

    @Test
    public void test29859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29859");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        int int3 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig4 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str5 = itembasedRecommenderConfig4.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig4);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        itembasedRecommenderConfig7.setSimilarityClass("");
        java.lang.String str11 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setName("label");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig7);
        org.plista.kornakapi.core.config.Configuration configuration15 = new org.plista.kornakapi.core.config.Configuration();
        int int16 = configuration15.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList17 = configuration15.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig18 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig18.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer21 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig18);
        itembasedRecommenderConfig18.setRetrainCronExpression("");
        itembasedRecommenderConfig18.setSimilarItemsPerItem(10);
        java.lang.String str26 = itembasedRecommenderConfig18.getName();
        java.lang.String str27 = itembasedRecommenderConfig18.getName();
        int int28 = itembasedRecommenderConfig18.getSimilarItemsPerItem();
        configuration15.addItembasedRecommender(itembasedRecommenderConfig18);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList30 = configuration15.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig31 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig31.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer34 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig31);
        itembasedRecommenderConfig31.setRetrainCronExpression("");
        itembasedRecommenderConfig31.setName("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        itembasedRecommenderConfig31.setSimilarItemsPerItem((int) (byte) 100);
        java.lang.String str41 = itembasedRecommenderConfig31.getRetrainCronExpression();
        int int42 = itembasedRecommenderConfig31.getSimilarItemsPerItem();
        configuration15.addItembasedRecommender(itembasedRecommenderConfig31);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig31);
        java.lang.String str45 = itembasedRecommenderConfig31.getRetrainCronExpression();
        int int46 = itembasedRecommenderConfig31.getSimilarItemsPerItem();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList17);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList30);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 100 + "'", int46 == 100);
    }

    @Test
    public void test29860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29860");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        double double4 = factorizationbasedRecommenderConfig0.getLambda();
        java.lang.String str5 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("hi!");
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        java.lang.String str10 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        boolean boolean11 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        boolean boolean12 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test29861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29861");
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.core.config.Configuration configuration1 = org.plista.kornakapi.core.config.Configuration.fromXML("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=35, itemID=35, value=0.0}");
            org.junit.Assert.fail("Expected exception of type com.thoughtworks.xstream.io.StreamException; message:  : only whitespace content allowed before start tag and not o (position: START_DOCUMENT seen o... @1:1) ");
        } catch (com.thoughtworks.xstream.io.StreamException e) {
            // Expected exception.
        }
    }

    @Test
    public void test29862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29862");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        java.lang.String str3 = itembasedRecommenderConfig0.getName();
        java.lang.String str4 = itembasedRecommenderConfig0.getSimilarityClass();
        java.lang.String str5 = itembasedRecommenderConfig0.getSimilarityClass();
        int int6 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setSimilarItemsPerItem((int) (byte) 1);
        java.lang.String str9 = itembasedRecommenderConfig0.getName();
        itembasedRecommenderConfig0.setSimilarityClass("MutablePreference{userID=1, itemID=10, value=10000.0}");
        itembasedRecommenderConfig0.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: userID");
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) '#');
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test29863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29863");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("MutablePreference{userID=100, itemID=0, value=0.0}");
        storageConfiguration0.setPassword("itemID");
        java.lang.String str14 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcDriverClass("hi!");
        storageConfiguration0.setJdbcUrl("");
        storageConfiguration0.setUsername("MutablePreference{userID=10000, itemID=32, value=10.0}");
        java.lang.String str21 = storageConfiguration0.getPassword();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str14, "MutablePreference{userID=100, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "itemID" + "'", str21, "itemID");
    }

    @Test
    public void test29864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29864");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration1.getItembasedRecommenders();
        java.lang.String str3 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig4 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double5 = factorizationbasedRecommenderConfig4.getAlpha();
        double double6 = factorizationbasedRecommenderConfig4.getLambda();
        int int7 = factorizationbasedRecommenderConfig4.getNumberOfFeatures();
        factorizationbasedRecommenderConfig4.setNumberOfIterations(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig4);
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig4);
        configuration1.setModelDirectory("hi!");
        org.plista.kornakapi.web.Components components14 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration15 = components14.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler16 = components14.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler17 = components14.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration18 = components14.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration19 = components14.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig20 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig20.setSimilarityClass("");
        java.lang.String str23 = itembasedRecommenderConfig20.getName();
        java.lang.String str24 = itembasedRecommenderConfig20.getSimilarityClass();
        itembasedRecommenderConfig20.setName("");
        java.lang.String str27 = itembasedRecommenderConfig20.getSimilarityClass();
        configuration19.addItembasedRecommender(itembasedRecommenderConfig20);
        configuration19.setModelDirectory("");
        org.plista.kornakapi.core.config.Configuration configuration31 = new org.plista.kornakapi.core.config.Configuration();
        configuration31.setNumProcessorsForTraining((int) (short) 100);
        configuration31.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig36 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str37 = itembasedRecommenderConfig36.getRetrainCronExpression();
        int int38 = itembasedRecommenderConfig36.getRetrainAfterPreferenceChanges();
        java.lang.String str39 = itembasedRecommenderConfig36.getSimilarityClass();
        itembasedRecommenderConfig36.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig36.setRetrainCronExpression("value");
        int int44 = itembasedRecommenderConfig36.getRetrainAfterPreferenceChanges();
        configuration31.addItembasedRecommender(itembasedRecommenderConfig36);
        itembasedRecommenderConfig36.setSimilarityClass("itemIDs");
        configuration19.addItembasedRecommender(itembasedRecommenderConfig36);
        configuration1.addItembasedRecommender(itembasedRecommenderConfig36);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer50 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig36);
        java.lang.String str51 = itembasedRecommenderConfig36.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer52 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig36);
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer53 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig36);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(components14);
        org.junit.Assert.assertNotNull(configuration15);
        org.junit.Assert.assertNull(trainingScheduler16);
        org.junit.Assert.assertNull(trainingScheduler17);
        org.junit.Assert.assertNotNull(configuration18);
        org.junit.Assert.assertNotNull(configuration19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "itemIDs" + "'", str51, "itemIDs");
    }

    @Test
    public void test29865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29865");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        int int3 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig4 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str5 = itembasedRecommenderConfig4.getRetrainCronExpression();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig4);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        itembasedRecommenderConfig7.setSimilarityClass("");
        java.lang.String str11 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setName("label");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig7);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration15.getJdbcUrl();
        java.lang.String str20 = storageConfiguration15.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration15.getJdbcDriverClass();
        java.lang.String str22 = storageConfiguration15.getJdbcDriverClass();
        java.lang.String str23 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        configuration0.setStorageConfiguration(storageConfiguration15);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList27 = configuration0.getItembasedRecommenders();
        configuration0.setNumProcessorsForTraining(0);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig30 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double31 = factorizationbasedRecommenderConfig30.getAlpha();
        double double32 = factorizationbasedRecommenderConfig30.getLambda();
        int int33 = factorizationbasedRecommenderConfig30.getNumberOfFeatures();
        factorizationbasedRecommenderConfig30.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig30.setNumberOfFeatures((int) (short) 100);
        int int38 = factorizationbasedRecommenderConfig30.getNumberOfIterations();
        factorizationbasedRecommenderConfig30.setNumberOfIterations(1);
        int int41 = factorizationbasedRecommenderConfig30.getNumberOfFeatures();
        java.lang.String str42 = factorizationbasedRecommenderConfig30.getName();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig30);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList27);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 100 + "'", int41 == 100);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test29866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29866");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "MutablePreference{userID=-1, itemID=97, value=52.0}", (int) (byte) 100);
        inMemoryPreferenceChangeListener3.notifyOfPreferenceChange();
    }

    @Test
    public void test29867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29867");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore(10L, (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer9 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) 10);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) (-1));
        double double18 = fixedCandidatesIDRescorer1.rescore((long) 0, 0.0d);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean20 = fixedCandidatesIDRescorer1.isFiltered((long) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 10.0d + "'", double12 == 10.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + (-1.0d) + "'", double15 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
    }

    @Test
    public void test29868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29868");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setLambda((double) 1);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        double double7 = factorizationbasedRecommenderConfig0.getAlpha();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test29869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29869");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) -1, (long) (byte) 10, (float) (short) 10);
        mutablePreference0.set((long) 10000, (long) (short) -1, 0.0f);
        mutablePreference0.setValue((float) (byte) 0);
        float float13 = mutablePreference0.getValue();
        mutablePreference0.setValue(10.0f);
        java.lang.String str16 = mutablePreference0.toString();
        java.lang.String str17 = mutablePreference0.toString();
        float float18 = mutablePreference0.getValue();
        float float19 = mutablePreference0.getValue();
        float float20 = mutablePreference0.getValue();
        long long21 = mutablePreference0.getItemID();
        long long22 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + 0.0f + "'", float13 == 0.0f);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str16, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "MutablePreference{userID=10000, itemID=-1, value=10.0}" + "'", str17, "MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.junit.Assert.assertTrue("'" + float18 + "' != '" + 10.0f + "'", float18 == 10.0f);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 10.0f + "'", float19 == 10.0f);
        org.junit.Assert.assertTrue("'" + float20 + "' != '" + 10.0f + "'", float20 == 10.0f);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + (-1L) + "'", long21 == (-1L));
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10000L + "'", long22 == 10000L);
    }

    @Test
    public void test29870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29870");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str7 = storageConfiguration6.getJdbcDriverClass();
        storageConfiguration6.setPassword("itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration6);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration0.getStorageConfiguration();
        storageConfiguration11.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration11.getPassword();
        storageConfiguration11.setUsername("howMany");
        storageConfiguration11.setPassword("hi!");
        storageConfiguration11.setJdbcUrl("MutablePreference{userID=10000, itemID=-1, value=10.0}");
        java.lang.String str21 = storageConfiguration11.getUsername();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "itemIDs" + "'", str14, "itemIDs");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "howMany" + "'", str21, "howMany");
    }

    @Test
    public void test29871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29871");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        configuration4.setModelDirectory("userID");
        configuration4.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str11 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str14 = storageConfiguration10.getJdbcUrl();
        java.lang.String str15 = storageConfiguration10.getJdbcDriverClass();
        storageConfiguration10.setJdbcUrl("hi!");
        java.lang.String str18 = storageConfiguration10.getPassword();
        storageConfiguration10.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: file");
        java.lang.String str21 = storageConfiguration10.getPassword();
        storageConfiguration10.setJdbcDriverClass("file");
        configuration4.setStorageConfiguration(storageConfiguration10);
        storageConfiguration10.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        java.lang.String str27 = storageConfiguration10.getUsername();
        storageConfiguration10.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=52, value=0.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(storageConfiguration9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str27, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
    }

    @Test
    public void test29872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29872");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) 'a');
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        int int9 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) (-1.0f));
        double double13 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean14 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setLambda((double) ' ');
        int int17 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test29873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29873");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double9 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setLambda((double) 10000.0f);
        java.lang.String str12 = factorizationbasedRecommenderConfig0.getName();
        factorizationbasedRecommenderConfig0.setLambda(0.0d);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test29874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29874");
        java.lang.Throwable throwable2 = null;
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException3 = new org.plista.kornakapi.web.InvalidParameterException("hi!", throwable2);
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException14 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException12.addSuppressed((java.lang.Throwable) missingParameterException14);
        invalidParameterException10.addSuppressed((java.lang.Throwable) missingParameterException14);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException17 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException10);
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException21);
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.MissingParameterException missingParameterException26 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException29 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException29);
        missingParameterException26.addSuppressed((java.lang.Throwable) invalidParameterException30);
        invalidParameterException17.addSuppressed((java.lang.Throwable) missingParameterException26);
        org.plista.kornakapi.web.MissingParameterException missingParameterException35 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException35);
        org.plista.kornakapi.web.MissingParameterException missingParameterException40 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException41 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException40);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException42 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException40);
        org.plista.kornakapi.web.MissingParameterException missingParameterException44 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException46 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException44.addSuppressed((java.lang.Throwable) missingParameterException46);
        invalidParameterException42.addSuppressed((java.lang.Throwable) missingParameterException46);
        java.lang.Throwable[] throwableArray49 = missingParameterException46.getSuppressed();
        invalidParameterException36.addSuppressed((java.lang.Throwable) missingParameterException46);
        missingParameterException26.addSuppressed((java.lang.Throwable) invalidParameterException36);
        java.lang.Throwable[] throwableArray52 = invalidParameterException36.getSuppressed();
        java.lang.Throwable[] throwableArray53 = invalidParameterException36.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException57 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException59 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException57.addSuppressed((java.lang.Throwable) missingParameterException59);
        java.lang.Throwable[] throwableArray61 = missingParameterException59.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException62 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException59);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException63 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) invalidParameterException62);
        invalidParameterException36.addSuppressed((java.lang.Throwable) invalidParameterException63);
        invalidParameterException3.addSuppressed((java.lang.Throwable) invalidParameterException63);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException66 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=35, itemID=35, value=0.0}", (java.lang.Throwable) invalidParameterException63);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertNotNull(throwableArray61);
    }

    @Test
    public void test29875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29875");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        java.lang.String str14 = batchDeleteCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig15 = batchDeleteCandidatesServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig16 = batchDeleteCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str18 = batchDeleteCandidatesServlet17.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet19 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet20 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet20.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        setPreferenceServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        batchDeleteCandidatesServlet21.destroy();
        batchDeleteCandidatesServlet21.destroy();
        batchDeleteCandidatesServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet21);
        batchDeleteCandidatesServlet21.init();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertNotNull(servletConfig15);
        org.junit.Assert.assertNotNull(servletConfig16);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test29876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29876");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener12 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener12.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener12.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener14);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener12);
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener19 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener19.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener27 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener27.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener29.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener27.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener29);
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener27);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler33 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener36 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler33, "label", (int) ' ');
        inMemoryPreferenceChangeListener36.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener36);
        delegatingPreferenceChangeListener19.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener36);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener19);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
    }

    @Test
    public void test29877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29877");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage2 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration3 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage10 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap11 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap12 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler13 = null;
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener14.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener16);
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener22 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler26 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener29 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler26, "label", (int) '#');
        delegatingPreferenceChangeListener22.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener29);
        inMemoryPreferenceChangeListener29.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener29.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener29);
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener35 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener38 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener40 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener40);
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler44 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener47 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler44, "label", (int) ' ');
        inMemoryPreferenceChangeListener47.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener47);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener50 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener50.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener52 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener50.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener52);
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener35.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener52);
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener52);
        delegatingPreferenceChangeListener52.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener60 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener63 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener63.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener65 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener65.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener63.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener65);
        delegatingPreferenceChangeListener60.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener63);
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener70 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener70.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener70.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener70.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener60.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener70);
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener52.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener60);
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration9, storage10, strMap11, strMap12, trainingScheduler13, (org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener52);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNull(storage2);
        org.junit.Assert.assertNotNull(configuration3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNotNull(configuration9);
    }

    @Test
    public void test29878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29878");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        int int8 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        double double15 = factorizationbasedRecommenderConfig13.getLambda();
        int int16 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(true);
        double double19 = factorizationbasedRecommenderConfig13.getAlpha();
        java.lang.String str20 = factorizationbasedRecommenderConfig13.getRetrainCronExpression();
        int int21 = factorizationbasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        int int22 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        factorizationbasedRecommenderConfig13.setNumberOfFeatures((int) '#');
        double double25 = factorizationbasedRecommenderConfig13.getLambda();
        boolean boolean26 = factorizationbasedRecommenderConfig13.isUsesImplicitFeedback();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        factorizationbasedRecommenderConfig13.setName("MutablePreference{userID=-1, itemID=10, value=10.0}");
        int int30 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        double double31 = factorizationbasedRecommenderConfig13.getLambda();
        double double32 = factorizationbasedRecommenderConfig13.getAlpha();
        factorizationbasedRecommenderConfig13.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig13.setAlpha(52.0d);
        boolean boolean37 = factorizationbasedRecommenderConfig13.isUsesImplicitFeedback();
        int int38 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer39 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig13);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 0.0d + "'", double32 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
    }

    @Test
    public void test29879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29879");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        java.lang.String str3 = batchSetPreferencesServlet1.getServletInfo();
        java.lang.String str4 = batchSetPreferencesServlet1.getServletInfo();
        batchSetPreferencesServlet1.destroy();
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet1.log("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=0, value=32.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test29880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29880");
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet0 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str1 = recommendServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig2 = recommendServlet0.getServletConfig();
        java.lang.String str3 = recommendServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig4 = recommendServlet0.getServletConfig();
        javax.servlet.ServletConfig servletConfig5 = recommendServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = recommendServlet0.getInitParameter("MutablePreference{userID=100, itemID=35, value=97.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNull(servletConfig5);
    }

    @Test
    public void test29881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29881");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (-1.0f));
        double double12 = fixedCandidatesIDRescorer1.rescore((long) 10, (double) 100);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer13 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer14 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer16 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer17 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = fixedCandidatesIDRescorer1.isFiltered((long) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + (-1.0d) + "'", double9 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 100.0d + "'", double12 == 100.0d);
    }

    @Test
    public void test29882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29882");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration1.getItembasedRecommenders();
        java.lang.String str3 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = configuration1.getStorageConfiguration();
        configuration1.setNumProcessorsForTraining((int) '#');
        configuration1.setModelDirectory("value");
        org.plista.kornakapi.web.Components components9 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration10 = components9.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = components9.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = components9.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration13 = components9.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = configuration13.getStorageConfiguration();
        int int15 = configuration13.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig16 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double17 = factorizationbasedRecommenderConfig16.getAlpha();
        double double18 = factorizationbasedRecommenderConfig16.getLambda();
        int int19 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        factorizationbasedRecommenderConfig16.setUsesImplicitFeedback(true);
        double double22 = factorizationbasedRecommenderConfig16.getAlpha();
        java.lang.String str23 = factorizationbasedRecommenderConfig16.getRetrainCronExpression();
        int int24 = factorizationbasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        boolean boolean25 = factorizationbasedRecommenderConfig16.isUsesImplicitFeedback();
        int int26 = factorizationbasedRecommenderConfig16.getNumberOfFeatures();
        double double27 = factorizationbasedRecommenderConfig16.getLambda();
        factorizationbasedRecommenderConfig16.setAlpha(52.0d);
        java.lang.String str30 = factorizationbasedRecommenderConfig16.getName();
        configuration13.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        boolean boolean32 = factorizationbasedRecommenderConfig16.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer33 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig16);
        factorizationbasedRecommenderConfig16.setNumberOfFeatures(0);
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig16);
        factorizationbasedRecommenderConfig16.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig16.setName("MutablePreference{userID=-1, itemID=10, value=100.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "itemID" + "'", str3, "itemID");
        org.junit.Assert.assertNotNull(storageConfiguration4);
        org.junit.Assert.assertNotNull(components9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(trainingScheduler12);
        org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertNotNull(storageConfiguration14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 35 + "'", int15 == 35);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 0.0d + "'", double17 == 0.0d);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 0.0d + "'", double22 == 0.0d);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test29883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29883");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int4 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setAlpha((double) (-1.0f));
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getName();
        java.lang.Class<?> wildcardClass8 = factorizationbasedRecommenderConfig0.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test29884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29884");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList8 = configuration7.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList9 = configuration7.getFactorizationbasedRecommenders();
        java.lang.Class<?> wildcardClass10 = configuration7.getClass();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList8);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test29885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29885");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        java.lang.String str16 = configuration5.getModelDirectory();
        int int17 = configuration5.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig18 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double19 = factorizationbasedRecommenderConfig18.getAlpha();
        double double20 = factorizationbasedRecommenderConfig18.getLambda();
        int int21 = factorizationbasedRecommenderConfig18.getNumberOfFeatures();
        java.lang.String str22 = factorizationbasedRecommenderConfig18.getRetrainCronExpression();
        int int23 = factorizationbasedRecommenderConfig18.getNumberOfFeatures();
        factorizationbasedRecommenderConfig18.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig18.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double28 = factorizationbasedRecommenderConfig18.getLambda();
        factorizationbasedRecommenderConfig18.setAlpha((double) (byte) 0);
        factorizationbasedRecommenderConfig18.setLambda((double) (short) 100);
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig18);
        factorizationbasedRecommenderConfig18.setNumberOfFeatures((int) (byte) 10);
        factorizationbasedRecommenderConfig18.setLambda(0.0d);
        factorizationbasedRecommenderConfig18.setNumberOfFeatures(0);
        boolean boolean40 = factorizationbasedRecommenderConfig18.isUsesImplicitFeedback();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "value" + "'", str16, "value");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 35 + "'", int17 == 35);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test29886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29886");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.web.Components components3 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration4 = components3.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components3.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components3.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration7 = components3.getConfiguration();
        java.lang.String str8 = configuration7.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration7.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components10 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration11 = components10.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration12 = components10.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage13 = components10.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener14 = components10.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler15 = components10.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener16 = components10.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration17 = components10.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig18 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig18.setSimilarityClass("");
        java.lang.String str21 = itembasedRecommenderConfig18.getName();
        java.lang.String str22 = itembasedRecommenderConfig18.getSimilarityClass();
        java.lang.String str23 = itembasedRecommenderConfig18.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer24 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig18);
        configuration17.addItembasedRecommender(itembasedRecommenderConfig18);
        configuration7.addItembasedRecommender(itembasedRecommenderConfig18);
        configuration2.addItembasedRecommender(itembasedRecommenderConfig18);
        itembasedRecommenderConfig18.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
        itembasedRecommenderConfig18.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: howMany");
        itembasedRecommenderConfig18.setSimilarItemsPerItem(97);
        java.lang.String str34 = itembasedRecommenderConfig18.getSimilarityClass();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNotNull(components3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "value" + "'", str8, "value");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNotNull(components10);
        org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertNull(storage13);
        org.junit.Assert.assertNotNull(preferenceChangeListener14);
        org.junit.Assert.assertNull(trainingScheduler15);
        org.junit.Assert.assertNotNull(preferenceChangeListener16);
        org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: howMany" + "'", str34, "org.plista.kornakapi.web.InvalidParameterException: howMany");
    }

    @Test
    public void test29887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29887");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        java.lang.String str16 = batchDeleteCandidatesServlet14.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet17 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet19 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        setPreferenceServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet17.init((javax.servlet.ServletConfig) recommendServlet22);
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) setPreferenceServlet17);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet25 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet26 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet27 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet26.init((javax.servlet.ServletConfig) batchSetPreferencesServlet27);
        javax.servlet.ServletConfig servletConfig29 = batchSetPreferencesServlet26.getServletConfig();
        addCandidateServlet25.init((javax.servlet.ServletConfig) batchSetPreferencesServlet26);
        javax.servlet.ServletConfig servletConfig31 = addCandidateServlet25.getServletConfig();
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) addCandidateServlet25);
        javax.servlet.ServletConfig servletConfig33 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet14);
        javax.servlet.ServletConfig servletConfig35 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet14.init();
        java.lang.String str37 = batchDeleteCandidatesServlet14.getServletInfo();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet38 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet39 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet40 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet39.init((javax.servlet.ServletConfig) batchSetPreferencesServlet40);
        javax.servlet.ServletConfig servletConfig42 = batchSetPreferencesServlet39.getServletConfig();
        addCandidateServlet38.init((javax.servlet.ServletConfig) batchSetPreferencesServlet39);
        batchSetPreferencesServlet39.destroy();
        java.lang.String str45 = batchSetPreferencesServlet39.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet46 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str47 = trainServlet46.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet48 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet48.destroy();
        javax.servlet.ServletConfig servletConfig50 = deleteCandidateServlet48.getServletConfig();
        deleteCandidateServlet48.destroy();
        trainServlet46.init((javax.servlet.ServletConfig) deleteCandidateServlet48);
        javax.servlet.ServletConfig servletConfig53 = deleteCandidateServlet48.getServletConfig();
        batchSetPreferencesServlet39.init((javax.servlet.ServletConfig) deleteCandidateServlet48);
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet55 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet55.init();
        deleteCandidateServlet48.init((javax.servlet.ServletConfig) deleteCandidateServlet55);
        deleteCandidateServlet48.init();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet59 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet60 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet61 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet60.init((javax.servlet.ServletConfig) batchSetPreferencesServlet61);
        javax.servlet.ServletConfig servletConfig63 = batchSetPreferencesServlet60.getServletConfig();
        addCandidateServlet59.init((javax.servlet.ServletConfig) batchSetPreferencesServlet60);
        batchSetPreferencesServlet60.destroy();
        java.lang.String str66 = batchSetPreferencesServlet60.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet67 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet67.init();
        setPreferenceServlet67.init();
        setPreferenceServlet67.destroy();
        javax.servlet.ServletConfig servletConfig71 = setPreferenceServlet67.getServletConfig();
        java.lang.String str72 = setPreferenceServlet67.getServletInfo();
        batchSetPreferencesServlet60.init((javax.servlet.ServletConfig) setPreferenceServlet67);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet74 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet75 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet76 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet75.init((javax.servlet.ServletConfig) batchSetPreferencesServlet76);
        javax.servlet.ServletConfig servletConfig78 = batchSetPreferencesServlet75.getServletConfig();
        addCandidateServlet74.init((javax.servlet.ServletConfig) batchSetPreferencesServlet75);
        batchSetPreferencesServlet75.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet81 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str82 = recommendServlet81.getServletInfo();
        javax.servlet.ServletConfig servletConfig83 = recommendServlet81.getServletConfig();
        java.lang.String str84 = recommendServlet81.getServletInfo();
        batchSetPreferencesServlet75.init((javax.servlet.ServletConfig) recommendServlet81);
        javax.servlet.ServletConfig servletConfig86 = null;
        recommendServlet81.init(servletConfig86);
        batchSetPreferencesServlet60.init((javax.servlet.ServletConfig) recommendServlet81);
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet89 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet89.destroy();
        batchSetPreferencesServlet60.init((javax.servlet.ServletConfig) deleteCandidateServlet89);
        deleteCandidateServlet89.init();
        deleteCandidateServlet48.init((javax.servlet.ServletConfig) deleteCandidateServlet89);
        batchDeleteCandidatesServlet14.init((javax.servlet.ServletConfig) deleteCandidateServlet89);
        java.lang.String str95 = batchDeleteCandidatesServlet14.getServletInfo();
        javax.servlet.ServletConfig servletConfig96 = null;
        batchDeleteCandidatesServlet14.init(servletConfig96);
        javax.servlet.ServletConfig servletConfig98 = batchDeleteCandidatesServlet14.getServletConfig();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(servletConfig29);
        org.junit.Assert.assertNotNull(servletConfig31);
        org.junit.Assert.assertNotNull(servletConfig33);
        org.junit.Assert.assertNotNull(servletConfig35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(servletConfig42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertNull(servletConfig50);
        org.junit.Assert.assertNull(servletConfig53);
        org.junit.Assert.assertNotNull(servletConfig63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "" + "'", str66, "");
        org.junit.Assert.assertNull(servletConfig71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertNotNull(servletConfig78);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNull(servletConfig83);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "" + "'", str84, "");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "" + "'", str95, "");
        org.junit.Assert.assertNull(servletConfig98);
    }

    @Test
    public void test29888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29888");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str16 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.init();
        java.lang.String str18 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.destroy();
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        java.lang.String str21 = batchDeleteCandidatesServlet15.getServletInfo();
        javax.servlet.ServletConfig servletConfig22 = batchDeleteCandidatesServlet15.getServletConfig();
        batchDeleteCandidatesServlet15.destroy();
        // The following exception was thrown during execution in test generation
        try {
            java.util.Enumeration enumeration24 = batchDeleteCandidatesServlet15.getInitParameterNames();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNull(servletConfig22);
    }

    @Test
    public void test29889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29889");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        java.lang.String str16 = configuration5.getModelDirectory();
        configuration5.setNumProcessorsForTraining((int) (short) -1);
        configuration5.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: userID");
        org.plista.kornakapi.core.config.Configuration configuration21 = new org.plista.kornakapi.core.config.Configuration();
        configuration21.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig24 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double25 = factorizationbasedRecommenderConfig24.getAlpha();
        double double26 = factorizationbasedRecommenderConfig24.getLambda();
        configuration21.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig24);
        int int28 = configuration21.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList29 = configuration21.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration30 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str31 = storageConfiguration30.getJdbcDriverClass();
        storageConfiguration30.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str34 = storageConfiguration30.getJdbcUrl();
        java.lang.String str35 = storageConfiguration30.getJdbcDriverClass();
        storageConfiguration30.setJdbcDriverClass("batchSize");
        java.lang.String str38 = storageConfiguration30.getPassword();
        storageConfiguration30.setUsername("batchSize");
        java.lang.String str41 = storageConfiguration30.getJdbcUrl();
        storageConfiguration30.setUsername("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration30.setPassword("batchSize");
        java.lang.String str46 = storageConfiguration30.getJdbcDriverClass();
        java.lang.String str47 = storageConfiguration30.getPassword();
        configuration21.setStorageConfiguration(storageConfiguration30);
        configuration5.setStorageConfiguration(storageConfiguration30);
        org.plista.kornakapi.core.storage.Storage storage50 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.KornakapiRecommender> strMap51 = null;
        java.util.Map<java.lang.String, org.plista.kornakapi.core.training.Trainer> strMap52 = null;
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler53 = null;
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener54 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener56 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener54.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener56);
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener56.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener62 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener64 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener64);
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener69 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener69.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener71 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener69.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener71);
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener71);
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components80 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage81 = components80.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener82 = components80.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener83 = components80.preferenceChangeListener();
// flaky:         preferenceChangeListener83.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener64.addDelegate(preferenceChangeListener83);
        delegatingPreferenceChangeListener56.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener64);
        org.plista.kornakapi.web.Components components87 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration88 = components87.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration89 = components87.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage90 = components87.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener91 = components87.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler92 = components87.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener93 = components87.preferenceChangeListener();
        delegatingPreferenceChangeListener56.addDelegate(preferenceChangeListener93);
        // The following exception was thrown during execution in test generation
        try {
            org.plista.kornakapi.web.Components.init(configuration5, storage50, strMap51, strMap52, trainingScheduler53, (org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener56);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: null");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "value" + "'", str16, "value");
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 100 + "'", int28 == 100);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "batchSize" + "'", str46, "batchSize");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "batchSize" + "'", str47, "batchSize");
        org.junit.Assert.assertNotNull(components80);
        org.junit.Assert.assertNull(storage81);
        org.junit.Assert.assertNotNull(preferenceChangeListener82);
        org.junit.Assert.assertNotNull(preferenceChangeListener83);
        org.junit.Assert.assertNotNull(components87);
        org.junit.Assert.assertNotNull(configuration88);
        org.junit.Assert.assertNotNull(configuration89);
        org.junit.Assert.assertNull(storage90);
        org.junit.Assert.assertNotNull(preferenceChangeListener91);
        org.junit.Assert.assertNull(trainingScheduler92);
        org.junit.Assert.assertNotNull(preferenceChangeListener93);
    }

    @Test
    public void test29890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29890");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        boolean boolean8 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int9 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int10 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double13 = factorizationbasedRecommenderConfig0.getAlpha();
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setLambda((double) 1.0f);
        boolean boolean17 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str20 = factorizationbasedRecommenderConfig0.getName();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test29891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29891");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
        configuration1.setStorageConfiguration(storageConfiguration2);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig11 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str12 = itembasedRecommenderConfig11.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig11);
        itembasedRecommenderConfig11.setSimilarityClass("recommender");
        java.lang.String str16 = itembasedRecommenderConfig11.getSimilarityClass();
        configuration1.addItembasedRecommender(itembasedRecommenderConfig11);
        configuration1.setNumProcessorsForTraining(0);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "recommender" + "'", str16, "recommender");
    }

    @Test
    public void test29892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29892");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        configuration4.setNumProcessorsForTraining(0);
        java.lang.String str7 = configuration4.getModelDirectory();
        int int8 = configuration4.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration10 = configuration4.getStorageConfiguration();
        int int11 = configuration4.getNumProcessorsForTraining();
        configuration4.setNumProcessorsForTraining((int) (short) 1);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: userID" + "'", str7, "org.plista.kornakapi.web.MissingParameterException: userID");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(storageConfiguration9);
        org.junit.Assert.assertNotNull(storageConfiguration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test29893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29893");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        java.lang.String str7 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        trainServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        trainServlet0.destroy();
        trainServlet0.destroy();
        javax.servlet.ServletConfig servletConfig17 = trainServlet0.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            trainServlet0.log("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=52, value=52.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(servletConfig17);
    }

    @Test
    public void test29894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29894");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        double double9 = factorizationbasedRecommenderConfig0.getAlpha();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 0.0d + "'", double9 == 0.0d);
    }

    @Test
    public void test29895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29895");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        java.lang.String str8 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 1);
        java.lang.String str11 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) 10L);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(52);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test29896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29896");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcDriverClass("batchSize");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("batchSize");
        java.lang.String str11 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str16 = storageConfiguration0.getPassword();
        java.lang.String str17 = storageConfiguration0.getJdbcUrl();
        java.lang.String str18 = storageConfiguration0.getUsername();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "batchSize" + "'", str11, "batchSize");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str17, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str18, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
    }

    @Test
    public void test29897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29897");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("recommender");
        storageConfiguration0.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        java.lang.String str10 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration0.getUsername();
        storageConfiguration0.setPassword("MutablePreference{userID=97, itemID=97, value=52.0}");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=10000, itemID=0, value=97.0}");
        storageConfiguration0.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: userID");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "recommender" + "'", str11, "recommender");
    }

    @Test
    public void test29898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29898");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        javax.servlet.ServletConfig servletConfig10 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet11 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet12.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet13);
        setPreferenceServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet13);
        java.lang.String str16 = setPreferenceServlet11.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet17 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet18 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet19 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        setPreferenceServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        setPreferenceServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet19);
        javax.servlet.ServletConfig servletConfig23 = setPreferenceServlet11.getServletConfig();
        batchSetPreferencesServlet1.init(servletConfig23);
        java.lang.String str25 = batchSetPreferencesServlet1.getServletInfo();
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertNotNull(servletConfig10);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
    }

    @Test
    public void test29899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29899");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet8 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet8.init();
        setPreferenceServlet8.init();
        setPreferenceServlet8.destroy();
        javax.servlet.ServletConfig servletConfig12 = setPreferenceServlet8.getServletConfig();
        java.lang.String str13 = setPreferenceServlet8.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str16 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.init();
        java.lang.String str18 = batchDeleteCandidatesServlet15.getServletInfo();
        batchDeleteCandidatesServlet15.destroy();
        setPreferenceServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        setPreferenceServlet8.init();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str23 = setPreferenceServlet8.getInitParameter("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=100, itemID=0, value=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test29900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29900");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: label");
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test29901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29901");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        int int2 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double5 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("MutablePreference{userID=0, itemID=0, value=0.0}");
        boolean boolean10 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer13 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setNumberOfIterations(0);
        java.lang.String str16 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str16, "MutablePreference{userID=0, itemID=0, value=0.0}");
    }

    @Test
    public void test29902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29902");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setAlpha((double) 100.0f);
        int int12 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        int int14 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (byte) 1);
        java.lang.Class<?> wildcardClass17 = factorizationbasedRecommenderConfig0.getClass();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test29903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29903");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str3 = storageConfiguration2.getJdbcDriverClass();
        storageConfiguration2.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str6 = storageConfiguration2.getJdbcUrl();
        java.lang.String str7 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str8 = storageConfiguration2.getJdbcDriverClass();
        java.lang.String str9 = storageConfiguration2.getPassword();
        configuration1.setStorageConfiguration(storageConfiguration2);
        java.lang.String str11 = configuration1.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig12 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str13 = itembasedRecommenderConfig12.getRetrainCronExpression();
        int int14 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        java.lang.String str15 = itembasedRecommenderConfig12.getSimilarityClass();
        itembasedRecommenderConfig12.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig12.setRetrainCronExpression("value");
        int int20 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        int int21 = itembasedRecommenderConfig12.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig12.setSimilarItemsPerItem((int) (short) 1);
        java.lang.String str24 = itembasedRecommenderConfig12.getRetrainCronExpression();
        configuration1.addItembasedRecommender(itembasedRecommenderConfig12);
        int int26 = configuration1.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig27 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double28 = factorizationbasedRecommenderConfig27.getAlpha();
        double double29 = factorizationbasedRecommenderConfig27.getLambda();
        int int30 = factorizationbasedRecommenderConfig27.getNumberOfFeatures();
        factorizationbasedRecommenderConfig27.setUsesImplicitFeedback(false);
        int int33 = factorizationbasedRecommenderConfig27.getNumberOfFeatures();
        factorizationbasedRecommenderConfig27.setNumberOfIterations(10);
        factorizationbasedRecommenderConfig27.setLambda((double) 35);
        int int38 = factorizationbasedRecommenderConfig27.getNumberOfFeatures();
        double double39 = factorizationbasedRecommenderConfig27.getAlpha();
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig27);
        factorizationbasedRecommenderConfig27.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=10000, value=0.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: userID" + "'", str11, "org.plista.kornakapi.web.MissingParameterException: userID");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "value" + "'", str24, "value");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
    }

    @Test
    public void test29904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29904");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener5 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNotNull(preferenceChangeListener5);
        org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
    }

    @Test
    public void test29905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29905");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage8 = components0.storage();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(storage8);
    }

    @Test
    public void test29906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29906");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList10 = configuration9.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNull(trainingScheduler7);
        org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList10);
    }

    @Test
    public void test29907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29907");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str3 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet4.init();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchAddCandidatesServlet4);
        batchDeleteCandidatesServlet0.destroy();
        batchDeleteCandidatesServlet0.init();
        java.lang.String str9 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet10 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str11 = trainServlet10.getServletInfo();
        javax.servlet.ServletConfig servletConfig12 = trainServlet10.getServletConfig();
        trainServlet10.destroy();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet14.init();
        java.lang.String str16 = batchAddCandidatesServlet14.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str18 = batchDeleteCandidatesServlet17.getServletInfo();
        batchDeleteCandidatesServlet17.destroy();
        javax.servlet.ServletConfig servletConfig20 = batchDeleteCandidatesServlet17.getServletConfig();
        batchAddCandidatesServlet14.init(servletConfig20);
        batchAddCandidatesServlet14.init();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet23 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet24 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet25 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet24.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet25);
        setPreferenceServlet23.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet25);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet28 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet23.init((javax.servlet.ServletConfig) recommendServlet28);
        recommendServlet28.init();
        batchAddCandidatesServlet14.init((javax.servlet.ServletConfig) recommendServlet28);
        recommendServlet28.init();
        trainServlet10.init((javax.servlet.ServletConfig) recommendServlet28);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) recommendServlet28);
        java.lang.String str35 = recommendServlet28.getServletInfo();
        recommendServlet28.destroy();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(servletConfig20);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
    }

    @Test
    public void test29908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29908");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str1 = batchDeleteCandidatesServlet0.getServletInfo();
        java.lang.String str2 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet3 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet4 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet5 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        setPreferenceServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet5);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet3.init((javax.servlet.ServletConfig) recommendServlet8);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet3);
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet11 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet11.init();
        java.lang.String str13 = batchAddCandidatesServlet11.getServletInfo();
        javax.servlet.ServletConfig servletConfig14 = batchAddCandidatesServlet11.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet15 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str16 = batchDeleteCandidatesServlet15.getServletInfo();
        java.lang.String str17 = batchDeleteCandidatesServlet15.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet18 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet19 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet20 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet19.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        setPreferenceServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet20);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet23 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet18.init((javax.servlet.ServletConfig) recommendServlet23);
        batchDeleteCandidatesServlet15.init((javax.servlet.ServletConfig) setPreferenceServlet18);
        batchAddCandidatesServlet11.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet15);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchAddCandidatesServlet11);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet28 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str29 = recommendServlet28.getServletInfo();
        javax.servlet.ServletConfig servletConfig30 = recommendServlet28.getServletConfig();
        javax.servlet.ServletConfig servletConfig31 = recommendServlet28.getServletConfig();
        javax.servlet.ServletConfig servletConfig32 = recommendServlet28.getServletConfig();
        batchAddCandidatesServlet11.init((javax.servlet.ServletConfig) recommendServlet28);
        recommendServlet28.init();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet35 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet35.init();
        java.lang.String str37 = batchAddCandidatesServlet35.getServletInfo();
        batchAddCandidatesServlet35.init();
        java.lang.String str39 = batchAddCandidatesServlet35.getServletInfo();
        batchAddCandidatesServlet35.init();
        batchAddCandidatesServlet35.init();
        recommendServlet28.init((javax.servlet.ServletConfig) batchAddCandidatesServlet35);
        recommendServlet28.init();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet44 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet44.init();
        java.lang.String str46 = deleteCandidateServlet44.getServletInfo();
        deleteCandidateServlet44.init();
        javax.servlet.ServletConfig servletConfig48 = deleteCandidateServlet44.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet49 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet50 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet51 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet50.init((javax.servlet.ServletConfig) batchSetPreferencesServlet51);
        javax.servlet.ServletConfig servletConfig53 = batchSetPreferencesServlet50.getServletConfig();
        addCandidateServlet49.init((javax.servlet.ServletConfig) batchSetPreferencesServlet50);
        javax.servlet.ServletConfig servletConfig55 = addCandidateServlet49.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet56 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet57 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet58 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet57.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet58);
        setPreferenceServlet56.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet58);
        javax.servlet.ServletConfig servletConfig61 = setPreferenceServlet56.getServletConfig();
        addCandidateServlet49.init((javax.servlet.ServletConfig) setPreferenceServlet56);
        deleteCandidateServlet44.init((javax.servlet.ServletConfig) addCandidateServlet49);
        javax.servlet.ServletConfig servletConfig64 = addCandidateServlet49.getServletConfig();
        recommendServlet28.init((javax.servlet.ServletConfig) addCandidateServlet49);
        javax.servlet.ServletConfig servletConfig66 = addCandidateServlet49.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet67 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet68 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet67.init((javax.servlet.ServletConfig) batchSetPreferencesServlet68);
        java.lang.String str70 = batchSetPreferencesServlet68.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet71 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str72 = batchDeleteCandidatesServlet71.getServletInfo();
        java.lang.String str73 = batchDeleteCandidatesServlet71.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet74 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet75 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet76 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet75.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet76);
        setPreferenceServlet74.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet76);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet79 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet74.init((javax.servlet.ServletConfig) recommendServlet79);
        batchDeleteCandidatesServlet71.init((javax.servlet.ServletConfig) setPreferenceServlet74);
        batchDeleteCandidatesServlet71.destroy();
        batchDeleteCandidatesServlet71.init();
        batchDeleteCandidatesServlet71.destroy();
        javax.servlet.ServletConfig servletConfig85 = batchDeleteCandidatesServlet71.getServletConfig();
        batchSetPreferencesServlet68.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet71);
        batchSetPreferencesServlet68.init();
        javax.servlet.ServletConfig servletConfig88 = batchSetPreferencesServlet68.getServletConfig();
        addCandidateServlet49.init((javax.servlet.ServletConfig) batchSetPreferencesServlet68);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(servletConfig30);
        org.junit.Assert.assertNull(servletConfig31);
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNull(servletConfig48);
        org.junit.Assert.assertNotNull(servletConfig53);
        org.junit.Assert.assertNotNull(servletConfig55);
        org.junit.Assert.assertNotNull(servletConfig61);
        org.junit.Assert.assertNotNull(servletConfig64);
        org.junit.Assert.assertNotNull(servletConfig66);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "" + "'", str70, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertNotNull(servletConfig85);
        org.junit.Assert.assertNotNull(servletConfig88);
    }

    @Test
    public void test29909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29909");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        boolean boolean9 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("itemIDs");
        factorizationbasedRecommenderConfig0.setName("");
        double double14 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean15 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        int int16 = factorizationbasedRecommenderConfig0.getNumberOfIterations();
        factorizationbasedRecommenderConfig0.setLambda(97.0d);
        java.lang.String str19 = factorizationbasedRecommenderConfig0.getName();
        double double20 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 0.0d + "'", double20 == 0.0d);
    }

    @Test
    public void test29910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29910");
        org.plista.kornakapi.web.MissingParameterException missingParameterException7 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        java.lang.Throwable[] throwableArray8 = missingParameterException7.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("", (java.lang.Throwable) missingParameterException7);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=32.0}", (java.lang.Throwable) invalidParameterException10);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemID", (java.lang.Throwable) invalidParameterException11);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: howMany", (java.lang.Throwable) invalidParameterException11);
        java.lang.Throwable[] throwableArray14 = invalidParameterException13.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=35, itemID=35, value=0.0}", (java.lang.Throwable) invalidParameterException13);
        java.lang.Throwable[] throwableArray16 = invalidParameterException13.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test29911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29911");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet3 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str4 = batchDeleteCandidatesServlet3.getServletInfo();
        batchDeleteCandidatesServlet3.destroy();
        javax.servlet.ServletConfig servletConfig6 = batchDeleteCandidatesServlet3.getServletConfig();
        batchAddCandidatesServlet0.init(servletConfig6);
        batchAddCandidatesServlet0.init();
        batchAddCandidatesServlet0.init();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet10 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet10.init();
        setPreferenceServlet10.init();
        setPreferenceServlet10.destroy();
        javax.servlet.ServletConfig servletConfig14 = setPreferenceServlet10.getServletConfig();
        setPreferenceServlet10.init();
        setPreferenceServlet10.init();
        java.lang.String str17 = setPreferenceServlet10.getServletInfo();
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) setPreferenceServlet10);
        java.lang.String str19 = batchAddCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet20 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str21 = batchDeleteCandidatesServlet20.getServletInfo();
        java.lang.String str22 = batchDeleteCandidatesServlet20.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet23 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet24 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet25 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet24.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet25);
        setPreferenceServlet23.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet25);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet28 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet23.init((javax.servlet.ServletConfig) recommendServlet28);
        batchDeleteCandidatesServlet20.init((javax.servlet.ServletConfig) setPreferenceServlet23);
        batchDeleteCandidatesServlet20.destroy();
        batchDeleteCandidatesServlet20.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet33 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str34 = trainServlet33.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet35 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet35.destroy();
        javax.servlet.ServletConfig servletConfig37 = deleteCandidateServlet35.getServletConfig();
        deleteCandidateServlet35.destroy();
        trainServlet33.init((javax.servlet.ServletConfig) deleteCandidateServlet35);
        java.lang.String str40 = trainServlet33.getServletInfo();
        batchDeleteCandidatesServlet20.init((javax.servlet.ServletConfig) trainServlet33);
        batchDeleteCandidatesServlet20.destroy();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet43 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet43.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet45 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet46 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet47 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet46.init((javax.servlet.ServletConfig) batchSetPreferencesServlet47);
        batchDeleteCandidatesServlet45.init((javax.servlet.ServletConfig) batchSetPreferencesServlet47);
        javax.servlet.ServletConfig servletConfig50 = batchSetPreferencesServlet47.getServletConfig();
        addCandidateServlet43.init(servletConfig50);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet52 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet53 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str54 = batchDeleteCandidatesServlet53.getServletInfo();
        java.lang.String str55 = batchDeleteCandidatesServlet53.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet56 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet57 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet58 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet57.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet58);
        setPreferenceServlet56.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet58);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet61 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet56.init((javax.servlet.ServletConfig) recommendServlet61);
        batchDeleteCandidatesServlet53.init((javax.servlet.ServletConfig) setPreferenceServlet56);
        batchDeleteCandidatesServlet53.destroy();
        batchDeleteCandidatesServlet52.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet53);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet66 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet67 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet68 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet67.init((javax.servlet.ServletConfig) batchSetPreferencesServlet68);
        batchDeleteCandidatesServlet66.init((javax.servlet.ServletConfig) batchSetPreferencesServlet68);
        javax.servlet.ServletConfig servletConfig71 = batchSetPreferencesServlet68.getServletConfig();
        batchSetPreferencesServlet68.init();
        batchDeleteCandidatesServlet53.init((javax.servlet.ServletConfig) batchSetPreferencesServlet68);
        addCandidateServlet43.init((javax.servlet.ServletConfig) batchSetPreferencesServlet68);
        addCandidateServlet43.init();
        addCandidateServlet43.init();
        batchDeleteCandidatesServlet20.init((javax.servlet.ServletConfig) addCandidateServlet43);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet78 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet78.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet80 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet81 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet82 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet81.init((javax.servlet.ServletConfig) batchSetPreferencesServlet82);
        batchDeleteCandidatesServlet80.init((javax.servlet.ServletConfig) batchSetPreferencesServlet82);
        javax.servlet.ServletConfig servletConfig85 = batchSetPreferencesServlet82.getServletConfig();
        addCandidateServlet78.init(servletConfig85);
        java.lang.String str87 = addCandidateServlet78.getServletInfo();
        java.lang.String str88 = addCandidateServlet78.getServletInfo();
        batchDeleteCandidatesServlet20.init((javax.servlet.ServletConfig) addCandidateServlet78);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) addCandidateServlet78);
        java.lang.String str91 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletRequest servletRequest92 = null;
        javax.servlet.ServletResponse servletResponse93 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchAddCandidatesServlet0.service(servletRequest92, servletResponse93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertNull(servletConfig6);
        org.junit.Assert.assertNull(servletConfig14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
        org.junit.Assert.assertNull(servletConfig37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(servletConfig50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNull(servletConfig71);
        org.junit.Assert.assertNull(servletConfig85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
    }

    @Test
    public void test29912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29912");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarityClass("label");
        itembasedRecommenderConfig0.setSimilarItemsPerItem(52);
        itembasedRecommenderConfig0.setRetrainCronExpression("recommender");
        itembasedRecommenderConfig0.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=97, value=35.0}");
    }

    @Test
    public void test29913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29913");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) '4');
        org.plista.kornakapi.core.config.Configuration configuration5 = new org.plista.kornakapi.core.config.Configuration();
        configuration5.setNumProcessorsForTraining((int) (short) 100);
        configuration5.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig10 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str11 = itembasedRecommenderConfig10.getRetrainCronExpression();
        int int12 = itembasedRecommenderConfig10.getRetrainAfterPreferenceChanges();
        java.lang.String str13 = itembasedRecommenderConfig10.getSimilarityClass();
        itembasedRecommenderConfig10.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig10.setRetrainCronExpression("value");
        int int18 = itembasedRecommenderConfig10.getRetrainAfterPreferenceChanges();
        configuration5.addItembasedRecommender(itembasedRecommenderConfig10);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration21 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str22 = storageConfiguration21.getJdbcDriverClass();
        storageConfiguration21.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str25 = storageConfiguration21.getJdbcUrl();
        java.lang.String str26 = storageConfiguration21.getJdbcDriverClass();
        storageConfiguration21.setJdbcDriverClass("batchSize");
        java.lang.String str29 = storageConfiguration21.getPassword();
        storageConfiguration21.setUsername("batchSize");
        java.lang.String str32 = storageConfiguration21.getJdbcUrl();
        storageConfiguration21.setUsername("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration21.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: file");
        configuration0.setStorageConfiguration(storageConfiguration21);
        org.plista.kornakapi.web.Components components38 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage39 = components38.storage();
        org.plista.kornakapi.core.config.Configuration configuration40 = components38.getConfiguration();
        java.lang.String str41 = configuration40.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration42 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str43 = storageConfiguration42.getJdbcDriverClass();
        storageConfiguration42.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str46 = storageConfiguration42.getJdbcUrl();
        java.lang.String str47 = storageConfiguration42.getJdbcDriverClass();
        storageConfiguration42.setJdbcDriverClass("batchSize");
        java.lang.String str50 = storageConfiguration42.getPassword();
        java.lang.String str51 = storageConfiguration42.getJdbcUrl();
        configuration40.setStorageConfiguration(storageConfiguration42);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration53 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str54 = storageConfiguration53.getJdbcDriverClass();
        storageConfiguration53.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str57 = storageConfiguration53.getPassword();
        java.lang.String str58 = storageConfiguration53.getJdbcDriverClass();
        storageConfiguration53.setUsername("hi!");
        storageConfiguration53.setJdbcDriverClass("file");
        configuration40.setStorageConfiguration(storageConfiguration53);
        storageConfiguration53.setUsername("recommender");
        storageConfiguration53.setPassword("MutablePreference{userID=0, itemID=-1, value=32.0}");
        configuration0.setStorageConfiguration(storageConfiguration53);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig69 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double70 = factorizationbasedRecommenderConfig69.getAlpha();
        double double71 = factorizationbasedRecommenderConfig69.getLambda();
        int int72 = factorizationbasedRecommenderConfig69.getNumberOfFeatures();
        factorizationbasedRecommenderConfig69.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig69.setNumberOfFeatures((int) (short) 100);
        factorizationbasedRecommenderConfig69.setLambda((double) (short) 1);
        factorizationbasedRecommenderConfig69.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig69.setNumberOfFeatures(32);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig69);
        java.lang.String str84 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) '#');
        int int87 = configuration0.getNumProcessorsForTraining();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(components38);
        org.junit.Assert.assertNull(storage39);
        org.junit.Assert.assertNotNull(configuration40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: userID" + "'", str41, "org.plista.kornakapi.web.MissingParameterException: userID");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 35 + "'", int87 == 35);
    }

    @Test
    public void test29914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29914");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        double double7 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) (byte) 1);
        double double10 = fixedCandidatesIDRescorer1.rescore((long) (byte) 10, (double) 100);
        double double13 = fixedCandidatesIDRescorer1.rescore(97L, (double) 10.0f);
        double double16 = fixedCandidatesIDRescorer1.rescore((long) 'a', 0.0d);
        double double19 = fixedCandidatesIDRescorer1.rescore((long) (byte) 10, (double) 32);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer20 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair21 = null;
        double double23 = filteringLongPairRescorer20.rescore(longPair21, (double) 100);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 1.0d + "'", double7 == 1.0d);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 100.0d + "'", double10 == 100.0d);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 10.0d + "'", double13 == 10.0d);
        org.junit.Assert.assertTrue("'" + double16 + "' != '" + 0.0d + "'", double16 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 32.0d + "'", double19 == 32.0d);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 100.0d + "'", double23 == 100.0d);
    }

    @Test
    public void test29915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29915");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        int int2 = configuration1.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.Configuration configuration3 = new org.plista.kornakapi.core.config.Configuration();
        configuration3.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer9 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig6);
        itembasedRecommenderConfig6.setRetrainCronExpression("");
        itembasedRecommenderConfig6.setSimilarItemsPerItem(10);
        java.lang.String str14 = itembasedRecommenderConfig6.getName();
        configuration3.addItembasedRecommender(itembasedRecommenderConfig6);
        configuration1.addItembasedRecommender(itembasedRecommenderConfig6);
        java.lang.String str17 = itembasedRecommenderConfig6.getName();
        itembasedRecommenderConfig6.setSimilarItemsPerItem((int) (short) 10);
        itembasedRecommenderConfig6.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: hi!");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test29916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29916");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        boolean boolean3 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        double double5 = factorizationbasedRecommenderConfig0.getAlpha();
        boolean boolean6 = factorizationbasedRecommenderConfig0.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        int int9 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) 'a');
        factorizationbasedRecommenderConfig0.setAlpha((-1.0d));
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getName();
        double double15 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(1);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 0.0d + "'", double5 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
    }

    @Test
    public void test29917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29917");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener9 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener12 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener12.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener14 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener14.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener12.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener14);
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener12);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener21 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler18, "label", (int) ' ');
        inMemoryPreferenceChangeListener21.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener9.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener21);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener21);
        inMemoryPreferenceChangeListener21.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener21.notifyOfPreferenceChange();
    }

    @Test
    public void test29918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29918");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler5 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNull(trainingScheduler5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNull(trainingScheduler9);
    }

    @Test
    public void test29919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29919");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = null;
        configuration0.setStorageConfiguration(storageConfiguration3);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration0.getItembasedRecommenders();
        java.lang.String str6 = configuration0.getModelDirectory();
        org.plista.kornakapi.web.Components components7 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration8 = components7.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = components7.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler10 = components7.scheduler();
        org.plista.kornakapi.core.storage.Storage storage11 = components7.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = components7.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration13 = components7.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig14.setSimilarityClass("");
        java.lang.String str17 = itembasedRecommenderConfig14.getName();
        java.lang.String str18 = itembasedRecommenderConfig14.getSimilarityClass();
        java.lang.String str19 = itembasedRecommenderConfig14.getSimilarityClass();
        int int20 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
        itembasedRecommenderConfig14.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=32.0}");
        itembasedRecommenderConfig14.setSimilarityClass("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        configuration13.addItembasedRecommender(itembasedRecommenderConfig14);
        itembasedRecommenderConfig14.setSimilarityClass("MutablePreference{userID=52, itemID=32, value=0.0}");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig14);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig29 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig29.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer32 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig29);
        itembasedRecommenderConfig29.setRetrainCronExpression("");
        itembasedRecommenderConfig29.setSimilarityClass("label");
        itembasedRecommenderConfig29.setSimilarItemsPerItem((int) (byte) 100);
        int int39 = itembasedRecommenderConfig29.getRetrainAfterPreferenceChanges();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig29);
        itembasedRecommenderConfig29.setSimilarItemsPerItem(1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(components7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNull(trainingScheduler10);
        org.junit.Assert.assertNull(storage11);
        org.junit.Assert.assertNull(trainingScheduler12);
        org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test29920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29920");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener8 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener12 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration13 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration14 = configuration13.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList15 = configuration13.getItembasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(preferenceChangeListener8);
        org.junit.Assert.assertNull(trainingScheduler9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(trainingScheduler11);
        org.junit.Assert.assertNotNull(preferenceChangeListener12);
        org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertNotNull(storageConfiguration14);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList15);
    }

    @Test
    public void test29921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29921");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        addCandidateServlet0.destroy();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet2 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet3 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet3.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        setPreferenceServlet2.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet2.init((javax.servlet.ServletConfig) recommendServlet7);
        recommendServlet7.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet7);
        java.lang.String str11 = addCandidateServlet0.getServletInfo();
        addCandidateServlet0.init();
        javax.servlet.ServletConfig servletConfig13 = addCandidateServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet14 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet15 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet16 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) batchSetPreferencesServlet16);
        javax.servlet.ServletConfig servletConfig18 = batchSetPreferencesServlet15.getServletConfig();
        addCandidateServlet14.init((javax.servlet.ServletConfig) batchSetPreferencesServlet15);
        batchSetPreferencesServlet15.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str22 = recommendServlet21.getServletInfo();
        javax.servlet.ServletConfig servletConfig23 = recommendServlet21.getServletConfig();
        java.lang.String str24 = recommendServlet21.getServletInfo();
        batchSetPreferencesServlet15.init((javax.servlet.ServletConfig) recommendServlet21);
        addCandidateServlet0.init((javax.servlet.ServletConfig) recommendServlet21);
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet27 = new org.plista.kornakapi.web.servlets.TrainServlet();
        trainServlet27.destroy();
        trainServlet27.destroy();
        java.lang.String str30 = trainServlet27.getServletInfo();
        java.lang.String str31 = trainServlet27.getServletInfo();
        javax.servlet.ServletConfig servletConfig32 = trainServlet27.getServletConfig();
        javax.servlet.ServletConfig servletConfig33 = trainServlet27.getServletConfig();
        trainServlet27.destroy();
        trainServlet27.init();
        addCandidateServlet0.init((javax.servlet.ServletConfig) trainServlet27);
        javax.servlet.ServletConfig servletConfig37 = trainServlet27.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet38 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet39 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet38.init((javax.servlet.ServletConfig) batchSetPreferencesServlet39);
        java.lang.String str41 = batchSetPreferencesServlet39.getServletInfo();
        batchSetPreferencesServlet39.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet43 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str44 = batchDeleteCandidatesServlet43.getServletInfo();
        java.lang.String str45 = batchDeleteCandidatesServlet43.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet46 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet47 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet48 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet47.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet48);
        setPreferenceServlet46.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet48);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet51 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet46.init((javax.servlet.ServletConfig) recommendServlet51);
        batchDeleteCandidatesServlet43.init((javax.servlet.ServletConfig) setPreferenceServlet46);
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet54 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet55 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet56 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet55.init((javax.servlet.ServletConfig) batchSetPreferencesServlet56);
        javax.servlet.ServletConfig servletConfig58 = batchSetPreferencesServlet55.getServletConfig();
        addCandidateServlet54.init((javax.servlet.ServletConfig) batchSetPreferencesServlet55);
        javax.servlet.ServletConfig servletConfig60 = addCandidateServlet54.getServletConfig();
        batchDeleteCandidatesServlet43.init((javax.servlet.ServletConfig) addCandidateServlet54);
        addCandidateServlet54.destroy();
        batchSetPreferencesServlet39.init((javax.servlet.ServletConfig) addCandidateServlet54);
        batchSetPreferencesServlet39.init();
        trainServlet27.init((javax.servlet.ServletConfig) batchSetPreferencesServlet39);
        batchSetPreferencesServlet39.init();
        // The following exception was thrown during execution in test generation
        try {
            batchSetPreferencesServlet39.log("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: recommender");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(servletConfig13);
        org.junit.Assert.assertNotNull(servletConfig18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(servletConfig23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "" + "'", str31, "");
        org.junit.Assert.assertNull(servletConfig32);
        org.junit.Assert.assertNull(servletConfig33);
        org.junit.Assert.assertNull(servletConfig37);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "" + "'", str41, "");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "" + "'", str44, "");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNotNull(servletConfig58);
        org.junit.Assert.assertNotNull(servletConfig60);
    }

    @Test
    public void test29922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29922");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str6 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str7 = storageConfiguration0.getPassword();
        java.lang.String str8 = storageConfiguration0.getUsername();
        java.lang.String str9 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration0.setPassword("MutablePreference{userID=10000, itemID=-1, value=10.0}");
        java.lang.String str15 = storageConfiguration0.getJdbcUrl();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str8, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "MutablePreference{userID=-1, itemID=10, value=10.0}" + "'", str15, "MutablePreference{userID=-1, itemID=10, value=10.0}");
    }

    @Test
    public void test29923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29923");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getJdbcDriverClass();
        configuration5.setStorageConfiguration(storageConfiguration7);
        int int16 = configuration5.getNumProcessorsForTraining();
        int int17 = configuration5.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList18 = configuration5.getFactorizationbasedRecommenders();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList18);
    }

    @Test
    public void test29924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29924");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener2 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler6 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration8 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = components0.scheduler();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(preferenceChangeListener2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(trainingScheduler6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(configuration8);
        org.junit.Assert.assertNull(trainingScheduler9);
    }

    @Test
    public void test29925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29925");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener4 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = configuration5.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration5.getStorageConfiguration();
        org.plista.kornakapi.web.Components components8 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration9 = components8.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = components8.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage11 = components8.storage();
        org.plista.kornakapi.core.storage.Storage storage12 = components8.storage();
        org.plista.kornakapi.core.config.Configuration configuration13 = components8.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList14 = configuration13.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration15.getJdbcUrl();
        java.lang.String str20 = storageConfiguration15.getJdbcDriverClass();
        java.lang.String str21 = storageConfiguration15.getJdbcDriverClass();
        java.lang.String str22 = storageConfiguration15.getPassword();
        configuration13.setStorageConfiguration(storageConfiguration15);
        int int24 = configuration13.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str26 = storageConfiguration25.getJdbcDriverClass();
        storageConfiguration25.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str29 = storageConfiguration25.getJdbcUrl();
        java.lang.String str30 = storageConfiguration25.getJdbcUrl();
        java.lang.String str31 = storageConfiguration25.getJdbcUrl();
        java.lang.String str32 = storageConfiguration25.getUsername();
        configuration13.setStorageConfiguration(storageConfiguration25);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig34 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str35 = itembasedRecommenderConfig34.getSimilarityClass();
        itembasedRecommenderConfig34.setName("");
        configuration13.addItembasedRecommender(itembasedRecommenderConfig34);
        itembasedRecommenderConfig34.setSimilarItemsPerItem((int) (short) 0);
        itembasedRecommenderConfig34.setSimilarItemsPerItem(35);
        itembasedRecommenderConfig34.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
        java.lang.String str45 = itembasedRecommenderConfig34.getSimilarityClass();
        configuration5.addItembasedRecommender(itembasedRecommenderConfig34);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNotNull(preferenceChangeListener4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
        org.junit.Assert.assertNotNull(storageConfiguration7);
        org.junit.Assert.assertNotNull(components8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(storage11);
        org.junit.Assert.assertNull(storage12);
        org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName" + "'", str32, "org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file" + "'", str45, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: file");
    }

    @Test
    public void test29926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29926");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        mutableCandidate0.set("itemID", (long) (short) -1);
        long long11 = mutableCandidate0.getItemID();
        java.lang.String str12 = mutableCandidate0.getLabel();
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("batchSize", (long) (byte) 1);
        long long17 = mutableCandidate0.getItemID();
        java.lang.String str18 = mutableCandidate0.getLabel();
        long long19 = mutableCandidate0.getItemID();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-1L) + "'", long11 == (-1L));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "itemID" + "'", str12, "itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "itemID" + "'", str13, "itemID");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 1L + "'", long17 == 1L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "batchSize" + "'", str18, "batchSize");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 1L + "'", long19 == 1L);
    }

    @Test
    public void test29927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29927");
        org.plista.kornakapi.web.MissingParameterException missingParameterException4 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException5 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException4);
        org.plista.kornakapi.web.MissingParameterException missingParameterException8 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException8.addSuppressed((java.lang.Throwable) missingParameterException10);
        invalidParameterException6.addSuppressed((java.lang.Throwable) missingParameterException10);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException13 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException6);
        org.plista.kornakapi.web.MissingParameterException missingParameterException21 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException22 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException23 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException21);
        org.plista.kornakapi.web.MissingParameterException missingParameterException25 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException27 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException25.addSuppressed((java.lang.Throwable) missingParameterException27);
        invalidParameterException23.addSuppressed((java.lang.Throwable) missingParameterException27);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException30 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException23);
        org.plista.kornakapi.web.MissingParameterException missingParameterException34 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException35 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException36 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException34);
        invalidParameterException30.addSuppressed((java.lang.Throwable) missingParameterException34);
        org.plista.kornakapi.web.MissingParameterException missingParameterException39 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException42 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException43 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException42);
        missingParameterException39.addSuppressed((java.lang.Throwable) invalidParameterException43);
        invalidParameterException30.addSuppressed((java.lang.Throwable) missingParameterException39);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException46 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) invalidParameterException30);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException47 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=10000, value=0.0}", (java.lang.Throwable) invalidParameterException30);
        java.lang.Throwable[] throwableArray48 = invalidParameterException47.getSuppressed();
        org.plista.kornakapi.web.MissingParameterException missingParameterException51 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException52 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException51);
        invalidParameterException47.addSuppressed((java.lang.Throwable) missingParameterException51);
        org.plista.kornakapi.web.MissingParameterException missingParameterException55 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        invalidParameterException47.addSuppressed((java.lang.Throwable) missingParameterException55);
        org.plista.kornakapi.web.MissingParameterException missingParameterException58 = new org.plista.kornakapi.web.MissingParameterException("hi!");
        org.plista.kornakapi.web.MissingParameterException missingParameterException60 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=10000, itemID=-1, value=-1.0}");
        missingParameterException58.addSuppressed((java.lang.Throwable) missingParameterException60);
        org.plista.kornakapi.web.MissingParameterException missingParameterException67 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException68 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException67);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException69 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException67);
        java.lang.Throwable[] throwableArray70 = missingParameterException67.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException71 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=0, value=0.0}", (java.lang.Throwable) missingParameterException67);
        java.lang.Throwable[] throwableArray72 = missingParameterException67.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException73 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=0, value=100.0}", (java.lang.Throwable) missingParameterException67);
        missingParameterException58.addSuppressed((java.lang.Throwable) invalidParameterException73);
        invalidParameterException47.addSuppressed((java.lang.Throwable) invalidParameterException73);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException76 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=10, itemID=32, value=10000.0}", (java.lang.Throwable) invalidParameterException47);
        invalidParameterException13.addSuppressed((java.lang.Throwable) invalidParameterException76);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test29928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29928");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        configuration4.setNumProcessorsForTraining(0);
        java.lang.String str7 = configuration4.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList8 = configuration4.getFactorizationbasedRecommenders();
        configuration4.setModelDirectory("MutablePreference{userID=1, itemID=52, value=52.0}");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig12 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double13 = factorizationbasedRecommenderConfig12.getAlpha();
        double double14 = factorizationbasedRecommenderConfig12.getLambda();
        boolean boolean15 = factorizationbasedRecommenderConfig12.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer16 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig12);
        int int17 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        factorizationbasedRecommenderConfig12.setUsesImplicitFeedback(true);
        boolean boolean20 = factorizationbasedRecommenderConfig12.isUsesImplicitFeedback();
        factorizationbasedRecommenderConfig12.setRetrainAfterPreferenceChanges((int) (byte) 0);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer23 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig12);
        configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig12);
        java.lang.String str25 = factorizationbasedRecommenderConfig12.getName();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: userID" + "'", str7, "org.plista.kornakapi.web.MissingParameterException: userID");
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList8);
        org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test29929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29929");
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet0 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        javax.servlet.ServletConfig servletConfig3 = batchSetPreferencesServlet1.getServletConfig();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        setPreferenceServlet4.init();
        setPreferenceServlet4.init();
        setPreferenceServlet4.destroy();
        setPreferenceServlet4.destroy();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        java.lang.String str10 = setPreferenceServlet4.getServletInfo();
        javax.servlet.ServletConfig servletConfig11 = setPreferenceServlet4.getServletConfig();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str13 = recommendServlet12.getServletInfo();
        javax.servlet.ServletConfig servletConfig14 = recommendServlet12.getServletConfig();
        java.lang.String str15 = recommendServlet12.getServletInfo();
        javax.servlet.ServletConfig servletConfig16 = recommendServlet12.getServletConfig();
        recommendServlet12.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str19 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str20 = batchDeleteCandidatesServlet18.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet21 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        setPreferenceServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet21.init((javax.servlet.ServletConfig) recommendServlet26);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) setPreferenceServlet21);
        batchDeleteCandidatesServlet18.destroy();
        batchDeleteCandidatesServlet18.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet31 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str32 = trainServlet31.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet33 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet33.destroy();
        javax.servlet.ServletConfig servletConfig35 = deleteCandidateServlet33.getServletConfig();
        deleteCandidateServlet33.destroy();
        trainServlet31.init((javax.servlet.ServletConfig) deleteCandidateServlet33);
        java.lang.String str38 = trainServlet31.getServletInfo();
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) trainServlet31);
        batchDeleteCandidatesServlet18.init();
        recommendServlet12.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet42 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet43 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet44 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet43.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet44);
        setPreferenceServlet42.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet44);
        java.lang.String str47 = setPreferenceServlet42.getServletInfo();
        java.lang.String str48 = setPreferenceServlet42.getServletInfo();
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) setPreferenceServlet42);
        batchDeleteCandidatesServlet18.destroy();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet51 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str52 = recommendServlet51.getServletInfo();
        javax.servlet.ServletConfig servletConfig53 = recommendServlet51.getServletConfig();
        java.lang.String str54 = recommendServlet51.getServletInfo();
        javax.servlet.ServletConfig servletConfig55 = recommendServlet51.getServletConfig();
        recommendServlet51.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet57 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str58 = batchDeleteCandidatesServlet57.getServletInfo();
        java.lang.String str59 = batchDeleteCandidatesServlet57.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet60 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet61 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet62 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet61.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet62);
        setPreferenceServlet60.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet62);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet65 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet60.init((javax.servlet.ServletConfig) recommendServlet65);
        batchDeleteCandidatesServlet57.init((javax.servlet.ServletConfig) setPreferenceServlet60);
        batchDeleteCandidatesServlet57.destroy();
        batchDeleteCandidatesServlet57.init();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet70 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str71 = trainServlet70.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet72 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet72.destroy();
        javax.servlet.ServletConfig servletConfig74 = deleteCandidateServlet72.getServletConfig();
        deleteCandidateServlet72.destroy();
        trainServlet70.init((javax.servlet.ServletConfig) deleteCandidateServlet72);
        java.lang.String str77 = trainServlet70.getServletInfo();
        batchDeleteCandidatesServlet57.init((javax.servlet.ServletConfig) trainServlet70);
        batchDeleteCandidatesServlet57.init();
        recommendServlet51.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet57);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet81 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet82 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet83 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet82.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet83);
        setPreferenceServlet81.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet83);
        java.lang.String str86 = setPreferenceServlet81.getServletInfo();
        java.lang.String str87 = setPreferenceServlet81.getServletInfo();
        batchDeleteCandidatesServlet57.init((javax.servlet.ServletConfig) setPreferenceServlet81);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet57);
        batchDeleteCandidatesServlet57.destroy();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet57);
        setPreferenceServlet4.init();
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNull(servletConfig11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(servletConfig14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(servletConfig16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertNull(servletConfig35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "" + "'", str38, "");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "" + "'", str52, "");
        org.junit.Assert.assertNull(servletConfig53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertNull(servletConfig55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
        org.junit.Assert.assertNull(servletConfig74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "" + "'", str77, "");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "" + "'", str86, "");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "" + "'", str87, "");
    }

    @Test
    public void test29930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29930");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler4 = components0.scheduler();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration6 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage7 = components0.storage();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler8 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration9 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        int int11 = configuration10.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig12 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double13 = factorizationbasedRecommenderConfig12.getAlpha();
        double double14 = factorizationbasedRecommenderConfig12.getLambda();
        int int15 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        factorizationbasedRecommenderConfig12.setLambda((double) 1);
        double double18 = factorizationbasedRecommenderConfig12.getAlpha();
        double double19 = factorizationbasedRecommenderConfig12.getLambda();
        int int20 = factorizationbasedRecommenderConfig12.getNumberOfFeatures();
        factorizationbasedRecommenderConfig12.setRetrainAfterPreferenceChanges((int) (short) 100);
        factorizationbasedRecommenderConfig12.setLambda((double) 97L);
        configuration10.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig12);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig26 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double27 = factorizationbasedRecommenderConfig26.getAlpha();
        double double28 = factorizationbasedRecommenderConfig26.getLambda();
        double double29 = factorizationbasedRecommenderConfig26.getAlpha();
        configuration10.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig26);
        factorizationbasedRecommenderConfig26.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig26.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=32.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNull(trainingScheduler4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNotNull(configuration6);
        org.junit.Assert.assertNull(storage7);
        org.junit.Assert.assertNull(trainingScheduler8);
        org.junit.Assert.assertNotNull(configuration9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 1.0d + "'", double19 == 1.0d);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
    }

    @Test
    public void test29931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29931");
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler0 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler0, "org.plista.kornakapi.web.InvalidParameterException: batchSize", (int) (short) 10);
    }

    @Test
    public void test29932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29932");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException6);
        java.lang.Throwable[] throwableArray9 = missingParameterException6.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException10 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException11 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException10);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException12 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=97, value=10.0}", (java.lang.Throwable) invalidParameterException10);
        java.lang.Throwable[] throwableArray13 = invalidParameterException10.getSuppressed();
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test29933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29933");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        java.lang.String str2 = mutablePreference0.toString();
        float float3 = mutablePreference0.getValue();
        mutablePreference0.setValue((float) 1);
        mutablePreference0.set(35L, (long) (-1), (float) (short) 10);
        long long10 = mutablePreference0.getUserID();
        float float11 = mutablePreference0.getValue();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str2, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + float3 + "' != '" + 0.0f + "'", float3 == 0.0f);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 35L + "'", long10 == 35L);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 10.0f + "'", float11 == 10.0f);
    }

    @Test
    public void test29934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29934");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        long long4 = mutablePreference0.getUserID();
        mutablePreference0.set((long) (short) 0, 10000L, (float) (byte) 10);
        mutablePreference0.setValue((float) (short) 0);
        float float11 = mutablePreference0.getValue();
        float float12 = mutablePreference0.getValue();
        long long13 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + float11 + "' != '" + 0.0f + "'", float11 == 0.0f);
        org.junit.Assert.assertTrue("'" + float12 + "' != '" + 0.0f + "'", float12 == 0.0f);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test29935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29935");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getName();
        int int8 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test29936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29936");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(1);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) '#');
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(0);
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(32);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test29937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29937");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        int int16 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((-1));
        int int19 = factorizationbasedRecommenderConfig6.getRetrainAfterPreferenceChanges();
        factorizationbasedRecommenderConfig6.setLambda((double) 1);
        factorizationbasedRecommenderConfig6.setLambda((double) 52);
        factorizationbasedRecommenderConfig6.setName("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        double double26 = factorizationbasedRecommenderConfig6.getAlpha();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
    }

    @Test
    public void test29938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29938");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        int int1 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        int int3 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = configuration0.getStorageConfiguration();
        int int5 = configuration0.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration0.getItembasedRecommenders();
        configuration0.setNumProcessorsForTraining(35);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(storageConfiguration4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
    }

    @Test
    public void test29939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29939");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler9 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener12 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler9, "org.plista.kornakapi.web.InvalidParameterException: howMany", 10);
        inMemoryPreferenceChangeListener12.notifyOfPreferenceChange();
        inMemoryPreferenceChangeListener12.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener12);
    }

    @Test
    public void test29940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29940");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("itemIDs", (long) 0);
        mutableCandidate0.set("itemID", (long) 10000);
        java.lang.String str8 = mutableCandidate0.getLabel();
        java.lang.String str9 = mutableCandidate0.getLabel();
        java.lang.String str10 = mutableCandidate0.getLabel();
        long long11 = mutableCandidate0.getItemID();
        java.lang.String str12 = mutableCandidate0.getLabel();
        java.lang.String str13 = mutableCandidate0.getLabel();
        mutableCandidate0.set("MutablePreference{userID=97, itemID=1, value=97.0}", 100L);
        long long17 = mutableCandidate0.getItemID();
        java.lang.String str18 = mutableCandidate0.getLabel();
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "itemID" + "'", str8, "itemID");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "itemID" + "'", str9, "itemID");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "itemID" + "'", str10, "itemID");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 10000L + "'", long11 == 10000L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "itemID" + "'", str12, "itemID");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "itemID" + "'", str13, "itemID");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 100L + "'", long17 == 100L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=97, itemID=1, value=97.0}" + "'", str18, "MutablePreference{userID=97, itemID=1, value=97.0}");
    }

    @Test
    public void test29941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29941");
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet0 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str1 = trainServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet2 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet2.destroy();
        javax.servlet.ServletConfig servletConfig4 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.destroy();
        trainServlet0.init((javax.servlet.ServletConfig) deleteCandidateServlet2);
        javax.servlet.ServletConfig servletConfig7 = deleteCandidateServlet2.getServletConfig();
        deleteCandidateServlet2.init();
        deleteCandidateServlet2.init();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet10 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        java.lang.String str11 = batchAddCandidatesServlet10.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet12 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet13 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str14 = batchDeleteCandidatesServlet13.getServletInfo();
        java.lang.String str15 = batchDeleteCandidatesServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet16 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet17 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        setPreferenceServlet16.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet21 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet16.init((javax.servlet.ServletConfig) recommendServlet21);
        batchDeleteCandidatesServlet13.init((javax.servlet.ServletConfig) setPreferenceServlet16);
        batchDeleteCandidatesServlet13.destroy();
        batchDeleteCandidatesServlet12.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet13);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet26 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str27 = batchDeleteCandidatesServlet26.getServletInfo();
        batchDeleteCandidatesServlet26.destroy();
        javax.servlet.ServletConfig servletConfig29 = batchDeleteCandidatesServlet26.getServletConfig();
        batchDeleteCandidatesServlet12.init(servletConfig29);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet31 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str32 = recommendServlet31.getServletInfo();
        batchDeleteCandidatesServlet12.init((javax.servlet.ServletConfig) recommendServlet31);
        batchAddCandidatesServlet10.init((javax.servlet.ServletConfig) recommendServlet31);
        deleteCandidateServlet2.init((javax.servlet.ServletConfig) batchAddCandidatesServlet10);
        javax.servlet.ServletRequest servletRequest36 = null;
        javax.servlet.ServletResponse servletResponse37 = null;
        // The following exception was thrown during execution in test generation
        try {
            batchAddCandidatesServlet10.service(servletRequest36, servletResponse37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "" + "'", str1, "");
        org.junit.Assert.assertNull(servletConfig4);
        org.junit.Assert.assertNull(servletConfig7);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(servletConfig29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test29942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29942");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getUserID();
        float float4 = mutablePreference0.getValue();
        long long5 = mutablePreference0.getUserID();
        float float6 = mutablePreference0.getValue();
        mutablePreference0.set(0L, 52L, (float) (-1L));
        java.lang.String str11 = mutablePreference0.toString();
        long long12 = mutablePreference0.getItemID();
        long long13 = mutablePreference0.getUserID();
        float float14 = mutablePreference0.getValue();
        long long15 = mutablePreference0.getUserID();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + float4 + "' != '" + 0.0f + "'", float4 == 0.0f);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + float6 + "' != '" + 0.0f + "'", float6 == 0.0f);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "MutablePreference{userID=0, itemID=52, value=-1.0}" + "'", str11, "MutablePreference{userID=0, itemID=52, value=-1.0}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 52L + "'", long12 == 52L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + (-1.0f) + "'", float14 == (-1.0f));
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
    }

    @Test
    public void test29943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29943");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) (short) 0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer7 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer8 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) 0, (double) 10000L);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) 52, (double) 97L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer15 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 10000.0d + "'", double11 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 97.0d + "'", double14 == 97.0d);
    }

    @Test
    public void test29944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29944");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=10, value=10000.0}");
    }

    @Test
    public void test29945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29945");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        java.lang.String str5 = configuration4.getModelDirectory();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration4.getItembasedRecommenders();
        configuration4.setModelDirectory("MutablePreference{userID=100, itemID=0, value=0.0}");
        configuration4.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        java.lang.String str11 = configuration4.getModelDirectory();
        configuration4.setModelDirectory("MutablePreference{userID=100, itemID=10, value=-1.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=1, itemID=52, value=52.0}" + "'", str5, "MutablePreference{userID=1, itemID=52, value=52.0}");
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}" + "'", str11, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
    }

    @Test
    public void test29946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29946");
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet0.init();
        java.lang.String str2 = batchAddCandidatesServlet0.getServletInfo();
        javax.servlet.ServletConfig servletConfig3 = batchAddCandidatesServlet0.getServletConfig();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet4 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str5 = batchDeleteCandidatesServlet4.getServletInfo();
        java.lang.String str6 = batchDeleteCandidatesServlet4.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet7 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        setPreferenceServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet7.init((javax.servlet.ServletConfig) recommendServlet12);
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet7);
        batchAddCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet4);
        java.lang.String str16 = batchDeleteCandidatesServlet4.getServletInfo();
        batchDeleteCandidatesServlet4.destroy();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str19 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str20 = batchDeleteCandidatesServlet18.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet21 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        setPreferenceServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet21.init((javax.servlet.ServletConfig) recommendServlet26);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) setPreferenceServlet21);
        setPreferenceServlet21.destroy();
        setPreferenceServlet21.destroy();
        batchDeleteCandidatesServlet4.init((javax.servlet.ServletConfig) setPreferenceServlet21);
        java.lang.String str32 = setPreferenceServlet21.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet33 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet33.init();
        java.lang.String str35 = batchAddCandidatesServlet33.getServletInfo();
        javax.servlet.ServletConfig servletConfig36 = batchAddCandidatesServlet33.getServletConfig();
        batchAddCandidatesServlet33.init();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet38 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str39 = batchDeleteCandidatesServlet38.getServletInfo();
        batchDeleteCandidatesServlet38.init();
        javax.servlet.ServletConfig servletConfig41 = null;
        batchDeleteCandidatesServlet38.init(servletConfig41);
        javax.servlet.ServletConfig servletConfig43 = batchDeleteCandidatesServlet38.getServletConfig();
        batchDeleteCandidatesServlet38.init();
        javax.servlet.ServletConfig servletConfig45 = batchDeleteCandidatesServlet38.getServletConfig();
        java.lang.String str46 = batchDeleteCandidatesServlet38.getServletInfo();
        batchAddCandidatesServlet33.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet38);
        batchAddCandidatesServlet33.destroy();
        javax.servlet.ServletConfig servletConfig49 = batchAddCandidatesServlet33.getServletConfig();
        setPreferenceServlet21.init((javax.servlet.ServletConfig) batchAddCandidatesServlet33);
        batchAddCandidatesServlet33.destroy();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertNull(servletConfig3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "" + "'", str35, "");
        org.junit.Assert.assertNull(servletConfig36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNull(servletConfig43);
        org.junit.Assert.assertNull(servletConfig45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertNotNull(servletConfig49);
    }

    @Test
    public void test29947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29947");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.destroy();
        java.lang.String str6 = batchDeleteCandidatesServlet0.getServletInfo();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = batchDeleteCandidatesServlet0.getInitParameter("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test29948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29948");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        itembasedRecommenderConfig0.setSimilarityClass("label");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        int int9 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int10 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer11 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        java.io.File file12 = null;
        org.plista.kornakapi.core.storage.Storage storage13 = null;
        org.apache.mahout.cf.taste.recommender.Recommender recommender14 = null;
        // The following exception was thrown during execution in test generation
        try {
            multithreadedItembasedInMemoryTrainer11.train(file12, storage13, recommender14, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test29949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29949");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener7 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener5.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        delegatingPreferenceChangeListener7.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler12, "label", (int) ' ');
        delegatingPreferenceChangeListener7.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener15);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener7);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener20);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener23 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener23.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener25 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener23.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        delegatingPreferenceChangeListener25.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler30 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener33 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler30, "label", (int) ' ');
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener33);
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener36 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener36.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener38 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener36.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener43 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener43.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener45 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener43.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener45);
        delegatingPreferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener45);
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener38.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener53 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener53.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener55 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener55.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener53.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener55);
        delegatingPreferenceChangeListener55.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener55.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener60 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener60.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener62 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener60.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
        delegatingPreferenceChangeListener62.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener55.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener62);
        delegatingPreferenceChangeListener38.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener55);
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener38);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener25);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener71 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener73 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener73.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener71.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener73);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener76 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener76.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener78 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener78.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener78.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener76.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener78);
        delegatingPreferenceChangeListener78.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler83 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener86 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler83, "label", (int) ' ');
        delegatingPreferenceChangeListener78.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener86);
        delegatingPreferenceChangeListener71.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener78);
        delegatingPreferenceChangeListener25.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener71);
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
    }

    @Test
    public void test29950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29950");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener2 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener2);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler7 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener10 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler7, "label", (int) ' ');
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener10);
        delegatingPreferenceChangeListener2.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener13 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener13.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener15 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener15.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener13.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener15);
        delegatingPreferenceChangeListener15.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener15.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener20 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener20.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener22 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener20.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener22);
        delegatingPreferenceChangeListener22.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener15.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener22);
        delegatingPreferenceChangeListener15.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener15.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener15.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components31 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage32 = components31.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener33 = components31.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener34 = components31.preferenceChangeListener();
// flaky:         preferenceChangeListener34.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener15.addDelegate(preferenceChangeListener34);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener37 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener37.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener40 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener42 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener42.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener40.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener42);
        delegatingPreferenceChangeListener37.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener40);
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener40.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components48 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage49 = components48.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener50 = components48.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener51 = components48.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener52 = components48.preferenceChangeListener();
        delegatingPreferenceChangeListener40.addDelegate(preferenceChangeListener52);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener54 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener54.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler58 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener61 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler58, "label", (int) '#');
        delegatingPreferenceChangeListener54.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener61);
        delegatingPreferenceChangeListener40.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener54);
        delegatingPreferenceChangeListener15.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener54);
        delegatingPreferenceChangeListener2.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener54);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener66 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener69 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener69.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener71 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener71.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener69.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener71);
        delegatingPreferenceChangeListener66.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener69);
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler75 = null;
        org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener inMemoryPreferenceChangeListener78 = new org.plista.kornakapi.core.training.preferencechanges.InMemoryPreferenceChangeListener(trainingScheduler75, "label", (int) ' ');
        inMemoryPreferenceChangeListener78.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener66.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) inMemoryPreferenceChangeListener78);
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener81 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener81.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener83 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener83.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener81.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener83);
        delegatingPreferenceChangeListener83.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener83.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener66.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener83);
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener66.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener54.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener66);
        org.junit.Assert.assertNotNull(components31);
        org.junit.Assert.assertNull(storage32);
        org.junit.Assert.assertNotNull(preferenceChangeListener33);
        org.junit.Assert.assertNotNull(preferenceChangeListener34);
        org.junit.Assert.assertNotNull(components48);
        org.junit.Assert.assertNull(storage49);
        org.junit.Assert.assertNotNull(preferenceChangeListener50);
        org.junit.Assert.assertNotNull(preferenceChangeListener51);
        org.junit.Assert.assertNotNull(preferenceChangeListener52);
    }

    @Test
    public void test29951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29951");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        configuration2.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig5 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        configuration2.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig5);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getUsername();
        configuration2.setStorageConfiguration(storageConfiguration7);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration2.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration11 = configuration2.getStorageConfiguration();
        java.lang.String str12 = storageConfiguration11.getUsername();
        storageConfiguration11.setJdbcDriverClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=97, itemID=1, value=97.0}");
        storageConfiguration11.setJdbcUrl("MutablePreference{userID=100, itemID=32, value=100.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertNotNull(storageConfiguration11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test29952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29952");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = configuration4.getStorageConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList9 = configuration4.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList10 = configuration4.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components11 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage12 = components11.storage();
        org.plista.kornakapi.core.config.Configuration configuration13 = components11.getConfiguration();
        java.lang.String str14 = configuration13.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str19 = storageConfiguration15.getJdbcUrl();
        java.lang.String str20 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setJdbcDriverClass("batchSize");
        java.lang.String str23 = storageConfiguration15.getPassword();
        java.lang.String str24 = storageConfiguration15.getJdbcUrl();
        configuration13.setStorageConfiguration(storageConfiguration15);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str27 = storageConfiguration26.getJdbcDriverClass();
        storageConfiguration26.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str30 = storageConfiguration26.getPassword();
        java.lang.String str31 = storageConfiguration26.getJdbcDriverClass();
        storageConfiguration26.setUsername("hi!");
        storageConfiguration26.setJdbcDriverClass("file");
        configuration13.setStorageConfiguration(storageConfiguration26);
        storageConfiguration26.setUsername("recommender");
        storageConfiguration26.setPassword("MutablePreference{userID=0, itemID=-1, value=32.0}");
        configuration4.setStorageConfiguration(storageConfiguration26);
        java.lang.String str42 = storageConfiguration26.getJdbcDriverClass();
        storageConfiguration26.setPassword("MutablePreference{userID=0, itemID=32, value=-1.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNotNull(storageConfiguration6);
        org.junit.Assert.assertNotNull(storageConfiguration7);
        org.junit.Assert.assertNotNull(storageConfiguration8);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList9);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList10);
        org.junit.Assert.assertNotNull(components11);
        org.junit.Assert.assertNull(storage12);
        org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "itemID" + "'", str14, "itemID");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "file" + "'", str42, "file");
    }

    @Test
    public void test29953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29953");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer3 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double6 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) (short) 0);
        double double9 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) (short) 10);
        double double12 = fixedCandidatesIDRescorer1.rescore(10000L, (double) (byte) 0);
        double double15 = fixedCandidatesIDRescorer1.rescore(1L, 10000.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer16 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer17 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double20 = fixedCandidatesIDRescorer1.rescore((long) (-1), (double) (byte) 100);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer21 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer22 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = fixedCandidatesIDRescorer1.isFiltered(1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 10.0d + "'", double9 == 10.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 10000.0d + "'", double15 == 10000.0d);
        org.junit.Assert.assertTrue("'" + double20 + "' != '" + 100.0d + "'", double20 == 100.0d);
    }

    @Test
    public void test29954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29954");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = configuration0.getStorageConfiguration();
        java.lang.String str7 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig8 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str9 = itembasedRecommenderConfig8.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig8);
        itembasedRecommenderConfig8.setSimilarityClass("recommender");
        java.lang.String str13 = itembasedRecommenderConfig8.getSimilarityClass();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig8);
        configuration0.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig17 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str18 = itembasedRecommenderConfig17.getSimilarityClass();
        int int19 = itembasedRecommenderConfig17.getSimilarItemsPerItem();
        int int20 = itembasedRecommenderConfig17.getRetrainAfterPreferenceChanges();
        int int21 = itembasedRecommenderConfig17.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer22 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig17);
        int int23 = itembasedRecommenderConfig17.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig17);
        java.lang.String str25 = configuration0.getModelDirectory();
        org.plista.kornakapi.web.Components components26 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration27 = components26.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration28 = components26.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler29 = components26.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler30 = components26.scheduler();
        org.plista.kornakapi.core.storage.Storage storage31 = components26.storage();
        org.plista.kornakapi.core.config.Configuration configuration32 = components26.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage33 = components26.storage();
        org.plista.kornakapi.core.config.Configuration configuration34 = components26.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration35 = components26.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList36 = configuration35.getItembasedRecommenders();
        org.plista.kornakapi.web.Components components37 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage38 = components37.storage();
        org.plista.kornakapi.core.config.Configuration configuration39 = components37.getConfiguration();
        java.lang.String str40 = configuration39.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration41 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str42 = storageConfiguration41.getJdbcDriverClass();
        storageConfiguration41.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str45 = storageConfiguration41.getJdbcUrl();
        java.lang.String str46 = storageConfiguration41.getJdbcDriverClass();
        storageConfiguration41.setJdbcDriverClass("batchSize");
        java.lang.String str49 = storageConfiguration41.getPassword();
        java.lang.String str50 = storageConfiguration41.getJdbcUrl();
        configuration39.setStorageConfiguration(storageConfiguration41);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration52 = configuration39.getStorageConfiguration();
        configuration35.setStorageConfiguration(storageConfiguration52);
        storageConfiguration52.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=0.0}");
        storageConfiguration52.setPassword("org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration52.setPassword("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.MissingParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        configuration0.setStorageConfiguration(storageConfiguration52);
        configuration0.setModelDirectory("itemID");
        org.plista.kornakapi.web.Components components63 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration64 = components63.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration65 = components63.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler66 = components63.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler67 = components63.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener68 = components63.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration69 = components63.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig70 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str71 = itembasedRecommenderConfig70.getRetrainCronExpression();
        int int72 = itembasedRecommenderConfig70.getRetrainAfterPreferenceChanges();
        java.lang.String str73 = itembasedRecommenderConfig70.getSimilarityClass();
        itembasedRecommenderConfig70.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig70.setSimilarityClass("");
        itembasedRecommenderConfig70.setSimilarItemsPerItem((int) '#');
        java.lang.String str80 = itembasedRecommenderConfig70.getName();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer81 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig70);
        configuration69.addItembasedRecommender(itembasedRecommenderConfig70);
        itembasedRecommenderConfig70.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        java.lang.String str85 = itembasedRecommenderConfig70.getSimilarityClass();
        itembasedRecommenderConfig70.setSimilarityClass("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        int int88 = itembasedRecommenderConfig70.getRetrainAfterPreferenceChanges();
        itembasedRecommenderConfig70.setSimilarItemsPerItem(0);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig70);
        itembasedRecommenderConfig70.setSimilarItemsPerItem(100);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(storageConfiguration6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "recommender" + "'", str13, "recommender");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "itemID" + "'", str25, "itemID");
        org.junit.Assert.assertNotNull(components26);
        org.junit.Assert.assertNotNull(configuration27);
        org.junit.Assert.assertNotNull(configuration28);
        org.junit.Assert.assertNull(trainingScheduler29);
        org.junit.Assert.assertNull(trainingScheduler30);
        org.junit.Assert.assertNull(storage31);
        org.junit.Assert.assertNotNull(configuration32);
        org.junit.Assert.assertNull(storage33);
        org.junit.Assert.assertNotNull(configuration34);
        org.junit.Assert.assertNotNull(configuration35);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList36);
        org.junit.Assert.assertNotNull(components37);
        org.junit.Assert.assertNull(storage38);
        org.junit.Assert.assertNotNull(configuration39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "itemID" + "'", str40, "itemID");
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(storageConfiguration52);
        org.junit.Assert.assertNotNull(components63);
        org.junit.Assert.assertNotNull(configuration64);
        org.junit.Assert.assertNotNull(configuration65);
        org.junit.Assert.assertNull(trainingScheduler66);
        org.junit.Assert.assertNull(trainingScheduler67);
        org.junit.Assert.assertNotNull(preferenceChangeListener68);
        org.junit.Assert.assertNotNull(configuration69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test29955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29955");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig0.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer3 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("");
        int int6 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test29956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29956");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer8 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        factorizationbasedRecommenderConfig0.setNumberOfFeatures((int) (short) -1);
        int int11 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setAlpha((double) (byte) 10);
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer14 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig0);
        java.lang.String str15 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) ' ');
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test29957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29957");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        int int6 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations(10);
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setLambda((double) 32);
        factorizationbasedRecommenderConfig0.setAlpha(1.0d);
        int int14 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test29958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29958");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        java.lang.String str8 = recommendServlet7.getServletInfo();
        javax.servlet.ServletConfig servletConfig9 = recommendServlet7.getServletConfig();
        java.lang.String str10 = recommendServlet7.getServletInfo();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) recommendServlet7);
        batchSetPreferencesServlet1.init();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet13 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet14);
        recommendServlet13.destroy();
        java.lang.String str17 = recommendServlet13.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str19 = batchDeleteCandidatesServlet18.getServletInfo();
        batchDeleteCandidatesServlet18.init();
        java.lang.String str21 = batchDeleteCandidatesServlet18.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet batchAddCandidatesServlet22 = new org.plista.kornakapi.web.servlets.BatchAddCandidatesServlet();
        batchAddCandidatesServlet22.init();
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) batchAddCandidatesServlet22);
        batchDeleteCandidatesServlet18.destroy();
        batchDeleteCandidatesServlet18.init();
        javax.servlet.ServletConfig servletConfig27 = batchDeleteCandidatesServlet18.getServletConfig();
        recommendServlet13.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        batchDeleteCandidatesServlet18.init();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = batchDeleteCandidatesServlet18.getInitParameter("MutablePreference{userID=100, itemID=0, value=1.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNull(servletConfig9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertNotNull(servletConfig27);
    }

    @Test
    public void test29959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29959");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str4 = storageConfiguration0.getJdbcUrl();
        java.lang.String str5 = storageConfiguration0.getJdbcDriverClass();
        storageConfiguration0.setJdbcUrl("hi!");
        java.lang.String str8 = storageConfiguration0.getPassword();
        storageConfiguration0.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: file");
        java.lang.String str11 = storageConfiguration0.getPassword();
        storageConfiguration0.setUsername("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=0, value=100.0}");
        storageConfiguration0.setUsername("");
        storageConfiguration0.setUsername("MutablePreference{userID=52, itemID=100, value=10.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test29960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29960");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        long long3 = mutablePreference0.getItemID();
        long long4 = mutablePreference0.getUserID();
        java.lang.String str5 = mutablePreference0.toString();
        mutablePreference0.setValue((float) '4');
        long long8 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (short) 0, 0L, (float) (-1L));
        float float13 = mutablePreference0.getValue();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str5, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + float13 + "' != '" + (-1.0f) + "'", float13 == (-1.0f));
    }

    @Test
    public void test29961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29961");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer2 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double5 = fixedCandidatesIDRescorer1.rescore((long) (short) 1, (double) (byte) 100);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) ' ', 0.0d);
        double double11 = fixedCandidatesIDRescorer1.rescore(100L, (double) 1.0f);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = fixedCandidatesIDRescorer1.isFiltered((long) 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double5 + "' != '" + 100.0d + "'", double5 == 100.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 1.0d + "'", double11 == 1.0d);
    }

    @Test
    public void test29962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29962");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration1.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str4 = itembasedRecommenderConfig3.getRetrainCronExpression();
        int int5 = itembasedRecommenderConfig3.getRetrainAfterPreferenceChanges();
        java.lang.String str6 = itembasedRecommenderConfig3.getSimilarityClass();
        itembasedRecommenderConfig3.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig3.setSimilarityClass("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(1);
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10000);
        configuration1.addItembasedRecommender(itembasedRecommenderConfig3);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str17 = itembasedRecommenderConfig16.getRetrainCronExpression();
        int int18 = itembasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        java.lang.String str19 = itembasedRecommenderConfig16.getSimilarityClass();
        itembasedRecommenderConfig16.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig16.setSimilarityClass("");
        java.lang.String str24 = itembasedRecommenderConfig16.getSimilarityClass();
        itembasedRecommenderConfig16.setSimilarItemsPerItem(0);
        java.lang.String str27 = itembasedRecommenderConfig16.getSimilarityClass();
        itembasedRecommenderConfig16.setRetrainCronExpression("org.plista.kornakapi.web.MissingParameterException: file");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer30 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig16);
        configuration1.addItembasedRecommender(itembasedRecommenderConfig16);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig32 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double33 = factorizationbasedRecommenderConfig32.getAlpha();
        double double34 = factorizationbasedRecommenderConfig32.getLambda();
        int int35 = factorizationbasedRecommenderConfig32.getNumberOfFeatures();
        java.lang.String str36 = factorizationbasedRecommenderConfig32.getRetrainCronExpression();
        int int37 = factorizationbasedRecommenderConfig32.getNumberOfFeatures();
        factorizationbasedRecommenderConfig32.setNumberOfIterations((int) (short) 0);
        boolean boolean40 = factorizationbasedRecommenderConfig32.isUsesImplicitFeedback();
        java.lang.String str41 = factorizationbasedRecommenderConfig32.getRetrainCronExpression();
        double double42 = factorizationbasedRecommenderConfig32.getLambda();
        factorizationbasedRecommenderConfig32.setLambda((double) (byte) -1);
        factorizationbasedRecommenderConfig32.setNumberOfIterations((int) (byte) 100);
        factorizationbasedRecommenderConfig32.setLambda((double) 100L);
        java.lang.String str49 = factorizationbasedRecommenderConfig32.getName();
        factorizationbasedRecommenderConfig32.setAlpha((double) ' ');
        factorizationbasedRecommenderConfig32.setName("label");
        java.lang.String str54 = factorizationbasedRecommenderConfig32.getName();
        java.lang.String str55 = factorizationbasedRecommenderConfig32.getName();
        int int56 = factorizationbasedRecommenderConfig32.getNumberOfIterations();
        factorizationbasedRecommenderConfig32.setNumberOfFeatures((int) (byte) 1);
        factorizationbasedRecommenderConfig32.setUsesImplicitFeedback(true);
        factorizationbasedRecommenderConfig32.setAlpha((double) (byte) 100);
        factorizationbasedRecommenderConfig32.setUsesImplicitFeedback(false);
        configuration1.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig32);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertTrue("'" + double33 + "' != '" + 0.0d + "'", double33 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "label" + "'", str54, "label");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "label" + "'", str55, "label");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 100 + "'", int56 == 100);
    }

    @Test
    public void test29963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29963");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        java.lang.String str3 = configuration2.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = configuration2.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration5 = null;
        configuration2.setStorageConfiguration(storageConfiguration5);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
// flaky:         org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=52.0}");
// flaky:         org.junit.Assert.assertNull(storageConfiguration4);
    }

    @Test
    public void test29964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29964");
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration0 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str1 = storageConfiguration0.getJdbcDriverClass();
        java.lang.String str2 = storageConfiguration0.getUsername();
        storageConfiguration0.setJdbcUrl("");
        storageConfiguration0.setJdbcUrl("");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.InvalidParameterException: file");
        storageConfiguration0.setJdbcDriverClass("MutablePreference{userID=0, itemID=0, value=100.0}");
        storageConfiguration0.setUsername("MutablePreference{userID=0, itemID=-1, value=32.0}");
        storageConfiguration0.setPassword("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file");
        storageConfiguration0.setPassword("MutablePreference{userID=10000, itemID=-1, value=10.0}");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test29965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29965");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration4 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str5 = storageConfiguration4.getJdbcDriverClass();
        storageConfiguration4.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str8 = storageConfiguration4.getJdbcUrl();
        java.lang.String str9 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str10 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str11 = storageConfiguration4.getPassword();
        java.lang.String str12 = storageConfiguration4.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration4.getPassword();
        storageConfiguration4.setUsername("MutablePreference{userID=100, itemID=0, value=0.0}");
        storageConfiguration4.setPassword("itemID");
        java.lang.String str18 = storageConfiguration4.getUsername();
        configuration0.setStorageConfiguration(storageConfiguration4);
        storageConfiguration4.setPassword("MutablePreference{userID=35, itemID=-1, value=10.0}");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "MutablePreference{userID=100, itemID=0, value=0.0}" + "'", str18, "MutablePreference{userID=100, itemID=0, value=0.0}");
    }

    @Test
    public void test29966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29966");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) (short) 0, (double) ' ');
        double double11 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) (-1));
        double double14 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) (-1L));
        double double17 = fixedCandidatesIDRescorer1.rescore((long) '4', 100.0d);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double21 = fixedCandidatesIDRescorer1.rescore((long) (byte) 100, (double) 10.0f);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer22 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 32.0d + "'", double8 == 32.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + (-1.0d) + "'", double11 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + (-1.0d) + "'", double14 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + 100.0d + "'", double17 == 100.0d);
        org.junit.Assert.assertTrue("'" + double21 + "' != '" + 10.0d + "'", double21 == 10.0d);
    }

    @Test
    public void test29967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29967");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = configuration0.getFactorizationbasedRecommenders();
        configuration0.setNumProcessorsForTraining(0);
        org.plista.kornakapi.web.Components components9 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration10 = components9.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration11 = components9.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler12 = components9.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration13 = components9.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        int int15 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
        configuration13.addItembasedRecommender(itembasedRecommenderConfig14);
        itembasedRecommenderConfig14.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=0.0}");
        java.lang.String str19 = itembasedRecommenderConfig14.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig14);
        itembasedRecommenderConfig14.setRetrainCronExpression("MutablePreference{userID=-1, itemID=10, value=0.0}");
        int int23 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
        org.junit.Assert.assertNotNull(components9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNotNull(configuration11);
        org.junit.Assert.assertNull(trainingScheduler12);
        org.junit.Assert.assertNotNull(configuration13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test29968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29968");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage1 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration2.getStorageConfiguration();
        int int4 = configuration2.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = configuration2.getFactorizationbasedRecommenders();
        int int6 = configuration2.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig7.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer10 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setRetrainCronExpression("");
        itembasedRecommenderConfig7.setSimilarItemsPerItem(10);
        java.lang.String str15 = itembasedRecommenderConfig7.getName();
        java.lang.String str16 = itembasedRecommenderConfig7.getName();
        int int17 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str18 = itembasedRecommenderConfig7.getSimilarityClass();
        configuration2.addItembasedRecommender(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setSimilarityClass("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNull(storage1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
    }

    @Test
    public void test29969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29969");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList13 = configuration0.getFactorizationbasedRecommenders();
        configuration0.setNumProcessorsForTraining((int) '#');
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig16 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str17 = itembasedRecommenderConfig16.getRetrainCronExpression();
        int int18 = itembasedRecommenderConfig16.getRetrainAfterPreferenceChanges();
        java.lang.String str19 = itembasedRecommenderConfig16.getSimilarityClass();
        itembasedRecommenderConfig16.setSimilarItemsPerItem(0);
        itembasedRecommenderConfig16.setSimilarItemsPerItem((int) '#');
        int int24 = itembasedRecommenderConfig16.getSimilarItemsPerItem();
        int int25 = itembasedRecommenderConfig16.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig16);
        org.plista.kornakapi.core.config.Configuration configuration27 = new org.plista.kornakapi.core.config.Configuration();
        configuration27.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str30 = configuration27.getModelDirectory();
        configuration27.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig33 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double34 = factorizationbasedRecommenderConfig33.getAlpha();
        int int35 = factorizationbasedRecommenderConfig33.getNumberOfFeatures();
        factorizationbasedRecommenderConfig33.setUsesImplicitFeedback(true);
        double double38 = factorizationbasedRecommenderConfig33.getLambda();
        configuration27.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig33);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig40 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double41 = factorizationbasedRecommenderConfig40.getAlpha();
        double double42 = factorizationbasedRecommenderConfig40.getLambda();
        int int43 = factorizationbasedRecommenderConfig40.getNumberOfFeatures();
        factorizationbasedRecommenderConfig40.setUsesImplicitFeedback(true);
        double double46 = factorizationbasedRecommenderConfig40.getAlpha();
        java.lang.String str47 = factorizationbasedRecommenderConfig40.getRetrainCronExpression();
        int int48 = factorizationbasedRecommenderConfig40.getRetrainAfterPreferenceChanges();
        int int49 = factorizationbasedRecommenderConfig40.getNumberOfIterations();
        factorizationbasedRecommenderConfig40.setNumberOfFeatures((int) '#');
        double double52 = factorizationbasedRecommenderConfig40.getLambda();
        boolean boolean53 = factorizationbasedRecommenderConfig40.isUsesImplicitFeedback();
        configuration27.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig40);
        factorizationbasedRecommenderConfig40.setName("MutablePreference{userID=-1, itemID=10, value=10.0}");
        int int57 = factorizationbasedRecommenderConfig40.getNumberOfIterations();
        double double58 = factorizationbasedRecommenderConfig40.getLambda();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer59 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig40);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig40);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration61 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str62 = storageConfiguration61.getJdbcDriverClass();
        storageConfiguration61.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str65 = storageConfiguration61.getJdbcUrl();
        java.lang.String str66 = storageConfiguration61.getJdbcDriverClass();
        storageConfiguration61.setJdbcUrl("hi!");
        java.lang.String str69 = storageConfiguration61.getPassword();
        storageConfiguration61.setJdbcUrl("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        storageConfiguration61.setPassword("MutablePreference{userID=-1, itemID=10, value=10.0}");
        storageConfiguration61.setJdbcDriverClass("MutablePreference{userID=100, itemID=-1, value=100.0}");
        storageConfiguration61.setUsername("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        configuration0.setStorageConfiguration(storageConfiguration61);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 35 + "'", int24 == 35);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 35 + "'", int25 == 35);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 0.0d + "'", double52 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test29970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29970");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration2 = configuration0.getStorageConfiguration();
        configuration0.setNumProcessorsForTraining((int) (short) 0);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList5 = configuration0.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig6 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig6.setSimilarityClass("");
        java.lang.String str9 = itembasedRecommenderConfig6.getSimilarityClass();
        itembasedRecommenderConfig6.setRetrainCronExpression("userID");
        configuration0.addItembasedRecommender(itembasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components13 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener14 = components13.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage15 = components13.storage();
        org.plista.kornakapi.core.config.Configuration configuration16 = components13.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration17 = configuration16.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration18 = configuration16.getStorageConfiguration();
        configuration0.setStorageConfiguration(storageConfiguration18);
        configuration0.setModelDirectory("MutablePreference{userID=100, itemID=10, value=-1.0}");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig22 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double23 = factorizationbasedRecommenderConfig22.getAlpha();
        double double24 = factorizationbasedRecommenderConfig22.getLambda();
        boolean boolean25 = factorizationbasedRecommenderConfig22.isUsesImplicitFeedback();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer26 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig22);
        double double27 = factorizationbasedRecommenderConfig22.getAlpha();
        factorizationbasedRecommenderConfig22.setRetrainAfterPreferenceChanges((int) 'a');
        int int30 = factorizationbasedRecommenderConfig22.getNumberOfIterations();
        factorizationbasedRecommenderConfig22.setAlpha(100.0d);
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig22);
        double double34 = factorizationbasedRecommenderConfig22.getLambda();
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNull(storageConfiguration2);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(components13);
        org.junit.Assert.assertNotNull(preferenceChangeListener14);
        org.junit.Assert.assertNull(storage15);
        org.junit.Assert.assertNotNull(configuration16);
        org.junit.Assert.assertNull(storageConfiguration17);
        org.junit.Assert.assertNull(storageConfiguration18);
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    }

    @Test
    public void test29971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29971");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 10L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer6 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double9 = fixedCandidatesIDRescorer1.rescore(0L, (double) 100);
        double double12 = fixedCandidatesIDRescorer1.rescore((long) (short) 10, (double) (byte) 1);
        double double15 = fixedCandidatesIDRescorer1.rescore((long) '#', (double) 'a');
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer16 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer17 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double22 = fixedCandidatesIDRescorer1.rescore((long) (byte) 10, (double) '4');
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = fixedCandidatesIDRescorer1.isFiltered((long) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 10.0d + "'", double4 == 10.0d);
        org.junit.Assert.assertTrue("'" + double9 + "' != '" + 100.0d + "'", double9 == 100.0d);
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 1.0d + "'", double12 == 1.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 97.0d + "'", double15 == 97.0d);
        org.junit.Assert.assertTrue("'" + double22 + "' != '" + 52.0d + "'", double22 == 52.0d);
    }

    @Test
    public void test29972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29972");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList1 = configuration0.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList2 = configuration0.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration3 = configuration0.getStorageConfiguration();
        int int4 = configuration0.getNumProcessorsForTraining();
        configuration0.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str8 = storageConfiguration7.getJdbcDriverClass();
        storageConfiguration7.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str11 = storageConfiguration7.getJdbcUrl();
        java.lang.String str12 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str13 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str14 = storageConfiguration7.getPassword();
        java.lang.String str15 = storageConfiguration7.getJdbcDriverClass();
        java.lang.String str16 = storageConfiguration7.getPassword();
        configuration0.setStorageConfiguration(storageConfiguration7);
        java.lang.String str18 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("userID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig21 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig21.setSimilarityClass("");
        java.lang.String str24 = itembasedRecommenderConfig21.getName();
        java.lang.String str25 = itembasedRecommenderConfig21.getSimilarityClass();
        java.lang.String str26 = itembasedRecommenderConfig21.getSimilarityClass();
        int int27 = itembasedRecommenderConfig21.getSimilarItemsPerItem();
        itembasedRecommenderConfig21.setSimilarItemsPerItem((int) (byte) 10);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig21);
        int int31 = configuration0.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration32 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str33 = storageConfiguration32.getUsername();
        java.lang.String str34 = storageConfiguration32.getJdbcDriverClass();
        java.lang.String str35 = storageConfiguration32.getPassword();
        storageConfiguration32.setJdbcUrl("file");
        java.lang.String str38 = storageConfiguration32.getUsername();
        storageConfiguration32.setUsername("");
        configuration0.setStorageConfiguration(storageConfiguration32);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration42 = configuration0.getStorageConfiguration();
        org.plista.kornakapi.web.Components components43 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration44 = components43.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration45 = components43.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler46 = components43.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration47 = components43.getConfiguration();
        configuration47.setNumProcessorsForTraining(0);
        java.lang.String str50 = configuration47.getModelDirectory();
        int int51 = configuration47.getNumProcessorsForTraining();
        java.lang.String str52 = configuration47.getModelDirectory();
        org.plista.kornakapi.web.Components components53 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration54 = components53.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration55 = components53.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage56 = components53.storage();
        org.plista.kornakapi.core.storage.Storage storage57 = components53.storage();
        org.plista.kornakapi.core.config.Configuration configuration58 = components53.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList59 = configuration58.getItembasedRecommenders();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig60 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig60.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer63 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig60);
        itembasedRecommenderConfig60.setRetrainCronExpression("");
        itembasedRecommenderConfig60.setSimilarItemsPerItem(10);
        itembasedRecommenderConfig60.setRetrainCronExpression("");
        configuration58.addItembasedRecommender(itembasedRecommenderConfig60);
        configuration47.addItembasedRecommender(itembasedRecommenderConfig60);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig60);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList1);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList2);
        org.junit.Assert.assertNull(storageConfiguration3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(storageConfiguration42);
        org.junit.Assert.assertNotNull(components43);
        org.junit.Assert.assertNotNull(configuration44);
        org.junit.Assert.assertNotNull(configuration45);
        org.junit.Assert.assertNull(trainingScheduler46);
        org.junit.Assert.assertNotNull(configuration47);
// flaky:         org.junit.Assert.assertEquals("'" + str50 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str50, "MutablePreference{userID=0, itemID=0, value=52.0}");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
// flaky:         org.junit.Assert.assertEquals("'" + str52 + "' != '" + "MutablePreference{userID=0, itemID=0, value=52.0}" + "'", str52, "MutablePreference{userID=0, itemID=0, value=52.0}");
        org.junit.Assert.assertNotNull(components53);
        org.junit.Assert.assertNotNull(configuration54);
        org.junit.Assert.assertNotNull(configuration55);
        org.junit.Assert.assertNull(storage56);
        org.junit.Assert.assertNull(storage57);
        org.junit.Assert.assertNotNull(configuration58);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList59);
    }

    @Test
    public void test29973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29973");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration9 = new org.plista.kornakapi.core.config.Configuration();
        configuration9.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str12 = configuration9.getModelDirectory();
        configuration9.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration15 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str16 = storageConfiguration15.getJdbcDriverClass();
        storageConfiguration15.setPassword("itemIDs");
        configuration9.setStorageConfiguration(storageConfiguration15);
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList20 = configuration9.getItembasedRecommenders();
        configuration9.setModelDirectory("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig23 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double24 = factorizationbasedRecommenderConfig23.getAlpha();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer25 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig23);
        factorizationbasedRecommenderConfig23.setUsesImplicitFeedback(false);
        factorizationbasedRecommenderConfig23.setNumberOfIterations((int) '#');
        configuration9.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig23);
        factorizationbasedRecommenderConfig23.setRetrainAfterPreferenceChanges(35);
        configuration4.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig23);
        double double34 = factorizationbasedRecommenderConfig23.getAlpha();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNull(storageConfiguration6);
        org.junit.Assert.assertNull(storageConfiguration7);
        org.junit.Assert.assertNull(storageConfiguration8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList20);
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        org.junit.Assert.assertTrue("'" + double34 + "' != '" + 0.0d + "'", double34 == 0.0d);
    }

    @Test
    public void test29974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29974");
        org.plista.kornakapi.web.MissingParameterException missingParameterException6 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException6);
        org.plista.kornakapi.web.MissingParameterException missingParameterException10 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException12 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException10.addSuppressed((java.lang.Throwable) missingParameterException12);
        invalidParameterException8.addSuppressed((java.lang.Throwable) missingParameterException12);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException15 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException8);
        org.plista.kornakapi.web.MissingParameterException missingParameterException19 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException20 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException21 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException19);
        invalidParameterException15.addSuppressed((java.lang.Throwable) missingParameterException19);
        org.plista.kornakapi.web.MissingParameterException missingParameterException24 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException27 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=100, itemID=0, value=0.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException28 = new org.plista.kornakapi.web.InvalidParameterException("label", (java.lang.Throwable) missingParameterException27);
        missingParameterException24.addSuppressed((java.lang.Throwable) invalidParameterException28);
        invalidParameterException15.addSuppressed((java.lang.Throwable) missingParameterException24);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException31 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) invalidParameterException15);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException32 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=0, itemID=10000, value=0.0}", (java.lang.Throwable) invalidParameterException15);
        org.plista.kornakapi.web.MissingParameterException missingParameterException39 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException40 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException39);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException41 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) invalidParameterException40);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException42 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.MissingParameterException: itemIDs", (java.lang.Throwable) invalidParameterException40);
        org.plista.kornakapi.web.MissingParameterException missingParameterException47 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException48 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException47);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException49 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException47);
        org.plista.kornakapi.web.MissingParameterException missingParameterException51 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.MissingParameterException missingParameterException53 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        missingParameterException51.addSuppressed((java.lang.Throwable) missingParameterException53);
        invalidParameterException49.addSuppressed((java.lang.Throwable) missingParameterException53);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException56 = new org.plista.kornakapi.web.InvalidParameterException("file", (java.lang.Throwable) invalidParameterException49);
        org.plista.kornakapi.web.MissingParameterException missingParameterException60 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException61 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException60);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException62 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException60);
        invalidParameterException56.addSuppressed((java.lang.Throwable) missingParameterException60);
        org.plista.kornakapi.web.MissingParameterException missingParameterException68 = new org.plista.kornakapi.web.MissingParameterException("itemID");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException69 = new org.plista.kornakapi.web.InvalidParameterException("howMany", (java.lang.Throwable) missingParameterException68);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException70 = new org.plista.kornakapi.web.InvalidParameterException("hi!", (java.lang.Throwable) missingParameterException68);
        java.lang.Throwable[] throwableArray71 = missingParameterException68.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException72 = new org.plista.kornakapi.web.InvalidParameterException("recommender", (java.lang.Throwable) missingParameterException68);
        missingParameterException60.addSuppressed((java.lang.Throwable) missingParameterException68);
        invalidParameterException42.addSuppressed((java.lang.Throwable) missingParameterException60);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException75 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) invalidParameterException42);
        java.lang.Throwable[] throwableArray76 = invalidParameterException42.getSuppressed();
        java.lang.Throwable[] throwableArray77 = invalidParameterException42.getSuppressed();
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException78 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) invalidParameterException42);
        java.lang.Throwable[] throwableArray79 = invalidParameterException42.getSuppressed();
        invalidParameterException32.addSuppressed((java.lang.Throwable) invalidParameterException42);
        org.plista.kornakapi.web.MissingParameterException missingParameterException83 = new org.plista.kornakapi.web.MissingParameterException("recommender");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException84 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: file", (java.lang.Throwable) missingParameterException83);
        java.lang.Throwable[] throwableArray85 = invalidParameterException84.getSuppressed();
        invalidParameterException32.addSuppressed((java.lang.Throwable) invalidParameterException84);
        java.lang.String str87 = invalidParameterException84.toString();
        org.junit.Assert.assertNotNull(throwableArray71);
        org.junit.Assert.assertNotNull(throwableArray76);
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file" + "'", str87, "org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: file");
    }

    @Test
    public void test29975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29975");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList6 = configuration5.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration5.getStorageConfiguration();
        // The following exception was thrown during execution in test generation
        try {
            storageConfiguration7.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList6);
        org.junit.Assert.assertNull(storageConfiguration7);
    }

    @Test
    public void test29976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29976");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str4 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        int int5 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setNumberOfIterations((int) (short) 0);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) (byte) 100);
        double double10 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setAlpha((double) (short) 10);
        int int13 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        java.lang.String str14 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        factorizationbasedRecommenderConfig0.setLambda(32.0d);
        int int17 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + double10 + "' != '" + 0.0d + "'", double10 == 0.0d);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test29977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29977");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
        configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
        configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig34 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str35 = itembasedRecommenderConfig34.getRetrainCronExpression();
        int int36 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
        int int37 = itembasedRecommenderConfig34.getRetrainAfterPreferenceChanges();
        configuration5.addItembasedRecommender(itembasedRecommenderConfig34);
        org.plista.kornakapi.core.config.Configuration configuration39 = new org.plista.kornakapi.core.config.Configuration();
        configuration39.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str42 = configuration39.getModelDirectory();
        configuration39.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig45 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double46 = factorizationbasedRecommenderConfig45.getAlpha();
        int int47 = factorizationbasedRecommenderConfig45.getNumberOfFeatures();
        factorizationbasedRecommenderConfig45.setUsesImplicitFeedback(true);
        double double50 = factorizationbasedRecommenderConfig45.getLambda();
        configuration39.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig45);
        factorizationbasedRecommenderConfig45.setAlpha((double) (short) 0);
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig45);
        java.lang.String str55 = factorizationbasedRecommenderConfig45.getName();
        factorizationbasedRecommenderConfig45.setNumberOfFeatures(100);
        factorizationbasedRecommenderConfig45.setNumberOfIterations((int) (byte) 0);
        double double60 = factorizationbasedRecommenderConfig45.getLambda();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(components16);
        org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
        org.junit.Assert.assertNotNull(configuration20);
        org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 0.0d + "'", double46 == 0.0d);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
    }

    @Test
    public void test29978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29978");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str3 = configuration0.getModelDirectory();
        configuration0.setModelDirectory("org.plista.kornakapi.web.MissingParameterException: itemID");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        int int8 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setUsesImplicitFeedback(true);
        double double11 = factorizationbasedRecommenderConfig6.getLambda();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig13 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double14 = factorizationbasedRecommenderConfig13.getAlpha();
        double double15 = factorizationbasedRecommenderConfig13.getLambda();
        int int16 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        factorizationbasedRecommenderConfig13.setUsesImplicitFeedback(true);
        double double19 = factorizationbasedRecommenderConfig13.getAlpha();
        java.lang.String str20 = factorizationbasedRecommenderConfig13.getRetrainCronExpression();
        int int21 = factorizationbasedRecommenderConfig13.getRetrainAfterPreferenceChanges();
        int int22 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        factorizationbasedRecommenderConfig13.setNumberOfFeatures((int) '#');
        double double25 = factorizationbasedRecommenderConfig13.getLambda();
        boolean boolean26 = factorizationbasedRecommenderConfig13.isUsesImplicitFeedback();
        configuration0.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig13);
        factorizationbasedRecommenderConfig13.setName("MutablePreference{userID=-1, itemID=10, value=10.0}");
        int int30 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        double double31 = factorizationbasedRecommenderConfig13.getLambda();
        org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer factorizationbasedInMemoryTrainer32 = new org.plista.kornakapi.core.training.FactorizationbasedInMemoryTrainer(factorizationbasedRecommenderConfig13);
        factorizationbasedRecommenderConfig13.setAlpha((double) (-1));
        int int35 = factorizationbasedRecommenderConfig13.getNumberOfFeatures();
        int int36 = factorizationbasedRecommenderConfig13.getNumberOfIterations();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 35 + "'", int35 == 35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test29979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29979");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList5 = configuration4.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration6 = configuration4.getStorageConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig7 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str8 = itembasedRecommenderConfig7.getRetrainCronExpression();
        int int9 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str10 = itembasedRecommenderConfig7.getSimilarityClass();
        itembasedRecommenderConfig7.setSimilarityClass("MutablePreference{userID=100, itemID=0, value=0.0}");
        itembasedRecommenderConfig7.setSimilarityClass("MutablePreference{userID=0, itemID=0, value=0.0}");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer15 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig7);
        configuration4.addItembasedRecommender(itembasedRecommenderConfig7);
        itembasedRecommenderConfig7.setName("MutablePreference{userID=97, itemID=1, value=1.0}");
        int int19 = itembasedRecommenderConfig7.getRetrainAfterPreferenceChanges();
        java.lang.String str20 = itembasedRecommenderConfig7.getRetrainCronExpression();
        itembasedRecommenderConfig7.setSimilarityClass("MutablePreference{userID=32, itemID=32, value=97.0}");
        itembasedRecommenderConfig7.setName("MutablePreference{userID=0, itemID=100, value=1.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList5);
        org.junit.Assert.assertNull(storageConfiguration6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test29980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29980");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage6 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage8 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage9 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration10 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler11 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration12 = components0.getConfiguration();
        int int13 = configuration12.getNumProcessorsForTraining();
        org.plista.kornakapi.core.config.Configuration configuration14 = new org.plista.kornakapi.core.config.Configuration();
        configuration14.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig17 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double18 = factorizationbasedRecommenderConfig17.getAlpha();
        double double19 = factorizationbasedRecommenderConfig17.getLambda();
        configuration14.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig17);
        java.lang.String str21 = configuration14.getModelDirectory();
        int int22 = configuration14.getNumProcessorsForTraining();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList23 = configuration14.getItembasedRecommenders();
        java.util.List<org.plista.kornakapi.core.config.ItembasedRecommenderConfig> itembasedRecommenderConfigList24 = configuration14.getItembasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration25 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str26 = storageConfiguration25.getJdbcDriverClass();
        storageConfiguration25.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str29 = storageConfiguration25.getJdbcUrl();
        java.lang.String str30 = storageConfiguration25.getJdbcUrl();
        java.lang.String str31 = storageConfiguration25.getJdbcUrl();
        storageConfiguration25.setUsername("recommender");
        java.lang.String str34 = storageConfiguration25.getJdbcDriverClass();
        configuration14.setStorageConfiguration(storageConfiguration25);
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList36 = configuration14.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.Configuration configuration37 = new org.plista.kornakapi.core.config.Configuration();
        configuration37.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration40 = configuration37.getStorageConfiguration();
        configuration37.setNumProcessorsForTraining((int) (short) 10);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration43 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str44 = storageConfiguration43.getJdbcDriverClass();
        storageConfiguration43.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str47 = storageConfiguration43.getJdbcUrl();
        java.lang.String str48 = storageConfiguration43.getJdbcUrl();
        java.lang.String str49 = storageConfiguration43.getJdbcUrl();
        storageConfiguration43.setUsername("recommender");
        configuration37.setStorageConfiguration(storageConfiguration43);
        java.lang.String str53 = storageConfiguration43.getJdbcDriverClass();
        storageConfiguration43.setJdbcUrl("itemIDs");
        configuration14.setStorageConfiguration(storageConfiguration43);
        java.lang.String str57 = storageConfiguration43.getUsername();
        java.lang.String str58 = storageConfiguration43.getJdbcDriverClass();
        java.lang.String str59 = storageConfiguration43.getJdbcUrl();
        storageConfiguration43.setJdbcUrl("org.plista.kornakapi.web.MissingParameterException: itemIDs");
        configuration12.setStorageConfiguration(storageConfiguration43);
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNull(storage6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNull(storage8);
        org.junit.Assert.assertNull(storage9);
        org.junit.Assert.assertNotNull(configuration10);
        org.junit.Assert.assertNull(trainingScheduler11);
        org.junit.Assert.assertNotNull(configuration12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + double18 + "' != '" + 0.0d + "'", double18 == 0.0d);
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList23);
        org.junit.Assert.assertNotNull(itembasedRecommenderConfigList24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList36);
        org.junit.Assert.assertNull(storageConfiguration40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "recommender" + "'", str57, "recommender");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "itemIDs" + "'", str59, "itemIDs");
    }

    @Test
    public void test29981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29981");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(false);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        int int7 = factorizationbasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        double double8 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str9 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test29982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29982");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) recommendServlet5);
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet7 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet8 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet9 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet8.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        setPreferenceServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet9);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet12 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet7.init((javax.servlet.ServletConfig) recommendServlet12);
        recommendServlet12.destroy();
        javax.servlet.ServletConfig servletConfig15 = recommendServlet12.getServletConfig();
        setPreferenceServlet0.init(servletConfig15);
        java.lang.String str17 = setPreferenceServlet0.getServletInfo();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext18 = setPreferenceServlet0.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
    }

    @Test
    public void test29983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29983");
        org.plista.kornakapi.web.MissingParameterException missingParameterException5 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=0, itemID=0, value=32.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException6 = new org.plista.kornakapi.web.InvalidParameterException("itemIDs", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException7 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.web.InvalidParameterException: org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException8 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=35, itemID=-1, value=0.0}", (java.lang.Throwable) missingParameterException5);
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException9 = new org.plista.kornakapi.web.InvalidParameterException("MutablePreference{userID=100, itemID=10, value=0.0}", (java.lang.Throwable) invalidParameterException8);
    }

    @Test
    public void test29984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29984");
        org.plista.kornakapi.web.servlets.AddCandidateServlet addCandidateServlet0 = new org.plista.kornakapi.web.servlets.AddCandidateServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig4 = batchSetPreferencesServlet1.getServletConfig();
        addCandidateServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet1);
        batchSetPreferencesServlet1.destroy();
        java.lang.String str7 = batchSetPreferencesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.TrainServlet trainServlet8 = new org.plista.kornakapi.web.servlets.TrainServlet();
        java.lang.String str9 = trainServlet8.getServletInfo();
        org.plista.kornakapi.web.servlets.DeleteCandidateServlet deleteCandidateServlet10 = new org.plista.kornakapi.web.servlets.DeleteCandidateServlet();
        deleteCandidateServlet10.destroy();
        javax.servlet.ServletConfig servletConfig12 = deleteCandidateServlet10.getServletConfig();
        deleteCandidateServlet10.destroy();
        trainServlet8.init((javax.servlet.ServletConfig) deleteCandidateServlet10);
        javax.servlet.ServletConfig servletConfig15 = deleteCandidateServlet10.getServletConfig();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) deleteCandidateServlet10);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet17 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet18 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str19 = batchDeleteCandidatesServlet18.getServletInfo();
        java.lang.String str20 = batchDeleteCandidatesServlet18.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet21 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet22 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet23 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet22.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        setPreferenceServlet21.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet23);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet26 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet21.init((javax.servlet.ServletConfig) recommendServlet26);
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) setPreferenceServlet21);
        batchDeleteCandidatesServlet18.destroy();
        batchDeleteCandidatesServlet17.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet18);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet31 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet32 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet33 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet32.init((javax.servlet.ServletConfig) batchSetPreferencesServlet33);
        batchDeleteCandidatesServlet31.init((javax.servlet.ServletConfig) batchSetPreferencesServlet33);
        javax.servlet.ServletConfig servletConfig36 = batchSetPreferencesServlet33.getServletConfig();
        batchSetPreferencesServlet33.init();
        batchDeleteCandidatesServlet18.init((javax.servlet.ServletConfig) batchSetPreferencesServlet33);
        batchSetPreferencesServlet33.init();
        batchSetPreferencesServlet33.init();
        deleteCandidateServlet10.init((javax.servlet.ServletConfig) batchSetPreferencesServlet33);
        javax.servlet.ServletConfig servletConfig42 = batchSetPreferencesServlet33.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            javax.servlet.ServletContext servletContext43 = batchSetPreferencesServlet33.getServletContext();
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(servletConfig4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNull(servletConfig12);
        org.junit.Assert.assertNull(servletConfig15);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig36);
        org.junit.Assert.assertNull(servletConfig42);
    }

    @Test
    public void test29985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29985");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        java.lang.String str6 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.init();
        setPreferenceServlet0.destroy();
        setPreferenceServlet0.init();
        javax.servlet.ServletRequest servletRequest10 = null;
        javax.servlet.ServletResponse servletResponse11 = null;
        // The following exception was thrown during execution in test generation
        try {
            setPreferenceServlet0.service(servletRequest10, servletResponse11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test29986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29986");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        setPreferenceServlet0.destroy();
        javax.servlet.ServletRequest servletRequest7 = null;
        javax.servlet.ServletResponse servletResponse8 = null;
        // The following exception was thrown during execution in test generation
        try {
            setPreferenceServlet0.service(servletRequest7, servletResponse8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test29987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29987");
        org.plista.kornakapi.core.MutablePreference mutablePreference0 = new org.plista.kornakapi.core.MutablePreference();
        java.lang.String str1 = mutablePreference0.toString();
        long long2 = mutablePreference0.getItemID();
        java.lang.String str3 = mutablePreference0.toString();
        long long4 = mutablePreference0.getItemID();
        long long5 = mutablePreference0.getItemID();
        mutablePreference0.set((long) (byte) 0, (long) (-1), (float) ' ');
        mutablePreference0.set((long) '#', (long) (short) -1, 10.0f);
        float float14 = mutablePreference0.getValue();
        mutablePreference0.set((long) (short) 10, 52L, (float) 52L);
        float float19 = mutablePreference0.getValue();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str1, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str3, "MutablePreference{userID=0, itemID=0, value=0.0}");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + float14 + "' != '" + 10.0f + "'", float14 == 10.0f);
        org.junit.Assert.assertTrue("'" + float19 + "' != '" + 52.0f + "'", float19 == 52.0f);
    }

    @Test
    public void test29988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29988");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet1 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str2 = batchDeleteCandidatesServlet1.getServletInfo();
        java.lang.String str3 = batchDeleteCandidatesServlet1.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet4 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet5 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet6 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet5.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        setPreferenceServlet4.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet6);
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet9 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        setPreferenceServlet4.init((javax.servlet.ServletConfig) recommendServlet9);
        batchDeleteCandidatesServlet1.init((javax.servlet.ServletConfig) setPreferenceServlet4);
        batchDeleteCandidatesServlet1.destroy();
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet1);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet14 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str15 = batchDeleteCandidatesServlet14.getServletInfo();
        batchDeleteCandidatesServlet14.destroy();
        javax.servlet.ServletConfig servletConfig17 = batchDeleteCandidatesServlet14.getServletConfig();
        batchDeleteCandidatesServlet0.init(servletConfig17);
        java.lang.String str19 = batchDeleteCandidatesServlet0.getServletInfo();
        org.plista.kornakapi.web.MissingParameterException missingParameterException23 = new org.plista.kornakapi.web.MissingParameterException("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        org.plista.kornakapi.web.InvalidParameterException invalidParameterException24 = new org.plista.kornakapi.web.InvalidParameterException("org.plista.kornakapi.web.InvalidParameterException: itemIDs", (java.lang.Throwable) missingParameterException23);
        // The following exception was thrown during execution in test generation
        try {
            batchDeleteCandidatesServlet0.log("MutablePreference{userID=52, itemID=32, value=10000.0}", (java.lang.Throwable) missingParameterException23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "" + "'", str2, "");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(servletConfig17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
    }

    @Test
    public void test29989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29989");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration2 = components0.getConfiguration();
        org.plista.kornakapi.core.storage.Storage storage3 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig6 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double7 = factorizationbasedRecommenderConfig6.getAlpha();
        double double8 = factorizationbasedRecommenderConfig6.getLambda();
        int int9 = factorizationbasedRecommenderConfig6.getNumberOfFeatures();
        factorizationbasedRecommenderConfig6.setNumberOfIterations(0);
        factorizationbasedRecommenderConfig6.setNumberOfFeatures((int) (short) 100);
        boolean boolean14 = factorizationbasedRecommenderConfig6.isUsesImplicitFeedback();
        configuration5.addFactorizationbasedRecommender(factorizationbasedRecommenderConfig6);
        org.plista.kornakapi.web.Components components16 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration17 = components16.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler18 = components16.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler19 = components16.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration20 = components16.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration21 = components16.getConfiguration();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig22 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig22.setSimilarityClass("");
        java.lang.String str25 = itembasedRecommenderConfig22.getName();
        java.lang.String str26 = itembasedRecommenderConfig22.getSimilarityClass();
        itembasedRecommenderConfig22.setName("");
        java.lang.String str29 = itembasedRecommenderConfig22.getSimilarityClass();
        configuration21.addItembasedRecommender(itembasedRecommenderConfig22);
        itembasedRecommenderConfig22.setSimilarItemsPerItem((int) (byte) 1);
        configuration5.addItembasedRecommender(itembasedRecommenderConfig22);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration34 = new org.plista.kornakapi.core.config.StorageConfiguration();
        java.lang.String str35 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.core.training.TrainRecommenderJob.recommenderName");
        java.lang.String str38 = storageConfiguration34.getJdbcUrl();
        java.lang.String str39 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setJdbcDriverClass("batchSize");
        java.lang.String str42 = storageConfiguration34.getPassword();
        storageConfiguration34.setUsername("batchSize");
        java.lang.String str45 = storageConfiguration34.getJdbcDriverClass();
        storageConfiguration34.setUsername("org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        configuration5.setStorageConfiguration(storageConfiguration34);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration49 = configuration5.getStorageConfiguration();
        java.lang.String str50 = storageConfiguration49.getPassword();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNotNull(configuration2);
        org.junit.Assert.assertNull(storage3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertTrue("'" + double7 + "' != '" + 0.0d + "'", double7 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(components16);
        org.junit.Assert.assertNotNull(configuration17);
        org.junit.Assert.assertNull(trainingScheduler18);
        org.junit.Assert.assertNull(trainingScheduler19);
        org.junit.Assert.assertNotNull(configuration20);
        org.junit.Assert.assertNotNull(configuration21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "batchSize" + "'", str45, "batchSize");
        org.junit.Assert.assertNotNull(storageConfiguration49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test29990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29990");
        org.plista.kornakapi.core.config.Configuration configuration0 = new org.plista.kornakapi.core.config.Configuration();
        configuration0.setNumProcessorsForTraining((int) (short) 100);
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig3 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        itembasedRecommenderConfig3.setSimilarityClass("");
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer6 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig3);
        itembasedRecommenderConfig3.setRetrainCronExpression("");
        itembasedRecommenderConfig3.setSimilarItemsPerItem(10);
        java.lang.String str11 = itembasedRecommenderConfig3.getName();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig3);
        java.lang.String str13 = configuration0.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig14 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str15 = itembasedRecommenderConfig14.getSimilarityClass();
        java.lang.String str16 = itembasedRecommenderConfig14.getSimilarityClass();
        int int17 = itembasedRecommenderConfig14.getRetrainAfterPreferenceChanges();
        int int18 = itembasedRecommenderConfig14.getSimilarItemsPerItem();
        configuration0.addItembasedRecommender(itembasedRecommenderConfig14);
        org.plista.kornakapi.core.config.Configuration configuration20 = new org.plista.kornakapi.core.config.Configuration();
        configuration20.setNumProcessorsForTraining((int) (short) 100);
        java.lang.String str23 = configuration20.getModelDirectory();
        configuration20.setNumProcessorsForTraining((int) (byte) 100);
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration26 = configuration20.getStorageConfiguration();
        java.lang.String str27 = configuration20.getModelDirectory();
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig28 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str29 = itembasedRecommenderConfig28.getSimilarityClass();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer30 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig28);
        itembasedRecommenderConfig28.setSimilarityClass("recommender");
        java.lang.String str33 = itembasedRecommenderConfig28.getSimilarityClass();
        configuration20.addItembasedRecommender(itembasedRecommenderConfig28);
        configuration20.setModelDirectory("itemID");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig37 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str38 = itembasedRecommenderConfig37.getSimilarityClass();
        int int39 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
        int int40 = itembasedRecommenderConfig37.getRetrainAfterPreferenceChanges();
        int int41 = itembasedRecommenderConfig37.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer42 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig37);
        int int43 = itembasedRecommenderConfig37.getSimilarItemsPerItem();
        configuration20.addItembasedRecommender(itembasedRecommenderConfig37);
        configuration0.addItembasedRecommender(itembasedRecommenderConfig37);
        java.lang.String str46 = configuration0.getModelDirectory();
        java.lang.Class<?> wildcardClass47 = configuration0.getClass();
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(storageConfiguration26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "recommender" + "'", str33, "recommender");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test29991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29991");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener3 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.storage.Storage storage4 = components0.storage();
        org.plista.kornakapi.core.storage.Storage storage5 = components0.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener6 = components0.preferenceChangeListener();
        org.plista.kornakapi.core.config.Configuration configuration7 = components0.getConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = configuration7.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration9 = configuration7.getStorageConfiguration();
        java.lang.String str10 = storageConfiguration9.getJdbcUrl();
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNotNull(preferenceChangeListener3);
        org.junit.Assert.assertNull(storage4);
        org.junit.Assert.assertNull(storage5);
        org.junit.Assert.assertNotNull(preferenceChangeListener6);
        org.junit.Assert.assertNotNull(configuration7);
        org.junit.Assert.assertNotNull(storageConfiguration8);
        org.junit.Assert.assertNotNull(storageConfiguration9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test29992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29992");
        org.plista.kornakapi.core.config.ItembasedRecommenderConfig itembasedRecommenderConfig0 = new org.plista.kornakapi.core.config.ItembasedRecommenderConfig();
        java.lang.String str1 = itembasedRecommenderConfig0.getSimilarityClass();
        int int2 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int3 = itembasedRecommenderConfig0.getRetrainAfterPreferenceChanges();
        org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer multithreadedItembasedInMemoryTrainer4 = new org.plista.kornakapi.core.training.MultithreadedItembasedInMemoryTrainer(itembasedRecommenderConfig0);
        itembasedRecommenderConfig0.setRetrainCronExpression("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=-1, itemID=10, value=10.0}");
        int int7 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        int int8 = itembasedRecommenderConfig0.getSimilarItemsPerItem();
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(32);
        java.lang.String str11 = itembasedRecommenderConfig0.getSimilarityClass();
        itembasedRecommenderConfig0.setRetrainAfterPreferenceChanges(1);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test29993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29993");
        org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig factorizationbasedRecommenderConfig0 = new org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig();
        double double1 = factorizationbasedRecommenderConfig0.getAlpha();
        double double2 = factorizationbasedRecommenderConfig0.getLambda();
        int int3 = factorizationbasedRecommenderConfig0.getNumberOfFeatures();
        factorizationbasedRecommenderConfig0.setUsesImplicitFeedback(true);
        double double6 = factorizationbasedRecommenderConfig0.getAlpha();
        java.lang.String str7 = factorizationbasedRecommenderConfig0.getRetrainCronExpression();
        double double8 = factorizationbasedRecommenderConfig0.getLambda();
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges((int) '4');
        double double11 = factorizationbasedRecommenderConfig0.getAlpha();
        factorizationbasedRecommenderConfig0.setNumberOfFeatures(10);
        factorizationbasedRecommenderConfig0.setRetrainAfterPreferenceChanges(32);
        org.junit.Assert.assertTrue("'" + double1 + "' != '" + 0.0d + "'", double1 == 0.0d);
        org.junit.Assert.assertTrue("'" + double2 + "' != '" + 0.0d + "'", double2 == 0.0d);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + double6 + "' != '" + 0.0d + "'", double6 == 0.0d);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 0.0d + "'", double8 == 0.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
    }

    @Test
    public void test29994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29994");
        org.apache.mahout.cf.taste.impl.common.FastIDSet fastIDSet0 = null;
        org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer fixedCandidatesIDRescorer1 = new org.plista.kornakapi.core.recommender.FixedCandidatesIDRescorer(fastIDSet0);
        double double4 = fixedCandidatesIDRescorer1.rescore((-1L), (double) 0L);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer5 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double8 = fixedCandidatesIDRescorer1.rescore((long) 1, (double) 10);
        double double11 = fixedCandidatesIDRescorer1.rescore((long) ' ', (double) 35);
        double double14 = fixedCandidatesIDRescorer1.rescore((long) (byte) 0, (double) 100L);
        double double17 = fixedCandidatesIDRescorer1.rescore((long) 0, (double) (-1));
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer18 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer19 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer20 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        double double23 = fixedCandidatesIDRescorer1.rescore(0L, (double) (-1L));
        org.plista.kornakapi.core.recommender.FilteringLongPairRescorer filteringLongPairRescorer24 = new org.plista.kornakapi.core.recommender.FilteringLongPairRescorer((org.apache.mahout.cf.taste.recommender.IDRescorer) fixedCandidatesIDRescorer1);
        org.apache.mahout.common.LongPair longPair25 = null;
        double double27 = filteringLongPairRescorer24.rescore(longPair25, (double) (byte) -1);
        org.junit.Assert.assertTrue("'" + double4 + "' != '" + 0.0d + "'", double4 == 0.0d);
        org.junit.Assert.assertTrue("'" + double8 + "' != '" + 10.0d + "'", double8 == 10.0d);
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 35.0d + "'", double11 == 35.0d);
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 100.0d + "'", double14 == 100.0d);
        org.junit.Assert.assertTrue("'" + double17 + "' != '" + (-1.0d) + "'", double17 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + (-1.0d) + "'", double23 == (-1.0d));
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + (-1.0d) + "'", double27 == (-1.0d));
    }

    @Test
    public void test29995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29995");
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener0 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener3 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener3.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener5 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener5.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener3.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener5);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener3);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener10 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener10.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener10.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener10.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener10);
        delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener16 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener16.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener18 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener16.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener18.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener24 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener24.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener26 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener24.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener31 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener31.notifyOfPreferenceChange();
        org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener delegatingPreferenceChangeListener33 = new org.plista.kornakapi.core.training.preferencechanges.DelegatingPreferenceChangeListener();
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener31.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener33);
        delegatingPreferenceChangeListener33.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener33);
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.notifyOfPreferenceChange();
        org.plista.kornakapi.web.Components components42 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.storage.Storage storage43 = components42.storage();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener44 = components42.preferenceChangeListener();
        org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener preferenceChangeListener45 = components42.preferenceChangeListener();
// flaky:         preferenceChangeListener45.notifyOfPreferenceChange();
        delegatingPreferenceChangeListener26.addDelegate(preferenceChangeListener45);
        delegatingPreferenceChangeListener18.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener26);
        delegatingPreferenceChangeListener0.addDelegate((org.plista.kornakapi.core.training.preferencechanges.PreferenceChangeListener) delegatingPreferenceChangeListener18);
// flaky:         delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
// flaky:         delegatingPreferenceChangeListener0.notifyOfPreferenceChange();
        org.junit.Assert.assertNotNull(components42);
        org.junit.Assert.assertNull(storage43);
        org.junit.Assert.assertNotNull(preferenceChangeListener44);
        org.junit.Assert.assertNotNull(preferenceChangeListener45);
    }

    @Test
    public void test29996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29996");
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet0 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet1 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet2 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet1.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        batchDeleteCandidatesServlet0.init((javax.servlet.ServletConfig) batchSetPreferencesServlet2);
        javax.servlet.ServletConfig servletConfig5 = batchSetPreferencesServlet2.getServletConfig();
        java.lang.String str6 = batchSetPreferencesServlet2.getServletInfo();
        java.lang.String str7 = batchSetPreferencesServlet2.getServletInfo();
        batchSetPreferencesServlet2.destroy();
        batchSetPreferencesServlet2.destroy();
        javax.servlet.ServletConfig servletConfig10 = batchSetPreferencesServlet2.getServletConfig();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = batchSetPreferencesServlet2.getInitParameter("MutablePreference{userID=-1, itemID=10, value=32.0}");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalStateException; message: ServletConfig has not been initialized");
        } catch (java.lang.IllegalStateException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(servletConfig5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(servletConfig10);
    }

    @Test
    public void test29997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29997");
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet0 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet1 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet2 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet1.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet2);
        java.lang.String str5 = setPreferenceServlet0.getServletInfo();
        org.plista.kornakapi.web.servlets.SetPreferenceServlet setPreferenceServlet6 = new org.plista.kornakapi.web.servlets.SetPreferenceServlet();
        org.plista.kornakapi.web.servlets.RecommendServlet recommendServlet7 = new org.plista.kornakapi.web.servlets.RecommendServlet();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet8 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        recommendServlet7.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet8);
        setPreferenceServlet6.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet8);
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet8);
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet12 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        java.lang.String str13 = batchDeleteCandidatesServlet12.getServletInfo();
        batchDeleteCandidatesServlet12.init();
        batchDeleteCandidatesServlet12.destroy();
        java.lang.String str16 = batchDeleteCandidatesServlet12.getServletInfo();
        batchDeleteCandidatesServlet12.destroy();
        setPreferenceServlet0.init((javax.servlet.ServletConfig) batchDeleteCandidatesServlet12);
        batchDeleteCandidatesServlet12.destroy();
        java.lang.String str20 = batchDeleteCandidatesServlet12.getServletInfo();
        org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet batchDeleteCandidatesServlet21 = new org.plista.kornakapi.web.servlets.BatchDeleteCandidatesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet22 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet batchSetPreferencesServlet23 = new org.plista.kornakapi.web.servlets.BatchSetPreferencesServlet();
        batchSetPreferencesServlet22.init((javax.servlet.ServletConfig) batchSetPreferencesServlet23);
        batchDeleteCandidatesServlet21.init((javax.servlet.ServletConfig) batchSetPreferencesServlet23);
        javax.servlet.ServletConfig servletConfig26 = batchSetPreferencesServlet23.getServletConfig();
        java.lang.String str27 = batchSetPreferencesServlet23.getServletInfo();
        java.lang.String str28 = batchSetPreferencesServlet23.getServletInfo();
        java.lang.String str29 = batchSetPreferencesServlet23.getServletInfo();
        batchDeleteCandidatesServlet12.init((javax.servlet.ServletConfig) batchSetPreferencesServlet23);
        java.lang.Class<?> wildcardClass31 = batchDeleteCandidatesServlet12.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNull(servletConfig26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test29998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29998");
        org.plista.kornakapi.core.MutableCandidate mutableCandidate0 = new org.plista.kornakapi.core.MutableCandidate();
        long long1 = mutableCandidate0.getItemID();
        mutableCandidate0.set("label", (long) 10);
        long long5 = mutableCandidate0.getItemID();
        long long6 = mutableCandidate0.getItemID();
        long long7 = mutableCandidate0.getItemID();
        long long8 = mutableCandidate0.getItemID();
        java.lang.String str9 = mutableCandidate0.getLabel();
        java.lang.String str10 = mutableCandidate0.getLabel();
        mutableCandidate0.set("hi!", 35L);
        mutableCandidate0.set("MutablePreference{userID=100, itemID=-1, value=-1.0}", 0L);
        org.junit.Assert.assertTrue("'" + long1 + "' != '" + 0L + "'", long1 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 10L + "'", long5 == 10L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 10L + "'", long6 == 10L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "label" + "'", str9, "label");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "label" + "'", str10, "label");
    }

    @Test
    public void test29999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test29999");
        org.plista.kornakapi.web.MissingParameterException missingParameterException1 = new org.plista.kornakapi.web.MissingParameterException("MutablePreference{userID=35, itemID=52, value=1.0}");
    }

    @Test
    public void test30000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest59.test30000");
        org.plista.kornakapi.web.Components components0 = org.plista.kornakapi.web.Components.instance();
        org.plista.kornakapi.core.config.Configuration configuration1 = components0.getConfiguration();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler2 = components0.scheduler();
        org.plista.kornakapi.core.training.TrainingScheduler trainingScheduler3 = components0.scheduler();
        org.plista.kornakapi.core.config.Configuration configuration4 = components0.getConfiguration();
        org.plista.kornakapi.core.config.Configuration configuration5 = components0.getConfiguration();
        java.util.List<org.plista.kornakapi.core.config.FactorizationbasedRecommenderConfig> factorizationbasedRecommenderConfigList6 = configuration5.getFactorizationbasedRecommenders();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration7 = configuration5.getStorageConfiguration();
        org.plista.kornakapi.core.config.StorageConfiguration storageConfiguration8 = configuration5.getStorageConfiguration();
        storageConfiguration8.setJdbcUrl("MutablePreference{userID=0, itemID=0, value=0.0}");
        java.lang.String str11 = storageConfiguration8.getUsername();
        java.lang.String str12 = storageConfiguration8.getUsername();
        java.lang.String str13 = storageConfiguration8.getPassword();
        java.lang.String str14 = storageConfiguration8.getJdbcUrl();
        storageConfiguration8.setUsername("MutablePreference{userID=32, itemID=10, value=10.0}");
        storageConfiguration8.setJdbcUrl("org.plista.kornakapi.web.InvalidParameterException: MutablePreference{userID=0, itemID=97, value=0.0}");
        org.junit.Assert.assertNotNull(components0);
        org.junit.Assert.assertNotNull(configuration1);
        org.junit.Assert.assertNull(trainingScheduler2);
        org.junit.Assert.assertNull(trainingScheduler3);
        org.junit.Assert.assertNotNull(configuration4);
        org.junit.Assert.assertNotNull(configuration5);
        org.junit.Assert.assertNotNull(factorizationbasedRecommenderConfigList6);
        org.junit.Assert.assertNotNull(storageConfiguration7);
        org.junit.Assert.assertNotNull(storageConfiguration8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str11, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs" + "'", str12, "org.plista.kornakapi.web.MissingParameterException: org.plista.kornakapi.web.InvalidParameterException: itemIDs");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "MutablePreference{userID=0, itemID=0, value=0.0}" + "'", str14, "MutablePreference{userID=0, itemID=0, value=0.0}");
    }
}
