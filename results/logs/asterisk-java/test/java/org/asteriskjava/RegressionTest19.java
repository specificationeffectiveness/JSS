package org.asteriskjava;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest19 {

    public static boolean debug = false;

    @Test
    public void test9501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9501");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str1 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean3 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int5 = asteriskVersion0.compareTo(asteriskVersion4);
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int7 = asteriskVersion4.compareTo(asteriskVersion6);
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int11 = asteriskVersion9.compareTo(asteriskVersion10);
        boolean boolean12 = asteriskVersion8.isAtLeast(asteriskVersion10);
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        boolean boolean14 = asteriskVersion8.isAtLeast(asteriskVersion13);
        java.lang.String str15 = asteriskVersion8.toString();
        boolean boolean16 = asteriskVersion6.equals((java.lang.Object) asteriskVersion8);
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str18 = asteriskVersion17.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion19 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean20 = asteriskVersion17.isAtLeast(asteriskVersion19);
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int22 = asteriskVersion17.compareTo(asteriskVersion21);
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_15;
        boolean boolean24 = asteriskVersion17.isAtLeast(asteriskVersion23);
        org.asteriskjava.AsteriskVersion asteriskVersion25 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        java.lang.String str26 = asteriskVersion25.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        int int28 = asteriskVersion25.compareTo(asteriskVersion27);
        org.asteriskjava.AsteriskVersion asteriskVersion29 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean31 = asteriskVersion29.isAtLeast(asteriskVersion30);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion33 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean34 = asteriskVersion32.isAtLeast(asteriskVersion33);
        int int35 = asteriskVersion29.compareTo(asteriskVersion33);
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean38 = asteriskVersion36.isAtLeast(asteriskVersion37);
        boolean boolean39 = asteriskVersion33.isAtLeast(asteriskVersion37);
        org.asteriskjava.pbx.ListenerPriority listenerPriority40 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean41 = asteriskVersion33.equals((java.lang.Object) listenerPriority40);
        boolean boolean42 = asteriskVersion27.equals((java.lang.Object) asteriskVersion33);
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int45 = asteriskVersion43.compareTo(asteriskVersion44);
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str47 = asteriskVersion46.toString();
        boolean boolean48 = asteriskVersion44.isAtLeast(asteriskVersion46);
        boolean boolean50 = asteriskVersion44.equals((java.lang.Object) "0");
        boolean boolean51 = asteriskVersion27.isAtLeast(asteriskVersion44);
        int int52 = asteriskVersion23.compareTo(asteriskVersion44);
        int int53 = asteriskVersion6.compareTo(asteriskVersion44);
        java.lang.String str54 = asteriskVersion44.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str56 = asteriskVersion55.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion57 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean58 = asteriskVersion55.isAtLeast(asteriskVersion57);
        org.asteriskjava.AsteriskVersion asteriskVersion59 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int60 = asteriskVersion55.compareTo(asteriskVersion59);
        org.asteriskjava.AsteriskVersion asteriskVersion61 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion62 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean63 = asteriskVersion61.isAtLeast(asteriskVersion62);
        org.asteriskjava.AsteriskVersion asteriskVersion64 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int65 = asteriskVersion61.compareTo(asteriskVersion64);
        org.asteriskjava.pbx.DTMFTone dTMFTone66 = org.asteriskjava.pbx.DTMFTone.STAR;
        java.lang.String str67 = dTMFTone66.toString();
        java.lang.String str68 = dTMFTone66.toString();
        java.lang.String str69 = dTMFTone66.toString();
        java.lang.String str70 = dTMFTone66.toString();
        boolean boolean71 = asteriskVersion61.equals((java.lang.Object) str70);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer72 = new org.asteriskjava.tools.HtmlEventTracer();
        org.asteriskjava.manager.event.ManagerEvent managerEvent73 = null;
        htmlEventTracer72.onManagerEvent(managerEvent73);
        java.lang.Class<?> wildcardClass75 = htmlEventTracer72.getClass();
        boolean boolean76 = asteriskVersion61.equals((java.lang.Object) htmlEventTracer72);
        boolean boolean77 = asteriskVersion55.isAtLeast(asteriskVersion61);
        java.lang.String str78 = asteriskVersion61.toString();
        boolean boolean79 = asteriskVersion44.equals((java.lang.Object) str78);
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Asterisk 11" + "'", str1, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Asterisk 12" + "'", str15, "Asterisk 12");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Asterisk 11" + "'", str18, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(asteriskVersion25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Asterisk 10" + "'", str26, "Asterisk 10");
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion29);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertNotNull(asteriskVersion33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority40 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority40.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Asterisk 1.0" + "'", str47, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Asterisk 16" + "'", str54, "Asterisk 16");
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Asterisk 11" + "'", str56, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(asteriskVersion59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion61);
        org.junit.Assert.assertNotNull(asteriskVersion62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(asteriskVersion64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertTrue("'" + dTMFTone66 + "' != '" + org.asteriskjava.pbx.DTMFTone.STAR + "'", dTMFTone66.equals(org.asteriskjava.pbx.DTMFTone.STAR));
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "*" + "'", str67, "*");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "*" + "'", str68, "*");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "*" + "'", str69, "*");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "*" + "'", str70, "*");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Asterisk 20" + "'", str78, "Asterisk 20");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test9502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9502");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        java.lang.String str1 = asteriskVersion0.toString();
        java.lang.String str2 = asteriskVersion0.toString();
        java.lang.String str3 = asteriskVersion0.toString();
        java.lang.String str4 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        java.lang.String str6 = asteriskVersion5.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        int int8 = asteriskVersion5.compareTo(asteriskVersion7);
        int int9 = asteriskVersion0.compareTo(asteriskVersion5);
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean11 = asteriskVersion5.isAtLeast(asteriskVersion10);
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        org.asteriskjava.pbx.ActivityStatusEnum activityStatusEnum14 = org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS;
        java.lang.String str15 = activityStatusEnum14.getDefaultMessage();
        boolean boolean16 = asteriskVersion13.equals((java.lang.Object) str15);
        int int17 = asteriskVersion12.compareTo(asteriskVersion13);
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion19 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str20 = asteriskVersion19.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean22 = asteriskVersion19.isAtLeast(asteriskVersion21);
        boolean boolean23 = asteriskVersion18.equals((java.lang.Object) boolean22);
        org.asteriskjava.AsteriskVersion asteriskVersion24 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion25 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean26 = asteriskVersion24.isAtLeast(asteriskVersion25);
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int28 = asteriskVersion24.compareTo(asteriskVersion27);
        int int29 = asteriskVersion18.compareTo(asteriskVersion27);
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion31 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int33 = asteriskVersion31.compareTo(asteriskVersion32);
        boolean boolean34 = asteriskVersion30.isAtLeast(asteriskVersion32);
        boolean boolean35 = asteriskVersion18.isAtLeast(asteriskVersion30);
        boolean boolean36 = asteriskVersion13.isAtLeast(asteriskVersion18);
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int39 = asteriskVersion37.compareTo(asteriskVersion38);
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str41 = asteriskVersion40.toString();
        boolean boolean42 = asteriskVersion38.isAtLeast(asteriskVersion40);
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int45 = asteriskVersion43.compareTo(asteriskVersion44);
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str47 = asteriskVersion46.toString();
        boolean boolean48 = asteriskVersion44.isAtLeast(asteriskVersion46);
        boolean boolean50 = asteriskVersion44.equals((java.lang.Object) "0");
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean53 = asteriskVersion51.isAtLeast(asteriskVersion52);
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int55 = asteriskVersion52.compareTo(asteriskVersion54);
        org.asteriskjava.AsteriskVersion asteriskVersion56 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean57 = asteriskVersion54.isAtLeast(asteriskVersion56);
        boolean boolean58 = asteriskVersion44.isAtLeast(asteriskVersion54);
        org.asteriskjava.AsteriskVersion asteriskVersion59 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion60 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int61 = asteriskVersion59.compareTo(asteriskVersion60);
        org.asteriskjava.AsteriskVersion asteriskVersion62 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion64 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int65 = asteriskVersion63.compareTo(asteriskVersion64);
        boolean boolean66 = asteriskVersion62.isAtLeast(asteriskVersion64);
        int int67 = asteriskVersion59.compareTo(asteriskVersion62);
        java.lang.String str68 = asteriskVersion59.toString();
        java.lang.String str69 = asteriskVersion59.toString();
        int int70 = asteriskVersion44.compareTo(asteriskVersion59);
        int int71 = asteriskVersion40.compareTo(asteriskVersion44);
        boolean boolean73 = asteriskVersion44.equals((java.lang.Object) 96);
        int int74 = asteriskVersion18.compareTo(asteriskVersion44);
        java.lang.String str75 = asteriskVersion44.toString();
        java.lang.Class<?> wildcardClass76 = asteriskVersion44.getClass();
        boolean boolean77 = asteriskVersion5.equals((java.lang.Object) asteriskVersion44);
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Asterisk 12" + "'", str1, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Asterisk 12" + "'", str2, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Asterisk 12" + "'", str3, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Asterisk 12" + "'", str4, "Asterisk 12");
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Asterisk 10" + "'", str6, "Asterisk 10");
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertTrue("'" + activityStatusEnum14 + "' != '" + org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS + "'", activityStatusEnum14.equals(org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Progress" + "'", str15, "Progress");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertNotNull(asteriskVersion19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Asterisk 11" + "'", str20, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(asteriskVersion24);
        org.junit.Assert.assertNotNull(asteriskVersion25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertNotNull(asteriskVersion31);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Asterisk 1.0" + "'", str41, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Asterisk 1.0" + "'", str47, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(asteriskVersion59);
        org.junit.Assert.assertNotNull(asteriskVersion60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion62);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertNotNull(asteriskVersion64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Asterisk 17" + "'", str68, "Asterisk 17");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Asterisk 17" + "'", str69, "Asterisk 17");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Asterisk 16" + "'", str75, "Asterisk 16");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test9503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9503");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int3 = asteriskVersion1.compareTo(asteriskVersion2);
        boolean boolean4 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean7 = asteriskVersion5.isAtLeast(asteriskVersion6);
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int9 = asteriskVersion6.compareTo(asteriskVersion8);
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean11 = asteriskVersion8.isAtLeast(asteriskVersion10);
        int int12 = asteriskVersion0.compareTo(asteriskVersion8);
        org.asteriskjava.pbx.DTMFTone dTMFTone13 = org.asteriskjava.pbx.DTMFTone.ZERO;
        java.lang.String str14 = dTMFTone13.toString();
        boolean boolean15 = asteriskVersion0.equals((java.lang.Object) dTMFTone13);
        org.asteriskjava.AsteriskVersion asteriskVersion16 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int18 = asteriskVersion16.compareTo(asteriskVersion17);
        org.asteriskjava.AsteriskVersion asteriskVersion19 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int20 = asteriskVersion16.compareTo(asteriskVersion19);
        org.asteriskjava.pbx.DTMFTone dTMFTone21 = org.asteriskjava.pbx.DTMFTone.FOUR;
        java.lang.String str22 = dTMFTone21.toString();
        java.lang.String str23 = dTMFTone21.toString();
        boolean boolean24 = asteriskVersion19.equals((java.lang.Object) str23);
        int int25 = asteriskVersion0.compareTo(asteriskVersion19);
        org.asteriskjava.pbx.ActivityStatusEnum activityStatusEnum26 = org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS;
        java.lang.String str27 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str28 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str29 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str30 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str31 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str32 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str33 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str34 = activityStatusEnum26.getDefaultMessage();
        boolean boolean35 = asteriskVersion0.equals((java.lang.Object) activityStatusEnum26);
        java.lang.String str36 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str37 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str38 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str39 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str40 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str41 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str42 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str43 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str44 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str45 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str46 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str47 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str48 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str49 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str50 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str51 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str52 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str53 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str54 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str55 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str56 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str57 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str58 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str59 = activityStatusEnum26.getDefaultMessage();
        java.lang.String str60 = activityStatusEnum26.getDefaultMessage();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + dTMFTone13 + "' != '" + org.asteriskjava.pbx.DTMFTone.ZERO + "'", dTMFTone13.equals(org.asteriskjava.pbx.DTMFTone.ZERO));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "0" + "'", str14, "0");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(asteriskVersion16);
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + dTMFTone21 + "' != '" + org.asteriskjava.pbx.DTMFTone.FOUR + "'", dTMFTone21.equals(org.asteriskjava.pbx.DTMFTone.FOUR));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "4" + "'", str22, "4");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "4" + "'", str23, "4");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + activityStatusEnum26 + "' != '" + org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS + "'", activityStatusEnum26.equals(org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Progress" + "'", str27, "Progress");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Progress" + "'", str28, "Progress");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Progress" + "'", str29, "Progress");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Progress" + "'", str30, "Progress");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Progress" + "'", str31, "Progress");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Progress" + "'", str32, "Progress");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Progress" + "'", str33, "Progress");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Progress" + "'", str34, "Progress");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Progress" + "'", str36, "Progress");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Progress" + "'", str37, "Progress");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Progress" + "'", str38, "Progress");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Progress" + "'", str39, "Progress");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Progress" + "'", str40, "Progress");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Progress" + "'", str41, "Progress");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Progress" + "'", str42, "Progress");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Progress" + "'", str43, "Progress");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Progress" + "'", str44, "Progress");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Progress" + "'", str45, "Progress");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Progress" + "'", str46, "Progress");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Progress" + "'", str47, "Progress");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Progress" + "'", str48, "Progress");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Progress" + "'", str49, "Progress");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Progress" + "'", str50, "Progress");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Progress" + "'", str51, "Progress");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Progress" + "'", str52, "Progress");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Progress" + "'", str53, "Progress");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Progress" + "'", str54, "Progress");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Progress" + "'", str55, "Progress");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Progress" + "'", str56, "Progress");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Progress" + "'", str57, "Progress");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Progress" + "'", str58, "Progress");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Progress" + "'", str59, "Progress");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Progress" + "'", str60, "Progress");
    }

    @Test
    public void test9504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9504");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean2 = asteriskVersion0.isAtLeast(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean5 = asteriskVersion3.isAtLeast(asteriskVersion4);
        int int6 = asteriskVersion0.compareTo(asteriskVersion4);
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean9 = asteriskVersion7.isAtLeast(asteriskVersion8);
        boolean boolean10 = asteriskVersion4.isAtLeast(asteriskVersion8);
        org.asteriskjava.pbx.TechType techType11 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean12 = asteriskVersion4.equals((java.lang.Object) techType11);
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str14 = asteriskVersion13.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean16 = asteriskVersion13.isAtLeast(asteriskVersion15);
        java.lang.String str17 = asteriskVersion13.toString();
        boolean boolean18 = asteriskVersion4.isAtLeast(asteriskVersion13);
        java.lang.Object obj19 = null;
        boolean boolean20 = asteriskVersion4.equals(obj19);
        java.lang.Object obj21 = null;
        boolean boolean22 = asteriskVersion4.equals(obj21);
        org.asteriskjava.pbx.DTMFTone dTMFTone23 = org.asteriskjava.pbx.DTMFTone.STAR;
        java.lang.String str24 = dTMFTone23.toString();
        java.lang.String str25 = dTMFTone23.toString();
        java.lang.String str26 = dTMFTone23.toString();
        java.lang.String str27 = dTMFTone23.toString();
        java.lang.String str28 = dTMFTone23.toString();
        java.lang.String str29 = dTMFTone23.toString();
        java.lang.String str30 = dTMFTone23.toString();
        java.lang.String str31 = dTMFTone23.toString();
        java.lang.String str32 = dTMFTone23.toString();
        java.lang.String str33 = dTMFTone23.toString();
        boolean boolean34 = asteriskVersion4.equals((java.lang.Object) dTMFTone23);
        org.asteriskjava.AsteriskVersion asteriskVersion35 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int37 = asteriskVersion35.compareTo(asteriskVersion36);
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str39 = asteriskVersion38.toString();
        boolean boolean40 = asteriskVersion36.isAtLeast(asteriskVersion38);
        boolean boolean42 = asteriskVersion36.equals((java.lang.Object) "0");
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean45 = asteriskVersion43.isAtLeast(asteriskVersion44);
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int47 = asteriskVersion44.compareTo(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean49 = asteriskVersion46.isAtLeast(asteriskVersion48);
        boolean boolean50 = asteriskVersion36.isAtLeast(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int53 = asteriskVersion51.compareTo(asteriskVersion52);
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion56 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int57 = asteriskVersion55.compareTo(asteriskVersion56);
        boolean boolean58 = asteriskVersion54.isAtLeast(asteriskVersion56);
        int int59 = asteriskVersion51.compareTo(asteriskVersion54);
        java.lang.String str60 = asteriskVersion51.toString();
        java.lang.String str61 = asteriskVersion51.toString();
        int int62 = asteriskVersion36.compareTo(asteriskVersion51);
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer64 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer64.write();
        org.asteriskjava.manager.event.ManagerEvent managerEvent66 = null;
        htmlEventTracer64.onManagerEvent(managerEvent66);
        boolean boolean68 = asteriskVersion63.equals((java.lang.Object) managerEvent66);
        int int69 = asteriskVersion51.compareTo(asteriskVersion63);
        boolean boolean70 = asteriskVersion4.isAtLeast(asteriskVersion51);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer71 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer71.write();
        boolean boolean73 = asteriskVersion51.equals((java.lang.Object) htmlEventTracer71);
        org.asteriskjava.manager.event.ManagerEvent managerEvent74 = null;
        htmlEventTracer71.onManagerEvent(managerEvent74);
        org.asteriskjava.manager.event.ManagerEvent managerEvent76 = null;
        htmlEventTracer71.onManagerEvent(managerEvent76);
        org.asteriskjava.manager.event.ManagerEvent managerEvent78 = null;
        htmlEventTracer71.onManagerEvent(managerEvent78);
        org.asteriskjava.manager.event.ManagerEvent managerEvent80 = null;
        htmlEventTracer71.onManagerEvent(managerEvent80);
        org.asteriskjava.manager.event.ManagerEvent managerEvent82 = null;
        htmlEventTracer71.onManagerEvent(managerEvent82);
        org.asteriskjava.manager.event.ManagerEvent managerEvent84 = null;
        htmlEventTracer71.onManagerEvent(managerEvent84);
        // The following exception was thrown during execution in test generation
        try {
            htmlEventTracer71.write();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + techType11 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType11.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Asterisk 11" + "'", str14, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Asterisk 11" + "'", str17, "Asterisk 11");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + dTMFTone23 + "' != '" + org.asteriskjava.pbx.DTMFTone.STAR + "'", dTMFTone23.equals(org.asteriskjava.pbx.DTMFTone.STAR));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "*" + "'", str24, "*");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "*" + "'", str25, "*");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "*" + "'", str26, "*");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "*" + "'", str27, "*");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "*" + "'", str28, "*");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "*" + "'", str29, "*");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "*" + "'", str30, "*");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "*" + "'", str31, "*");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "*" + "'", str32, "*");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "*" + "'", str33, "*");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(asteriskVersion35);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Asterisk 1.0" + "'", str39, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertNotNull(asteriskVersion56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Asterisk 17" + "'", str60, "Asterisk 17");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Asterisk 17" + "'", str61, "Asterisk 17");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test9505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9505");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str1 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int4 = asteriskVersion2.compareTo(asteriskVersion3);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int6 = asteriskVersion2.compareTo(asteriskVersion5);
        org.asteriskjava.pbx.TechType techType7 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean8 = asteriskVersion2.equals((java.lang.Object) techType7);
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        boolean boolean10 = asteriskVersion2.equals((java.lang.Object) asteriskVersion9);
        int int11 = asteriskVersion0.compareTo(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int14 = asteriskVersion12.compareTo(asteriskVersion13);
        boolean boolean15 = asteriskVersion2.isAtLeast(asteriskVersion13);
        org.asteriskjava.AsteriskVersion asteriskVersion16 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        java.lang.String str17 = asteriskVersion16.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        int int19 = asteriskVersion16.compareTo(asteriskVersion18);
        boolean boolean20 = asteriskVersion2.isAtLeast(asteriskVersion18);
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion22 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int23 = asteriskVersion21.compareTo(asteriskVersion22);
        boolean boolean24 = asteriskVersion2.isAtLeast(asteriskVersion21);
        org.asteriskjava.AsteriskVersion asteriskVersion25 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str26 = asteriskVersion25.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean28 = asteriskVersion25.isAtLeast(asteriskVersion27);
        org.asteriskjava.AsteriskVersion asteriskVersion29 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int31 = asteriskVersion29.compareTo(asteriskVersion30);
        boolean boolean32 = asteriskVersion25.isAtLeast(asteriskVersion29);
        java.lang.String str33 = asteriskVersion25.toString();
        java.lang.String str34 = asteriskVersion25.toString();
        int int35 = asteriskVersion21.compareTo(asteriskVersion25);
        java.lang.String str36 = asteriskVersion21.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Asterisk 1.0" + "'", str1, "Asterisk 1.0");
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + techType7 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType7.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(asteriskVersion16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Asterisk 10" + "'", str17, "Asterisk 10");
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertNotNull(asteriskVersion22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(asteriskVersion25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Asterisk 11" + "'", str26, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(asteriskVersion29);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Asterisk 11" + "'", str33, "Asterisk 11");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Asterisk 11" + "'", str34, "Asterisk 11");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Asterisk 17" + "'", str36, "Asterisk 17");
    }

    @Test
    public void test9506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9506");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str2 = asteriskVersion1.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean4 = asteriskVersion1.isAtLeast(asteriskVersion3);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        java.lang.String str6 = asteriskVersion5.toString();
        int int7 = asteriskVersion1.compareTo(asteriskVersion5);
        boolean boolean8 = asteriskVersion0.isAtLeast(asteriskVersion5);
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int11 = asteriskVersion9.compareTo(asteriskVersion10);
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int13 = asteriskVersion9.compareTo(asteriskVersion12);
        int int14 = asteriskVersion0.compareTo(asteriskVersion12);
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion16 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int19 = asteriskVersion17.compareTo(asteriskVersion18);
        boolean boolean20 = asteriskVersion16.isAtLeast(asteriskVersion18);
        int int21 = asteriskVersion15.compareTo(asteriskVersion16);
        int int22 = asteriskVersion12.compareTo(asteriskVersion16);
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        java.lang.String str24 = asteriskVersion23.toString();
        org.asteriskjava.pbx.DTMFTone dTMFTone25 = org.asteriskjava.pbx.DTMFTone.ZERO;
        java.lang.String str26 = dTMFTone25.toString();
        java.lang.String str27 = dTMFTone25.toString();
        java.lang.String str28 = dTMFTone25.toString();
        java.lang.String str29 = dTMFTone25.toString();
        java.lang.String str30 = dTMFTone25.toString();
        java.lang.String str31 = dTMFTone25.toString();
        java.lang.String str32 = dTMFTone25.toString();
        boolean boolean33 = asteriskVersion23.equals((java.lang.Object) str32);
        int int34 = asteriskVersion16.compareTo(asteriskVersion23);
        org.asteriskjava.AsteriskVersion asteriskVersion35 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str36 = asteriskVersion35.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int39 = asteriskVersion37.compareTo(asteriskVersion38);
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int41 = asteriskVersion37.compareTo(asteriskVersion40);
        org.asteriskjava.pbx.TechType techType42 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean43 = asteriskVersion37.equals((java.lang.Object) techType42);
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        boolean boolean45 = asteriskVersion37.equals((java.lang.Object) asteriskVersion44);
        int int46 = asteriskVersion35.compareTo(asteriskVersion37);
        org.asteriskjava.pbx.DTMFTone dTMFTone47 = org.asteriskjava.pbx.DTMFTone.STAR;
        java.lang.String str48 = dTMFTone47.toString();
        java.lang.String str49 = dTMFTone47.toString();
        boolean boolean50 = asteriskVersion37.equals((java.lang.Object) dTMFTone47);
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str53 = asteriskVersion52.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean55 = asteriskVersion52.isAtLeast(asteriskVersion54);
        org.asteriskjava.AsteriskVersion asteriskVersion56 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion57 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean58 = asteriskVersion56.isAtLeast(asteriskVersion57);
        boolean boolean59 = asteriskVersion54.equals((java.lang.Object) asteriskVersion56);
        int int60 = asteriskVersion51.compareTo(asteriskVersion56);
        org.asteriskjava.AsteriskVersion asteriskVersion61 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        org.asteriskjava.AsteriskVersion asteriskVersion62 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion64 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int65 = asteriskVersion63.compareTo(asteriskVersion64);
        boolean boolean66 = asteriskVersion62.isAtLeast(asteriskVersion64);
        org.asteriskjava.AsteriskVersion asteriskVersion67 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion68 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int69 = asteriskVersion67.compareTo(asteriskVersion68);
        org.asteriskjava.AsteriskVersion asteriskVersion70 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int71 = asteriskVersion67.compareTo(asteriskVersion70);
        org.asteriskjava.pbx.TechType techType72 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean73 = asteriskVersion67.equals((java.lang.Object) techType72);
        boolean boolean74 = asteriskVersion64.isAtLeast(asteriskVersion67);
        boolean boolean75 = asteriskVersion61.isAtLeast(asteriskVersion67);
        int int76 = asteriskVersion51.compareTo(asteriskVersion67);
        boolean boolean77 = asteriskVersion37.isAtLeast(asteriskVersion67);
        int int78 = asteriskVersion16.compareTo(asteriskVersion67);
        java.lang.Class<?> wildcardClass79 = asteriskVersion16.getClass();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Asterisk 11" + "'", str2, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Asterisk 14" + "'", str6, "Asterisk 14");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertNotNull(asteriskVersion16);
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Asterisk 14" + "'", str24, "Asterisk 14");
        org.junit.Assert.assertTrue("'" + dTMFTone25 + "' != '" + org.asteriskjava.pbx.DTMFTone.ZERO + "'", dTMFTone25.equals(org.asteriskjava.pbx.DTMFTone.ZERO));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "0" + "'", str26, "0");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "0" + "'", str27, "0");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "0" + "'", str28, "0");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "0" + "'", str29, "0");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "0" + "'", str30, "0");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "0" + "'", str31, "0");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "0" + "'", str32, "0");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Asterisk 1.0" + "'", str36, "Asterisk 1.0");
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + techType42 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType42.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + dTMFTone47 + "' != '" + org.asteriskjava.pbx.DTMFTone.STAR + "'", dTMFTone47.equals(org.asteriskjava.pbx.DTMFTone.STAR));
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "*" + "'", str48, "*");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "*" + "'", str49, "*");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Asterisk 11" + "'", str53, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(asteriskVersion56);
        org.junit.Assert.assertNotNull(asteriskVersion57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion61);
        org.junit.Assert.assertNotNull(asteriskVersion62);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertNotNull(asteriskVersion64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(asteriskVersion67);
        org.junit.Assert.assertNotNull(asteriskVersion68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertTrue("'" + techType72 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType72.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test9507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9507");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int3 = asteriskVersion1.compareTo(asteriskVersion2);
        boolean boolean4 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean7 = asteriskVersion5.isAtLeast(asteriskVersion6);
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int9 = asteriskVersion6.compareTo(asteriskVersion8);
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean11 = asteriskVersion8.isAtLeast(asteriskVersion10);
        int int12 = asteriskVersion0.compareTo(asteriskVersion8);
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion14 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int16 = asteriskVersion14.compareTo(asteriskVersion15);
        boolean boolean17 = asteriskVersion13.isAtLeast(asteriskVersion15);
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion19 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean20 = asteriskVersion18.isAtLeast(asteriskVersion19);
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int22 = asteriskVersion19.compareTo(asteriskVersion21);
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean24 = asteriskVersion21.isAtLeast(asteriskVersion23);
        int int25 = asteriskVersion13.compareTo(asteriskVersion21);
        boolean boolean26 = asteriskVersion0.isAtLeast(asteriskVersion21);
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str29 = asteriskVersion28.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean31 = asteriskVersion28.isAtLeast(asteriskVersion30);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        java.lang.String str33 = asteriskVersion32.toString();
        int int34 = asteriskVersion28.compareTo(asteriskVersion32);
        boolean boolean35 = asteriskVersion27.isAtLeast(asteriskVersion32);
        int int36 = asteriskVersion21.compareTo(asteriskVersion32);
        java.lang.String str37 = asteriskVersion21.toString();
        java.lang.String str38 = asteriskVersion21.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int41 = asteriskVersion39.compareTo(asteriskVersion40);
        org.asteriskjava.pbx.DTMFTone dTMFTone42 = org.asteriskjava.pbx.DTMFTone.FOUR;
        boolean boolean43 = asteriskVersion39.equals((java.lang.Object) dTMFTone42);
        java.lang.String str44 = dTMFTone42.toString();
        java.lang.String str45 = dTMFTone42.toString();
        java.lang.String str46 = dTMFTone42.toString();
        java.lang.String str47 = dTMFTone42.toString();
        java.lang.String str48 = dTMFTone42.toString();
        boolean boolean49 = asteriskVersion21.equals((java.lang.Object) dTMFTone42);
        java.lang.String str50 = dTMFTone42.toString();
        java.lang.String str51 = dTMFTone42.toString();
        java.lang.String str52 = dTMFTone42.toString();
        java.lang.String str53 = dTMFTone42.toString();
        java.lang.String str54 = dTMFTone42.toString();
        java.lang.String str55 = dTMFTone42.toString();
        java.lang.String str56 = dTMFTone42.toString();
        java.lang.String str57 = dTMFTone42.toString();
        java.lang.String str58 = dTMFTone42.toString();
        java.lang.String str59 = dTMFTone42.toString();
        java.lang.String str60 = dTMFTone42.toString();
        java.lang.String str61 = dTMFTone42.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertNotNull(asteriskVersion14);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertNotNull(asteriskVersion19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Asterisk 11" + "'", str29, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Asterisk 14" + "'", str33, "Asterisk 14");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Asterisk 20" + "'", str37, "Asterisk 20");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Asterisk 20" + "'", str38, "Asterisk 20");
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + dTMFTone42 + "' != '" + org.asteriskjava.pbx.DTMFTone.FOUR + "'", dTMFTone42.equals(org.asteriskjava.pbx.DTMFTone.FOUR));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "4" + "'", str44, "4");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "4" + "'", str45, "4");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "4" + "'", str46, "4");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "4" + "'", str47, "4");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "4" + "'", str48, "4");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "4" + "'", str50, "4");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "4" + "'", str51, "4");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "4" + "'", str52, "4");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "4" + "'", str53, "4");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "4" + "'", str54, "4");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "4" + "'", str55, "4");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "4" + "'", str56, "4");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "4" + "'", str57, "4");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "4" + "'", str58, "4");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "4" + "'", str59, "4");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "4" + "'", str60, "4");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "4" + "'", str61, "4");
    }

    @Test
    public void test9508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9508");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int2 = asteriskVersion0.compareTo(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int4 = asteriskVersion0.compareTo(asteriskVersion3);
        org.asteriskjava.pbx.TechType techType5 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean6 = asteriskVersion0.equals((java.lang.Object) techType5);
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        boolean boolean8 = asteriskVersion0.equals((java.lang.Object) asteriskVersion7);
        java.lang.String str9 = asteriskVersion7.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean12 = asteriskVersion10.isAtLeast(asteriskVersion11);
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion14 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean15 = asteriskVersion13.isAtLeast(asteriskVersion14);
        int int16 = asteriskVersion10.compareTo(asteriskVersion14);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer17 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer17.write();
        boolean boolean19 = asteriskVersion14.equals((java.lang.Object) htmlEventTracer17);
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        boolean boolean31 = asteriskVersion7.equals((java.lang.Object) htmlEventTracer17);
        org.asteriskjava.manager.event.ManagerEvent managerEvent32 = null;
        htmlEventTracer17.onManagerEvent(managerEvent32);
        org.asteriskjava.manager.event.ManagerEvent managerEvent34 = null;
        htmlEventTracer17.onManagerEvent(managerEvent34);
        org.asteriskjava.manager.event.ManagerEvent managerEvent36 = null;
        htmlEventTracer17.onManagerEvent(managerEvent36);
        org.asteriskjava.manager.event.ManagerEvent managerEvent38 = null;
        htmlEventTracer17.onManagerEvent(managerEvent38);
        org.asteriskjava.manager.event.ManagerEvent managerEvent40 = null;
        htmlEventTracer17.onManagerEvent(managerEvent40);
        org.asteriskjava.manager.event.ManagerEvent managerEvent42 = null;
        htmlEventTracer17.onManagerEvent(managerEvent42);
        org.asteriskjava.manager.event.ManagerEvent managerEvent44 = null;
        htmlEventTracer17.onManagerEvent(managerEvent44);
        org.asteriskjava.manager.event.ManagerEvent managerEvent46 = null;
        htmlEventTracer17.onManagerEvent(managerEvent46);
        org.asteriskjava.manager.event.ManagerEvent managerEvent48 = null;
        htmlEventTracer17.onManagerEvent(managerEvent48);
        java.lang.Class<?> wildcardClass50 = htmlEventTracer17.getClass();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + techType5 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType5.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Asterisk 10" + "'", str9, "Asterisk 10");
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertNotNull(asteriskVersion14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test9509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9509");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int2 = asteriskVersion0.compareTo(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int4 = asteriskVersion0.compareTo(asteriskVersion3);
        java.lang.String str5 = asteriskVersion0.toString();
        org.asteriskjava.pbx.TechType techType6 = org.asteriskjava.pbx.TechType.PARKING;
        boolean boolean7 = asteriskVersion0.equals((java.lang.Object) techType6);
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str10 = asteriskVersion9.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean12 = asteriskVersion9.isAtLeast(asteriskVersion11);
        boolean boolean13 = asteriskVersion8.equals((java.lang.Object) boolean12);
        org.asteriskjava.AsteriskVersion asteriskVersion14 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean16 = asteriskVersion14.isAtLeast(asteriskVersion15);
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int18 = asteriskVersion14.compareTo(asteriskVersion17);
        int int19 = asteriskVersion8.compareTo(asteriskVersion17);
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion22 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int23 = asteriskVersion21.compareTo(asteriskVersion22);
        boolean boolean24 = asteriskVersion20.isAtLeast(asteriskVersion22);
        boolean boolean25 = asteriskVersion8.isAtLeast(asteriskVersion20);
        java.lang.String str26 = asteriskVersion8.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        java.lang.String str28 = asteriskVersion27.toString();
        java.lang.String str29 = asteriskVersion27.toString();
        boolean boolean30 = asteriskVersion8.isAtLeast(asteriskVersion27);
        boolean boolean31 = asteriskVersion0.equals((java.lang.Object) asteriskVersion27);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_18;
        org.asteriskjava.AsteriskVersion asteriskVersion33 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion34 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean35 = asteriskVersion33.isAtLeast(asteriskVersion34);
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean38 = asteriskVersion36.isAtLeast(asteriskVersion37);
        int int39 = asteriskVersion33.compareTo(asteriskVersion37);
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion41 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean42 = asteriskVersion40.isAtLeast(asteriskVersion41);
        boolean boolean43 = asteriskVersion37.isAtLeast(asteriskVersion41);
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean45 = asteriskVersion41.isAtLeast(asteriskVersion44);
        java.lang.String str46 = asteriskVersion41.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion47 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean49 = asteriskVersion47.isAtLeast(asteriskVersion48);
        org.asteriskjava.AsteriskVersion asteriskVersion50 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean52 = asteriskVersion50.isAtLeast(asteriskVersion51);
        int int53 = asteriskVersion47.compareTo(asteriskVersion51);
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean56 = asteriskVersion54.isAtLeast(asteriskVersion55);
        boolean boolean57 = asteriskVersion51.isAtLeast(asteriskVersion55);
        org.asteriskjava.pbx.ListenerPriority listenerPriority58 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean59 = asteriskVersion51.equals((java.lang.Object) listenerPriority58);
        org.asteriskjava.AsteriskVersion asteriskVersion60 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        int int61 = asteriskVersion51.compareTo(asteriskVersion60);
        boolean boolean62 = asteriskVersion41.isAtLeast(asteriskVersion60);
        java.lang.String str63 = asteriskVersion60.toString();
        int int64 = asteriskVersion32.compareTo(asteriskVersion60);
        org.asteriskjava.AsteriskVersion asteriskVersion65 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion66 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean67 = asteriskVersion65.isAtLeast(asteriskVersion66);
        org.asteriskjava.AsteriskVersion asteriskVersion68 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion69 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean70 = asteriskVersion68.isAtLeast(asteriskVersion69);
        int int71 = asteriskVersion65.compareTo(asteriskVersion69);
        org.asteriskjava.AsteriskVersion asteriskVersion72 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion73 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean74 = asteriskVersion72.isAtLeast(asteriskVersion73);
        boolean boolean75 = asteriskVersion69.isAtLeast(asteriskVersion73);
        org.asteriskjava.AsteriskVersion asteriskVersion76 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean77 = asteriskVersion73.isAtLeast(asteriskVersion76);
        java.lang.String str78 = asteriskVersion76.toString();
        boolean boolean80 = asteriskVersion76.equals((java.lang.Object) 0L);
        boolean boolean81 = asteriskVersion60.isAtLeast(asteriskVersion76);
        boolean boolean82 = asteriskVersion0.equals((java.lang.Object) asteriskVersion76);
        java.lang.String str83 = asteriskVersion0.toString();
        java.lang.Class<?> wildcardClass84 = asteriskVersion0.getClass();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Asterisk 13" + "'", str5, "Asterisk 13");
        org.junit.Assert.assertTrue("'" + techType6 + "' != '" + org.asteriskjava.pbx.TechType.PARKING + "'", techType6.equals(org.asteriskjava.pbx.TechType.PARKING));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Asterisk 11" + "'", str10, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(asteriskVersion14);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertNotNull(asteriskVersion22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Asterisk 12" + "'", str26, "Asterisk 12");
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Asterisk 12" + "'", str28, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Asterisk 12" + "'", str29, "Asterisk 12");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertNotNull(asteriskVersion33);
        org.junit.Assert.assertNotNull(asteriskVersion34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertNotNull(asteriskVersion41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Asterisk 20" + "'", str46, "Asterisk 20");
        org.junit.Assert.assertNotNull(asteriskVersion47);
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(asteriskVersion50);
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority58 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority58.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(asteriskVersion60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Asterisk 1.4" + "'", str63, "Asterisk 1.4");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion65);
        org.junit.Assert.assertNotNull(asteriskVersion66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(asteriskVersion68);
        org.junit.Assert.assertNotNull(asteriskVersion69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion72);
        org.junit.Assert.assertNotNull(asteriskVersion73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(asteriskVersion76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Asterisk 1.4" + "'", str78, "Asterisk 1.4");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Asterisk 13" + "'", str83, "Asterisk 13");
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test9510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9510");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_18;
        org.asteriskjava.pbx.ListenerPriority listenerPriority1 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority2 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int3 = listenerPriority1.compare(listenerPriority2);
        org.asteriskjava.pbx.ListenerPriority listenerPriority4 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int5 = listenerPriority2.compare(listenerPriority4);
        org.asteriskjava.pbx.ListenerPriority listenerPriority6 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority7 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int8 = listenerPriority6.compare(listenerPriority7);
        org.asteriskjava.pbx.ListenerPriority listenerPriority9 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority10 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int11 = listenerPriority9.compare(listenerPriority10);
        org.asteriskjava.pbx.ListenerPriority listenerPriority12 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int13 = listenerPriority10.compare(listenerPriority12);
        int int14 = listenerPriority7.compare(listenerPriority10);
        int int15 = listenerPriority4.compare(listenerPriority10);
        org.asteriskjava.pbx.ListenerPriority listenerPriority16 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority17 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority18 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int19 = listenerPriority17.compare(listenerPriority18);
        org.asteriskjava.pbx.ListenerPriority listenerPriority20 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int21 = listenerPriority18.compare(listenerPriority20);
        int int22 = listenerPriority16.compare(listenerPriority18);
        int int23 = listenerPriority10.compare(listenerPriority18);
        boolean boolean24 = asteriskVersion0.equals((java.lang.Object) int23);
        org.asteriskjava.AsteriskVersion asteriskVersion25 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        boolean boolean26 = asteriskVersion0.isAtLeast(asteriskVersion25);
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int29 = asteriskVersion27.compareTo(asteriskVersion28);
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int31 = asteriskVersion27.compareTo(asteriskVersion30);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion33 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean34 = asteriskVersion32.isAtLeast(asteriskVersion33);
        boolean boolean35 = asteriskVersion30.isAtLeast(asteriskVersion33);
        boolean boolean36 = asteriskVersion25.isAtLeast(asteriskVersion33);
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int40 = asteriskVersion38.compareTo(asteriskVersion39);
        boolean boolean41 = asteriskVersion37.isAtLeast(asteriskVersion39);
        boolean boolean43 = asteriskVersion37.equals((java.lang.Object) (byte) -1);
        int int44 = asteriskVersion33.compareTo(asteriskVersion37);
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str46 = asteriskVersion45.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion47 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean48 = asteriskVersion45.isAtLeast(asteriskVersion47);
        org.asteriskjava.AsteriskVersion asteriskVersion49 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int50 = asteriskVersion45.compareTo(asteriskVersion49);
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_15;
        boolean boolean52 = asteriskVersion45.isAtLeast(asteriskVersion51);
        org.asteriskjava.AsteriskVersion asteriskVersion53 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int55 = asteriskVersion53.compareTo(asteriskVersion54);
        org.asteriskjava.AsteriskVersion asteriskVersion56 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int57 = asteriskVersion53.compareTo(asteriskVersion56);
        org.asteriskjava.AsteriskVersion asteriskVersion58 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion59 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean60 = asteriskVersion58.isAtLeast(asteriskVersion59);
        boolean boolean61 = asteriskVersion56.isAtLeast(asteriskVersion59);
        org.asteriskjava.AsteriskVersion asteriskVersion62 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        boolean boolean63 = asteriskVersion56.equals((java.lang.Object) asteriskVersion62);
        int int64 = asteriskVersion45.compareTo(asteriskVersion56);
        int int65 = asteriskVersion37.compareTo(asteriskVersion45);
        java.lang.Class<?> wildcardClass66 = asteriskVersion37.getClass();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertTrue("'" + listenerPriority1 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority1.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority2 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority2.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 2 + "'", int3 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority4 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority4.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-4) + "'", int5 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority6 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority6.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority7 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority7.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority9 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority9.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority10 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority10.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority12 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority12.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-4) + "'", int13 == (-4));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 4 + "'", int15 == 4);
        org.junit.Assert.assertTrue("'" + listenerPriority16 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority16.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority17 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority17.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority18 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority18.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2 + "'", int19 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority20 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority20.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-4) + "'", int21 == (-4));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(asteriskVersion25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertNotNull(asteriskVersion33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Asterisk 11" + "'", str46, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(asteriskVersion49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(asteriskVersion53);
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion58);
        org.junit.Assert.assertNotNull(asteriskVersion59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(asteriskVersion62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test9511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9511");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str1 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean3 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        java.lang.String str5 = asteriskVersion4.toString();
        int int6 = asteriskVersion0.compareTo(asteriskVersion4);
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        boolean boolean9 = asteriskVersion7.equals((java.lang.Object) "Asterisk 18");
        boolean boolean10 = asteriskVersion4.isAtLeast(asteriskVersion7);
        java.lang.Class<?> wildcardClass11 = asteriskVersion4.getClass();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Asterisk 11" + "'", str1, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Asterisk 14" + "'", str5, "Asterisk 14");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test9512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9512");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int2 = asteriskVersion0.compareTo(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int4 = asteriskVersion0.compareTo(asteriskVersion3);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean7 = asteriskVersion5.isAtLeast(asteriskVersion6);
        boolean boolean8 = asteriskVersion3.isAtLeast(asteriskVersion6);
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        boolean boolean10 = asteriskVersion3.equals((java.lang.Object) asteriskVersion9);
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int14 = asteriskVersion12.compareTo(asteriskVersion13);
        boolean boolean15 = asteriskVersion11.isAtLeast(asteriskVersion13);
        org.asteriskjava.AsteriskVersion asteriskVersion16 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        boolean boolean17 = asteriskVersion11.isAtLeast(asteriskVersion16);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer18 = new org.asteriskjava.tools.HtmlEventTracer();
        org.asteriskjava.manager.event.ManagerEvent managerEvent19 = null;
        htmlEventTracer18.onManagerEvent(managerEvent19);
        org.asteriskjava.manager.event.ManagerEvent managerEvent21 = null;
        htmlEventTracer18.onManagerEvent(managerEvent21);
        boolean boolean23 = asteriskVersion11.equals((java.lang.Object) htmlEventTracer18);
        org.asteriskjava.manager.event.ManagerEvent managerEvent24 = null;
        htmlEventTracer18.onManagerEvent(managerEvent24);
        org.asteriskjava.manager.event.ManagerEvent managerEvent26 = null;
        htmlEventTracer18.onManagerEvent(managerEvent26);
        org.asteriskjava.manager.event.ManagerEvent managerEvent28 = null;
        htmlEventTracer18.onManagerEvent(managerEvent28);
        org.asteriskjava.manager.event.ManagerEvent managerEvent30 = null;
        htmlEventTracer18.onManagerEvent(managerEvent30);
        org.asteriskjava.manager.event.ManagerEvent managerEvent32 = null;
        htmlEventTracer18.onManagerEvent(managerEvent32);
        org.asteriskjava.manager.event.ManagerEvent managerEvent34 = null;
        htmlEventTracer18.onManagerEvent(managerEvent34);
        org.asteriskjava.manager.event.ManagerEvent managerEvent36 = null;
        htmlEventTracer18.onManagerEvent(managerEvent36);
        org.asteriskjava.manager.event.ManagerEvent managerEvent38 = null;
        htmlEventTracer18.onManagerEvent(managerEvent38);
        org.asteriskjava.manager.event.ManagerEvent managerEvent40 = null;
        htmlEventTracer18.onManagerEvent(managerEvent40);
        org.asteriskjava.manager.event.ManagerEvent managerEvent42 = null;
        htmlEventTracer18.onManagerEvent(managerEvent42);
        boolean boolean44 = asteriskVersion3.equals((java.lang.Object) htmlEventTracer18);
        org.asteriskjava.manager.event.ManagerEvent managerEvent45 = null;
        htmlEventTracer18.onManagerEvent(managerEvent45);
        org.asteriskjava.manager.event.ManagerEvent managerEvent47 = null;
        htmlEventTracer18.onManagerEvent(managerEvent47);
        org.asteriskjava.manager.event.ManagerEvent managerEvent49 = null;
        htmlEventTracer18.onManagerEvent(managerEvent49);
        org.asteriskjava.manager.event.ManagerEvent managerEvent51 = null;
        htmlEventTracer18.onManagerEvent(managerEvent51);
        org.asteriskjava.manager.event.ManagerEvent managerEvent53 = null;
        htmlEventTracer18.onManagerEvent(managerEvent53);
        // The following exception was thrown during execution in test generation
        try {
            htmlEventTracer18.write();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(asteriskVersion16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test9513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9513");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int2 = asteriskVersion0.compareTo(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int4 = asteriskVersion0.compareTo(asteriskVersion3);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int9 = asteriskVersion7.compareTo(asteriskVersion8);
        boolean boolean10 = asteriskVersion6.isAtLeast(asteriskVersion8);
        int int11 = asteriskVersion5.compareTo(asteriskVersion6);
        int int12 = asteriskVersion0.compareTo(asteriskVersion6);
        java.lang.String str13 = asteriskVersion6.toString();
        org.asteriskjava.pbx.ListenerPriority listenerPriority14 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority15 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int16 = listenerPriority14.compare(listenerPriority15);
        org.asteriskjava.pbx.ListenerPriority listenerPriority17 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int18 = listenerPriority15.compare(listenerPriority17);
        org.asteriskjava.pbx.ListenerPriority listenerPriority19 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int20 = listenerPriority15.compare(listenerPriority19);
        org.asteriskjava.pbx.ListenerPriority listenerPriority21 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int22 = listenerPriority15.compare(listenerPriority21);
        org.asteriskjava.pbx.ListenerPriority listenerPriority23 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority24 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int25 = listenerPriority23.compare(listenerPriority24);
        int int26 = listenerPriority21.compare(listenerPriority24);
        org.asteriskjava.pbx.ListenerPriority listenerPriority27 = org.asteriskjava.pbx.ListenerPriority.LOW;
        org.asteriskjava.pbx.ListenerPriority listenerPriority28 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority29 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int30 = listenerPriority28.compare(listenerPriority29);
        org.asteriskjava.pbx.ListenerPriority listenerPriority31 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority32 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int33 = listenerPriority31.compare(listenerPriority32);
        org.asteriskjava.pbx.ListenerPriority listenerPriority34 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int35 = listenerPriority32.compare(listenerPriority34);
        int int36 = listenerPriority29.compare(listenerPriority32);
        int int37 = listenerPriority27.compare(listenerPriority29);
        int int38 = listenerPriority24.compare(listenerPriority29);
        boolean boolean39 = asteriskVersion6.equals((java.lang.Object) listenerPriority29);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer40 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        boolean boolean47 = asteriskVersion6.equals((java.lang.Object) htmlEventTracer40);
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        org.asteriskjava.manager.event.ManagerEvent managerEvent58 = null;
        htmlEventTracer40.onManagerEvent(managerEvent58);
        org.asteriskjava.manager.event.ManagerEvent managerEvent60 = null;
        htmlEventTracer40.onManagerEvent(managerEvent60);
        org.asteriskjava.manager.event.ManagerEvent managerEvent62 = null;
        htmlEventTracer40.onManagerEvent(managerEvent62);
        org.asteriskjava.manager.event.ManagerEvent managerEvent64 = null;
        htmlEventTracer40.onManagerEvent(managerEvent64);
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Asterisk 12" + "'", str13, "Asterisk 12");
        org.junit.Assert.assertTrue("'" + listenerPriority14 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority14.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority15 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority15.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority17 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority17.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-4) + "'", int18 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority19 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority19.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-6) + "'", int20 == (-6));
        org.junit.Assert.assertTrue("'" + listenerPriority21 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority21.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority23 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority23.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority24 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority24.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertTrue("'" + listenerPriority27 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority27.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + listenerPriority28 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority28.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority29 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority29.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority31 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority31.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority32 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority32.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority34 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority34.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-4) + "'", int35 == (-4));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 6 + "'", int37 == 6);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test9514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9514");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int2 = asteriskVersion0.compareTo(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int6 = asteriskVersion4.compareTo(asteriskVersion5);
        boolean boolean7 = asteriskVersion3.isAtLeast(asteriskVersion5);
        int int8 = asteriskVersion0.compareTo(asteriskVersion3);
        java.lang.String str9 = asteriskVersion0.toString();
        java.lang.String str10 = asteriskVersion0.toString();
        org.asteriskjava.pbx.ListenerPriority listenerPriority11 = org.asteriskjava.pbx.ListenerPriority.REALTIME;
        org.asteriskjava.pbx.ListenerPriority listenerPriority12 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        int int13 = listenerPriority11.compare(listenerPriority12);
        org.asteriskjava.pbx.ListenerPriority listenerPriority14 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority15 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int16 = listenerPriority14.compare(listenerPriority15);
        org.asteriskjava.pbx.ListenerPriority listenerPriority17 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int18 = listenerPriority15.compare(listenerPriority17);
        org.asteriskjava.pbx.ListenerPriority listenerPriority19 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority20 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int21 = listenerPriority19.compare(listenerPriority20);
        org.asteriskjava.pbx.ListenerPriority listenerPriority22 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority23 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int24 = listenerPriority22.compare(listenerPriority23);
        org.asteriskjava.pbx.ListenerPriority listenerPriority25 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int26 = listenerPriority23.compare(listenerPriority25);
        int int27 = listenerPriority20.compare(listenerPriority23);
        int int28 = listenerPriority17.compare(listenerPriority23);
        org.asteriskjava.pbx.ListenerPriority listenerPriority29 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority30 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority31 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int32 = listenerPriority30.compare(listenerPriority31);
        org.asteriskjava.pbx.ListenerPriority listenerPriority33 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int34 = listenerPriority31.compare(listenerPriority33);
        int int35 = listenerPriority29.compare(listenerPriority31);
        int int36 = listenerPriority23.compare(listenerPriority31);
        int int37 = listenerPriority11.compare(listenerPriority23);
        boolean boolean38 = asteriskVersion0.equals((java.lang.Object) int37);
        java.lang.String str39 = asteriskVersion0.toString();
        java.lang.String str40 = asteriskVersion0.toString();
        java.lang.String str41 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str43 = asteriskVersion42.toString();
        org.asteriskjava.pbx.TechType techType44 = org.asteriskjava.pbx.TechType.DIALPLAN;
        java.lang.Class<?> wildcardClass45 = techType44.getClass();
        boolean boolean46 = asteriskVersion42.equals((java.lang.Object) techType44);
        java.lang.String str47 = asteriskVersion42.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion49 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str50 = asteriskVersion49.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean52 = asteriskVersion49.isAtLeast(asteriskVersion51);
        boolean boolean53 = asteriskVersion48.equals((java.lang.Object) boolean52);
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean56 = asteriskVersion54.isAtLeast(asteriskVersion55);
        org.asteriskjava.AsteriskVersion asteriskVersion57 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int58 = asteriskVersion54.compareTo(asteriskVersion57);
        int int59 = asteriskVersion48.compareTo(asteriskVersion57);
        org.asteriskjava.AsteriskVersion asteriskVersion60 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion61 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion62 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int63 = asteriskVersion61.compareTo(asteriskVersion62);
        boolean boolean64 = asteriskVersion60.isAtLeast(asteriskVersion62);
        boolean boolean65 = asteriskVersion48.isAtLeast(asteriskVersion60);
        java.lang.String str66 = asteriskVersion48.toString();
        java.lang.String str67 = asteriskVersion48.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion68 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion69 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean70 = asteriskVersion68.isAtLeast(asteriskVersion69);
        org.asteriskjava.AsteriskVersion asteriskVersion71 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int72 = asteriskVersion69.compareTo(asteriskVersion71);
        int int73 = asteriskVersion48.compareTo(asteriskVersion69);
        boolean boolean74 = asteriskVersion42.isAtLeast(asteriskVersion48);
        int int75 = asteriskVersion0.compareTo(asteriskVersion42);
        java.lang.String str76 = asteriskVersion42.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Asterisk 17" + "'", str9, "Asterisk 17");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Asterisk 17" + "'", str10, "Asterisk 17");
        org.junit.Assert.assertTrue("'" + listenerPriority11 + "' != '" + org.asteriskjava.pbx.ListenerPriority.REALTIME + "'", listenerPriority11.equals(org.asteriskjava.pbx.ListenerPriority.REALTIME));
        org.junit.Assert.assertTrue("'" + listenerPriority12 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority12.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-92) + "'", int13 == (-92));
        org.junit.Assert.assertTrue("'" + listenerPriority14 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority14.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority15 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority15.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority17 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority17.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-4) + "'", int18 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority19 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority19.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority20 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority20.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority22 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority22.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority23 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority23.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority25 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority25.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-4) + "'", int26 == (-4));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 4 + "'", int28 == 4);
        org.junit.Assert.assertTrue("'" + listenerPriority29 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority29.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority30 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority30.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority31 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority31.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2 + "'", int32 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority33 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority33.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-4) + "'", int34 == (-4));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 2 + "'", int35 == 2);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-90) + "'", int37 == (-90));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Asterisk 17" + "'", str39, "Asterisk 17");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Asterisk 17" + "'", str40, "Asterisk 17");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Asterisk 17" + "'", str41, "Asterisk 17");
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Asterisk 1.0" + "'", str43, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + techType44 + "' != '" + org.asteriskjava.pbx.TechType.DIALPLAN + "'", techType44.equals(org.asteriskjava.pbx.TechType.DIALPLAN));
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Asterisk 1.0" + "'", str47, "Asterisk 1.0");
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertNotNull(asteriskVersion49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Asterisk 11" + "'", str50, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(asteriskVersion57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion60);
        org.junit.Assert.assertNotNull(asteriskVersion61);
        org.junit.Assert.assertNotNull(asteriskVersion62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Asterisk 12" + "'", str66, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Asterisk 12" + "'", str67, "Asterisk 12");
        org.junit.Assert.assertNotNull(asteriskVersion68);
        org.junit.Assert.assertNotNull(asteriskVersion69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(asteriskVersion71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Asterisk 1.0" + "'", str76, "Asterisk 1.0");
    }

    @Test
    public void test9515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9515");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int3 = asteriskVersion1.compareTo(asteriskVersion2);
        boolean boolean4 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        boolean boolean6 = asteriskVersion0.isAtLeast(asteriskVersion5);
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int10 = asteriskVersion8.compareTo(asteriskVersion9);
        boolean boolean11 = asteriskVersion7.isAtLeast(asteriskVersion9);
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean14 = asteriskVersion12.isAtLeast(asteriskVersion13);
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int16 = asteriskVersion13.compareTo(asteriskVersion15);
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean18 = asteriskVersion15.isAtLeast(asteriskVersion17);
        int int19 = asteriskVersion7.compareTo(asteriskVersion15);
        int int20 = asteriskVersion0.compareTo(asteriskVersion7);
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        org.asteriskjava.pbx.ActivityStatusEnum activityStatusEnum22 = org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS;
        java.lang.String str23 = activityStatusEnum22.getDefaultMessage();
        boolean boolean24 = asteriskVersion21.equals((java.lang.Object) str23);
        org.asteriskjava.AsteriskVersion asteriskVersion25 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean27 = asteriskVersion25.isAtLeast(asteriskVersion26);
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion29 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean30 = asteriskVersion28.isAtLeast(asteriskVersion29);
        int int31 = asteriskVersion25.compareTo(asteriskVersion29);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion33 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean34 = asteriskVersion32.isAtLeast(asteriskVersion33);
        boolean boolean35 = asteriskVersion29.isAtLeast(asteriskVersion33);
        org.asteriskjava.pbx.ListenerPriority listenerPriority36 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean37 = asteriskVersion29.equals((java.lang.Object) listenerPriority36);
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        int int39 = asteriskVersion29.compareTo(asteriskVersion38);
        boolean boolean40 = asteriskVersion21.equals((java.lang.Object) asteriskVersion29);
        int int41 = asteriskVersion7.compareTo(asteriskVersion29);
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean44 = asteriskVersion42.isAtLeast(asteriskVersion43);
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean47 = asteriskVersion45.isAtLeast(asteriskVersion46);
        int int48 = asteriskVersion42.compareTo(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion49 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion50 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean51 = asteriskVersion49.isAtLeast(asteriskVersion50);
        boolean boolean52 = asteriskVersion46.isAtLeast(asteriskVersion50);
        org.asteriskjava.pbx.ListenerPriority listenerPriority53 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean54 = asteriskVersion46.equals((java.lang.Object) listenerPriority53);
        boolean boolean55 = asteriskVersion7.isAtLeast(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion56 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion57 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean58 = asteriskVersion56.isAtLeast(asteriskVersion57);
        org.asteriskjava.AsteriskVersion asteriskVersion59 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion60 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean61 = asteriskVersion59.isAtLeast(asteriskVersion60);
        int int62 = asteriskVersion56.compareTo(asteriskVersion60);
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion64 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean65 = asteriskVersion63.isAtLeast(asteriskVersion64);
        org.asteriskjava.AsteriskVersion asteriskVersion66 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion67 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean68 = asteriskVersion66.isAtLeast(asteriskVersion67);
        int int69 = asteriskVersion63.compareTo(asteriskVersion67);
        org.asteriskjava.AsteriskVersion asteriskVersion70 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion71 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean72 = asteriskVersion70.isAtLeast(asteriskVersion71);
        boolean boolean73 = asteriskVersion67.isAtLeast(asteriskVersion71);
        boolean boolean74 = asteriskVersion56.isAtLeast(asteriskVersion71);
        boolean boolean75 = asteriskVersion7.equals((java.lang.Object) asteriskVersion71);
        org.asteriskjava.AsteriskVersion asteriskVersion76 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str77 = asteriskVersion76.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion78 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean79 = asteriskVersion76.isAtLeast(asteriskVersion78);
        org.asteriskjava.AsteriskVersion asteriskVersion80 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        java.lang.String str81 = asteriskVersion80.toString();
        int int82 = asteriskVersion76.compareTo(asteriskVersion80);
        org.asteriskjava.AsteriskVersion asteriskVersion83 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer84 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer84.write();
        org.asteriskjava.manager.event.ManagerEvent managerEvent86 = null;
        htmlEventTracer84.onManagerEvent(managerEvent86);
        boolean boolean88 = asteriskVersion83.equals((java.lang.Object) managerEvent86);
        boolean boolean89 = asteriskVersion76.isAtLeast(asteriskVersion83);
        int int90 = asteriskVersion71.compareTo(asteriskVersion83);
        java.lang.Class<?> wildcardClass91 = asteriskVersion83.getClass();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + activityStatusEnum22 + "' != '" + org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS + "'", activityStatusEnum22.equals(org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Progress" + "'", str23, "Progress");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(asteriskVersion25);
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertNotNull(asteriskVersion29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertNotNull(asteriskVersion33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority36 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority36.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion49);
        org.junit.Assert.assertNotNull(asteriskVersion50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority53 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority53.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(asteriskVersion56);
        org.junit.Assert.assertNotNull(asteriskVersion57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(asteriskVersion59);
        org.junit.Assert.assertNotNull(asteriskVersion60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertNotNull(asteriskVersion64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(asteriskVersion66);
        org.junit.Assert.assertNotNull(asteriskVersion67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion70);
        org.junit.Assert.assertNotNull(asteriskVersion71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(asteriskVersion76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Asterisk 11" + "'", str77, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(asteriskVersion80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Asterisk 14" + "'", str81, "Asterisk 14");
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion83);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test9516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9516");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int2 = asteriskVersion0.compareTo(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int4 = asteriskVersion0.compareTo(asteriskVersion3);
        java.lang.String str5 = asteriskVersion3.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int8 = asteriskVersion6.compareTo(asteriskVersion7);
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int10 = asteriskVersion6.compareTo(asteriskVersion9);
        org.asteriskjava.pbx.TechType techType11 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean12 = asteriskVersion6.equals((java.lang.Object) techType11);
        boolean boolean13 = asteriskVersion3.isAtLeast(asteriskVersion6);
        org.asteriskjava.AsteriskVersion asteriskVersion14 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion16 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int17 = asteriskVersion15.compareTo(asteriskVersion16);
        boolean boolean18 = asteriskVersion14.isAtLeast(asteriskVersion16);
        int int19 = asteriskVersion6.compareTo(asteriskVersion14);
        java.lang.Object obj20 = null;
        boolean boolean21 = asteriskVersion6.equals(obj20);
        org.asteriskjava.AsteriskVersion asteriskVersion22 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion24 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int25 = asteriskVersion23.compareTo(asteriskVersion24);
        boolean boolean26 = asteriskVersion22.isAtLeast(asteriskVersion24);
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int29 = asteriskVersion27.compareTo(asteriskVersion28);
        boolean boolean30 = asteriskVersion22.isAtLeast(asteriskVersion27);
        int int31 = asteriskVersion6.compareTo(asteriskVersion22);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str33 = asteriskVersion32.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion34 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean35 = asteriskVersion32.isAtLeast(asteriskVersion34);
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int37 = asteriskVersion32.compareTo(asteriskVersion36);
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_15;
        boolean boolean39 = asteriskVersion32.isAtLeast(asteriskVersion38);
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        java.lang.String str41 = asteriskVersion40.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        int int43 = asteriskVersion40.compareTo(asteriskVersion42);
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean46 = asteriskVersion44.isAtLeast(asteriskVersion45);
        org.asteriskjava.AsteriskVersion asteriskVersion47 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean49 = asteriskVersion47.isAtLeast(asteriskVersion48);
        int int50 = asteriskVersion44.compareTo(asteriskVersion48);
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean53 = asteriskVersion51.isAtLeast(asteriskVersion52);
        boolean boolean54 = asteriskVersion48.isAtLeast(asteriskVersion52);
        org.asteriskjava.pbx.ListenerPriority listenerPriority55 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean56 = asteriskVersion48.equals((java.lang.Object) listenerPriority55);
        boolean boolean57 = asteriskVersion42.equals((java.lang.Object) asteriskVersion48);
        org.asteriskjava.AsteriskVersion asteriskVersion58 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion59 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int60 = asteriskVersion58.compareTo(asteriskVersion59);
        org.asteriskjava.AsteriskVersion asteriskVersion61 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str62 = asteriskVersion61.toString();
        boolean boolean63 = asteriskVersion59.isAtLeast(asteriskVersion61);
        boolean boolean65 = asteriskVersion59.equals((java.lang.Object) "0");
        boolean boolean66 = asteriskVersion42.isAtLeast(asteriskVersion59);
        int int67 = asteriskVersion38.compareTo(asteriskVersion59);
        int int68 = asteriskVersion6.compareTo(asteriskVersion59);
        java.lang.Object obj69 = null;
        boolean boolean70 = asteriskVersion59.equals(obj69);
        org.asteriskjava.pbx.ActivityStatusEnum activityStatusEnum71 = org.asteriskjava.pbx.ActivityStatusEnum.SUCCESS;
        java.lang.String str72 = activityStatusEnum71.getDefaultMessage();
        java.lang.String str73 = activityStatusEnum71.getDefaultMessage();
        java.lang.String str74 = activityStatusEnum71.getDefaultMessage();
        java.lang.String str75 = activityStatusEnum71.getDefaultMessage();
        java.lang.String str76 = activityStatusEnum71.getDefaultMessage();
        java.lang.String str77 = activityStatusEnum71.getDefaultMessage();
        java.lang.String str78 = activityStatusEnum71.getDefaultMessage();
        java.lang.String str79 = activityStatusEnum71.getDefaultMessage();
        java.lang.String str80 = activityStatusEnum71.getDefaultMessage();
        java.lang.String str81 = activityStatusEnum71.getDefaultMessage();
        boolean boolean82 = asteriskVersion59.equals((java.lang.Object) str81);
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Asterisk 1.8" + "'", str5, "Asterisk 1.8");
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + techType11 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType11.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(asteriskVersion14);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertNotNull(asteriskVersion16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(asteriskVersion22);
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertNotNull(asteriskVersion24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Asterisk 11" + "'", str33, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Asterisk 10" + "'", str41, "Asterisk 10");
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(asteriskVersion47);
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority55 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority55.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(asteriskVersion58);
        org.junit.Assert.assertNotNull(asteriskVersion59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Asterisk 1.0" + "'", str62, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + activityStatusEnum71 + "' != '" + org.asteriskjava.pbx.ActivityStatusEnum.SUCCESS + "'", activityStatusEnum71.equals(org.asteriskjava.pbx.ActivityStatusEnum.SUCCESS));
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Success" + "'", str72, "Success");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Success" + "'", str73, "Success");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Success" + "'", str74, "Success");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Success" + "'", str75, "Success");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "Success" + "'", str76, "Success");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Success" + "'", str77, "Success");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Success" + "'", str78, "Success");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Success" + "'", str79, "Success");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Success" + "'", str80, "Success");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Success" + "'", str81, "Success");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test9517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9517");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int3 = asteriskVersion1.compareTo(asteriskVersion2);
        boolean boolean4 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int7 = asteriskVersion5.compareTo(asteriskVersion6);
        boolean boolean8 = asteriskVersion0.isAtLeast(asteriskVersion5);
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int11 = asteriskVersion9.compareTo(asteriskVersion10);
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str13 = asteriskVersion12.toString();
        boolean boolean14 = asteriskVersion10.isAtLeast(asteriskVersion12);
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion16 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int17 = asteriskVersion15.compareTo(asteriskVersion16);
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str19 = asteriskVersion18.toString();
        boolean boolean20 = asteriskVersion16.isAtLeast(asteriskVersion18);
        boolean boolean22 = asteriskVersion16.equals((java.lang.Object) "0");
        boolean boolean23 = asteriskVersion10.equals((java.lang.Object) asteriskVersion16);
        int int24 = asteriskVersion0.compareTo(asteriskVersion16);
        org.asteriskjava.AsteriskVersion asteriskVersion25 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean27 = asteriskVersion25.isAtLeast(asteriskVersion26);
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int29 = asteriskVersion26.compareTo(asteriskVersion28);
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        org.asteriskjava.AsteriskVersion asteriskVersion31 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str32 = asteriskVersion31.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion33 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean34 = asteriskVersion31.isAtLeast(asteriskVersion33);
        org.asteriskjava.AsteriskVersion asteriskVersion35 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        java.lang.String str36 = asteriskVersion35.toString();
        int int37 = asteriskVersion31.compareTo(asteriskVersion35);
        boolean boolean38 = asteriskVersion30.isAtLeast(asteriskVersion35);
        boolean boolean39 = asteriskVersion26.equals((java.lang.Object) asteriskVersion35);
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion41 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int43 = asteriskVersion41.compareTo(asteriskVersion42);
        boolean boolean44 = asteriskVersion40.isAtLeast(asteriskVersion42);
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int47 = asteriskVersion45.compareTo(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int49 = asteriskVersion45.compareTo(asteriskVersion48);
        org.asteriskjava.pbx.TechType techType50 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean51 = asteriskVersion45.equals((java.lang.Object) techType50);
        boolean boolean52 = asteriskVersion42.isAtLeast(asteriskVersion45);
        int int53 = asteriskVersion26.compareTo(asteriskVersion45);
        java.lang.String str54 = asteriskVersion26.toString();
        int int55 = asteriskVersion16.compareTo(asteriskVersion26);
        java.lang.String str56 = asteriskVersion26.toString();
        java.lang.String str57 = asteriskVersion26.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion58 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion59 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int60 = asteriskVersion58.compareTo(asteriskVersion59);
        org.asteriskjava.AsteriskVersion asteriskVersion61 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int62 = asteriskVersion58.compareTo(asteriskVersion61);
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        int int64 = asteriskVersion61.compareTo(asteriskVersion63);
        org.asteriskjava.AsteriskVersion asteriskVersion65 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        java.lang.String str66 = asteriskVersion65.toString();
        boolean boolean67 = asteriskVersion61.isAtLeast(asteriskVersion65);
        boolean boolean69 = asteriskVersion61.equals((java.lang.Object) "2");
        boolean boolean70 = asteriskVersion26.isAtLeast(asteriskVersion61);
        java.lang.Class<?> wildcardClass71 = asteriskVersion26.getClass();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Asterisk 1.0" + "'", str13, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertNotNull(asteriskVersion16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Asterisk 1.0" + "'", str19, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion25);
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertNotNull(asteriskVersion31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Asterisk 11" + "'", str32, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(asteriskVersion35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Asterisk 14" + "'", str36, "Asterisk 14");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertNotNull(asteriskVersion41);
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + techType50 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType50.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Asterisk 20" + "'", str54, "Asterisk 20");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Asterisk 20" + "'", str56, "Asterisk 20");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Asterisk 20" + "'", str57, "Asterisk 20");
        org.junit.Assert.assertNotNull(asteriskVersion58);
        org.junit.Assert.assertNotNull(asteriskVersion59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Asterisk 12" + "'", str66, "Asterisk 12");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test9518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9518");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int2 = asteriskVersion0.compareTo(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int4 = asteriskVersion0.compareTo(asteriskVersion3);
        org.asteriskjava.pbx.TechType techType5 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean6 = asteriskVersion0.equals((java.lang.Object) techType5);
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        boolean boolean8 = asteriskVersion0.equals((java.lang.Object) asteriskVersion7);
        java.lang.String str9 = asteriskVersion7.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean12 = asteriskVersion10.isAtLeast(asteriskVersion11);
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion14 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean15 = asteriskVersion13.isAtLeast(asteriskVersion14);
        int int16 = asteriskVersion10.compareTo(asteriskVersion14);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer17 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer17.write();
        boolean boolean19 = asteriskVersion14.equals((java.lang.Object) htmlEventTracer17);
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        boolean boolean31 = asteriskVersion7.equals((java.lang.Object) htmlEventTracer17);
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        htmlEventTracer17.write();
        org.asteriskjava.manager.event.ManagerEvent managerEvent35 = null;
        htmlEventTracer17.onManagerEvent(managerEvent35);
        org.asteriskjava.manager.event.ManagerEvent managerEvent37 = null;
        htmlEventTracer17.onManagerEvent(managerEvent37);
        org.asteriskjava.manager.event.ManagerEvent managerEvent39 = null;
        htmlEventTracer17.onManagerEvent(managerEvent39);
        org.asteriskjava.manager.event.ManagerEvent managerEvent41 = null;
        htmlEventTracer17.onManagerEvent(managerEvent41);
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertTrue("'" + techType5 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType5.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Asterisk 10" + "'", str9, "Asterisk 10");
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertNotNull(asteriskVersion14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test9519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9519");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int3 = asteriskVersion1.compareTo(asteriskVersion2);
        boolean boolean4 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int7 = asteriskVersion5.compareTo(asteriskVersion6);
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int9 = asteriskVersion5.compareTo(asteriskVersion8);
        java.lang.String str10 = asteriskVersion8.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int13 = asteriskVersion11.compareTo(asteriskVersion12);
        org.asteriskjava.AsteriskVersion asteriskVersion14 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int15 = asteriskVersion11.compareTo(asteriskVersion14);
        org.asteriskjava.pbx.TechType techType16 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean17 = asteriskVersion11.equals((java.lang.Object) techType16);
        boolean boolean18 = asteriskVersion8.isAtLeast(asteriskVersion11);
        org.asteriskjava.AsteriskVersion asteriskVersion19 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int22 = asteriskVersion20.compareTo(asteriskVersion21);
        boolean boolean23 = asteriskVersion19.isAtLeast(asteriskVersion21);
        int int24 = asteriskVersion11.compareTo(asteriskVersion19);
        java.lang.Object obj25 = null;
        boolean boolean26 = asteriskVersion11.equals(obj25);
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion29 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int30 = asteriskVersion28.compareTo(asteriskVersion29);
        boolean boolean31 = asteriskVersion27.isAtLeast(asteriskVersion29);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion33 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int34 = asteriskVersion32.compareTo(asteriskVersion33);
        boolean boolean35 = asteriskVersion27.isAtLeast(asteriskVersion32);
        int int36 = asteriskVersion11.compareTo(asteriskVersion27);
        boolean boolean37 = asteriskVersion2.isAtLeast(asteriskVersion11);
        java.lang.String str38 = asteriskVersion2.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int41 = asteriskVersion39.compareTo(asteriskVersion40);
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int45 = asteriskVersion43.compareTo(asteriskVersion44);
        boolean boolean46 = asteriskVersion42.isAtLeast(asteriskVersion44);
        int int47 = asteriskVersion39.compareTo(asteriskVersion42);
        java.lang.String str48 = asteriskVersion39.toString();
        java.lang.String str49 = asteriskVersion39.toString();
        org.asteriskjava.pbx.ListenerPriority listenerPriority50 = org.asteriskjava.pbx.ListenerPriority.REALTIME;
        org.asteriskjava.pbx.ListenerPriority listenerPriority51 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        int int52 = listenerPriority50.compare(listenerPriority51);
        org.asteriskjava.pbx.ListenerPriority listenerPriority53 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority54 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int55 = listenerPriority53.compare(listenerPriority54);
        org.asteriskjava.pbx.ListenerPriority listenerPriority56 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int57 = listenerPriority54.compare(listenerPriority56);
        org.asteriskjava.pbx.ListenerPriority listenerPriority58 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority59 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int60 = listenerPriority58.compare(listenerPriority59);
        org.asteriskjava.pbx.ListenerPriority listenerPriority61 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority62 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int63 = listenerPriority61.compare(listenerPriority62);
        org.asteriskjava.pbx.ListenerPriority listenerPriority64 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int65 = listenerPriority62.compare(listenerPriority64);
        int int66 = listenerPriority59.compare(listenerPriority62);
        int int67 = listenerPriority56.compare(listenerPriority62);
        org.asteriskjava.pbx.ListenerPriority listenerPriority68 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority69 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority70 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int71 = listenerPriority69.compare(listenerPriority70);
        org.asteriskjava.pbx.ListenerPriority listenerPriority72 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int73 = listenerPriority70.compare(listenerPriority72);
        int int74 = listenerPriority68.compare(listenerPriority70);
        int int75 = listenerPriority62.compare(listenerPriority70);
        int int76 = listenerPriority50.compare(listenerPriority62);
        boolean boolean77 = asteriskVersion39.equals((java.lang.Object) int76);
        org.asteriskjava.pbx.ListenerPriority listenerPriority78 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority79 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int80 = listenerPriority78.compare(listenerPriority79);
        org.asteriskjava.pbx.ListenerPriority listenerPriority81 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority82 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int83 = listenerPriority81.compare(listenerPriority82);
        org.asteriskjava.pbx.ListenerPriority listenerPriority84 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int85 = listenerPriority82.compare(listenerPriority84);
        int int86 = listenerPriority79.compare(listenerPriority82);
        org.asteriskjava.pbx.ListenerPriority listenerPriority87 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority88 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int89 = listenerPriority87.compare(listenerPriority88);
        int int90 = listenerPriority79.compare(listenerPriority87);
        org.asteriskjava.pbx.ListenerPriority listenerPriority91 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority92 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int93 = listenerPriority91.compare(listenerPriority92);
        int int94 = listenerPriority79.compare(listenerPriority91);
        boolean boolean95 = asteriskVersion39.equals((java.lang.Object) listenerPriority91);
        boolean boolean96 = asteriskVersion2.isAtLeast(asteriskVersion39);
        java.lang.String str97 = asteriskVersion2.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Asterisk 1.8" + "'", str10, "Asterisk 1.8");
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + techType16 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType16.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(asteriskVersion19);
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertNotNull(asteriskVersion29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertNotNull(asteriskVersion33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Asterisk 16" + "'", str38, "Asterisk 16");
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Asterisk 17" + "'", str48, "Asterisk 17");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Asterisk 17" + "'", str49, "Asterisk 17");
        org.junit.Assert.assertTrue("'" + listenerPriority50 + "' != '" + org.asteriskjava.pbx.ListenerPriority.REALTIME + "'", listenerPriority50.equals(org.asteriskjava.pbx.ListenerPriority.REALTIME));
        org.junit.Assert.assertTrue("'" + listenerPriority51 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority51.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-92) + "'", int52 == (-92));
        org.junit.Assert.assertTrue("'" + listenerPriority53 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority53.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority54 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority54.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority56 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority56.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-4) + "'", int57 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority58 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority58.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority59 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority59.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority61 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority61.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority62 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority62.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority64 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority64.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-4) + "'", int65 == (-4));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertTrue("'" + listenerPriority68 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority68.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority69 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority69.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority70 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority70.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority72 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority72.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-4) + "'", int73 == (-4));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-90) + "'", int76 == (-90));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + listenerPriority78 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority78.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority79 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority79.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2 + "'", int80 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority81 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority81.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority82 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority82.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority84 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority84.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-4) + "'", int85 == (-4));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + listenerPriority87 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority87.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority88 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority88.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-2) + "'", int90 == (-2));
        org.junit.Assert.assertTrue("'" + listenerPriority91 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority91.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority92 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority92.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 2 + "'", int93 == 2);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-2) + "'", int94 == (-2));
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "Asterisk 16" + "'", str97, "Asterisk 16");
    }

    @Test
    public void test9520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9520");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str1 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean3 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int5 = asteriskVersion0.compareTo(asteriskVersion4);
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean8 = asteriskVersion6.isAtLeast(asteriskVersion7);
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int10 = asteriskVersion6.compareTo(asteriskVersion9);
        org.asteriskjava.pbx.DTMFTone dTMFTone11 = org.asteriskjava.pbx.DTMFTone.STAR;
        java.lang.String str12 = dTMFTone11.toString();
        java.lang.String str13 = dTMFTone11.toString();
        java.lang.String str14 = dTMFTone11.toString();
        java.lang.String str15 = dTMFTone11.toString();
        boolean boolean16 = asteriskVersion6.equals((java.lang.Object) str15);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer17 = new org.asteriskjava.tools.HtmlEventTracer();
        org.asteriskjava.manager.event.ManagerEvent managerEvent18 = null;
        htmlEventTracer17.onManagerEvent(managerEvent18);
        java.lang.Class<?> wildcardClass20 = htmlEventTracer17.getClass();
        boolean boolean21 = asteriskVersion6.equals((java.lang.Object) htmlEventTracer17);
        boolean boolean22 = asteriskVersion0.isAtLeast(asteriskVersion6);
        java.lang.String str23 = asteriskVersion0.toString();
        java.lang.String str24 = asteriskVersion0.toString();
        java.lang.String str25 = asteriskVersion0.toString();
        java.lang.String str26 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        java.lang.String str28 = asteriskVersion27.toString();
        java.lang.String str29 = asteriskVersion27.toString();
        java.lang.String str30 = asteriskVersion27.toString();
        java.lang.String str31 = asteriskVersion27.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        java.lang.String str33 = asteriskVersion32.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion34 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        int int35 = asteriskVersion32.compareTo(asteriskVersion34);
        int int36 = asteriskVersion27.compareTo(asteriskVersion32);
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str38 = asteriskVersion37.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean40 = asteriskVersion37.isAtLeast(asteriskVersion39);
        org.asteriskjava.AsteriskVersion asteriskVersion41 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int43 = asteriskVersion41.compareTo(asteriskVersion42);
        boolean boolean44 = asteriskVersion37.isAtLeast(asteriskVersion41);
        java.lang.Object obj45 = null;
        boolean boolean46 = asteriskVersion37.equals(obj45);
        java.lang.String str47 = asteriskVersion37.toString();
        java.lang.String str48 = asteriskVersion37.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion49 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion50 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean51 = asteriskVersion49.isAtLeast(asteriskVersion50);
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion53 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean54 = asteriskVersion52.isAtLeast(asteriskVersion53);
        int int55 = asteriskVersion49.compareTo(asteriskVersion53);
        org.asteriskjava.AsteriskVersion asteriskVersion56 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion57 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean58 = asteriskVersion56.isAtLeast(asteriskVersion57);
        boolean boolean59 = asteriskVersion53.isAtLeast(asteriskVersion57);
        org.asteriskjava.AsteriskVersion asteriskVersion60 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean61 = asteriskVersion57.isAtLeast(asteriskVersion60);
        org.asteriskjava.pbx.ListenerPriority listenerPriority62 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority63 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int64 = listenerPriority62.compare(listenerPriority63);
        org.asteriskjava.pbx.ListenerPriority listenerPriority65 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority66 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int67 = listenerPriority65.compare(listenerPriority66);
        org.asteriskjava.pbx.ListenerPriority listenerPriority68 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int69 = listenerPriority66.compare(listenerPriority68);
        int int70 = listenerPriority63.compare(listenerPriority66);
        org.asteriskjava.pbx.ListenerPriority listenerPriority71 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority72 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int73 = listenerPriority71.compare(listenerPriority72);
        int int74 = listenerPriority63.compare(listenerPriority71);
        boolean boolean75 = asteriskVersion57.equals((java.lang.Object) listenerPriority63);
        org.asteriskjava.AsteriskVersion asteriskVersion76 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        org.asteriskjava.AsteriskVersion asteriskVersion77 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str78 = asteriskVersion77.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion79 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean80 = asteriskVersion77.isAtLeast(asteriskVersion79);
        org.asteriskjava.AsteriskVersion asteriskVersion81 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        java.lang.String str82 = asteriskVersion81.toString();
        int int83 = asteriskVersion77.compareTo(asteriskVersion81);
        boolean boolean84 = asteriskVersion76.isAtLeast(asteriskVersion81);
        boolean boolean85 = asteriskVersion57.isAtLeast(asteriskVersion76);
        java.lang.String str86 = asteriskVersion76.toString();
        boolean boolean87 = asteriskVersion37.isAtLeast(asteriskVersion76);
        int int88 = asteriskVersion27.compareTo(asteriskVersion37);
        int int89 = asteriskVersion0.compareTo(asteriskVersion37);
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Asterisk 11" + "'", str1, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + dTMFTone11 + "' != '" + org.asteriskjava.pbx.DTMFTone.STAR + "'", dTMFTone11.equals(org.asteriskjava.pbx.DTMFTone.STAR));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "*" + "'", str12, "*");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "*" + "'", str13, "*");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*" + "'", str14, "*");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "*" + "'", str15, "*");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Asterisk 11" + "'", str23, "Asterisk 11");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Asterisk 11" + "'", str24, "Asterisk 11");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Asterisk 11" + "'", str25, "Asterisk 11");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Asterisk 11" + "'", str26, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Asterisk 12" + "'", str28, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Asterisk 12" + "'", str29, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Asterisk 12" + "'", str30, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Asterisk 12" + "'", str31, "Asterisk 12");
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Asterisk 10" + "'", str33, "Asterisk 10");
        org.junit.Assert.assertNotNull(asteriskVersion34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Asterisk 11" + "'", str38, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(asteriskVersion41);
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Asterisk 11" + "'", str47, "Asterisk 11");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Asterisk 11" + "'", str48, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion49);
        org.junit.Assert.assertNotNull(asteriskVersion50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertNotNull(asteriskVersion53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion56);
        org.junit.Assert.assertNotNull(asteriskVersion57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(asteriskVersion60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority62 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority62.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority63 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority63.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority65 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority65.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority66 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority66.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2 + "'", int67 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority68 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority68.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-4) + "'", int69 == (-4));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + listenerPriority71 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority71.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority72 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority72.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-2) + "'", int74 == (-2));
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(asteriskVersion76);
        org.junit.Assert.assertNotNull(asteriskVersion77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Asterisk 11" + "'", str78, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(asteriskVersion81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Asterisk 14" + "'", str82, "Asterisk 14");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "Asterisk 10" + "'", str86, "Asterisk 10");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
    }

    @Test
    public void test9521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9521");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean2 = asteriskVersion0.isAtLeast(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean5 = asteriskVersion3.isAtLeast(asteriskVersion4);
        int int6 = asteriskVersion0.compareTo(asteriskVersion4);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer7 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer7.write();
        boolean boolean9 = asteriskVersion4.equals((java.lang.Object) htmlEventTracer7);
        htmlEventTracer7.write();
        htmlEventTracer7.write();
        org.asteriskjava.manager.event.ManagerEvent managerEvent12 = null;
        htmlEventTracer7.onManagerEvent(managerEvent12);
        org.asteriskjava.manager.event.ManagerEvent managerEvent14 = null;
        htmlEventTracer7.onManagerEvent(managerEvent14);
        org.asteriskjava.manager.event.ManagerEvent managerEvent16 = null;
        htmlEventTracer7.onManagerEvent(managerEvent16);
        org.asteriskjava.manager.event.ManagerEvent managerEvent18 = null;
        htmlEventTracer7.onManagerEvent(managerEvent18);
        org.asteriskjava.manager.event.ManagerEvent managerEvent20 = null;
        htmlEventTracer7.onManagerEvent(managerEvent20);
        org.asteriskjava.manager.event.ManagerEvent managerEvent22 = null;
        htmlEventTracer7.onManagerEvent(managerEvent22);
        org.asteriskjava.manager.event.ManagerEvent managerEvent24 = null;
        htmlEventTracer7.onManagerEvent(managerEvent24);
        org.asteriskjava.manager.event.ManagerEvent managerEvent26 = null;
        htmlEventTracer7.onManagerEvent(managerEvent26);
        org.asteriskjava.manager.event.ManagerEvent managerEvent28 = null;
        htmlEventTracer7.onManagerEvent(managerEvent28);
        org.asteriskjava.manager.event.ManagerEvent managerEvent30 = null;
        htmlEventTracer7.onManagerEvent(managerEvent30);
        org.asteriskjava.manager.event.ManagerEvent managerEvent32 = null;
        htmlEventTracer7.onManagerEvent(managerEvent32);
        org.asteriskjava.manager.event.ManagerEvent managerEvent34 = null;
        htmlEventTracer7.onManagerEvent(managerEvent34);
        org.asteriskjava.manager.event.ManagerEvent managerEvent36 = null;
        htmlEventTracer7.onManagerEvent(managerEvent36);
        org.asteriskjava.manager.event.ManagerEvent managerEvent38 = null;
        htmlEventTracer7.onManagerEvent(managerEvent38);
        org.asteriskjava.manager.event.ManagerEvent managerEvent40 = null;
        htmlEventTracer7.onManagerEvent(managerEvent40);
        org.asteriskjava.manager.event.ManagerEvent managerEvent42 = null;
        htmlEventTracer7.onManagerEvent(managerEvent42);
        // The following exception was thrown during execution in test generation
        try {
            htmlEventTracer7.write();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test9522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9522");
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer0 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer0.write();
        htmlEventTracer0.write();
        htmlEventTracer0.write();
        htmlEventTracer0.write();
        htmlEventTracer0.write();
        htmlEventTracer0.write();
        htmlEventTracer0.write();
        htmlEventTracer0.write();
        htmlEventTracer0.write();
        htmlEventTracer0.write();
        htmlEventTracer0.write();
        org.asteriskjava.manager.event.ManagerEvent managerEvent12 = null;
        htmlEventTracer0.onManagerEvent(managerEvent12);
        org.asteriskjava.manager.event.ManagerEvent managerEvent14 = null;
        htmlEventTracer0.onManagerEvent(managerEvent14);
        org.asteriskjava.manager.event.ManagerEvent managerEvent16 = null;
        htmlEventTracer0.onManagerEvent(managerEvent16);
        org.asteriskjava.manager.event.ManagerEvent managerEvent18 = null;
        htmlEventTracer0.onManagerEvent(managerEvent18);
        org.asteriskjava.manager.event.ManagerEvent managerEvent20 = null;
        htmlEventTracer0.onManagerEvent(managerEvent20);
        org.asteriskjava.manager.event.ManagerEvent managerEvent22 = null;
        htmlEventTracer0.onManagerEvent(managerEvent22);
        org.asteriskjava.manager.event.ManagerEvent managerEvent24 = null;
        htmlEventTracer0.onManagerEvent(managerEvent24);
        org.asteriskjava.manager.event.ManagerEvent managerEvent26 = null;
        htmlEventTracer0.onManagerEvent(managerEvent26);
        org.asteriskjava.manager.event.ManagerEvent managerEvent28 = null;
        htmlEventTracer0.onManagerEvent(managerEvent28);
        org.asteriskjava.manager.event.ManagerEvent managerEvent30 = null;
        htmlEventTracer0.onManagerEvent(managerEvent30);
        org.asteriskjava.manager.event.ManagerEvent managerEvent32 = null;
        htmlEventTracer0.onManagerEvent(managerEvent32);
        org.asteriskjava.manager.event.ManagerEvent managerEvent34 = null;
        htmlEventTracer0.onManagerEvent(managerEvent34);
        org.asteriskjava.manager.event.ManagerEvent managerEvent36 = null;
        htmlEventTracer0.onManagerEvent(managerEvent36);
        org.asteriskjava.manager.event.ManagerEvent managerEvent38 = null;
        htmlEventTracer0.onManagerEvent(managerEvent38);
    }

    @Test
    public void test9523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9523");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str2 = asteriskVersion1.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean4 = asteriskVersion1.isAtLeast(asteriskVersion3);
        boolean boolean5 = asteriskVersion0.equals((java.lang.Object) boolean4);
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean8 = asteriskVersion6.isAtLeast(asteriskVersion7);
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int10 = asteriskVersion6.compareTo(asteriskVersion9);
        int int11 = asteriskVersion0.compareTo(asteriskVersion9);
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion14 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int15 = asteriskVersion13.compareTo(asteriskVersion14);
        boolean boolean16 = asteriskVersion12.isAtLeast(asteriskVersion14);
        boolean boolean17 = asteriskVersion0.isAtLeast(asteriskVersion12);
        java.lang.String str18 = asteriskVersion0.toString();
        java.lang.String str19 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean22 = asteriskVersion20.isAtLeast(asteriskVersion21);
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int24 = asteriskVersion21.compareTo(asteriskVersion23);
        int int25 = asteriskVersion0.compareTo(asteriskVersion21);
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        boolean boolean28 = asteriskVersion26.equals((java.lang.Object) "Asterisk 18");
        org.asteriskjava.AsteriskVersion asteriskVersion29 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        org.asteriskjava.pbx.ActivityStatusEnum activityStatusEnum30 = org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS;
        java.lang.String str31 = activityStatusEnum30.getDefaultMessage();
        boolean boolean32 = asteriskVersion29.equals((java.lang.Object) str31);
        org.asteriskjava.AsteriskVersion asteriskVersion33 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        org.asteriskjava.AsteriskVersion asteriskVersion34 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str35 = asteriskVersion34.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean37 = asteriskVersion34.isAtLeast(asteriskVersion36);
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int41 = asteriskVersion39.compareTo(asteriskVersion40);
        boolean boolean42 = asteriskVersion38.isAtLeast(asteriskVersion40);
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean45 = asteriskVersion43.isAtLeast(asteriskVersion44);
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int47 = asteriskVersion44.compareTo(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean49 = asteriskVersion46.isAtLeast(asteriskVersion48);
        int int50 = asteriskVersion38.compareTo(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int53 = asteriskVersion51.compareTo(asteriskVersion52);
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int55 = asteriskVersion51.compareTo(asteriskVersion54);
        boolean boolean56 = asteriskVersion46.isAtLeast(asteriskVersion54);
        org.asteriskjava.AsteriskVersion asteriskVersion57 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion58 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int59 = asteriskVersion57.compareTo(asteriskVersion58);
        org.asteriskjava.AsteriskVersion asteriskVersion60 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str61 = asteriskVersion60.toString();
        boolean boolean62 = asteriskVersion58.isAtLeast(asteriskVersion60);
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion64 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int65 = asteriskVersion63.compareTo(asteriskVersion64);
        org.asteriskjava.AsteriskVersion asteriskVersion66 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str67 = asteriskVersion66.toString();
        boolean boolean68 = asteriskVersion64.isAtLeast(asteriskVersion66);
        boolean boolean70 = asteriskVersion64.equals((java.lang.Object) "0");
        boolean boolean71 = asteriskVersion58.equals((java.lang.Object) asteriskVersion64);
        boolean boolean72 = asteriskVersion54.isAtLeast(asteriskVersion58);
        int int73 = asteriskVersion36.compareTo(asteriskVersion54);
        int int74 = asteriskVersion33.compareTo(asteriskVersion54);
        boolean boolean75 = asteriskVersion29.isAtLeast(asteriskVersion54);
        int int76 = asteriskVersion26.compareTo(asteriskVersion54);
        boolean boolean77 = asteriskVersion0.equals((java.lang.Object) asteriskVersion26);
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Asterisk 11" + "'", str2, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertNotNull(asteriskVersion14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Asterisk 12" + "'", str18, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Asterisk 12" + "'", str19, "Asterisk 12");
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(asteriskVersion29);
        org.junit.Assert.assertTrue("'" + activityStatusEnum30 + "' != '" + org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS + "'", activityStatusEnum30.equals(org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS));
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Progress" + "'", str31, "Progress");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(asteriskVersion33);
        org.junit.Assert.assertNotNull(asteriskVersion34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Asterisk 11" + "'", str35, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(asteriskVersion57);
        org.junit.Assert.assertNotNull(asteriskVersion58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Asterisk 1.0" + "'", str61, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertNotNull(asteriskVersion64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 1 + "'", int65 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Asterisk 1.0" + "'", str67, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 1 + "'", int73 == 1);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test9524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9524");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean2 = asteriskVersion0.isAtLeast(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int4 = asteriskVersion0.compareTo(asteriskVersion3);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str6 = asteriskVersion5.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int9 = asteriskVersion7.compareTo(asteriskVersion8);
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int11 = asteriskVersion7.compareTo(asteriskVersion10);
        org.asteriskjava.pbx.TechType techType12 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean13 = asteriskVersion7.equals((java.lang.Object) techType12);
        org.asteriskjava.AsteriskVersion asteriskVersion14 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        boolean boolean15 = asteriskVersion7.equals((java.lang.Object) asteriskVersion14);
        int int16 = asteriskVersion5.compareTo(asteriskVersion7);
        boolean boolean17 = asteriskVersion0.isAtLeast(asteriskVersion5);
        org.asteriskjava.pbx.ListenerPriority listenerPriority18 = org.asteriskjava.pbx.ListenerPriority.REALTIME;
        org.asteriskjava.pbx.ListenerPriority listenerPriority19 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        int int20 = listenerPriority18.compare(listenerPriority19);
        org.asteriskjava.pbx.ListenerPriority listenerPriority21 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority22 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int23 = listenerPriority21.compare(listenerPriority22);
        org.asteriskjava.pbx.ListenerPriority listenerPriority24 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int25 = listenerPriority22.compare(listenerPriority24);
        org.asteriskjava.pbx.ListenerPriority listenerPriority26 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority27 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int28 = listenerPriority26.compare(listenerPriority27);
        org.asteriskjava.pbx.ListenerPriority listenerPriority29 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority30 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int31 = listenerPriority29.compare(listenerPriority30);
        org.asteriskjava.pbx.ListenerPriority listenerPriority32 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int33 = listenerPriority30.compare(listenerPriority32);
        int int34 = listenerPriority27.compare(listenerPriority30);
        org.asteriskjava.pbx.ListenerPriority listenerPriority35 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority36 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int37 = listenerPriority35.compare(listenerPriority36);
        int int38 = listenerPriority27.compare(listenerPriority35);
        int int39 = listenerPriority24.compare(listenerPriority35);
        int int40 = listenerPriority19.compare(listenerPriority24);
        java.lang.Class<?> wildcardClass41 = listenerPriority19.getClass();
        boolean boolean42 = asteriskVersion5.equals((java.lang.Object) wildcardClass41);
        java.lang.String str43 = asteriskVersion5.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Asterisk 1.0" + "'", str6, "Asterisk 1.0");
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + techType12 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType12.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(asteriskVersion14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority18 + "' != '" + org.asteriskjava.pbx.ListenerPriority.REALTIME + "'", listenerPriority18.equals(org.asteriskjava.pbx.ListenerPriority.REALTIME));
        org.junit.Assert.assertTrue("'" + listenerPriority19 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority19.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-92) + "'", int20 == (-92));
        org.junit.Assert.assertTrue("'" + listenerPriority21 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority21.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority22 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority22.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority24 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority24.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-4) + "'", int25 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority26 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority26.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority27 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority27.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2 + "'", int28 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority29 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority29.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority30 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority30.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority32 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority32.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-4) + "'", int33 == (-4));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + listenerPriority35 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority35.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority36 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority36.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2 + "'", int37 == 2);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-2) + "'", int38 == (-2));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-2) + "'", int40 == (-2));
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Asterisk 1.0" + "'", str43, "Asterisk 1.0");
    }

    @Test
    public void test9525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9525");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str1 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean3 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int5 = asteriskVersion0.compareTo(asteriskVersion4);
        java.lang.String str6 = asteriskVersion4.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean9 = asteriskVersion7.isAtLeast(asteriskVersion8);
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean12 = asteriskVersion10.isAtLeast(asteriskVersion11);
        int int13 = asteriskVersion7.compareTo(asteriskVersion11);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer14 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer14.write();
        boolean boolean16 = asteriskVersion11.equals((java.lang.Object) htmlEventTracer14);
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str18 = asteriskVersion17.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion19 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean20 = asteriskVersion17.isAtLeast(asteriskVersion19);
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int22 = asteriskVersion17.compareTo(asteriskVersion21);
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int24 = asteriskVersion21.compareTo(asteriskVersion23);
        boolean boolean25 = asteriskVersion11.isAtLeast(asteriskVersion21);
        int int26 = asteriskVersion4.compareTo(asteriskVersion21);
        java.lang.String str27 = asteriskVersion4.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion29 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean30 = asteriskVersion28.isAtLeast(asteriskVersion29);
        org.asteriskjava.AsteriskVersion asteriskVersion31 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean33 = asteriskVersion31.isAtLeast(asteriskVersion32);
        int int34 = asteriskVersion28.compareTo(asteriskVersion32);
        org.asteriskjava.AsteriskVersion asteriskVersion35 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean37 = asteriskVersion35.isAtLeast(asteriskVersion36);
        boolean boolean38 = asteriskVersion32.isAtLeast(asteriskVersion36);
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str40 = asteriskVersion39.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion41 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean42 = asteriskVersion39.isAtLeast(asteriskVersion41);
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int44 = asteriskVersion39.compareTo(asteriskVersion43);
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_15;
        boolean boolean46 = asteriskVersion39.isAtLeast(asteriskVersion45);
        int int47 = asteriskVersion32.compareTo(asteriskVersion39);
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        java.lang.Object obj49 = null;
        boolean boolean50 = asteriskVersion48.equals(obj49);
        org.asteriskjava.pbx.TechType techType51 = org.asteriskjava.pbx.TechType.LOCAL;
        java.lang.Class<?> wildcardClass52 = techType51.getClass();
        boolean boolean53 = asteriskVersion48.equals((java.lang.Object) techType51);
        int int54 = asteriskVersion39.compareTo(asteriskVersion48);
        java.lang.String str55 = asteriskVersion39.toString();
        boolean boolean56 = asteriskVersion4.equals((java.lang.Object) asteriskVersion39);
        org.asteriskjava.AsteriskVersion asteriskVersion57 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion58 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str59 = asteriskVersion58.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion60 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean61 = asteriskVersion58.isAtLeast(asteriskVersion60);
        boolean boolean62 = asteriskVersion57.equals((java.lang.Object) boolean61);
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion64 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean65 = asteriskVersion63.isAtLeast(asteriskVersion64);
        org.asteriskjava.AsteriskVersion asteriskVersion66 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int67 = asteriskVersion63.compareTo(asteriskVersion66);
        int int68 = asteriskVersion57.compareTo(asteriskVersion66);
        org.asteriskjava.pbx.ActivityStatusEnum activityStatusEnum69 = org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS;
        java.lang.String str70 = activityStatusEnum69.getDefaultMessage();
        java.lang.String str71 = activityStatusEnum69.getDefaultMessage();
        java.lang.String str72 = activityStatusEnum69.getDefaultMessage();
        java.lang.String str73 = activityStatusEnum69.getDefaultMessage();
        java.lang.String str74 = activityStatusEnum69.getDefaultMessage();
        java.lang.String str75 = activityStatusEnum69.getDefaultMessage();
        java.lang.Class<?> wildcardClass76 = activityStatusEnum69.getClass();
        boolean boolean77 = asteriskVersion66.equals((java.lang.Object) wildcardClass76);
        java.lang.Class<?> wildcardClass78 = asteriskVersion66.getClass();
        boolean boolean79 = asteriskVersion4.equals((java.lang.Object) wildcardClass78);
        java.lang.String str80 = asteriskVersion4.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Asterisk 11" + "'", str1, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Asterisk 16" + "'", str6, "Asterisk 16");
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Asterisk 11" + "'", str18, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Asterisk 16" + "'", str27, "Asterisk 16");
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertNotNull(asteriskVersion29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(asteriskVersion31);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion35);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Asterisk 11" + "'", str40, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + techType51 + "' != '" + org.asteriskjava.pbx.TechType.LOCAL + "'", techType51.equals(org.asteriskjava.pbx.TechType.LOCAL));
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Asterisk 11" + "'", str55, "Asterisk 11");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(asteriskVersion57);
        org.junit.Assert.assertNotNull(asteriskVersion58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Asterisk 11" + "'", str59, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertNotNull(asteriskVersion64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(asteriskVersion66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + activityStatusEnum69 + "' != '" + org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS + "'", activityStatusEnum69.equals(org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Progress" + "'", str70, "Progress");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Progress" + "'", str71, "Progress");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Progress" + "'", str72, "Progress");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Progress" + "'", str73, "Progress");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Progress" + "'", str74, "Progress");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Progress" + "'", str75, "Progress");
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Asterisk 16" + "'", str80, "Asterisk 16");
    }

    @Test
    public void test9526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9526");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str1 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean3 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int5 = asteriskVersion0.compareTo(asteriskVersion4);
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean8 = asteriskVersion6.isAtLeast(asteriskVersion7);
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int10 = asteriskVersion6.compareTo(asteriskVersion9);
        org.asteriskjava.pbx.DTMFTone dTMFTone11 = org.asteriskjava.pbx.DTMFTone.STAR;
        java.lang.String str12 = dTMFTone11.toString();
        java.lang.String str13 = dTMFTone11.toString();
        java.lang.String str14 = dTMFTone11.toString();
        java.lang.String str15 = dTMFTone11.toString();
        boolean boolean16 = asteriskVersion6.equals((java.lang.Object) str15);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer17 = new org.asteriskjava.tools.HtmlEventTracer();
        org.asteriskjava.manager.event.ManagerEvent managerEvent18 = null;
        htmlEventTracer17.onManagerEvent(managerEvent18);
        java.lang.Class<?> wildcardClass20 = htmlEventTracer17.getClass();
        boolean boolean21 = asteriskVersion6.equals((java.lang.Object) htmlEventTracer17);
        boolean boolean22 = asteriskVersion0.isAtLeast(asteriskVersion6);
        java.lang.String str23 = asteriskVersion6.toString();
        java.lang.String str24 = asteriskVersion6.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion25 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str27 = asteriskVersion26.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean29 = asteriskVersion26.isAtLeast(asteriskVersion28);
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        java.lang.String str31 = asteriskVersion30.toString();
        int int32 = asteriskVersion26.compareTo(asteriskVersion30);
        boolean boolean33 = asteriskVersion25.isAtLeast(asteriskVersion30);
        org.asteriskjava.AsteriskVersion asteriskVersion34 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion35 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int37 = asteriskVersion35.compareTo(asteriskVersion36);
        boolean boolean38 = asteriskVersion34.isAtLeast(asteriskVersion36);
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean41 = asteriskVersion39.isAtLeast(asteriskVersion40);
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int43 = asteriskVersion40.compareTo(asteriskVersion42);
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean45 = asteriskVersion42.isAtLeast(asteriskVersion44);
        int int46 = asteriskVersion34.compareTo(asteriskVersion42);
        org.asteriskjava.AsteriskVersion asteriskVersion47 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion49 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int50 = asteriskVersion48.compareTo(asteriskVersion49);
        boolean boolean51 = asteriskVersion47.isAtLeast(asteriskVersion49);
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion53 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean54 = asteriskVersion52.isAtLeast(asteriskVersion53);
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int56 = asteriskVersion53.compareTo(asteriskVersion55);
        org.asteriskjava.AsteriskVersion asteriskVersion57 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean58 = asteriskVersion55.isAtLeast(asteriskVersion57);
        int int59 = asteriskVersion47.compareTo(asteriskVersion55);
        boolean boolean60 = asteriskVersion34.isAtLeast(asteriskVersion55);
        boolean boolean62 = asteriskVersion34.equals((java.lang.Object) 0);
        int int63 = asteriskVersion30.compareTo(asteriskVersion34);
        org.asteriskjava.AsteriskVersion asteriskVersion64 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion65 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int66 = asteriskVersion64.compareTo(asteriskVersion65);
        org.asteriskjava.AsteriskVersion asteriskVersion67 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int68 = asteriskVersion64.compareTo(asteriskVersion67);
        java.lang.String str69 = asteriskVersion67.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion70 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion71 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int72 = asteriskVersion70.compareTo(asteriskVersion71);
        org.asteriskjava.AsteriskVersion asteriskVersion73 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int74 = asteriskVersion70.compareTo(asteriskVersion73);
        org.asteriskjava.pbx.TechType techType75 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean76 = asteriskVersion70.equals((java.lang.Object) techType75);
        boolean boolean77 = asteriskVersion67.isAtLeast(asteriskVersion70);
        java.lang.String str78 = asteriskVersion70.toString();
        boolean boolean79 = asteriskVersion34.isAtLeast(asteriskVersion70);
        int int80 = asteriskVersion6.compareTo(asteriskVersion34);
        java.lang.String str81 = asteriskVersion34.toString();
        java.lang.Class<?> wildcardClass82 = asteriskVersion34.getClass();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Asterisk 11" + "'", str1, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + dTMFTone11 + "' != '" + org.asteriskjava.pbx.DTMFTone.STAR + "'", dTMFTone11.equals(org.asteriskjava.pbx.DTMFTone.STAR));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "*" + "'", str12, "*");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "*" + "'", str13, "*");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "*" + "'", str14, "*");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "*" + "'", str15, "*");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Asterisk 20" + "'", str23, "Asterisk 20");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Asterisk 20" + "'", str24, "Asterisk 20");
        org.junit.Assert.assertNotNull(asteriskVersion25);
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Asterisk 11" + "'", str27, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Asterisk 14" + "'", str31, "Asterisk 14");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(asteriskVersion34);
        org.junit.Assert.assertNotNull(asteriskVersion35);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion47);
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertNotNull(asteriskVersion49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertNotNull(asteriskVersion53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion64);
        org.junit.Assert.assertNotNull(asteriskVersion65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Asterisk 1.8" + "'", str69, "Asterisk 1.8");
        org.junit.Assert.assertNotNull(asteriskVersion70);
        org.junit.Assert.assertNotNull(asteriskVersion71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + techType75 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType75.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Asterisk 13" + "'", str78, "Asterisk 13");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Asterisk 12" + "'", str81, "Asterisk 12");
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test9527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9527");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean2 = asteriskVersion0.isAtLeast(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int4 = asteriskVersion0.compareTo(asteriskVersion3);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int8 = asteriskVersion6.compareTo(asteriskVersion7);
        boolean boolean9 = asteriskVersion5.isAtLeast(asteriskVersion7);
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean12 = asteriskVersion10.isAtLeast(asteriskVersion11);
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int14 = asteriskVersion11.compareTo(asteriskVersion13);
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean16 = asteriskVersion13.isAtLeast(asteriskVersion15);
        int int17 = asteriskVersion5.compareTo(asteriskVersion13);
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str19 = asteriskVersion18.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean21 = asteriskVersion18.isAtLeast(asteriskVersion20);
        org.asteriskjava.AsteriskVersion asteriskVersion22 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean24 = asteriskVersion22.isAtLeast(asteriskVersion23);
        boolean boolean25 = asteriskVersion20.equals((java.lang.Object) asteriskVersion22);
        boolean boolean26 = asteriskVersion5.isAtLeast(asteriskVersion20);
        boolean boolean27 = asteriskVersion0.isAtLeast(asteriskVersion20);
        java.lang.String str28 = asteriskVersion20.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion29 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int31 = asteriskVersion29.compareTo(asteriskVersion30);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int33 = asteriskVersion29.compareTo(asteriskVersion32);
        java.lang.String str34 = asteriskVersion32.toString();
        java.lang.String str35 = asteriskVersion32.toString();
        int int36 = asteriskVersion20.compareTo(asteriskVersion32);
        java.lang.String str37 = asteriskVersion20.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int41 = asteriskVersion39.compareTo(asteriskVersion40);
        boolean boolean42 = asteriskVersion38.isAtLeast(asteriskVersion40);
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        boolean boolean44 = asteriskVersion38.isAtLeast(asteriskVersion43);
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion47 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int48 = asteriskVersion46.compareTo(asteriskVersion47);
        boolean boolean49 = asteriskVersion45.isAtLeast(asteriskVersion47);
        org.asteriskjava.AsteriskVersion asteriskVersion50 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean52 = asteriskVersion50.isAtLeast(asteriskVersion51);
        org.asteriskjava.AsteriskVersion asteriskVersion53 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int54 = asteriskVersion51.compareTo(asteriskVersion53);
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean56 = asteriskVersion53.isAtLeast(asteriskVersion55);
        int int57 = asteriskVersion45.compareTo(asteriskVersion53);
        int int58 = asteriskVersion38.compareTo(asteriskVersion45);
        boolean boolean59 = asteriskVersion20.equals((java.lang.Object) int58);
        java.lang.Class<?> wildcardClass60 = asteriskVersion20.getClass();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Asterisk 11" + "'", str19, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(asteriskVersion22);
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Asterisk 19" + "'", str28, "Asterisk 19");
        org.junit.Assert.assertNotNull(asteriskVersion29);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Asterisk 1.6" + "'", str34, "Asterisk 1.6");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Asterisk 1.6" + "'", str35, "Asterisk 1.6");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Asterisk 19" + "'", str37, "Asterisk 19");
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertNotNull(asteriskVersion47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(asteriskVersion50);
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(asteriskVersion53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test9528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9528");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        java.lang.String str1 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        int int3 = asteriskVersion0.compareTo(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str6 = asteriskVersion5.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean8 = asteriskVersion5.isAtLeast(asteriskVersion7);
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean11 = asteriskVersion9.isAtLeast(asteriskVersion10);
        boolean boolean12 = asteriskVersion7.equals((java.lang.Object) asteriskVersion9);
        int int13 = asteriskVersion4.compareTo(asteriskVersion9);
        org.asteriskjava.AsteriskVersion asteriskVersion14 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str16 = asteriskVersion15.toString();
        org.asteriskjava.pbx.TechType techType17 = org.asteriskjava.pbx.TechType.UNKNOWN;
        java.lang.Class<?> wildcardClass18 = techType17.getClass();
        boolean boolean19 = asteriskVersion15.equals((java.lang.Object) wildcardClass18);
        int int20 = asteriskVersion14.compareTo(asteriskVersion15);
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion22 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int23 = asteriskVersion21.compareTo(asteriskVersion22);
        org.asteriskjava.AsteriskVersion asteriskVersion24 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str25 = asteriskVersion24.toString();
        boolean boolean26 = asteriskVersion22.isAtLeast(asteriskVersion24);
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int29 = asteriskVersion27.compareTo(asteriskVersion28);
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str31 = asteriskVersion30.toString();
        boolean boolean32 = asteriskVersion28.isAtLeast(asteriskVersion30);
        boolean boolean34 = asteriskVersion28.equals((java.lang.Object) "0");
        boolean boolean35 = asteriskVersion22.equals((java.lang.Object) asteriskVersion28);
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int40 = asteriskVersion38.compareTo(asteriskVersion39);
        boolean boolean41 = asteriskVersion37.isAtLeast(asteriskVersion39);
        int int42 = asteriskVersion36.compareTo(asteriskVersion37);
        int int43 = asteriskVersion22.compareTo(asteriskVersion36);
        java.lang.String str44 = asteriskVersion22.toString();
        boolean boolean45 = asteriskVersion14.equals((java.lang.Object) asteriskVersion22);
        boolean boolean46 = asteriskVersion9.isAtLeast(asteriskVersion22);
        java.lang.String str47 = asteriskVersion22.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion49 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean50 = asteriskVersion48.isAtLeast(asteriskVersion49);
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean53 = asteriskVersion51.isAtLeast(asteriskVersion52);
        int int54 = asteriskVersion48.compareTo(asteriskVersion52);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer55 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer55.write();
        boolean boolean57 = asteriskVersion52.equals((java.lang.Object) htmlEventTracer55);
        org.asteriskjava.AsteriskVersion asteriskVersion58 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str59 = asteriskVersion58.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion60 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean61 = asteriskVersion58.isAtLeast(asteriskVersion60);
        org.asteriskjava.AsteriskVersion asteriskVersion62 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int63 = asteriskVersion58.compareTo(asteriskVersion62);
        org.asteriskjava.AsteriskVersion asteriskVersion64 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int65 = asteriskVersion62.compareTo(asteriskVersion64);
        boolean boolean66 = asteriskVersion52.isAtLeast(asteriskVersion62);
        boolean boolean67 = asteriskVersion22.isAtLeast(asteriskVersion62);
        java.lang.String str68 = asteriskVersion22.toString();
        java.lang.String str69 = asteriskVersion22.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion70 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str71 = asteriskVersion70.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion72 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean73 = asteriskVersion70.isAtLeast(asteriskVersion72);
        org.asteriskjava.AsteriskVersion asteriskVersion74 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion75 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int76 = asteriskVersion74.compareTo(asteriskVersion75);
        boolean boolean77 = asteriskVersion70.isAtLeast(asteriskVersion74);
        org.asteriskjava.AsteriskVersion asteriskVersion78 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion79 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int80 = asteriskVersion78.compareTo(asteriskVersion79);
        org.asteriskjava.AsteriskVersion asteriskVersion81 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str82 = asteriskVersion81.toString();
        boolean boolean83 = asteriskVersion79.isAtLeast(asteriskVersion81);
        boolean boolean84 = asteriskVersion74.isAtLeast(asteriskVersion79);
        java.lang.Class<?> wildcardClass85 = asteriskVersion79.getClass();
        boolean boolean86 = asteriskVersion22.equals((java.lang.Object) wildcardClass85);
        int int87 = asteriskVersion2.compareTo(asteriskVersion22);
        java.lang.String str88 = asteriskVersion2.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Asterisk 10" + "'", str1, "Asterisk 10");
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Asterisk 11" + "'", str6, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion14);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Asterisk 1.0" + "'", str16, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + techType17 + "' != '" + org.asteriskjava.pbx.TechType.UNKNOWN + "'", techType17.equals(org.asteriskjava.pbx.TechType.UNKNOWN));
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertNotNull(asteriskVersion22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Asterisk 1.0" + "'", str25, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Asterisk 1.0" + "'", str31, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Asterisk 16" + "'", str44, "Asterisk 16");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Asterisk 16" + "'", str47, "Asterisk 16");
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertNotNull(asteriskVersion49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(asteriskVersion58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Asterisk 11" + "'", str59, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(asteriskVersion62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Asterisk 16" + "'", str68, "Asterisk 16");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Asterisk 16" + "'", str69, "Asterisk 16");
        org.junit.Assert.assertNotNull(asteriskVersion70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Asterisk 11" + "'", str71, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(asteriskVersion74);
        org.junit.Assert.assertNotNull(asteriskVersion75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(asteriskVersion78);
        org.junit.Assert.assertNotNull(asteriskVersion79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Asterisk 1.0" + "'", str82, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Asterisk 17" + "'", str88, "Asterisk 17");
    }

    @Test
    public void test9529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9529");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean2 = asteriskVersion0.isAtLeast(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean5 = asteriskVersion3.isAtLeast(asteriskVersion4);
        int int6 = asteriskVersion0.compareTo(asteriskVersion4);
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean9 = asteriskVersion7.isAtLeast(asteriskVersion8);
        boolean boolean10 = asteriskVersion4.isAtLeast(asteriskVersion8);
        org.asteriskjava.pbx.TechType techType11 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean12 = asteriskVersion4.equals((java.lang.Object) techType11);
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        int int14 = asteriskVersion4.compareTo(asteriskVersion13);
        java.lang.String str15 = asteriskVersion4.toString();
        org.asteriskjava.pbx.DTMFTone dTMFTone16 = org.asteriskjava.pbx.DTMFTone.EIGHT;
        java.lang.String str17 = dTMFTone16.toString();
        java.lang.String str18 = dTMFTone16.toString();
        java.lang.String str19 = dTMFTone16.toString();
        java.lang.String str20 = dTMFTone16.toString();
        java.lang.String str21 = dTMFTone16.toString();
        java.lang.String str22 = dTMFTone16.toString();
        java.lang.String str23 = dTMFTone16.toString();
        boolean boolean24 = asteriskVersion4.equals((java.lang.Object) dTMFTone16);
        java.lang.String str25 = dTMFTone16.toString();
        java.lang.String str26 = dTMFTone16.toString();
        java.lang.String str27 = dTMFTone16.toString();
        java.lang.String str28 = dTMFTone16.toString();
        java.lang.String str29 = dTMFTone16.toString();
        java.lang.String str30 = dTMFTone16.toString();
        java.lang.String str31 = dTMFTone16.toString();
        java.lang.String str32 = dTMFTone16.toString();
        java.lang.String str33 = dTMFTone16.toString();
        java.lang.String str34 = dTMFTone16.toString();
        java.lang.String str35 = dTMFTone16.toString();
        java.lang.String str36 = dTMFTone16.toString();
        java.lang.String str37 = dTMFTone16.toString();
        java.lang.String str38 = dTMFTone16.toString();
        java.lang.String str39 = dTMFTone16.toString();
        java.lang.String str40 = dTMFTone16.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + techType11 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType11.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Asterisk 20" + "'", str15, "Asterisk 20");
        org.junit.Assert.assertTrue("'" + dTMFTone16 + "' != '" + org.asteriskjava.pbx.DTMFTone.EIGHT + "'", dTMFTone16.equals(org.asteriskjava.pbx.DTMFTone.EIGHT));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "8" + "'", str17, "8");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "8" + "'", str18, "8");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "8" + "'", str19, "8");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "8" + "'", str20, "8");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "8" + "'", str21, "8");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "8" + "'", str22, "8");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "8" + "'", str23, "8");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "8" + "'", str25, "8");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "8" + "'", str26, "8");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "8" + "'", str27, "8");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "8" + "'", str28, "8");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "8" + "'", str29, "8");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "8" + "'", str30, "8");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "8" + "'", str31, "8");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "8" + "'", str32, "8");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "8" + "'", str33, "8");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "8" + "'", str34, "8");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "8" + "'", str35, "8");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "8" + "'", str36, "8");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "8" + "'", str37, "8");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "8" + "'", str38, "8");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "8" + "'", str39, "8");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "8" + "'", str40, "8");
    }

    @Test
    public void test9530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9530");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        boolean boolean2 = asteriskVersion0.equals((java.lang.Object) "Asterisk 18");
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int5 = asteriskVersion3.compareTo(asteriskVersion4);
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str7 = asteriskVersion6.toString();
        boolean boolean8 = asteriskVersion4.isAtLeast(asteriskVersion6);
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int11 = asteriskVersion9.compareTo(asteriskVersion10);
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str13 = asteriskVersion12.toString();
        boolean boolean14 = asteriskVersion10.isAtLeast(asteriskVersion12);
        boolean boolean16 = asteriskVersion10.equals((java.lang.Object) "0");
        boolean boolean17 = asteriskVersion4.equals((java.lang.Object) asteriskVersion10);
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion19 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int22 = asteriskVersion20.compareTo(asteriskVersion21);
        boolean boolean23 = asteriskVersion19.isAtLeast(asteriskVersion21);
        int int24 = asteriskVersion18.compareTo(asteriskVersion19);
        int int25 = asteriskVersion4.compareTo(asteriskVersion18);
        java.lang.String str26 = asteriskVersion4.toString();
        boolean boolean27 = asteriskVersion0.isAtLeast(asteriskVersion4);
        java.lang.String str28 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion29 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int31 = asteriskVersion29.compareTo(asteriskVersion30);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int33 = asteriskVersion29.compareTo(asteriskVersion32);
        org.asteriskjava.AsteriskVersion asteriskVersion34 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion35 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int36 = asteriskVersion34.compareTo(asteriskVersion35);
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int38 = asteriskVersion34.compareTo(asteriskVersion37);
        boolean boolean39 = asteriskVersion32.isAtLeast(asteriskVersion37);
        int int40 = asteriskVersion0.compareTo(asteriskVersion32);
        org.asteriskjava.AsteriskVersion asteriskVersion41 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int43 = asteriskVersion41.compareTo(asteriskVersion42);
        java.lang.String str44 = asteriskVersion42.toString();
        int int45 = asteriskVersion0.compareTo(asteriskVersion42);
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion47 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion49 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int50 = asteriskVersion48.compareTo(asteriskVersion49);
        boolean boolean51 = asteriskVersion47.isAtLeast(asteriskVersion49);
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion53 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int54 = asteriskVersion52.compareTo(asteriskVersion53);
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int56 = asteriskVersion52.compareTo(asteriskVersion55);
        org.asteriskjava.pbx.TechType techType57 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean58 = asteriskVersion52.equals((java.lang.Object) techType57);
        boolean boolean59 = asteriskVersion49.isAtLeast(asteriskVersion52);
        boolean boolean60 = asteriskVersion46.isAtLeast(asteriskVersion49);
        org.asteriskjava.AsteriskVersion asteriskVersion61 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion62 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int64 = asteriskVersion62.compareTo(asteriskVersion63);
        boolean boolean65 = asteriskVersion61.isAtLeast(asteriskVersion63);
        org.asteriskjava.AsteriskVersion asteriskVersion66 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion67 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean68 = asteriskVersion66.isAtLeast(asteriskVersion67);
        org.asteriskjava.AsteriskVersion asteriskVersion69 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int70 = asteriskVersion67.compareTo(asteriskVersion69);
        org.asteriskjava.AsteriskVersion asteriskVersion71 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean72 = asteriskVersion69.isAtLeast(asteriskVersion71);
        int int73 = asteriskVersion61.compareTo(asteriskVersion69);
        org.asteriskjava.AsteriskVersion asteriskVersion74 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion75 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion76 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int77 = asteriskVersion75.compareTo(asteriskVersion76);
        boolean boolean78 = asteriskVersion74.isAtLeast(asteriskVersion76);
        org.asteriskjava.AsteriskVersion asteriskVersion79 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion80 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean81 = asteriskVersion79.isAtLeast(asteriskVersion80);
        org.asteriskjava.AsteriskVersion asteriskVersion82 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int83 = asteriskVersion80.compareTo(asteriskVersion82);
        org.asteriskjava.AsteriskVersion asteriskVersion84 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean85 = asteriskVersion82.isAtLeast(asteriskVersion84);
        int int86 = asteriskVersion74.compareTo(asteriskVersion82);
        boolean boolean87 = asteriskVersion61.isAtLeast(asteriskVersion82);
        boolean boolean89 = asteriskVersion61.equals((java.lang.Object) 0);
        boolean boolean91 = asteriskVersion61.equals((java.lang.Object) "Asterisk 11");
        int int92 = asteriskVersion49.compareTo(asteriskVersion61);
        java.lang.String str93 = asteriskVersion61.toString();
        int int94 = asteriskVersion0.compareTo(asteriskVersion61);
        java.lang.String str95 = asteriskVersion61.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Asterisk 1.0" + "'", str7, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Asterisk 1.0" + "'", str13, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertNotNull(asteriskVersion19);
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Asterisk 16" + "'", str26, "Asterisk 16");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Asterisk 17" + "'", str28, "Asterisk 17");
        org.junit.Assert.assertNotNull(asteriskVersion29);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion34);
        org.junit.Assert.assertNotNull(asteriskVersion35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion41);
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Asterisk 16" + "'", str44, "Asterisk 16");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertNotNull(asteriskVersion47);
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertNotNull(asteriskVersion49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertNotNull(asteriskVersion53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + techType57 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType57.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(asteriskVersion61);
        org.junit.Assert.assertNotNull(asteriskVersion62);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(asteriskVersion66);
        org.junit.Assert.assertNotNull(asteriskVersion67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(asteriskVersion69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion74);
        org.junit.Assert.assertNotNull(asteriskVersion75);
        org.junit.Assert.assertNotNull(asteriskVersion76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(asteriskVersion79);
        org.junit.Assert.assertNotNull(asteriskVersion80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(asteriskVersion82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Asterisk 12" + "'", str93, "Asterisk 12");
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "Asterisk 12" + "'", str95, "Asterisk 12");
    }

    @Test
    public void test9531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9531");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str2 = asteriskVersion1.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean4 = asteriskVersion1.isAtLeast(asteriskVersion3);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int8 = asteriskVersion6.compareTo(asteriskVersion7);
        boolean boolean9 = asteriskVersion5.isAtLeast(asteriskVersion7);
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean12 = asteriskVersion10.isAtLeast(asteriskVersion11);
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int14 = asteriskVersion11.compareTo(asteriskVersion13);
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean16 = asteriskVersion13.isAtLeast(asteriskVersion15);
        int int17 = asteriskVersion5.compareTo(asteriskVersion13);
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion19 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int20 = asteriskVersion18.compareTo(asteriskVersion19);
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int22 = asteriskVersion18.compareTo(asteriskVersion21);
        boolean boolean23 = asteriskVersion13.isAtLeast(asteriskVersion21);
        org.asteriskjava.AsteriskVersion asteriskVersion24 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion25 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int26 = asteriskVersion24.compareTo(asteriskVersion25);
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str28 = asteriskVersion27.toString();
        boolean boolean29 = asteriskVersion25.isAtLeast(asteriskVersion27);
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion31 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int32 = asteriskVersion30.compareTo(asteriskVersion31);
        org.asteriskjava.AsteriskVersion asteriskVersion33 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str34 = asteriskVersion33.toString();
        boolean boolean35 = asteriskVersion31.isAtLeast(asteriskVersion33);
        boolean boolean37 = asteriskVersion31.equals((java.lang.Object) "0");
        boolean boolean38 = asteriskVersion25.equals((java.lang.Object) asteriskVersion31);
        boolean boolean39 = asteriskVersion21.isAtLeast(asteriskVersion25);
        int int40 = asteriskVersion3.compareTo(asteriskVersion21);
        int int41 = asteriskVersion0.compareTo(asteriskVersion21);
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int44 = asteriskVersion42.compareTo(asteriskVersion43);
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int46 = asteriskVersion42.compareTo(asteriskVersion45);
        org.asteriskjava.pbx.TechType techType47 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean48 = asteriskVersion42.equals((java.lang.Object) techType47);
        org.asteriskjava.AsteriskVersion asteriskVersion49 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        boolean boolean50 = asteriskVersion42.equals((java.lang.Object) asteriskVersion49);
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean53 = asteriskVersion51.isAtLeast(asteriskVersion52);
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int55 = asteriskVersion51.compareTo(asteriskVersion54);
        int int56 = asteriskVersion49.compareTo(asteriskVersion54);
        boolean boolean57 = asteriskVersion0.isAtLeast(asteriskVersion49);
        org.asteriskjava.AsteriskVersion asteriskVersion58 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion59 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int60 = asteriskVersion58.compareTo(asteriskVersion59);
        org.asteriskjava.AsteriskVersion asteriskVersion61 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int62 = asteriskVersion58.compareTo(asteriskVersion61);
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion64 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean65 = asteriskVersion63.isAtLeast(asteriskVersion64);
        org.asteriskjava.AsteriskVersion asteriskVersion66 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int67 = asteriskVersion63.compareTo(asteriskVersion66);
        boolean boolean68 = asteriskVersion61.equals((java.lang.Object) int67);
        java.lang.Class<?> wildcardClass69 = asteriskVersion61.getClass();
        boolean boolean70 = asteriskVersion0.equals((java.lang.Object) wildcardClass69);
        org.asteriskjava.AsteriskVersion asteriskVersion71 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion72 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str73 = asteriskVersion72.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion74 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean75 = asteriskVersion72.isAtLeast(asteriskVersion74);
        boolean boolean76 = asteriskVersion71.equals((java.lang.Object) boolean75);
        org.asteriskjava.AsteriskVersion asteriskVersion77 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion78 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean79 = asteriskVersion77.isAtLeast(asteriskVersion78);
        org.asteriskjava.AsteriskVersion asteriskVersion80 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int81 = asteriskVersion77.compareTo(asteriskVersion80);
        int int82 = asteriskVersion71.compareTo(asteriskVersion80);
        java.lang.String str83 = asteriskVersion80.toString();
        boolean boolean84 = asteriskVersion0.isAtLeast(asteriskVersion80);
        java.lang.String str85 = asteriskVersion80.toString();
        java.lang.Class<?> wildcardClass86 = asteriskVersion80.getClass();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Asterisk 11" + "'", str2, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertNotNull(asteriskVersion19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(asteriskVersion24);
        org.junit.Assert.assertNotNull(asteriskVersion25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Asterisk 1.0" + "'", str28, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertNotNull(asteriskVersion31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Asterisk 1.0" + "'", str34, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 1 + "'", int46 == 1);
        org.junit.Assert.assertTrue("'" + techType47 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType47.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(asteriskVersion49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(asteriskVersion58);
        org.junit.Assert.assertNotNull(asteriskVersion59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertNotNull(asteriskVersion64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(asteriskVersion66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(asteriskVersion71);
        org.junit.Assert.assertNotNull(asteriskVersion72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Asterisk 11" + "'", str73, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(asteriskVersion77);
        org.junit.Assert.assertNotNull(asteriskVersion78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(asteriskVersion80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Asterisk 11" + "'", str83, "Asterisk 11");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Asterisk 11" + "'", str85, "Asterisk 11");
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test9532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9532");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str1 = asteriskVersion0.toString();
        org.asteriskjava.pbx.TechType techType2 = org.asteriskjava.pbx.TechType.UNKNOWN;
        java.lang.Class<?> wildcardClass3 = techType2.getClass();
        boolean boolean4 = asteriskVersion0.equals((java.lang.Object) wildcardClass3);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int7 = asteriskVersion5.compareTo(asteriskVersion6);
        java.lang.String str8 = asteriskVersion5.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        java.lang.String str10 = asteriskVersion9.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        int int12 = asteriskVersion9.compareTo(asteriskVersion11);
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion14 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean15 = asteriskVersion13.isAtLeast(asteriskVersion14);
        org.asteriskjava.AsteriskVersion asteriskVersion16 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean18 = asteriskVersion16.isAtLeast(asteriskVersion17);
        int int19 = asteriskVersion13.compareTo(asteriskVersion17);
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean22 = asteriskVersion20.isAtLeast(asteriskVersion21);
        boolean boolean23 = asteriskVersion17.isAtLeast(asteriskVersion21);
        org.asteriskjava.pbx.ListenerPriority listenerPriority24 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean25 = asteriskVersion17.equals((java.lang.Object) listenerPriority24);
        boolean boolean26 = asteriskVersion11.equals((java.lang.Object) asteriskVersion17);
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int29 = asteriskVersion27.compareTo(asteriskVersion28);
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str31 = asteriskVersion30.toString();
        boolean boolean32 = asteriskVersion28.isAtLeast(asteriskVersion30);
        boolean boolean34 = asteriskVersion28.equals((java.lang.Object) "0");
        boolean boolean35 = asteriskVersion11.isAtLeast(asteriskVersion28);
        int int36 = asteriskVersion5.compareTo(asteriskVersion28);
        boolean boolean38 = asteriskVersion5.equals((java.lang.Object) 100L);
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion41 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int42 = asteriskVersion40.compareTo(asteriskVersion41);
        boolean boolean43 = asteriskVersion39.isAtLeast(asteriskVersion41);
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean46 = asteriskVersion44.isAtLeast(asteriskVersion45);
        org.asteriskjava.AsteriskVersion asteriskVersion47 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int48 = asteriskVersion45.compareTo(asteriskVersion47);
        org.asteriskjava.AsteriskVersion asteriskVersion49 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean50 = asteriskVersion47.isAtLeast(asteriskVersion49);
        int int51 = asteriskVersion39.compareTo(asteriskVersion47);
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion53 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int55 = asteriskVersion53.compareTo(asteriskVersion54);
        boolean boolean56 = asteriskVersion52.isAtLeast(asteriskVersion54);
        org.asteriskjava.AsteriskVersion asteriskVersion57 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion58 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean59 = asteriskVersion57.isAtLeast(asteriskVersion58);
        org.asteriskjava.AsteriskVersion asteriskVersion60 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int61 = asteriskVersion58.compareTo(asteriskVersion60);
        org.asteriskjava.AsteriskVersion asteriskVersion62 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean63 = asteriskVersion60.isAtLeast(asteriskVersion62);
        int int64 = asteriskVersion52.compareTo(asteriskVersion60);
        boolean boolean65 = asteriskVersion39.isAtLeast(asteriskVersion60);
        boolean boolean67 = asteriskVersion39.equals((java.lang.Object) 0);
        java.lang.Object obj68 = null;
        boolean boolean69 = asteriskVersion39.equals(obj68);
        boolean boolean70 = asteriskVersion5.isAtLeast(asteriskVersion39);
        boolean boolean71 = asteriskVersion0.equals((java.lang.Object) asteriskVersion39);
        java.lang.String str72 = asteriskVersion39.toString();
        java.lang.String str73 = asteriskVersion39.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Asterisk 1.0" + "'", str1, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + techType2 + "' != '" + org.asteriskjava.pbx.TechType.UNKNOWN + "'", techType2.equals(org.asteriskjava.pbx.TechType.UNKNOWN));
        org.junit.Assert.assertNotNull(wildcardClass3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Asterisk 17" + "'", str8, "Asterisk 17");
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Asterisk 10" + "'", str10, "Asterisk 10");
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertNotNull(asteriskVersion14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(asteriskVersion16);
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority24 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority24.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Asterisk 1.0" + "'", str31, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertNotNull(asteriskVersion41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(asteriskVersion47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertNotNull(asteriskVersion53);
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(asteriskVersion57);
        org.junit.Assert.assertNotNull(asteriskVersion58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(asteriskVersion60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Asterisk 12" + "'", str72, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Asterisk 12" + "'", str73, "Asterisk 12");
    }

    @Test
    public void test9533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9533");
        org.asteriskjava.pbx.ListenerPriority listenerPriority0 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority1 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int2 = listenerPriority0.compare(listenerPriority1);
        org.asteriskjava.pbx.ListenerPriority listenerPriority3 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int4 = listenerPriority1.compare(listenerPriority3);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int8 = asteriskVersion6.compareTo(asteriskVersion7);
        boolean boolean9 = asteriskVersion5.isAtLeast(asteriskVersion7);
        org.asteriskjava.pbx.ListenerPriority listenerPriority10 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority11 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int12 = listenerPriority10.compare(listenerPriority11);
        org.asteriskjava.pbx.ListenerPriority listenerPriority13 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int14 = listenerPriority11.compare(listenerPriority13);
        org.asteriskjava.pbx.ListenerPriority listenerPriority15 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int16 = listenerPriority11.compare(listenerPriority15);
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean19 = asteriskVersion17.isAtLeast(asteriskVersion18);
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean22 = asteriskVersion20.isAtLeast(asteriskVersion21);
        int int23 = asteriskVersion17.compareTo(asteriskVersion21);
        org.asteriskjava.AsteriskVersion asteriskVersion24 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion25 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean26 = asteriskVersion24.isAtLeast(asteriskVersion25);
        boolean boolean27 = asteriskVersion21.isAtLeast(asteriskVersion25);
        org.asteriskjava.pbx.ListenerPriority listenerPriority28 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean29 = asteriskVersion21.equals((java.lang.Object) listenerPriority28);
        int int30 = listenerPriority15.compare(listenerPriority28);
        boolean boolean31 = asteriskVersion7.equals((java.lang.Object) listenerPriority15);
        org.asteriskjava.pbx.ListenerPriority listenerPriority32 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority33 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int34 = listenerPriority32.compare(listenerPriority33);
        int int35 = listenerPriority15.compare(listenerPriority33);
        int int36 = listenerPriority3.compare(listenerPriority15);
        org.asteriskjava.pbx.ListenerPriority listenerPriority37 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority38 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int39 = listenerPriority37.compare(listenerPriority38);
        org.asteriskjava.pbx.ListenerPriority listenerPriority40 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int41 = listenerPriority38.compare(listenerPriority40);
        org.asteriskjava.pbx.ListenerPriority listenerPriority42 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int43 = listenerPriority38.compare(listenerPriority42);
        org.asteriskjava.pbx.ListenerPriority listenerPriority44 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int45 = listenerPriority38.compare(listenerPriority44);
        org.asteriskjava.pbx.ListenerPriority listenerPriority46 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        org.asteriskjava.pbx.ListenerPriority listenerPriority47 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority48 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int49 = listenerPriority47.compare(listenerPriority48);
        org.asteriskjava.pbx.ListenerPriority listenerPriority50 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority51 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int52 = listenerPriority50.compare(listenerPriority51);
        org.asteriskjava.pbx.ListenerPriority listenerPriority53 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int54 = listenerPriority51.compare(listenerPriority53);
        int int55 = listenerPriority48.compare(listenerPriority51);
        org.asteriskjava.pbx.ListenerPriority listenerPriority56 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority57 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int58 = listenerPriority56.compare(listenerPriority57);
        int int59 = listenerPriority48.compare(listenerPriority56);
        int int60 = listenerPriority46.compare(listenerPriority48);
        int int61 = listenerPriority44.compare(listenerPriority48);
        int int62 = listenerPriority15.compare(listenerPriority48);
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion64 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion65 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int66 = asteriskVersion64.compareTo(asteriskVersion65);
        boolean boolean67 = asteriskVersion63.isAtLeast(asteriskVersion65);
        org.asteriskjava.pbx.ListenerPriority listenerPriority68 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority69 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int70 = listenerPriority68.compare(listenerPriority69);
        org.asteriskjava.pbx.ListenerPriority listenerPriority71 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int72 = listenerPriority69.compare(listenerPriority71);
        org.asteriskjava.pbx.ListenerPriority listenerPriority73 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int74 = listenerPriority69.compare(listenerPriority73);
        org.asteriskjava.AsteriskVersion asteriskVersion75 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion76 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean77 = asteriskVersion75.isAtLeast(asteriskVersion76);
        org.asteriskjava.AsteriskVersion asteriskVersion78 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion79 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean80 = asteriskVersion78.isAtLeast(asteriskVersion79);
        int int81 = asteriskVersion75.compareTo(asteriskVersion79);
        org.asteriskjava.AsteriskVersion asteriskVersion82 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion83 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean84 = asteriskVersion82.isAtLeast(asteriskVersion83);
        boolean boolean85 = asteriskVersion79.isAtLeast(asteriskVersion83);
        org.asteriskjava.pbx.ListenerPriority listenerPriority86 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean87 = asteriskVersion79.equals((java.lang.Object) listenerPriority86);
        int int88 = listenerPriority73.compare(listenerPriority86);
        boolean boolean89 = asteriskVersion65.equals((java.lang.Object) listenerPriority73);
        int int90 = listenerPriority48.compare(listenerPriority73);
        java.lang.Class<?> wildcardClass91 = listenerPriority73.getClass();
        org.junit.Assert.assertTrue("'" + listenerPriority0 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority0.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority1 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority1.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority3 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority3.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-4) + "'", int4 == (-4));
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + listenerPriority10 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority10.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority11 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority11.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority13 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority13.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-4) + "'", int14 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority15 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority15.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-6) + "'", int16 == (-6));
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion24);
        org.junit.Assert.assertNotNull(asteriskVersion25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority28 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority28.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + listenerPriority32 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority32.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority33 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority33.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2 + "'", int34 == 2);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 6 + "'", int35 == 6);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-2) + "'", int36 == (-2));
        org.junit.Assert.assertTrue("'" + listenerPriority37 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority37.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority38 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority38.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority40 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority40.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-4) + "'", int41 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority42 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority42.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-6) + "'", int43 == (-6));
        org.junit.Assert.assertTrue("'" + listenerPriority44 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority44.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-4) + "'", int45 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority46 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority46.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + listenerPriority47 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority47.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority48 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority48.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority50 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority50.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority51 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority51.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2 + "'", int52 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority53 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority53.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-4) + "'", int54 == (-4));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + listenerPriority56 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority56.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority57 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority57.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-2) + "'", int59 == (-2));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 4 + "'", int60 == 4);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 4 + "'", int61 == 4);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 6 + "'", int62 == 6);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertNotNull(asteriskVersion64);
        org.junit.Assert.assertNotNull(asteriskVersion65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + listenerPriority68 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority68.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority69 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority69.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 2 + "'", int70 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority71 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority71.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-4) + "'", int72 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority73 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority73.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-6) + "'", int74 == (-6));
        org.junit.Assert.assertNotNull(asteriskVersion75);
        org.junit.Assert.assertNotNull(asteriskVersion76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(asteriskVersion78);
        org.junit.Assert.assertNotNull(asteriskVersion79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion82);
        org.junit.Assert.assertNotNull(asteriskVersion83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority86 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority86.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-6) + "'", int90 == (-6));
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test9534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9534");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean2 = asteriskVersion0.isAtLeast(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int4 = asteriskVersion1.compareTo(asteriskVersion3);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str7 = asteriskVersion6.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean9 = asteriskVersion6.isAtLeast(asteriskVersion8);
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        java.lang.String str11 = asteriskVersion10.toString();
        int int12 = asteriskVersion6.compareTo(asteriskVersion10);
        boolean boolean13 = asteriskVersion5.isAtLeast(asteriskVersion10);
        boolean boolean14 = asteriskVersion1.equals((java.lang.Object) asteriskVersion10);
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion16 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int18 = asteriskVersion16.compareTo(asteriskVersion17);
        boolean boolean19 = asteriskVersion15.isAtLeast(asteriskVersion17);
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int22 = asteriskVersion20.compareTo(asteriskVersion21);
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int24 = asteriskVersion20.compareTo(asteriskVersion23);
        org.asteriskjava.pbx.TechType techType25 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean26 = asteriskVersion20.equals((java.lang.Object) techType25);
        boolean boolean27 = asteriskVersion17.isAtLeast(asteriskVersion20);
        int int28 = asteriskVersion1.compareTo(asteriskVersion20);
        org.asteriskjava.AsteriskVersion asteriskVersion29 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion31 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int32 = asteriskVersion30.compareTo(asteriskVersion31);
        boolean boolean33 = asteriskVersion29.isAtLeast(asteriskVersion31);
        org.asteriskjava.AsteriskVersion asteriskVersion34 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        boolean boolean35 = asteriskVersion29.isAtLeast(asteriskVersion34);
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int39 = asteriskVersion37.compareTo(asteriskVersion38);
        boolean boolean40 = asteriskVersion36.isAtLeast(asteriskVersion38);
        org.asteriskjava.AsteriskVersion asteriskVersion41 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean43 = asteriskVersion41.isAtLeast(asteriskVersion42);
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int45 = asteriskVersion42.compareTo(asteriskVersion44);
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean47 = asteriskVersion44.isAtLeast(asteriskVersion46);
        int int48 = asteriskVersion36.compareTo(asteriskVersion44);
        int int49 = asteriskVersion29.compareTo(asteriskVersion36);
        int int50 = asteriskVersion20.compareTo(asteriskVersion36);
        java.lang.String str51 = asteriskVersion36.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion53 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean54 = asteriskVersion52.isAtLeast(asteriskVersion53);
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion56 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean57 = asteriskVersion55.isAtLeast(asteriskVersion56);
        int int58 = asteriskVersion52.compareTo(asteriskVersion56);
        org.asteriskjava.AsteriskVersion asteriskVersion59 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion60 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean61 = asteriskVersion59.isAtLeast(asteriskVersion60);
        boolean boolean62 = asteriskVersion56.isAtLeast(asteriskVersion60);
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean64 = asteriskVersion60.isAtLeast(asteriskVersion63);
        java.lang.String str65 = asteriskVersion63.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion66 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion67 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int68 = asteriskVersion66.compareTo(asteriskVersion67);
        org.asteriskjava.AsteriskVersion asteriskVersion69 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int70 = asteriskVersion66.compareTo(asteriskVersion69);
        java.lang.String str71 = asteriskVersion69.toString();
        boolean boolean72 = asteriskVersion63.isAtLeast(asteriskVersion69);
        java.lang.String str73 = asteriskVersion69.toString();
        boolean boolean74 = asteriskVersion36.isAtLeast(asteriskVersion69);
        java.lang.String str75 = asteriskVersion69.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Asterisk 11" + "'", str7, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Asterisk 14" + "'", str11, "Asterisk 14");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertNotNull(asteriskVersion16);
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + techType25 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType25.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion29);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertNotNull(asteriskVersion31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(asteriskVersion34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(asteriskVersion41);
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Asterisk 12" + "'", str51, "Asterisk 12");
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertNotNull(asteriskVersion53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertNotNull(asteriskVersion56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion59);
        org.junit.Assert.assertNotNull(asteriskVersion60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Asterisk 1.4" + "'", str65, "Asterisk 1.4");
        org.junit.Assert.assertNotNull(asteriskVersion66);
        org.junit.Assert.assertNotNull(asteriskVersion67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 1 + "'", int70 == 1);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Asterisk 1.6" + "'", str71, "Asterisk 1.6");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Asterisk 1.6" + "'", str73, "Asterisk 1.6");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Asterisk 1.6" + "'", str75, "Asterisk 1.6");
    }

    @Test
    public void test9535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9535");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str2 = asteriskVersion1.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean4 = asteriskVersion1.isAtLeast(asteriskVersion3);
        boolean boolean5 = asteriskVersion0.equals((java.lang.Object) boolean4);
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean8 = asteriskVersion6.isAtLeast(asteriskVersion7);
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        int int10 = asteriskVersion6.compareTo(asteriskVersion9);
        int int11 = asteriskVersion0.compareTo(asteriskVersion9);
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int14 = asteriskVersion12.compareTo(asteriskVersion13);
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str16 = asteriskVersion15.toString();
        boolean boolean17 = asteriskVersion13.isAtLeast(asteriskVersion15);
        boolean boolean19 = asteriskVersion13.equals((java.lang.Object) "0");
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int22 = asteriskVersion20.compareTo(asteriskVersion21);
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str24 = asteriskVersion23.toString();
        boolean boolean25 = asteriskVersion21.isAtLeast(asteriskVersion23);
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int28 = asteriskVersion26.compareTo(asteriskVersion27);
        org.asteriskjava.AsteriskVersion asteriskVersion29 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str30 = asteriskVersion29.toString();
        boolean boolean31 = asteriskVersion27.isAtLeast(asteriskVersion29);
        boolean boolean33 = asteriskVersion27.equals((java.lang.Object) "0");
        boolean boolean34 = asteriskVersion21.equals((java.lang.Object) asteriskVersion27);
        boolean boolean35 = asteriskVersion13.isAtLeast(asteriskVersion27);
        boolean boolean36 = asteriskVersion0.isAtLeast(asteriskVersion27);
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int39 = asteriskVersion37.compareTo(asteriskVersion38);
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int41 = asteriskVersion37.compareTo(asteriskVersion40);
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        int int43 = asteriskVersion40.compareTo(asteriskVersion42);
        boolean boolean44 = asteriskVersion27.isAtLeast(asteriskVersion42);
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean47 = asteriskVersion45.isAtLeast(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int49 = asteriskVersion46.compareTo(asteriskVersion48);
        org.asteriskjava.AsteriskVersion asteriskVersion50 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean51 = asteriskVersion48.isAtLeast(asteriskVersion50);
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion53 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean54 = asteriskVersion52.isAtLeast(asteriskVersion53);
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion56 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean57 = asteriskVersion55.isAtLeast(asteriskVersion56);
        int int58 = asteriskVersion52.compareTo(asteriskVersion56);
        org.asteriskjava.AsteriskVersion asteriskVersion59 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion60 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean61 = asteriskVersion59.isAtLeast(asteriskVersion60);
        boolean boolean62 = asteriskVersion56.isAtLeast(asteriskVersion60);
        org.asteriskjava.pbx.ListenerPriority listenerPriority63 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean64 = asteriskVersion56.equals((java.lang.Object) listenerPriority63);
        org.asteriskjava.AsteriskVersion asteriskVersion65 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        int int66 = asteriskVersion56.compareTo(asteriskVersion65);
        boolean boolean67 = asteriskVersion48.isAtLeast(asteriskVersion56);
        org.asteriskjava.AsteriskVersion asteriskVersion68 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        org.asteriskjava.AsteriskVersion asteriskVersion69 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str70 = asteriskVersion69.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion71 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean72 = asteriskVersion69.isAtLeast(asteriskVersion71);
        org.asteriskjava.AsteriskVersion asteriskVersion73 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion74 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean75 = asteriskVersion73.isAtLeast(asteriskVersion74);
        boolean boolean76 = asteriskVersion71.equals((java.lang.Object) asteriskVersion73);
        int int77 = asteriskVersion68.compareTo(asteriskVersion73);
        org.asteriskjava.AsteriskVersion asteriskVersion78 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        java.lang.String str79 = asteriskVersion78.toString();
        boolean boolean80 = asteriskVersion73.isAtLeast(asteriskVersion78);
        int int81 = asteriskVersion48.compareTo(asteriskVersion73);
        java.lang.Object obj82 = null;
        boolean boolean83 = asteriskVersion73.equals(obj82);
        int int84 = asteriskVersion42.compareTo(asteriskVersion73);
        java.lang.String str85 = asteriskVersion42.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Asterisk 11" + "'", str2, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Asterisk 1.0" + "'", str16, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Asterisk 1.0" + "'", str24, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 1 + "'", int28 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Asterisk 1.0" + "'", str30, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertNotNull(asteriskVersion53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertNotNull(asteriskVersion56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion59);
        org.junit.Assert.assertNotNull(asteriskVersion60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority63 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority63.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(asteriskVersion65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(asteriskVersion68);
        org.junit.Assert.assertNotNull(asteriskVersion69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Asterisk 11" + "'", str70, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(asteriskVersion73);
        org.junit.Assert.assertNotNull(asteriskVersion74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Asterisk 14" + "'", str79, "Asterisk 14");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Asterisk 12" + "'", str85, "Asterisk 12");
    }

    @Test
    public void test9536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9536");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str2 = asteriskVersion1.toString();
        org.asteriskjava.pbx.TechType techType3 = org.asteriskjava.pbx.TechType.UNKNOWN;
        java.lang.Class<?> wildcardClass4 = techType3.getClass();
        boolean boolean5 = asteriskVersion1.equals((java.lang.Object) wildcardClass4);
        int int6 = asteriskVersion0.compareTo(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion9 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int10 = asteriskVersion8.compareTo(asteriskVersion9);
        boolean boolean11 = asteriskVersion7.isAtLeast(asteriskVersion9);
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean14 = asteriskVersion12.isAtLeast(asteriskVersion13);
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int16 = asteriskVersion13.compareTo(asteriskVersion15);
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean18 = asteriskVersion15.isAtLeast(asteriskVersion17);
        int int19 = asteriskVersion7.compareTo(asteriskVersion15);
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion22 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int23 = asteriskVersion21.compareTo(asteriskVersion22);
        boolean boolean24 = asteriskVersion20.isAtLeast(asteriskVersion22);
        org.asteriskjava.AsteriskVersion asteriskVersion25 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean27 = asteriskVersion25.isAtLeast(asteriskVersion26);
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int29 = asteriskVersion26.compareTo(asteriskVersion28);
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean31 = asteriskVersion28.isAtLeast(asteriskVersion30);
        int int32 = asteriskVersion20.compareTo(asteriskVersion28);
        boolean boolean33 = asteriskVersion7.isAtLeast(asteriskVersion28);
        boolean boolean35 = asteriskVersion7.equals((java.lang.Object) 0);
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean37 = asteriskVersion7.isAtLeast(asteriskVersion36);
        java.lang.String str38 = asteriskVersion36.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int41 = asteriskVersion39.compareTo(asteriskVersion40);
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int43 = asteriskVersion39.compareTo(asteriskVersion42);
        java.lang.String str44 = asteriskVersion42.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int47 = asteriskVersion45.compareTo(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int49 = asteriskVersion45.compareTo(asteriskVersion48);
        org.asteriskjava.pbx.TechType techType50 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean51 = asteriskVersion45.equals((java.lang.Object) techType50);
        boolean boolean52 = asteriskVersion42.isAtLeast(asteriskVersion45);
        int int53 = asteriskVersion36.compareTo(asteriskVersion45);
        boolean boolean54 = asteriskVersion1.isAtLeast(asteriskVersion36);
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion56 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int57 = asteriskVersion55.compareTo(asteriskVersion56);
        org.asteriskjava.AsteriskVersion asteriskVersion58 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int59 = asteriskVersion55.compareTo(asteriskVersion58);
        boolean boolean60 = asteriskVersion1.isAtLeast(asteriskVersion58);
        java.lang.String str61 = asteriskVersion58.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion62 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str64 = asteriskVersion63.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion65 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean66 = asteriskVersion63.isAtLeast(asteriskVersion65);
        org.asteriskjava.AsteriskVersion asteriskVersion67 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion68 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean69 = asteriskVersion67.isAtLeast(asteriskVersion68);
        boolean boolean70 = asteriskVersion65.equals((java.lang.Object) asteriskVersion67);
        int int71 = asteriskVersion62.compareTo(asteriskVersion67);
        org.asteriskjava.AsteriskVersion asteriskVersion72 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        org.asteriskjava.AsteriskVersion asteriskVersion73 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion74 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion75 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int76 = asteriskVersion74.compareTo(asteriskVersion75);
        boolean boolean77 = asteriskVersion73.isAtLeast(asteriskVersion75);
        org.asteriskjava.AsteriskVersion asteriskVersion78 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion79 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int80 = asteriskVersion78.compareTo(asteriskVersion79);
        org.asteriskjava.AsteriskVersion asteriskVersion81 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int82 = asteriskVersion78.compareTo(asteriskVersion81);
        org.asteriskjava.pbx.TechType techType83 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean84 = asteriskVersion78.equals((java.lang.Object) techType83);
        boolean boolean85 = asteriskVersion75.isAtLeast(asteriskVersion78);
        boolean boolean86 = asteriskVersion72.isAtLeast(asteriskVersion78);
        int int87 = asteriskVersion62.compareTo(asteriskVersion78);
        boolean boolean89 = asteriskVersion78.equals((java.lang.Object) (-92));
        java.lang.String str90 = asteriskVersion78.toString();
        boolean boolean91 = asteriskVersion58.equals((java.lang.Object) asteriskVersion78);
        java.lang.String str92 = asteriskVersion78.toString();
        java.lang.String str93 = asteriskVersion78.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Asterisk 1.0" + "'", str2, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + techType3 + "' != '" + org.asteriskjava.pbx.TechType.UNKNOWN + "'", techType3.equals(org.asteriskjava.pbx.TechType.UNKNOWN));
        org.junit.Assert.assertNotNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertNotNull(asteriskVersion9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertNotNull(asteriskVersion22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(asteriskVersion25);
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Asterisk 20" + "'", str38, "Asterisk 20");
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Asterisk 1.8" + "'", str44, "Asterisk 1.8");
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + techType50 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType50.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertNotNull(asteriskVersion56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Asterisk 1.6" + "'", str61, "Asterisk 1.6");
        org.junit.Assert.assertNotNull(asteriskVersion62);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Asterisk 11" + "'", str64, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(asteriskVersion67);
        org.junit.Assert.assertNotNull(asteriskVersion68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion72);
        org.junit.Assert.assertNotNull(asteriskVersion73);
        org.junit.Assert.assertNotNull(asteriskVersion74);
        org.junit.Assert.assertNotNull(asteriskVersion75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(asteriskVersion78);
        org.junit.Assert.assertNotNull(asteriskVersion79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertTrue("'" + techType83 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType83.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Asterisk 13" + "'", str90, "Asterisk 13");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Asterisk 13" + "'", str92, "Asterisk 13");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Asterisk 13" + "'", str93, "Asterisk 13");
    }

    @Test
    public void test9537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9537");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int2 = asteriskVersion0.compareTo(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int4 = asteriskVersion0.compareTo(asteriskVersion3);
        java.lang.String str5 = asteriskVersion3.toString();
        org.asteriskjava.pbx.ListenerPriority listenerPriority6 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority7 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int8 = listenerPriority6.compare(listenerPriority7);
        org.asteriskjava.pbx.ListenerPriority listenerPriority9 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int10 = listenerPriority7.compare(listenerPriority9);
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int14 = asteriskVersion12.compareTo(asteriskVersion13);
        boolean boolean15 = asteriskVersion11.isAtLeast(asteriskVersion13);
        org.asteriskjava.pbx.ListenerPriority listenerPriority16 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority17 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int18 = listenerPriority16.compare(listenerPriority17);
        org.asteriskjava.pbx.ListenerPriority listenerPriority19 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int20 = listenerPriority17.compare(listenerPriority19);
        org.asteriskjava.pbx.ListenerPriority listenerPriority21 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int22 = listenerPriority17.compare(listenerPriority21);
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion24 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean25 = asteriskVersion23.isAtLeast(asteriskVersion24);
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean28 = asteriskVersion26.isAtLeast(asteriskVersion27);
        int int29 = asteriskVersion23.compareTo(asteriskVersion27);
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion31 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean32 = asteriskVersion30.isAtLeast(asteriskVersion31);
        boolean boolean33 = asteriskVersion27.isAtLeast(asteriskVersion31);
        org.asteriskjava.pbx.ListenerPriority listenerPriority34 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean35 = asteriskVersion27.equals((java.lang.Object) listenerPriority34);
        int int36 = listenerPriority21.compare(listenerPriority34);
        boolean boolean37 = asteriskVersion13.equals((java.lang.Object) listenerPriority21);
        org.asteriskjava.pbx.ListenerPriority listenerPriority38 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority39 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int40 = listenerPriority38.compare(listenerPriority39);
        int int41 = listenerPriority21.compare(listenerPriority39);
        int int42 = listenerPriority9.compare(listenerPriority21);
        org.asteriskjava.pbx.ListenerPriority listenerPriority43 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority44 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int45 = listenerPriority43.compare(listenerPriority44);
        org.asteriskjava.pbx.ListenerPriority listenerPriority46 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int47 = listenerPriority44.compare(listenerPriority46);
        org.asteriskjava.pbx.ListenerPriority listenerPriority48 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int49 = listenerPriority44.compare(listenerPriority48);
        org.asteriskjava.pbx.ListenerPriority listenerPriority50 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int51 = listenerPriority44.compare(listenerPriority50);
        org.asteriskjava.pbx.ListenerPriority listenerPriority52 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        org.asteriskjava.pbx.ListenerPriority listenerPriority53 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority54 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int55 = listenerPriority53.compare(listenerPriority54);
        org.asteriskjava.pbx.ListenerPriority listenerPriority56 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority57 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int58 = listenerPriority56.compare(listenerPriority57);
        org.asteriskjava.pbx.ListenerPriority listenerPriority59 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int60 = listenerPriority57.compare(listenerPriority59);
        int int61 = listenerPriority54.compare(listenerPriority57);
        org.asteriskjava.pbx.ListenerPriority listenerPriority62 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority63 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int64 = listenerPriority62.compare(listenerPriority63);
        int int65 = listenerPriority54.compare(listenerPriority62);
        int int66 = listenerPriority52.compare(listenerPriority54);
        int int67 = listenerPriority50.compare(listenerPriority54);
        int int68 = listenerPriority21.compare(listenerPriority54);
        boolean boolean69 = asteriskVersion3.equals((java.lang.Object) int68);
        java.lang.String str70 = asteriskVersion3.toString();
        java.lang.String str71 = asteriskVersion3.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Asterisk 1.8" + "'", str5, "Asterisk 1.8");
        org.junit.Assert.assertTrue("'" + listenerPriority6 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority6.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority7 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority7.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority9 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority9.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-4) + "'", int10 == (-4));
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + listenerPriority16 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority16.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority17 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority17.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority19 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority19.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-4) + "'", int20 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority21 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority21.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-6) + "'", int22 == (-6));
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertNotNull(asteriskVersion24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertNotNull(asteriskVersion31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority34 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority34.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + listenerPriority38 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority38.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority39 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority39.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2 + "'", int40 == 2);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 6 + "'", int41 == 6);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-2) + "'", int42 == (-2));
        org.junit.Assert.assertTrue("'" + listenerPriority43 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority43.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority44 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority44.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2 + "'", int45 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority46 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority46.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-4) + "'", int47 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority48 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority48.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-6) + "'", int49 == (-6));
        org.junit.Assert.assertTrue("'" + listenerPriority50 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority50.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-4) + "'", int51 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority52 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority52.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + listenerPriority53 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority53.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority54 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority54.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority56 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority56.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority57 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority57.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2 + "'", int58 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority59 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority59.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-4) + "'", int60 == (-4));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + listenerPriority62 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority62.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority63 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority63.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2 + "'", int64 == 2);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-2) + "'", int65 == (-2));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 4 + "'", int66 == 4);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 6 + "'", int68 == 6);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Asterisk 1.8" + "'", str70, "Asterisk 1.8");
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Asterisk 1.8" + "'", str71, "Asterisk 1.8");
    }

    @Test
    public void test9538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9538");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean2 = asteriskVersion0.isAtLeast(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean5 = asteriskVersion3.isAtLeast(asteriskVersion4);
        int int6 = asteriskVersion0.compareTo(asteriskVersion4);
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean9 = asteriskVersion7.isAtLeast(asteriskVersion8);
        boolean boolean10 = asteriskVersion4.isAtLeast(asteriskVersion8);
        org.asteriskjava.pbx.TechType techType11 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean12 = asteriskVersion4.equals((java.lang.Object) techType11);
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str14 = asteriskVersion13.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean16 = asteriskVersion13.isAtLeast(asteriskVersion15);
        java.lang.String str17 = asteriskVersion13.toString();
        boolean boolean18 = asteriskVersion4.isAtLeast(asteriskVersion13);
        java.lang.Object obj19 = null;
        boolean boolean20 = asteriskVersion4.equals(obj19);
        java.lang.Object obj21 = null;
        boolean boolean22 = asteriskVersion4.equals(obj21);
        org.asteriskjava.pbx.DTMFTone dTMFTone23 = org.asteriskjava.pbx.DTMFTone.STAR;
        java.lang.String str24 = dTMFTone23.toString();
        java.lang.String str25 = dTMFTone23.toString();
        java.lang.String str26 = dTMFTone23.toString();
        java.lang.String str27 = dTMFTone23.toString();
        java.lang.String str28 = dTMFTone23.toString();
        java.lang.String str29 = dTMFTone23.toString();
        java.lang.String str30 = dTMFTone23.toString();
        java.lang.String str31 = dTMFTone23.toString();
        java.lang.String str32 = dTMFTone23.toString();
        java.lang.String str33 = dTMFTone23.toString();
        boolean boolean34 = asteriskVersion4.equals((java.lang.Object) dTMFTone23);
        org.asteriskjava.AsteriskVersion asteriskVersion35 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int37 = asteriskVersion35.compareTo(asteriskVersion36);
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str39 = asteriskVersion38.toString();
        boolean boolean40 = asteriskVersion36.isAtLeast(asteriskVersion38);
        boolean boolean42 = asteriskVersion36.equals((java.lang.Object) "0");
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean45 = asteriskVersion43.isAtLeast(asteriskVersion44);
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int47 = asteriskVersion44.compareTo(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean49 = asteriskVersion46.isAtLeast(asteriskVersion48);
        boolean boolean50 = asteriskVersion36.isAtLeast(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int53 = asteriskVersion51.compareTo(asteriskVersion52);
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion56 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int57 = asteriskVersion55.compareTo(asteriskVersion56);
        boolean boolean58 = asteriskVersion54.isAtLeast(asteriskVersion56);
        int int59 = asteriskVersion51.compareTo(asteriskVersion54);
        java.lang.String str60 = asteriskVersion51.toString();
        java.lang.String str61 = asteriskVersion51.toString();
        int int62 = asteriskVersion36.compareTo(asteriskVersion51);
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer64 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer64.write();
        org.asteriskjava.manager.event.ManagerEvent managerEvent66 = null;
        htmlEventTracer64.onManagerEvent(managerEvent66);
        boolean boolean68 = asteriskVersion63.equals((java.lang.Object) managerEvent66);
        int int69 = asteriskVersion51.compareTo(asteriskVersion63);
        boolean boolean70 = asteriskVersion4.isAtLeast(asteriskVersion51);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer71 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer71.write();
        boolean boolean73 = asteriskVersion51.equals((java.lang.Object) htmlEventTracer71);
        htmlEventTracer71.write();
        htmlEventTracer71.write();
        org.asteriskjava.manager.event.ManagerEvent managerEvent76 = null;
        htmlEventTracer71.onManagerEvent(managerEvent76);
        org.asteriskjava.manager.event.ManagerEvent managerEvent78 = null;
        htmlEventTracer71.onManagerEvent(managerEvent78);
        org.asteriskjava.manager.event.ManagerEvent managerEvent80 = null;
        htmlEventTracer71.onManagerEvent(managerEvent80);
        org.asteriskjava.manager.event.ManagerEvent managerEvent82 = null;
        htmlEventTracer71.onManagerEvent(managerEvent82);
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + techType11 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType11.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Asterisk 11" + "'", str14, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Asterisk 11" + "'", str17, "Asterisk 11");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + dTMFTone23 + "' != '" + org.asteriskjava.pbx.DTMFTone.STAR + "'", dTMFTone23.equals(org.asteriskjava.pbx.DTMFTone.STAR));
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "*" + "'", str24, "*");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "*" + "'", str25, "*");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "*" + "'", str26, "*");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "*" + "'", str27, "*");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "*" + "'", str28, "*");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "*" + "'", str29, "*");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "*" + "'", str30, "*");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "*" + "'", str31, "*");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "*" + "'", str32, "*");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "*" + "'", str33, "*");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(asteriskVersion35);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Asterisk 1.0" + "'", str39, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertNotNull(asteriskVersion56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Asterisk 17" + "'", str60, "Asterisk 17");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Asterisk 17" + "'", str61, "Asterisk 17");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test9539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9539");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str1 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean3 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int5 = asteriskVersion0.compareTo(asteriskVersion4);
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int7 = asteriskVersion4.compareTo(asteriskVersion6);
        boolean boolean9 = asteriskVersion6.equals((java.lang.Object) (short) -1);
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int13 = asteriskVersion11.compareTo(asteriskVersion12);
        boolean boolean14 = asteriskVersion10.isAtLeast(asteriskVersion12);
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion16 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean17 = asteriskVersion15.isAtLeast(asteriskVersion16);
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int19 = asteriskVersion16.compareTo(asteriskVersion18);
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean21 = asteriskVersion18.isAtLeast(asteriskVersion20);
        int int22 = asteriskVersion10.compareTo(asteriskVersion18);
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion24 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int25 = asteriskVersion23.compareTo(asteriskVersion24);
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int27 = asteriskVersion23.compareTo(asteriskVersion26);
        boolean boolean28 = asteriskVersion18.isAtLeast(asteriskVersion26);
        int int29 = asteriskVersion6.compareTo(asteriskVersion18);
        java.lang.String str30 = asteriskVersion18.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Asterisk 11" + "'", str1, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertNotNull(asteriskVersion16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertNotNull(asteriskVersion24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Asterisk 20" + "'", str30, "Asterisk 20");
    }

    @Test
    public void test9540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9540");
        org.asteriskjava.pbx.ListenerPriority listenerPriority0 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority1 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int2 = listenerPriority0.compare(listenerPriority1);
        org.asteriskjava.pbx.ListenerPriority listenerPriority3 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int4 = listenerPriority1.compare(listenerPriority3);
        org.asteriskjava.pbx.ListenerPriority listenerPriority5 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority6 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int7 = listenerPriority5.compare(listenerPriority6);
        org.asteriskjava.pbx.ListenerPriority listenerPriority8 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority9 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int10 = listenerPriority8.compare(listenerPriority9);
        org.asteriskjava.pbx.ListenerPriority listenerPriority11 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int12 = listenerPriority9.compare(listenerPriority11);
        int int13 = listenerPriority6.compare(listenerPriority9);
        org.asteriskjava.pbx.ListenerPriority listenerPriority14 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority15 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int16 = listenerPriority14.compare(listenerPriority15);
        int int17 = listenerPriority6.compare(listenerPriority14);
        int int18 = listenerPriority3.compare(listenerPriority14);
        org.asteriskjava.pbx.ListenerPriority listenerPriority19 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        org.asteriskjava.pbx.ListenerPriority listenerPriority20 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority21 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int22 = listenerPriority20.compare(listenerPriority21);
        org.asteriskjava.pbx.ListenerPriority listenerPriority23 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority24 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int25 = listenerPriority23.compare(listenerPriority24);
        org.asteriskjava.pbx.ListenerPriority listenerPriority26 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int27 = listenerPriority24.compare(listenerPriority26);
        int int28 = listenerPriority21.compare(listenerPriority24);
        org.asteriskjava.pbx.ListenerPriority listenerPriority29 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority30 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int31 = listenerPriority29.compare(listenerPriority30);
        int int32 = listenerPriority21.compare(listenerPriority29);
        int int33 = listenerPriority19.compare(listenerPriority21);
        int int34 = listenerPriority3.compare(listenerPriority21);
        org.asteriskjava.AsteriskVersion asteriskVersion35 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int38 = asteriskVersion36.compareTo(asteriskVersion37);
        boolean boolean39 = asteriskVersion35.isAtLeast(asteriskVersion37);
        org.asteriskjava.pbx.ListenerPriority listenerPriority40 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority41 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int42 = listenerPriority40.compare(listenerPriority41);
        org.asteriskjava.pbx.ListenerPriority listenerPriority43 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int44 = listenerPriority41.compare(listenerPriority43);
        org.asteriskjava.pbx.ListenerPriority listenerPriority45 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int46 = listenerPriority41.compare(listenerPriority45);
        org.asteriskjava.AsteriskVersion asteriskVersion47 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean49 = asteriskVersion47.isAtLeast(asteriskVersion48);
        org.asteriskjava.AsteriskVersion asteriskVersion50 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean52 = asteriskVersion50.isAtLeast(asteriskVersion51);
        int int53 = asteriskVersion47.compareTo(asteriskVersion51);
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean56 = asteriskVersion54.isAtLeast(asteriskVersion55);
        boolean boolean57 = asteriskVersion51.isAtLeast(asteriskVersion55);
        org.asteriskjava.pbx.ListenerPriority listenerPriority58 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean59 = asteriskVersion51.equals((java.lang.Object) listenerPriority58);
        int int60 = listenerPriority45.compare(listenerPriority58);
        boolean boolean61 = asteriskVersion37.equals((java.lang.Object) listenerPriority45);
        int int62 = listenerPriority3.compare(listenerPriority45);
        org.asteriskjava.pbx.ListenerPriority listenerPriority63 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority64 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int65 = listenerPriority63.compare(listenerPriority64);
        org.asteriskjava.pbx.ListenerPriority listenerPriority66 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int67 = listenerPriority64.compare(listenerPriority66);
        org.asteriskjava.pbx.ListenerPriority listenerPriority68 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int69 = listenerPriority64.compare(listenerPriority68);
        int int70 = listenerPriority45.compare(listenerPriority68);
        org.asteriskjava.AsteriskVersion asteriskVersion71 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str72 = asteriskVersion71.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion73 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean74 = asteriskVersion71.isAtLeast(asteriskVersion73);
        org.asteriskjava.AsteriskVersion asteriskVersion75 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int76 = asteriskVersion71.compareTo(asteriskVersion75);
        org.asteriskjava.AsteriskVersion asteriskVersion77 = org.asteriskjava.AsteriskVersion.ASTERISK_15;
        boolean boolean78 = asteriskVersion71.isAtLeast(asteriskVersion77);
        org.asteriskjava.pbx.ListenerPriority listenerPriority79 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority80 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int81 = listenerPriority79.compare(listenerPriority80);
        org.asteriskjava.pbx.ListenerPriority listenerPriority82 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int83 = listenerPriority80.compare(listenerPriority82);
        org.asteriskjava.pbx.ListenerPriority listenerPriority84 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int85 = listenerPriority80.compare(listenerPriority84);
        boolean boolean86 = asteriskVersion71.equals((java.lang.Object) listenerPriority84);
        int int87 = listenerPriority45.compare(listenerPriority84);
        java.lang.Class<?> wildcardClass88 = listenerPriority84.getClass();
        org.junit.Assert.assertTrue("'" + listenerPriority0 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority0.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority1 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority1.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority3 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority3.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-4) + "'", int4 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority5 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority5.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority6 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority6.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 2 + "'", int7 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority8 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority8.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority9 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority9.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 2 + "'", int10 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority11 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority11.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-4) + "'", int12 == (-4));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + listenerPriority14 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority14.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority15 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority15.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-2) + "'", int17 == (-2));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority19 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority19.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + listenerPriority20 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority20.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority21 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority21.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority23 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority23.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority24 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority24.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority26 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority26.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-4) + "'", int27 == (-4));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + listenerPriority29 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority29.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority30 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority30.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 2 + "'", int31 == 2);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-2) + "'", int32 == (-2));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 4 + "'", int33 == 4);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 4 + "'", int34 == 4);
        org.junit.Assert.assertNotNull(asteriskVersion35);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + listenerPriority40 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority40.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority41 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority41.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 2 + "'", int42 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority43 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority43.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-4) + "'", int44 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority45 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority45.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-6) + "'", int46 == (-6));
        org.junit.Assert.assertNotNull(asteriskVersion47);
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(asteriskVersion50);
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority58 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority58.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-2) + "'", int62 == (-2));
        org.junit.Assert.assertTrue("'" + listenerPriority63 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority63.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority64 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority64.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 2 + "'", int65 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority66 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority66.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-4) + "'", int67 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority68 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority68.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-6) + "'", int69 == (-6));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Asterisk 11" + "'", str72, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(asteriskVersion75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + listenerPriority79 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority79.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority80 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority80.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 2 + "'", int81 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority82 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority82.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-4) + "'", int83 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority84 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority84.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-6) + "'", int85 == (-6));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test9541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9541");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str1 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean3 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int5 = asteriskVersion0.compareTo(asteriskVersion4);
        org.asteriskjava.pbx.ActivityStatusEnum activityStatusEnum6 = org.asteriskjava.pbx.ActivityStatusEnum.FAILURE;
        java.lang.String str7 = activityStatusEnum6.getDefaultMessage();
        java.lang.String str8 = activityStatusEnum6.getDefaultMessage();
        java.lang.String str9 = activityStatusEnum6.getDefaultMessage();
        java.lang.String str10 = activityStatusEnum6.getDefaultMessage();
        java.lang.String str11 = activityStatusEnum6.getDefaultMessage();
        boolean boolean12 = asteriskVersion4.equals((java.lang.Object) str11);
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str14 = asteriskVersion13.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean16 = asteriskVersion13.isAtLeast(asteriskVersion15);
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int18 = asteriskVersion13.compareTo(asteriskVersion17);
        org.asteriskjava.AsteriskVersion asteriskVersion19 = org.asteriskjava.AsteriskVersion.ASTERISK_15;
        boolean boolean20 = asteriskVersion13.isAtLeast(asteriskVersion19);
        org.asteriskjava.AsteriskVersion asteriskVersion21 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion22 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int23 = asteriskVersion21.compareTo(asteriskVersion22);
        org.asteriskjava.AsteriskVersion asteriskVersion24 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int25 = asteriskVersion21.compareTo(asteriskVersion24);
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean28 = asteriskVersion26.isAtLeast(asteriskVersion27);
        boolean boolean29 = asteriskVersion24.isAtLeast(asteriskVersion27);
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        boolean boolean31 = asteriskVersion24.equals((java.lang.Object) asteriskVersion30);
        int int32 = asteriskVersion13.compareTo(asteriskVersion24);
        org.asteriskjava.AsteriskVersion asteriskVersion33 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        org.asteriskjava.AsteriskVersion asteriskVersion34 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str35 = asteriskVersion34.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean37 = asteriskVersion34.isAtLeast(asteriskVersion36);
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean40 = asteriskVersion38.isAtLeast(asteriskVersion39);
        boolean boolean41 = asteriskVersion36.equals((java.lang.Object) asteriskVersion38);
        int int42 = asteriskVersion33.compareTo(asteriskVersion38);
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int47 = asteriskVersion45.compareTo(asteriskVersion46);
        boolean boolean48 = asteriskVersion44.isAtLeast(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion49 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion50 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int51 = asteriskVersion49.compareTo(asteriskVersion50);
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int53 = asteriskVersion49.compareTo(asteriskVersion52);
        org.asteriskjava.pbx.TechType techType54 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean55 = asteriskVersion49.equals((java.lang.Object) techType54);
        boolean boolean56 = asteriskVersion46.isAtLeast(asteriskVersion49);
        boolean boolean57 = asteriskVersion43.isAtLeast(asteriskVersion49);
        int int58 = asteriskVersion33.compareTo(asteriskVersion49);
        boolean boolean59 = asteriskVersion24.equals((java.lang.Object) int58);
        int int60 = asteriskVersion4.compareTo(asteriskVersion24);
        java.lang.String str61 = asteriskVersion24.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion62 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion64 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int65 = asteriskVersion63.compareTo(asteriskVersion64);
        boolean boolean66 = asteriskVersion62.isAtLeast(asteriskVersion64);
        org.asteriskjava.AsteriskVersion asteriskVersion67 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion68 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int69 = asteriskVersion67.compareTo(asteriskVersion68);
        boolean boolean70 = asteriskVersion62.isAtLeast(asteriskVersion67);
        boolean boolean72 = asteriskVersion62.equals((java.lang.Object) "Asterisk 1.6");
        org.asteriskjava.AsteriskVersion asteriskVersion73 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        java.lang.String str74 = asteriskVersion73.toString();
        java.lang.String str75 = asteriskVersion73.toString();
        boolean boolean76 = asteriskVersion62.isAtLeast(asteriskVersion73);
        java.lang.String str77 = asteriskVersion62.toString();
        java.lang.String str78 = asteriskVersion62.toString();
        boolean boolean79 = asteriskVersion24.equals((java.lang.Object) str78);
        java.lang.String str80 = asteriskVersion24.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Asterisk 11" + "'", str1, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertTrue("'" + activityStatusEnum6 + "' != '" + org.asteriskjava.pbx.ActivityStatusEnum.FAILURE + "'", activityStatusEnum6.equals(org.asteriskjava.pbx.ActivityStatusEnum.FAILURE));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Failure" + "'", str7, "Failure");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Failure" + "'", str8, "Failure");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Failure" + "'", str9, "Failure");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Failure" + "'", str10, "Failure");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Failure" + "'", str11, "Failure");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Asterisk 11" + "'", str14, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(asteriskVersion21);
        org.junit.Assert.assertNotNull(asteriskVersion22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion33);
        org.junit.Assert.assertNotNull(asteriskVersion34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Asterisk 11" + "'", str35, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(asteriskVersion49);
        org.junit.Assert.assertNotNull(asteriskVersion50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertTrue("'" + techType54 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType54.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Asterisk 1.8" + "'", str61, "Asterisk 1.8");
        org.junit.Assert.assertNotNull(asteriskVersion62);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertNotNull(asteriskVersion64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(asteriskVersion67);
        org.junit.Assert.assertNotNull(asteriskVersion68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(asteriskVersion73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Asterisk 12" + "'", str74, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Asterisk 12" + "'", str75, "Asterisk 12");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Asterisk 12" + "'", str77, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Asterisk 12" + "'", str78, "Asterisk 12");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "Asterisk 1.8" + "'", str80, "Asterisk 1.8");
    }

    @Test
    public void test9542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9542");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion2 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int3 = asteriskVersion1.compareTo(asteriskVersion2);
        boolean boolean4 = asteriskVersion0.isAtLeast(asteriskVersion2);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int7 = asteriskVersion5.compareTo(asteriskVersion6);
        boolean boolean8 = asteriskVersion0.isAtLeast(asteriskVersion5);
        boolean boolean10 = asteriskVersion0.equals((java.lang.Object) "Asterisk 1.6");
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        java.lang.String str12 = asteriskVersion11.toString();
        java.lang.String str13 = asteriskVersion11.toString();
        boolean boolean14 = asteriskVersion0.isAtLeast(asteriskVersion11);
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion16 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int17 = asteriskVersion15.compareTo(asteriskVersion16);
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str19 = asteriskVersion18.toString();
        boolean boolean20 = asteriskVersion16.isAtLeast(asteriskVersion18);
        boolean boolean22 = asteriskVersion16.equals((java.lang.Object) "0");
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        org.asteriskjava.AsteriskVersion asteriskVersion24 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion25 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int27 = asteriskVersion25.compareTo(asteriskVersion26);
        boolean boolean28 = asteriskVersion24.isAtLeast(asteriskVersion26);
        org.asteriskjava.AsteriskVersion asteriskVersion29 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int31 = asteriskVersion29.compareTo(asteriskVersion30);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int33 = asteriskVersion29.compareTo(asteriskVersion32);
        org.asteriskjava.pbx.TechType techType34 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean35 = asteriskVersion29.equals((java.lang.Object) techType34);
        boolean boolean36 = asteriskVersion26.isAtLeast(asteriskVersion29);
        boolean boolean37 = asteriskVersion23.isAtLeast(asteriskVersion29);
        boolean boolean38 = asteriskVersion16.isAtLeast(asteriskVersion29);
        boolean boolean39 = asteriskVersion0.isAtLeast(asteriskVersion29);
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion41 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int43 = asteriskVersion41.compareTo(asteriskVersion42);
        boolean boolean44 = asteriskVersion40.isAtLeast(asteriskVersion42);
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean47 = asteriskVersion45.isAtLeast(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int49 = asteriskVersion46.compareTo(asteriskVersion48);
        org.asteriskjava.AsteriskVersion asteriskVersion50 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean51 = asteriskVersion48.isAtLeast(asteriskVersion50);
        int int52 = asteriskVersion40.compareTo(asteriskVersion48);
        org.asteriskjava.AsteriskVersion asteriskVersion53 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int56 = asteriskVersion54.compareTo(asteriskVersion55);
        boolean boolean57 = asteriskVersion53.isAtLeast(asteriskVersion55);
        org.asteriskjava.AsteriskVersion asteriskVersion58 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion59 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean60 = asteriskVersion58.isAtLeast(asteriskVersion59);
        org.asteriskjava.AsteriskVersion asteriskVersion61 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int62 = asteriskVersion59.compareTo(asteriskVersion61);
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean64 = asteriskVersion61.isAtLeast(asteriskVersion63);
        int int65 = asteriskVersion53.compareTo(asteriskVersion61);
        boolean boolean66 = asteriskVersion40.isAtLeast(asteriskVersion61);
        boolean boolean68 = asteriskVersion40.equals((java.lang.Object) 0);
        org.asteriskjava.AsteriskVersion asteriskVersion69 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean70 = asteriskVersion40.isAtLeast(asteriskVersion69);
        java.lang.String str71 = asteriskVersion69.toString();
        java.lang.String str72 = asteriskVersion69.toString();
        java.lang.String str73 = asteriskVersion69.toString();
        boolean boolean74 = asteriskVersion29.isAtLeast(asteriskVersion69);
        java.lang.String str75 = asteriskVersion69.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertNotNull(asteriskVersion2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Asterisk 12" + "'", str12, "Asterisk 12");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Asterisk 12" + "'", str13, "Asterisk 12");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertNotNull(asteriskVersion16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Asterisk 1.0" + "'", str19, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertNotNull(asteriskVersion24);
        org.junit.Assert.assertNotNull(asteriskVersion25);
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(asteriskVersion29);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertTrue("'" + techType34 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType34.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertNotNull(asteriskVersion41);
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion53);
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(asteriskVersion58);
        org.junit.Assert.assertNotNull(asteriskVersion59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(asteriskVersion61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(asteriskVersion69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "Asterisk 20" + "'", str71, "Asterisk 20");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Asterisk 20" + "'", str72, "Asterisk 20");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Asterisk 20" + "'", str73, "Asterisk 20");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Asterisk 20" + "'", str75, "Asterisk 20");
    }

    @Test
    public void test9543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9543");
        org.asteriskjava.pbx.ListenerPriority listenerPriority0 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority1 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int2 = listenerPriority0.compare(listenerPriority1);
        org.asteriskjava.pbx.ListenerPriority listenerPriority3 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int4 = listenerPriority1.compare(listenerPriority3);
        org.asteriskjava.pbx.ListenerPriority listenerPriority5 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int6 = listenerPriority1.compare(listenerPriority5);
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean9 = asteriskVersion7.isAtLeast(asteriskVersion8);
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean12 = asteriskVersion10.isAtLeast(asteriskVersion11);
        int int13 = asteriskVersion7.compareTo(asteriskVersion11);
        org.asteriskjava.AsteriskVersion asteriskVersion14 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean16 = asteriskVersion14.isAtLeast(asteriskVersion15);
        boolean boolean17 = asteriskVersion11.isAtLeast(asteriskVersion15);
        org.asteriskjava.pbx.ListenerPriority listenerPriority18 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean19 = asteriskVersion11.equals((java.lang.Object) listenerPriority18);
        int int20 = listenerPriority5.compare(listenerPriority18);
        org.asteriskjava.pbx.ListenerPriority listenerPriority21 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int22 = listenerPriority5.compare(listenerPriority21);
        org.asteriskjava.pbx.ListenerPriority listenerPriority23 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority24 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int25 = listenerPriority23.compare(listenerPriority24);
        org.asteriskjava.pbx.ListenerPriority listenerPriority26 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int27 = listenerPriority24.compare(listenerPriority26);
        org.asteriskjava.pbx.ListenerPriority listenerPriority28 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int29 = listenerPriority24.compare(listenerPriority28);
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion31 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean32 = asteriskVersion30.isAtLeast(asteriskVersion31);
        org.asteriskjava.AsteriskVersion asteriskVersion33 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion34 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean35 = asteriskVersion33.isAtLeast(asteriskVersion34);
        int int36 = asteriskVersion30.compareTo(asteriskVersion34);
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean39 = asteriskVersion37.isAtLeast(asteriskVersion38);
        boolean boolean40 = asteriskVersion34.isAtLeast(asteriskVersion38);
        org.asteriskjava.pbx.ListenerPriority listenerPriority41 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean42 = asteriskVersion34.equals((java.lang.Object) listenerPriority41);
        int int43 = listenerPriority28.compare(listenerPriority41);
        org.asteriskjava.pbx.ListenerPriority listenerPriority44 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority45 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int46 = listenerPriority44.compare(listenerPriority45);
        org.asteriskjava.pbx.ListenerPriority listenerPriority47 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int48 = listenerPriority45.compare(listenerPriority47);
        org.asteriskjava.pbx.ListenerPriority listenerPriority49 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int50 = listenerPriority45.compare(listenerPriority49);
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean53 = asteriskVersion51.isAtLeast(asteriskVersion52);
        org.asteriskjava.AsteriskVersion asteriskVersion54 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean56 = asteriskVersion54.isAtLeast(asteriskVersion55);
        int int57 = asteriskVersion51.compareTo(asteriskVersion55);
        org.asteriskjava.AsteriskVersion asteriskVersion58 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion59 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean60 = asteriskVersion58.isAtLeast(asteriskVersion59);
        boolean boolean61 = asteriskVersion55.isAtLeast(asteriskVersion59);
        org.asteriskjava.pbx.ListenerPriority listenerPriority62 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean63 = asteriskVersion55.equals((java.lang.Object) listenerPriority62);
        int int64 = listenerPriority49.compare(listenerPriority62);
        int int65 = listenerPriority28.compare(listenerPriority49);
        int int66 = listenerPriority5.compare(listenerPriority49);
        org.asteriskjava.AsteriskVersion asteriskVersion67 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str68 = asteriskVersion67.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion69 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean70 = asteriskVersion67.isAtLeast(asteriskVersion69);
        org.asteriskjava.AsteriskVersion asteriskVersion71 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int72 = asteriskVersion67.compareTo(asteriskVersion71);
        org.asteriskjava.AsteriskVersion asteriskVersion73 = org.asteriskjava.AsteriskVersion.ASTERISK_15;
        boolean boolean74 = asteriskVersion67.isAtLeast(asteriskVersion73);
        org.asteriskjava.pbx.ListenerPriority listenerPriority75 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority76 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int77 = listenerPriority75.compare(listenerPriority76);
        org.asteriskjava.pbx.ListenerPriority listenerPriority78 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int79 = listenerPriority76.compare(listenerPriority78);
        org.asteriskjava.pbx.ListenerPriority listenerPriority80 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int81 = listenerPriority76.compare(listenerPriority80);
        boolean boolean82 = asteriskVersion67.equals((java.lang.Object) listenerPriority80);
        int int83 = listenerPriority5.compare(listenerPriority80);
        org.asteriskjava.pbx.ListenerPriority listenerPriority84 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority85 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int86 = listenerPriority84.compare(listenerPriority85);
        org.asteriskjava.pbx.ListenerPriority listenerPriority87 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority88 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int89 = listenerPriority87.compare(listenerPriority88);
        org.asteriskjava.pbx.ListenerPriority listenerPriority90 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int91 = listenerPriority88.compare(listenerPriority90);
        int int92 = listenerPriority85.compare(listenerPriority88);
        org.asteriskjava.pbx.ListenerPriority listenerPriority93 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority94 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int95 = listenerPriority93.compare(listenerPriority94);
        int int96 = listenerPriority85.compare(listenerPriority93);
        int int97 = listenerPriority80.compare(listenerPriority85);
        java.lang.Class<?> wildcardClass98 = listenerPriority80.getClass();
        org.junit.Assert.assertTrue("'" + listenerPriority0 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority0.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority1 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority1.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 2 + "'", int2 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority3 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority3.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-4) + "'", int4 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority5 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority5.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-6) + "'", int6 == (-6));
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion14);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority18 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority18.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + listenerPriority21 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority21.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2 + "'", int22 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority23 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority23.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority24 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority24.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority26 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority26.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-4) + "'", int27 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority28 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority28.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-6) + "'", int29 == (-6));
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertNotNull(asteriskVersion31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(asteriskVersion33);
        org.junit.Assert.assertNotNull(asteriskVersion34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority41 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority41.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + listenerPriority44 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority44.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority45 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority45.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 2 + "'", int46 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority47 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority47.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-4) + "'", int48 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority49 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority49.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-6) + "'", int50 == (-6));
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(asteriskVersion54);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion58);
        org.junit.Assert.assertNotNull(asteriskVersion59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority62 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority62.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "Asterisk 11" + "'", str68, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(asteriskVersion71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + listenerPriority75 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority75.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority76 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority76.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 2 + "'", int77 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority78 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority78.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-4) + "'", int79 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority80 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority80.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-6) + "'", int81 == (-6));
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + listenerPriority84 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority84.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority85 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority85.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 2 + "'", int86 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority87 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority87.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority88 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority88.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2 + "'", int89 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority90 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority90.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-4) + "'", int91 == (-4));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + listenerPriority93 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority93.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority94 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority94.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 2 + "'", int95 == 2);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-2) + "'", int96 == (-2));
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 6 + "'", int97 == 6);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test9544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9544");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str2 = asteriskVersion1.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean4 = asteriskVersion1.isAtLeast(asteriskVersion3);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean7 = asteriskVersion5.isAtLeast(asteriskVersion6);
        boolean boolean8 = asteriskVersion3.equals((java.lang.Object) asteriskVersion5);
        int int9 = asteriskVersion0.compareTo(asteriskVersion5);
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str12 = asteriskVersion11.toString();
        org.asteriskjava.pbx.TechType techType13 = org.asteriskjava.pbx.TechType.UNKNOWN;
        java.lang.Class<?> wildcardClass14 = techType13.getClass();
        boolean boolean15 = asteriskVersion11.equals((java.lang.Object) wildcardClass14);
        int int16 = asteriskVersion10.compareTo(asteriskVersion11);
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int19 = asteriskVersion17.compareTo(asteriskVersion18);
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str21 = asteriskVersion20.toString();
        boolean boolean22 = asteriskVersion18.isAtLeast(asteriskVersion20);
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion24 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int25 = asteriskVersion23.compareTo(asteriskVersion24);
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str27 = asteriskVersion26.toString();
        boolean boolean28 = asteriskVersion24.isAtLeast(asteriskVersion26);
        boolean boolean30 = asteriskVersion24.equals((java.lang.Object) "0");
        boolean boolean31 = asteriskVersion18.equals((java.lang.Object) asteriskVersion24);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion33 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion34 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion35 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int36 = asteriskVersion34.compareTo(asteriskVersion35);
        boolean boolean37 = asteriskVersion33.isAtLeast(asteriskVersion35);
        int int38 = asteriskVersion32.compareTo(asteriskVersion33);
        int int39 = asteriskVersion18.compareTo(asteriskVersion32);
        java.lang.String str40 = asteriskVersion18.toString();
        boolean boolean41 = asteriskVersion10.equals((java.lang.Object) asteriskVersion18);
        boolean boolean42 = asteriskVersion5.isAtLeast(asteriskVersion18);
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int45 = asteriskVersion43.compareTo(asteriskVersion44);
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int47 = asteriskVersion43.compareTo(asteriskVersion46);
        int int48 = asteriskVersion18.compareTo(asteriskVersion43);
        java.lang.String str49 = asteriskVersion43.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion50 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion51 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int52 = asteriskVersion50.compareTo(asteriskVersion51);
        org.asteriskjava.AsteriskVersion asteriskVersion53 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int54 = asteriskVersion50.compareTo(asteriskVersion53);
        org.asteriskjava.pbx.TechType techType55 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean56 = asteriskVersion50.equals((java.lang.Object) techType55);
        org.asteriskjava.AsteriskVersion asteriskVersion57 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        boolean boolean58 = asteriskVersion50.equals((java.lang.Object) asteriskVersion57);
        java.lang.String str59 = asteriskVersion57.toString();
        java.lang.String str60 = asteriskVersion57.toString();
        java.lang.String str61 = asteriskVersion57.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion62 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion63 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean64 = asteriskVersion62.isAtLeast(asteriskVersion63);
        org.asteriskjava.AsteriskVersion asteriskVersion65 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion66 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean67 = asteriskVersion65.isAtLeast(asteriskVersion66);
        int int68 = asteriskVersion62.compareTo(asteriskVersion66);
        org.asteriskjava.AsteriskVersion asteriskVersion69 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion70 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean71 = asteriskVersion69.isAtLeast(asteriskVersion70);
        boolean boolean72 = asteriskVersion66.isAtLeast(asteriskVersion70);
        org.asteriskjava.AsteriskVersion asteriskVersion73 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        org.asteriskjava.AsteriskVersion asteriskVersion74 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion75 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion76 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int77 = asteriskVersion75.compareTo(asteriskVersion76);
        boolean boolean78 = asteriskVersion74.isAtLeast(asteriskVersion76);
        boolean boolean79 = asteriskVersion73.equals((java.lang.Object) asteriskVersion74);
        int int80 = asteriskVersion70.compareTo(asteriskVersion74);
        boolean boolean81 = asteriskVersion57.equals((java.lang.Object) asteriskVersion70);
        int int82 = asteriskVersion43.compareTo(asteriskVersion57);
        java.lang.String str83 = asteriskVersion57.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Asterisk 11" + "'", str2, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Asterisk 1.0" + "'", str12, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + techType13 + "' != '" + org.asteriskjava.pbx.TechType.UNKNOWN + "'", techType13.equals(org.asteriskjava.pbx.TechType.UNKNOWN));
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Asterisk 1.0" + "'", str21, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertNotNull(asteriskVersion24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Asterisk 1.0" + "'", str27, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertNotNull(asteriskVersion33);
        org.junit.Assert.assertNotNull(asteriskVersion34);
        org.junit.Assert.assertNotNull(asteriskVersion35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Asterisk 16" + "'", str40, "Asterisk 16");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Asterisk 13" + "'", str49, "Asterisk 13");
        org.junit.Assert.assertNotNull(asteriskVersion50);
        org.junit.Assert.assertNotNull(asteriskVersion51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertTrue("'" + techType55 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType55.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(asteriskVersion57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Asterisk 10" + "'", str59, "Asterisk 10");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Asterisk 10" + "'", str60, "Asterisk 10");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Asterisk 10" + "'", str61, "Asterisk 10");
        org.junit.Assert.assertNotNull(asteriskVersion62);
        org.junit.Assert.assertNotNull(asteriskVersion63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(asteriskVersion65);
        org.junit.Assert.assertNotNull(asteriskVersion66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion69);
        org.junit.Assert.assertNotNull(asteriskVersion70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(asteriskVersion73);
        org.junit.Assert.assertNotNull(asteriskVersion74);
        org.junit.Assert.assertNotNull(asteriskVersion75);
        org.junit.Assert.assertNotNull(asteriskVersion76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 1 + "'", int82 == 1);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "Asterisk 10" + "'", str83, "Asterisk 10");
    }

    @Test
    public void test9545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9545");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int2 = asteriskVersion0.compareTo(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int6 = asteriskVersion4.compareTo(asteriskVersion5);
        boolean boolean7 = asteriskVersion3.isAtLeast(asteriskVersion5);
        int int8 = asteriskVersion0.compareTo(asteriskVersion3);
        java.lang.String str9 = asteriskVersion0.toString();
        java.lang.String str10 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean13 = asteriskVersion11.isAtLeast(asteriskVersion12);
        int int14 = asteriskVersion0.compareTo(asteriskVersion11);
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion16 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int17 = asteriskVersion15.compareTo(asteriskVersion16);
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int19 = asteriskVersion15.compareTo(asteriskVersion18);
        org.asteriskjava.pbx.TechType techType20 = org.asteriskjava.pbx.TechType.IAX;
        boolean boolean21 = asteriskVersion15.equals((java.lang.Object) techType20);
        org.asteriskjava.AsteriskVersion asteriskVersion22 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        boolean boolean23 = asteriskVersion15.equals((java.lang.Object) asteriskVersion22);
        int int24 = asteriskVersion0.compareTo(asteriskVersion22);
        java.lang.String str25 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int29 = asteriskVersion27.compareTo(asteriskVersion28);
        boolean boolean30 = asteriskVersion26.isAtLeast(asteriskVersion28);
        boolean boolean31 = asteriskVersion0.isAtLeast(asteriskVersion28);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion33 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int34 = asteriskVersion32.compareTo(asteriskVersion33);
        org.asteriskjava.AsteriskVersion asteriskVersion35 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int36 = asteriskVersion32.compareTo(asteriskVersion35);
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        int int38 = asteriskVersion35.compareTo(asteriskVersion37);
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean41 = asteriskVersion39.isAtLeast(asteriskVersion40);
        org.asteriskjava.AsteriskVersion asteriskVersion42 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int43 = asteriskVersion40.compareTo(asteriskVersion42);
        java.lang.String str44 = asteriskVersion42.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean47 = asteriskVersion45.isAtLeast(asteriskVersion46);
        org.asteriskjava.AsteriskVersion asteriskVersion48 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion49 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean50 = asteriskVersion48.isAtLeast(asteriskVersion49);
        int int51 = asteriskVersion45.compareTo(asteriskVersion49);
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion53 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean54 = asteriskVersion52.isAtLeast(asteriskVersion53);
        boolean boolean55 = asteriskVersion49.isAtLeast(asteriskVersion53);
        org.asteriskjava.AsteriskVersion asteriskVersion56 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean57 = asteriskVersion53.isAtLeast(asteriskVersion56);
        java.lang.String str58 = asteriskVersion53.toString();
        boolean boolean59 = asteriskVersion42.isAtLeast(asteriskVersion53);
        org.asteriskjava.AsteriskVersion asteriskVersion60 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        boolean boolean61 = asteriskVersion53.isAtLeast(asteriskVersion60);
        int int62 = asteriskVersion37.compareTo(asteriskVersion53);
        java.lang.String str63 = asteriskVersion37.toString();
        int int64 = asteriskVersion28.compareTo(asteriskVersion37);
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 1 + "'", int2 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Asterisk 17" + "'", str9, "Asterisk 17");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Asterisk 17" + "'", str10, "Asterisk 17");
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertNotNull(asteriskVersion16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + techType20 + "' != '" + org.asteriskjava.pbx.TechType.IAX + "'", techType20.equals(org.asteriskjava.pbx.TechType.IAX));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(asteriskVersion22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Asterisk 17" + "'", str25, "Asterisk 17");
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertNotNull(asteriskVersion33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(asteriskVersion42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Asterisk 20" + "'", str44, "Asterisk 20");
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(asteriskVersion48);
        org.junit.Assert.assertNotNull(asteriskVersion49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertNotNull(asteriskVersion53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(asteriskVersion56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Asterisk 20" + "'", str58, "Asterisk 20");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(asteriskVersion60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Asterisk 12" + "'", str63, "Asterisk 12");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
    }

    @Test
    public void test9546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9546");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean2 = asteriskVersion0.isAtLeast(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion4 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean5 = asteriskVersion3.isAtLeast(asteriskVersion4);
        int int6 = asteriskVersion0.compareTo(asteriskVersion4);
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean9 = asteriskVersion7.isAtLeast(asteriskVersion8);
        boolean boolean10 = asteriskVersion4.isAtLeast(asteriskVersion8);
        org.asteriskjava.pbx.ListenerPriority listenerPriority11 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean12 = asteriskVersion4.equals((java.lang.Object) listenerPriority11);
        org.asteriskjava.AsteriskVersion asteriskVersion13 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        int int14 = asteriskVersion4.compareTo(asteriskVersion13);
        org.asteriskjava.AsteriskVersion asteriskVersion15 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion16 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int18 = asteriskVersion16.compareTo(asteriskVersion17);
        boolean boolean19 = asteriskVersion15.isAtLeast(asteriskVersion17);
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        boolean boolean21 = asteriskVersion15.isAtLeast(asteriskVersion20);
        org.asteriskjava.AsteriskVersion asteriskVersion22 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion23 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion24 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int25 = asteriskVersion23.compareTo(asteriskVersion24);
        boolean boolean26 = asteriskVersion22.isAtLeast(asteriskVersion24);
        org.asteriskjava.AsteriskVersion asteriskVersion27 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean29 = asteriskVersion27.isAtLeast(asteriskVersion28);
        org.asteriskjava.AsteriskVersion asteriskVersion30 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int31 = asteriskVersion28.compareTo(asteriskVersion30);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean33 = asteriskVersion30.isAtLeast(asteriskVersion32);
        int int34 = asteriskVersion22.compareTo(asteriskVersion30);
        int int35 = asteriskVersion15.compareTo(asteriskVersion22);
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion37 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int38 = asteriskVersion36.compareTo(asteriskVersion37);
        org.asteriskjava.AsteriskVersion asteriskVersion39 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str40 = asteriskVersion39.toString();
        boolean boolean41 = asteriskVersion37.isAtLeast(asteriskVersion39);
        boolean boolean43 = asteriskVersion37.equals((java.lang.Object) "0");
        org.asteriskjava.AsteriskVersion asteriskVersion44 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean46 = asteriskVersion44.isAtLeast(asteriskVersion45);
        org.asteriskjava.AsteriskVersion asteriskVersion47 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int48 = asteriskVersion45.compareTo(asteriskVersion47);
        org.asteriskjava.AsteriskVersion asteriskVersion49 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        boolean boolean50 = asteriskVersion47.isAtLeast(asteriskVersion49);
        boolean boolean51 = asteriskVersion37.isAtLeast(asteriskVersion47);
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion53 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int54 = asteriskVersion52.compareTo(asteriskVersion53);
        org.asteriskjava.AsteriskVersion asteriskVersion55 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion56 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion57 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int58 = asteriskVersion56.compareTo(asteriskVersion57);
        boolean boolean59 = asteriskVersion55.isAtLeast(asteriskVersion57);
        int int60 = asteriskVersion52.compareTo(asteriskVersion55);
        java.lang.String str61 = asteriskVersion52.toString();
        java.lang.String str62 = asteriskVersion52.toString();
        int int63 = asteriskVersion37.compareTo(asteriskVersion52);
        int int64 = asteriskVersion22.compareTo(asteriskVersion37);
        java.lang.String str65 = asteriskVersion22.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion66 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        java.lang.String str67 = asteriskVersion66.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion68 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        org.asteriskjava.pbx.ActivityStatusEnum activityStatusEnum69 = org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS;
        java.lang.String str70 = activityStatusEnum69.getDefaultMessage();
        boolean boolean71 = asteriskVersion68.equals((java.lang.Object) str70);
        org.asteriskjava.AsteriskVersion asteriskVersion72 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion73 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean74 = asteriskVersion72.isAtLeast(asteriskVersion73);
        org.asteriskjava.AsteriskVersion asteriskVersion75 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion76 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean77 = asteriskVersion75.isAtLeast(asteriskVersion76);
        int int78 = asteriskVersion72.compareTo(asteriskVersion76);
        org.asteriskjava.AsteriskVersion asteriskVersion79 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion80 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean81 = asteriskVersion79.isAtLeast(asteriskVersion80);
        boolean boolean82 = asteriskVersion76.isAtLeast(asteriskVersion80);
        org.asteriskjava.pbx.ListenerPriority listenerPriority83 = org.asteriskjava.pbx.ListenerPriority.LOW;
        boolean boolean84 = asteriskVersion76.equals((java.lang.Object) listenerPriority83);
        org.asteriskjava.AsteriskVersion asteriskVersion85 = org.asteriskjava.AsteriskVersion.ASTERISK_1_4;
        int int86 = asteriskVersion76.compareTo(asteriskVersion85);
        boolean boolean87 = asteriskVersion68.equals((java.lang.Object) asteriskVersion76);
        java.lang.String str88 = asteriskVersion68.toString();
        boolean boolean89 = asteriskVersion66.isAtLeast(asteriskVersion68);
        boolean boolean90 = asteriskVersion22.isAtLeast(asteriskVersion66);
        boolean boolean91 = asteriskVersion13.equals((java.lang.Object) boolean90);
        java.lang.String str92 = asteriskVersion13.toString();
        java.lang.String str93 = asteriskVersion13.toString();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertNotNull(asteriskVersion4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority11 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority11.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(asteriskVersion13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion15);
        org.junit.Assert.assertNotNull(asteriskVersion16);
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(asteriskVersion22);
        org.junit.Assert.assertNotNull(asteriskVersion23);
        org.junit.Assert.assertNotNull(asteriskVersion24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(asteriskVersion27);
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(asteriskVersion30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertNotNull(asteriskVersion37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Asterisk 1.0" + "'", str40, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(asteriskVersion44);
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(asteriskVersion47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertNotNull(asteriskVersion53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion55);
        org.junit.Assert.assertNotNull(asteriskVersion56);
        org.junit.Assert.assertNotNull(asteriskVersion57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Asterisk 17" + "'", str61, "Asterisk 17");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Asterisk 17" + "'", str62, "Asterisk 17");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Asterisk 12" + "'", str65, "Asterisk 12");
        org.junit.Assert.assertNotNull(asteriskVersion66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Asterisk 10" + "'", str67, "Asterisk 10");
        org.junit.Assert.assertNotNull(asteriskVersion68);
        org.junit.Assert.assertTrue("'" + activityStatusEnum69 + "' != '" + org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS + "'", activityStatusEnum69.equals(org.asteriskjava.pbx.ActivityStatusEnum.PROGRESS));
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Progress" + "'", str70, "Progress");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(asteriskVersion72);
        org.junit.Assert.assertNotNull(asteriskVersion73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(asteriskVersion75);
        org.junit.Assert.assertNotNull(asteriskVersion76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(asteriskVersion79);
        org.junit.Assert.assertNotNull(asteriskVersion80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + listenerPriority83 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority83.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(asteriskVersion85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "Asterisk 1.0" + "'", str88, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "Asterisk 1.4" + "'", str92, "Asterisk 1.4");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "Asterisk 1.4" + "'", str93, "Asterisk 1.4");
    }

    @Test
    public void test9547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9547");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion1 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int2 = asteriskVersion0.compareTo(asteriskVersion1);
        org.asteriskjava.AsteriskVersion asteriskVersion3 = org.asteriskjava.AsteriskVersion.ASTERISK_1_6;
        int int4 = asteriskVersion0.compareTo(asteriskVersion3);
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion6 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int9 = asteriskVersion7.compareTo(asteriskVersion8);
        boolean boolean10 = asteriskVersion6.isAtLeast(asteriskVersion8);
        int int11 = asteriskVersion5.compareTo(asteriskVersion6);
        int int12 = asteriskVersion0.compareTo(asteriskVersion6);
        java.lang.String str13 = asteriskVersion6.toString();
        org.asteriskjava.pbx.ListenerPriority listenerPriority14 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority15 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int16 = listenerPriority14.compare(listenerPriority15);
        org.asteriskjava.pbx.ListenerPriority listenerPriority17 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int18 = listenerPriority15.compare(listenerPriority17);
        org.asteriskjava.pbx.ListenerPriority listenerPriority19 = org.asteriskjava.pbx.ListenerPriority.LOW;
        int int20 = listenerPriority15.compare(listenerPriority19);
        org.asteriskjava.pbx.ListenerPriority listenerPriority21 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int22 = listenerPriority15.compare(listenerPriority21);
        org.asteriskjava.pbx.ListenerPriority listenerPriority23 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority24 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int25 = listenerPriority23.compare(listenerPriority24);
        int int26 = listenerPriority21.compare(listenerPriority24);
        org.asteriskjava.pbx.ListenerPriority listenerPriority27 = org.asteriskjava.pbx.ListenerPriority.LOW;
        org.asteriskjava.pbx.ListenerPriority listenerPriority28 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority29 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int30 = listenerPriority28.compare(listenerPriority29);
        org.asteriskjava.pbx.ListenerPriority listenerPriority31 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority32 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int33 = listenerPriority31.compare(listenerPriority32);
        org.asteriskjava.pbx.ListenerPriority listenerPriority34 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int35 = listenerPriority32.compare(listenerPriority34);
        int int36 = listenerPriority29.compare(listenerPriority32);
        int int37 = listenerPriority27.compare(listenerPriority29);
        int int38 = listenerPriority24.compare(listenerPriority29);
        boolean boolean39 = asteriskVersion6.equals((java.lang.Object) listenerPriority29);
        org.asteriskjava.tools.HtmlEventTracer htmlEventTracer40 = new org.asteriskjava.tools.HtmlEventTracer();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        boolean boolean47 = asteriskVersion6.equals((java.lang.Object) htmlEventTracer40);
        htmlEventTracer40.write();
        htmlEventTracer40.write();
        org.asteriskjava.manager.event.ManagerEvent managerEvent50 = null;
        htmlEventTracer40.onManagerEvent(managerEvent50);
        org.asteriskjava.manager.event.ManagerEvent managerEvent52 = null;
        htmlEventTracer40.onManagerEvent(managerEvent52);
        org.asteriskjava.manager.event.ManagerEvent managerEvent54 = null;
        htmlEventTracer40.onManagerEvent(managerEvent54);
        org.asteriskjava.manager.event.ManagerEvent managerEvent56 = null;
        htmlEventTracer40.onManagerEvent(managerEvent56);
        org.asteriskjava.manager.event.ManagerEvent managerEvent58 = null;
        htmlEventTracer40.onManagerEvent(managerEvent58);
        org.asteriskjava.manager.event.ManagerEvent managerEvent60 = null;
        htmlEventTracer40.onManagerEvent(managerEvent60);
        org.asteriskjava.manager.event.ManagerEvent managerEvent62 = null;
        htmlEventTracer40.onManagerEvent(managerEvent62);
        org.asteriskjava.manager.event.ManagerEvent managerEvent64 = null;
        htmlEventTracer40.onManagerEvent(managerEvent64);
        org.asteriskjava.manager.event.ManagerEvent managerEvent66 = null;
        htmlEventTracer40.onManagerEvent(managerEvent66);
        org.asteriskjava.manager.event.ManagerEvent managerEvent68 = null;
        htmlEventTracer40.onManagerEvent(managerEvent68);
        org.asteriskjava.manager.event.ManagerEvent managerEvent70 = null;
        htmlEventTracer40.onManagerEvent(managerEvent70);
        org.asteriskjava.manager.event.ManagerEvent managerEvent72 = null;
        htmlEventTracer40.onManagerEvent(managerEvent72);
        java.lang.Class<?> wildcardClass74 = htmlEventTracer40.getClass();
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertNotNull(asteriskVersion1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + (-1) + "'", int2 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertNotNull(asteriskVersion6);
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Asterisk 12" + "'", str13, "Asterisk 12");
        org.junit.Assert.assertTrue("'" + listenerPriority14 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority14.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority15 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority15.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2 + "'", int16 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority17 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority17.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-4) + "'", int18 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority19 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority19.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-6) + "'", int20 == (-6));
        org.junit.Assert.assertTrue("'" + listenerPriority21 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority21.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-4) + "'", int22 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority23 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority23.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority24 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority24.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 2 + "'", int25 == 2);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 4 + "'", int26 == 4);
        org.junit.Assert.assertTrue("'" + listenerPriority27 + "' != '" + org.asteriskjava.pbx.ListenerPriority.LOW + "'", listenerPriority27.equals(org.asteriskjava.pbx.ListenerPriority.LOW));
        org.junit.Assert.assertTrue("'" + listenerPriority28 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority28.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority29 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority29.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2 + "'", int30 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority31 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority31.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority32 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority32.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority34 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority34.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-4) + "'", int35 == (-4));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 6 + "'", int37 == 6);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test9548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest19.test9548");
        org.asteriskjava.AsteriskVersion asteriskVersion0 = org.asteriskjava.AsteriskVersion.ASTERISK_10;
        java.lang.String str1 = asteriskVersion0.toString();
        java.lang.String str2 = asteriskVersion0.toString();
        java.lang.String str3 = asteriskVersion0.toString();
        java.lang.String str4 = asteriskVersion0.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion5 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        java.lang.String str6 = asteriskVersion5.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion7 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion8 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int9 = asteriskVersion7.compareTo(asteriskVersion8);
        org.asteriskjava.AsteriskVersion asteriskVersion10 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion11 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion12 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int13 = asteriskVersion11.compareTo(asteriskVersion12);
        boolean boolean14 = asteriskVersion10.isAtLeast(asteriskVersion12);
        int int15 = asteriskVersion7.compareTo(asteriskVersion10);
        java.lang.String str16 = asteriskVersion7.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion17 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        org.asteriskjava.AsteriskVersion asteriskVersion18 = org.asteriskjava.AsteriskVersion.ASTERISK_12;
        org.asteriskjava.AsteriskVersion asteriskVersion19 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion20 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int21 = asteriskVersion19.compareTo(asteriskVersion20);
        boolean boolean22 = asteriskVersion18.isAtLeast(asteriskVersion20);
        boolean boolean23 = asteriskVersion17.equals((java.lang.Object) asteriskVersion18);
        int int24 = asteriskVersion7.compareTo(asteriskVersion17);
        org.asteriskjava.AsteriskVersion asteriskVersion25 = org.asteriskjava.AsteriskVersion.ASTERISK_13;
        org.asteriskjava.AsteriskVersion asteriskVersion26 = org.asteriskjava.AsteriskVersion.ASTERISK_16;
        int int27 = asteriskVersion25.compareTo(asteriskVersion26);
        org.asteriskjava.AsteriskVersion asteriskVersion28 = org.asteriskjava.AsteriskVersion.ASTERISK_1_8;
        int int29 = asteriskVersion25.compareTo(asteriskVersion28);
        java.lang.String str30 = asteriskVersion28.toString();
        int int31 = asteriskVersion7.compareTo(asteriskVersion28);
        org.asteriskjava.AsteriskVersion asteriskVersion32 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str33 = asteriskVersion32.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion34 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean35 = asteriskVersion32.isAtLeast(asteriskVersion34);
        org.asteriskjava.AsteriskVersion asteriskVersion36 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int37 = asteriskVersion32.compareTo(asteriskVersion36);
        org.asteriskjava.AsteriskVersion asteriskVersion38 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        int int39 = asteriskVersion36.compareTo(asteriskVersion38);
        org.asteriskjava.AsteriskVersion asteriskVersion40 = org.asteriskjava.AsteriskVersion.ASTERISK_14;
        org.asteriskjava.AsteriskVersion asteriskVersion41 = org.asteriskjava.AsteriskVersion.ASTERISK_11;
        java.lang.String str42 = asteriskVersion41.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion43 = org.asteriskjava.AsteriskVersion.ASTERISK_19;
        boolean boolean44 = asteriskVersion41.isAtLeast(asteriskVersion43);
        org.asteriskjava.AsteriskVersion asteriskVersion45 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        org.asteriskjava.AsteriskVersion asteriskVersion46 = org.asteriskjava.AsteriskVersion.ASTERISK_20;
        boolean boolean47 = asteriskVersion45.isAtLeast(asteriskVersion46);
        boolean boolean48 = asteriskVersion43.equals((java.lang.Object) asteriskVersion45);
        int int49 = asteriskVersion40.compareTo(asteriskVersion45);
        boolean boolean50 = asteriskVersion38.equals((java.lang.Object) int49);
        java.lang.String str51 = asteriskVersion38.toString();
        org.asteriskjava.AsteriskVersion asteriskVersion52 = org.asteriskjava.AsteriskVersion.ASTERISK_18;
        org.asteriskjava.pbx.ListenerPriority listenerPriority53 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority54 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int55 = listenerPriority53.compare(listenerPriority54);
        org.asteriskjava.pbx.ListenerPriority listenerPriority56 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int57 = listenerPriority54.compare(listenerPriority56);
        org.asteriskjava.pbx.ListenerPriority listenerPriority58 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority59 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int60 = listenerPriority58.compare(listenerPriority59);
        org.asteriskjava.pbx.ListenerPriority listenerPriority61 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority62 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int63 = listenerPriority61.compare(listenerPriority62);
        org.asteriskjava.pbx.ListenerPriority listenerPriority64 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int65 = listenerPriority62.compare(listenerPriority64);
        int int66 = listenerPriority59.compare(listenerPriority62);
        int int67 = listenerPriority56.compare(listenerPriority62);
        org.asteriskjava.pbx.ListenerPriority listenerPriority68 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority69 = org.asteriskjava.pbx.ListenerPriority.HIGH;
        org.asteriskjava.pbx.ListenerPriority listenerPriority70 = org.asteriskjava.pbx.ListenerPriority.CRITICAL;
        int int71 = listenerPriority69.compare(listenerPriority70);
        org.asteriskjava.pbx.ListenerPriority listenerPriority72 = org.asteriskjava.pbx.ListenerPriority.NORMAL;
        int int73 = listenerPriority70.compare(listenerPriority72);
        int int74 = listenerPriority68.compare(listenerPriority70);
        int int75 = listenerPriority62.compare(listenerPriority70);
        boolean boolean76 = asteriskVersion52.equals((java.lang.Object) int75);
        org.asteriskjava.AsteriskVersion asteriskVersion77 = org.asteriskjava.AsteriskVersion.ASTERISK_17;
        org.asteriskjava.AsteriskVersion asteriskVersion78 = org.asteriskjava.AsteriskVersion.DEFAULT_VERSION;
        int int79 = asteriskVersion77.compareTo(asteriskVersion78);
        org.asteriskjava.AsteriskVersion asteriskVersion80 = org.asteriskjava.AsteriskVersion.ASTERISK_1_0;
        java.lang.String str81 = asteriskVersion80.toString();
        boolean boolean82 = asteriskVersion78.isAtLeast(asteriskVersion80);
        boolean boolean84 = asteriskVersion78.equals((java.lang.Object) "0");
        boolean boolean85 = asteriskVersion52.isAtLeast(asteriskVersion78);
        boolean boolean86 = asteriskVersion38.isAtLeast(asteriskVersion52);
        java.lang.String str87 = asteriskVersion52.toString();
        int int88 = asteriskVersion7.compareTo(asteriskVersion52);
        boolean boolean89 = asteriskVersion5.isAtLeast(asteriskVersion52);
        boolean boolean90 = asteriskVersion0.isAtLeast(asteriskVersion52);
        org.junit.Assert.assertNotNull(asteriskVersion0);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Asterisk 10" + "'", str1, "Asterisk 10");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Asterisk 10" + "'", str2, "Asterisk 10");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Asterisk 10" + "'", str3, "Asterisk 10");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Asterisk 10" + "'", str4, "Asterisk 10");
        org.junit.Assert.assertNotNull(asteriskVersion5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Asterisk 14" + "'", str6, "Asterisk 14");
        org.junit.Assert.assertNotNull(asteriskVersion7);
        org.junit.Assert.assertNotNull(asteriskVersion8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion10);
        org.junit.Assert.assertNotNull(asteriskVersion11);
        org.junit.Assert.assertNotNull(asteriskVersion12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Asterisk 17" + "'", str16, "Asterisk 17");
        org.junit.Assert.assertNotNull(asteriskVersion17);
        org.junit.Assert.assertNotNull(asteriskVersion18);
        org.junit.Assert.assertNotNull(asteriskVersion19);
        org.junit.Assert.assertNotNull(asteriskVersion20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion25);
        org.junit.Assert.assertNotNull(asteriskVersion26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Asterisk 1.8" + "'", str30, "Asterisk 1.8");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Asterisk 11" + "'", str33, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(asteriskVersion36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(asteriskVersion40);
        org.junit.Assert.assertNotNull(asteriskVersion41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Asterisk 11" + "'", str42, "Asterisk 11");
        org.junit.Assert.assertNotNull(asteriskVersion43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(asteriskVersion45);
        org.junit.Assert.assertNotNull(asteriskVersion46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Asterisk 20" + "'", str51, "Asterisk 20");
        org.junit.Assert.assertNotNull(asteriskVersion52);
        org.junit.Assert.assertTrue("'" + listenerPriority53 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority53.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority54 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority54.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 2 + "'", int55 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority56 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority56.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-4) + "'", int57 == (-4));
        org.junit.Assert.assertTrue("'" + listenerPriority58 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority58.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority59 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority59.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 2 + "'", int60 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority61 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority61.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority62 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority62.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 2 + "'", int63 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority64 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority64.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-4) + "'", int65 == (-4));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 4 + "'", int67 == 4);
        org.junit.Assert.assertTrue("'" + listenerPriority68 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority68.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority69 + "' != '" + org.asteriskjava.pbx.ListenerPriority.HIGH + "'", listenerPriority69.equals(org.asteriskjava.pbx.ListenerPriority.HIGH));
        org.junit.Assert.assertTrue("'" + listenerPriority70 + "' != '" + org.asteriskjava.pbx.ListenerPriority.CRITICAL + "'", listenerPriority70.equals(org.asteriskjava.pbx.ListenerPriority.CRITICAL));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2 + "'", int71 == 2);
        org.junit.Assert.assertTrue("'" + listenerPriority72 + "' != '" + org.asteriskjava.pbx.ListenerPriority.NORMAL + "'", listenerPriority72.equals(org.asteriskjava.pbx.ListenerPriority.NORMAL));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-4) + "'", int73 == (-4));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(asteriskVersion77);
        org.junit.Assert.assertNotNull(asteriskVersion78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(asteriskVersion80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Asterisk 1.0" + "'", str81, "Asterisk 1.0");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Asterisk 18" + "'", str87, "Asterisk 18");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }
}

