package pignlproc;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        int int5 = annotation4.end;
        java.lang.String str6 = annotation4.value;
        int int7 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        countingAppendable4.currentPosition = '#';
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable8 = countingAppendable4.append((java.lang.CharSequence) "\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\"title\"", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"title\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText4 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        safeTsvText4.setPigLogger(pigLogger5);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = mergeAsOpenNLPAnnotatedText7.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = checkAbstract9.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = safeTsvText4.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = noLoopInPath3.outputSchema(schema12);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag15 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText16 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        safeTsvText16.setPigLogger(pigLogger17);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = mergeAsOpenNLPAnnotatedText19.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = checkAbstract21.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = mergeAsOpenNLPAnnotatedText19.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = safeTsvText16.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = aggregateTextBag15.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath3.outputSchema(schema24);
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum30 = null;
        checkAbstract28.warn("http://.wikipedia.org/wiki/hi%21", enum30);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        checkAbstract28.setPigLogger(pigLogger32);
        checkAbstract28.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText35 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        safeTsvText35.setPigLogger(pigLogger36);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText35.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract28.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = noLoopInPath3.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = aggregateTextBag2.outputSchema(schema45);
        aggregateTextBag2.finish();
        boolean boolean49 = aggregateTextBag2.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(pigProgressable20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.String str4 = annotatingMarkupParser0.parse("\"title\"");
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"");
        info.bliki.wiki.model.WikiModel wikiModel8 = annotatingMarkupParser0.makeWikiModel("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
        boolean boolean9 = annotatingMarkupParser0.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"title\"\n" + "'", str4, "\"title\"\n");
        org.junit.Assert.assertNotNull(wikiModel6);
        org.junit.Assert.assertNotNull(wikiModel8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(annotationList10);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser14.getHeaderAnnotations();
        java.lang.String str18 = annotatingMarkupParser14.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.lang.Appendable appendable28 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser25.new CountingAppendable(appendable28);
        countingAppendable29.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        countingAppendable32.currentPosition = (byte) -1;
        countingAppendable32.currentPosition = 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable37 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable39 = countingAppendable32.append(' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink1 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList2 = sentencesWithLink1.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        sentencesWithLink1.setPigLogger(pigLogger3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink1.setReporter(pigProgressable5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = sentencesWithLink1.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        sentencesWithLink1.setReporter(pigProgressable8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        sentencesWithLink1.setReporter(pigProgressable10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        sentencesWithLink1.setPigLogger(pigLogger12);
        boolean boolean14 = sentencesWithLink1.isAsynchronous();
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer16 = new pignlproc.storage.UriUriNTriplesStorer("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList17 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) "\"\"\"hi!\"\" \"\n", (java.lang.Object) boolean14, (java.lang.Object) uriUriNTriplesStorer16);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(funcSpecList2);
        org.junit.Assert.assertNull(pigLogger7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("hi !");
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("\" hi ! \"");
        org.apache.hadoop.mapreduce.Job job8 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.cleanupOnFailure("", job8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can not create a Path from an empty string");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href", "\"\"\"opennlp / en - sent . bin\"\"\"");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.setStoreLocation("\"opennlp / en - sent . bin\"", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.Boolean boolean9 = checkAbstract0.exec(tuple8);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = checkAbstract0.getArgToFuncMapping();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList11 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = checkAbstract0.getReporter();
        pignlproc.evaluation.ConcatTextBag concatTextBag14 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = concatTextBag14.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable16 = null;
        concatTextBag14.setReporter(pigProgressable16);
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum20 = null;
        checkAbstract18.warn("http://.wikipedia.org/wiki/hi%21", enum20);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        checkAbstract18.setPigLogger(pigLogger22);
        checkAbstract18.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract18.outputSchema(schema34);
        pignlproc.evaluation.NoLoopInPath noLoopInPath36 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText37 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = null;
        safeTsvText37.setPigLogger(pigLogger38);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText40 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = mergeAsOpenNLPAnnotatedText40.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract42 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract42.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = mergeAsOpenNLPAnnotatedText40.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = safeTsvText37.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath36.outputSchema(schema45);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag48 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText49 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger50 = null;
        safeTsvText49.setPigLogger(pigLogger50);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText52 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable53 = mergeAsOpenNLPAnnotatedText52.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = checkAbstract54.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = mergeAsOpenNLPAnnotatedText52.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = safeTsvText49.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = aggregateTextBag48.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = noLoopInPath36.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = checkAbstract18.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = concatTextBag14.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = checkAbstract0.outputSchema(schema62);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertNull(funcSpecList11);
        org.junit.Assert.assertNull(pigProgressable12);
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(pigProgressable41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(pigProgressable53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("title", "hi !", "http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader5 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = parsingWikipediaLoader5.getStatistics("hi!", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = parsingWikipediaLoader5.getSchema("\"hi!\"", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader5.getSchema("\"hi!\"\n", job13);
        uriUriNTriplesStorer3.checkSchema(resourceSchema14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.setStoreLocation("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"", job17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics8);
        org.junit.Assert.assertNotNull(resourceSchema11);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("hi!\n", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: hi!? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList2 = checkAbstract1.getArgToFuncMapping();
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract1.exec(tuple3);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag7 = new pignlproc.evaluation.AggregateTextBag((-1), false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        aggregateTextBag7.setReporter(pigProgressable8);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray12 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList13 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList13, spanArray12);
        java.lang.String str15 = mergeAsOpenNLPAnnotatedText10.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList13);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList16 = mergeAsOpenNLPAnnotatedText10.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray19 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList20 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList20, spanArray19);
        java.lang.String str22 = mergeAsOpenNLPAnnotatedText17.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList20);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        mergeAsOpenNLPAnnotatedText17.setPigLogger(pigLogger23);
        boolean boolean25 = mergeAsOpenNLPAnnotatedText17.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum28 = null;
        checkAbstract26.warn("http://.wikipedia.org/wiki/hi%21", enum28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = null;
        checkAbstract26.setReporter(pigProgressable30);
        java.lang.reflect.Type type32 = checkAbstract26.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath33 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText34 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        safeTsvText34.setPigLogger(pigLogger35);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText37 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable38 = mergeAsOpenNLPAnnotatedText37.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract39 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract39.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = mergeAsOpenNLPAnnotatedText37.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText34.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath33.outputSchema(schema42);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag45 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText46 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        safeTsvText46.setPigLogger(pigLogger47);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText49 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable50 = mergeAsOpenNLPAnnotatedText49.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract51 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract51.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText49.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = safeTsvText46.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = aggregateTextBag45.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = noLoopInPath33.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract26.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = mergeAsOpenNLPAnnotatedText10.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = aggregateTextBag7.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract1.outputSchema(schema54);
        org.junit.Assert.assertNull(funcSpecList2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNotNull(spanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !" + "'", str15, "hi !");
        org.junit.Assert.assertNull(funcSpecList16);
        org.junit.Assert.assertNotNull(spanArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi !" + "'", str22, "hi !");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNull(pigProgressable38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(pigProgressable50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.finish();
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        java.lang.Enum enum9 = null;
        sentencesWithLink0.warn("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"", enum9);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, 0L, (long) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        org.apache.commons.logging.Log log1 = aggregateTextBag0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = aggregateTextBag0.getReporter();
        boolean boolean3 = aggregateTextBag0.isAsynchronous();
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser2.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser8.getHeaderAnnotations();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getParagraphs();
        java.lang.Appendable appendable11 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser8.new CountingAppendable(appendable11);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        int int15 = countingAppendable12.currentPosition;
        int int16 = countingAppendable12.currentPosition;
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) 'a');
        pignlproc.evaluation.SafeTsvText safeTsvText2 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        safeTsvText2.setPigLogger(pigLogger3);
        org.apache.commons.logging.Log log5 = safeTsvText2.getLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = safeTsvText2.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink7.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        java.lang.Enum enum14 = null;
        checkAbstract9.warn("hi !", enum14);
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract9.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = sentencesWithLink7.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText2.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract1.outputSchema(schema42);
        org.apache.pig.data.Tuple tuple45 = null;
        java.lang.Boolean boolean46 = checkAbstract1.exec(tuple45);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertEquals("'" + boolean46 + "' != '" + false + "'", boolean46, false);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.RecordWriter recordWriter3 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter3);
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer6 = new pignlproc.storage.UriStringLiteralNTriplesStorer("title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader8 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = parsingWikipediaLoader8.getStatistics("hi!", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader8.getSchema("hi!", job13);
        uriStringLiteralNTriplesStorer6.checkSchema(resourceSchema14);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema14);
        org.apache.hadoop.mapreduce.Job job18 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.setStoreLocation("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin", job18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        org.apache.commons.logging.Log log7 = sentencesWithLink0.getLogger();
        org.apache.commons.logging.Log log8 = sentencesWithLink0.getLogger();
        org.apache.commons.logging.Log log9 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type10 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(type10);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceStatistics resourceStatistics9 = uriUriNTriplesLoader3.getStatistics("opennlp/en-sent.bin", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("http://\"title\".wikipedia.org/wiki/%22hi%21%22", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriUriNTriplesLoader3.getSchema("wikiobject", job14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        java.lang.String[] strArray18 = uriUriNTriplesLoader3.getPartitionKeys("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", job17);
        org.apache.hadoop.mapreduce.Job job20 = null;
        java.lang.String[] strArray21 = uriUriNTriplesLoader3.getPartitionKeys("\" opennlp / en - sent . bin \"\n", job20);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(resourceStatistics9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNull(strArray18);
        org.junit.Assert.assertNull(strArray21);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", "hi !", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser4.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel7 = annotatingMarkupParser4.makeWikiModel("title");
        java.lang.String str9 = annotatingMarkupParser4.parse("hi!");
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser4.getParagraphs();
        java.lang.String str12 = annotatingMarkupParser4.parse("");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList13 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) "hi !", (java.lang.Object) str12);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(wikiModel7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!\n" + "'", str9, "hi!\n");
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("hi!\n");
        org.apache.hadoop.fs.Path path3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = uriUriNTriplesStorer1.relToAbsPathForStoreLocation("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", path3);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://http://.wikipedia.org/wiki/hi%21?.wikipedia.org/wiki/hi%21 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = null;
        sentencesWithLink0.setReporter(pigProgressable24);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = sentencesWithLink0.getPigLogger();
        org.apache.pig.data.Tuple tuple27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag28 = sentencesWithLink0.exec(tuple27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigLogger23);
        org.junit.Assert.assertNull(pigLogger26);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        boolean boolean4 = annotatingMarkupParser0.noLinks();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"hi!\"\n", "");
        org.apache.pig.Expression expression3 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression3);
        uriStringLiteralNTriplesLoader2.setUDFContextSignature("\"hi! \"");
        uriStringLiteralNTriplesLoader2.setUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href");
        org.apache.pig.Expression expression9 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression9);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("hi !");
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum9 = null;
        checkAbstract7.warn("http://.wikipedia.org/wiki/hi%21", enum9);
        java.lang.Enum enum12 = null;
        checkAbstract7.warn("hi !", enum12);
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract7.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = sentencesWithLink0.outputSchema(schema38);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList41 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(funcSpecList41);
        org.junit.Assert.assertNull(pigLogger42);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        countingAppendable29.currentPosition = (byte) 10;
        countingAppendable29.currentPosition = ' ';
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.lang.String str6 = annotatingMarkupParser0.parse("");
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getParagraphAnnotations();
        java.lang.String str8 = annotatingMarkupParser0.getRedirect();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(annotationList10);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "title", "opennlp/en-sent.bin");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader7 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat8 = uriUriNTriplesLoader7.getInputFormat();
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriUriNTriplesLoader7.getStatistics("http://.wikipedia.org/wiki/hi%21\n", job10);
        org.apache.hadoop.mapreduce.InputFormat inputFormat12 = uriUriNTriplesLoader7.getInputFormat();
        org.apache.hadoop.mapreduce.Job job14 = null;
        java.lang.String[] strArray15 = uriUriNTriplesLoader7.getPartitionKeys("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", job14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        org.apache.pig.ResourceSchema resourceSchema18 = uriUriNTriplesLoader7.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job17);
        uriStringLiteralNTriplesStorer3.checkSchema(resourceSchema18);
        org.apache.hadoop.mapreduce.Job job21 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.cleanupOnFailure("\"http://.wikipedia.org/wiki/hi%21\"\n\n", job21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"http://.wikipedia.org/wiki/hi%2521%22%0A%0A");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat8);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(inputFormat12);
        org.junit.Assert.assertNull(strArray15);
        org.junit.Assert.assertNotNull(resourceSchema18);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("http://.wikipedia.org/wiki/hi%21\n", job12);
        parsingWikipediaLoader1.setUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        org.apache.hadoop.mapreduce.Job job17 = null;
        java.lang.String[] strArray18 = parsingWikipediaLoader1.getPartitionKeys("\"http://.wikipedia.org/wiki/hi%21\"\n\n", job17);
        org.apache.hadoop.mapreduce.Job job20 = null;
        java.lang.String[] strArray21 = parsingWikipediaLoader1.getPartitionKeys("hi!", job20);
        org.apache.hadoop.mapreduce.Job job23 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21", job23);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: http :%20/%20http%20:%20/%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNull(strArray18);
        org.junit.Assert.assertNull(strArray21);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http : // . wikipedia . org / wiki / hi % 21", "\"\"\" http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522 \"\"\"", "hi!\n\n");
        org.apache.hadoop.fs.Path path5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = uriUriNTriplesLoader3.relativeToAbsolutePath("\"\"\n", path5);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("title", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple8 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("title", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        org.apache.hadoop.mapreduce.InputFormat inputFormat8 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", job10);
        org.apache.hadoop.mapreduce.RecordReader recordReader12 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit13 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader12, pigSplit13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceSchema resourceSchema17 = uriStringLiteralNTriplesLoader2.getSchema("\"opennlp/en-sent.bin\"", job16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple18 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat8);
        org.junit.Assert.assertNull(strArray11);
        org.junit.Assert.assertNotNull(resourceSchema17);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.Job job4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.setStoreLocation("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\n", job4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.Expression expression2 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = parsingWikipediaLoader1.getStatistics("hi!\n", job5);
        org.apache.hadoop.mapreduce.InputFormat inputFormat7 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader8, pigSplit9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceSchema resourceSchema16 = parsingWikipediaLoader1.getSchema("\"title\"", job15);
        org.apache.hadoop.mapreduce.InputFormat inputFormat17 = parsingWikipediaLoader1.getInputFormat();
        org.junit.Assert.assertNull(resourceStatistics6);
        org.junit.Assert.assertNotNull(inputFormat7);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNotNull(resourceSchema16);
        org.junit.Assert.assertNotNull(inputFormat17);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\"\"\"title\"\" \"href", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\"title\"\" \"href curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((-1), false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag2.setReporter(pigProgressable3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray7 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList8 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList8, spanArray7);
        java.lang.String str10 = mergeAsOpenNLPAnnotatedText5.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList8);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList11 = mergeAsOpenNLPAnnotatedText5.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray14 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList15 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList15, spanArray14);
        java.lang.String str17 = mergeAsOpenNLPAnnotatedText12.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList15);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        mergeAsOpenNLPAnnotatedText12.setPigLogger(pigLogger18);
        boolean boolean20 = mergeAsOpenNLPAnnotatedText12.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum23 = null;
        checkAbstract21.warn("http://.wikipedia.org/wiki/hi%21", enum23);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = null;
        checkAbstract21.setReporter(pigProgressable25);
        java.lang.reflect.Type type27 = checkAbstract21.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath28 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = noLoopInPath28.outputSchema(schema37);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag40 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText41 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        safeTsvText41.setPigLogger(pigLogger42);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText44 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable45 = mergeAsOpenNLPAnnotatedText44.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract46 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract46.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = mergeAsOpenNLPAnnotatedText44.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = safeTsvText41.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = aggregateTextBag40.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = noLoopInPath28.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract21.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = mergeAsOpenNLPAnnotatedText5.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = aggregateTextBag2.outputSchema(schema49);
        pignlproc.evaluation.CheckAbstract checkAbstract57 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum59 = null;
        checkAbstract57.warn("http://.wikipedia.org/wiki/hi%21", enum59);
        java.lang.Enum enum62 = null;
        checkAbstract57.warn("hi !", enum62);
        pignlproc.evaluation.NoLoopInPath noLoopInPath64 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText65 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger66 = null;
        safeTsvText65.setPigLogger(pigLogger66);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText68 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable69 = mergeAsOpenNLPAnnotatedText68.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract70 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = checkAbstract70.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = mergeAsOpenNLPAnnotatedText68.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = safeTsvText65.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = noLoopInPath64.outputSchema(schema73);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag76 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText77 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger78 = null;
        safeTsvText77.setPigLogger(pigLogger78);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText80 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable81 = mergeAsOpenNLPAnnotatedText80.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract82 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = checkAbstract82.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = mergeAsOpenNLPAnnotatedText80.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = safeTsvText77.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = aggregateTextBag76.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = noLoopInPath64.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = checkAbstract57.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = checkAbstract57.outputSchema(schema90);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = aggregateTextBag2.outputSchema(schema90);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList93 = aggregateTextBag2.getArgToFuncMapping();
        org.apache.pig.data.Tuple tuple94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str95 = aggregateTextBag2.exec(tuple94);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi !" + "'", str10, "hi !");
        org.junit.Assert.assertNull(funcSpecList11);
        org.junit.Assert.assertNotNull(spanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi !" + "'", str17, "hi !");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(pigProgressable45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(pigProgressable69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(pigProgressable81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(funcSpecList93);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = mergeAsOpenNLPAnnotatedText1.exec(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag8 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        aggregateTextBag8.progress();
        pignlproc.evaluation.ConcatTextBag concatTextBag11 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum14 = null;
        checkAbstract12.warn("http://.wikipedia.org/wiki/hi%21", enum14);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        checkAbstract12.setPigLogger(pigLogger16);
        checkAbstract12.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText19 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger20 = null;
        safeTsvText19.setPigLogger(pigLogger20);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText22 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable23 = mergeAsOpenNLPAnnotatedText22.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract24.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText22.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = safeTsvText19.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract12.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = concatTextBag11.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = aggregateTextBag8.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema31);
        org.apache.pig.data.Tuple tuple33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str34 = mergeAsOpenNLPAnnotatedText0.exec(tuple33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(pigProgressable23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean2 = noLoopInPath1.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = noLoopInPath1.getPigLogger();
        org.apache.commons.logging.Log log4 = noLoopInPath1.getLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = noLoopInPath1.getArgToFuncMapping();
        org.apache.pig.data.Tuple tuple6 = null;
        java.lang.Boolean boolean7 = noLoopInPath1.exec(tuple6);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(pigLogger3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + true + "'", boolean7, true);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("href", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("hi !", job7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple9 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNotNull(resourceSchema8);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract0.setReporter(pigProgressable4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = checkAbstract0.getReporter();
        org.junit.Assert.assertNull(pigProgressable6);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.fs.Path path4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", path4);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://http://hi!?.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        java.lang.reflect.Type type25 = sentencesWithLink0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList26 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(funcSpecList26);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple8 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray5);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) '#', (int) (byte) 1, "", "title");
        int int5 = annotation4.begin;
        java.lang.String str6 = annotation4.value;
        java.lang.Class<?> wildcardClass7 = annotation4.getClass();
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 35 + "'", int5 == 35);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "title" + "'", str6, "title");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/hrefwikiobject\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"wikiobject\"hi!\"\nwikiobject\nwikiobjectopennlp/en-sent.binwikiobjecthttp://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"opennlp / en - sent . bin\"wikiobject\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/hrefwikiobject\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"wikiobject\"hi!\"?wikiobject?wikiobjectopennlp/en-sent.binwikiobjecthttp://hi!?.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"opennlp / en - sent . bin\"wikiobject\"\"\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: http :%20/%20%22%20opennlp%20/%20en%20-%20sent%20.%20bin%20%22%20.%20wikipedia%20.%20org%20/%20wiki%20/%20href");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"opennlp/en-sent.bin\"");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader3 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = parsingWikipediaLoader3.getSchema("title", job5);
        org.apache.pig.LoadCaster loadCaster7 = parsingWikipediaLoader3.getLoadCaster();
        parsingWikipediaLoader3.setUDFContextSignature("hi !");
        org.apache.pig.Expression expression10 = null;
        parsingWikipediaLoader3.setPartitionFilter(expression10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader3.getSchema("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", job13);
        uriUriNTriplesStorer1.checkSchema(resourceSchema14);
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader19 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat20 = uriUriNTriplesLoader19.getInputFormat();
        org.apache.hadoop.mapreduce.Job job22 = null;
        org.apache.pig.ResourceSchema resourceSchema23 = uriUriNTriplesLoader19.getSchema("\"\"\"hi!\"\" \"", job22);
        uriUriNTriplesStorer1.checkSchema(resourceSchema23);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(loadCaster7);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNotNull(inputFormat20);
        org.junit.Assert.assertNotNull(resourceSchema23);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = concatTextBag1.getPigLogger();
        concatTextBag1.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        concatTextBag1.setReporter(pigProgressable4);
        org.junit.Assert.assertNull(pigLogger2);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        sentencesWithLink0.setPigLogger(pigLogger9);
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNull(pigLogger7);
        org.junit.Assert.assertNull(pigLogger8);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\n");
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) '#', true);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("");
        java.lang.String str3 = annotatingMarkupParser1.parse("\"\"\"hi!\"\" \"\n");
        java.lang.Class<?> wildcardClass4 = annotatingMarkupParser1.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "\"\"\"hi!\"\" \"\n\n" + "'", str3, "\"\"\"hi!\"\" \"\n\n");
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = noLoopInPath0.getPigLogger();
        java.lang.Enum enum29 = null;
        noLoopInPath0.warn("http://http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521", enum29);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(pigLogger27);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str15 = annotatingMarkupParser0.parse("hi !\n");
        java.lang.String str16 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !\n\n" + "'", str15, "hi !\n\n");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser4.getHeaders();
        java.lang.Appendable appendable7 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable8 = annotatingMarkupParser4.new CountingAppendable(appendable7);
        java.lang.String str10 = annotatingMarkupParser4.parse("\"hi!\"\n");
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser4.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser14.getHeaderAnnotations();
        java.lang.String str18 = annotatingMarkupParser14.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.lang.Appendable appendable28 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser25.new CountingAppendable(appendable28);
        countingAppendable29.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser13.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        java.lang.String str35 = annotatingMarkupParser13.parse("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin");
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser13.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser39 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser39.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser39.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList42 = annotatingMarkupParser39.getParagraphAnnotations();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser39.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList44 = annotatingMarkupParser39.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser45 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList46 = annotatingMarkupParser45.getHeaderAnnotations();
        java.util.List<java.lang.String> strList47 = annotatingMarkupParser45.getParagraphs();
        java.lang.Appendable appendable48 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser45.new CountingAppendable(appendable48);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable50 = annotatingMarkupParser39.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable51 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        int int52 = countingAppendable49.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser54 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        info.bliki.wiki.model.WikiModel wikiModel56 = annotatingMarkupParser54.makeWikiModel("hi !\n\n");
        annotatingMarkupParser4.nodesToText(annotationList36, (java.lang.Appendable) countingAppendable49, (info.bliki.wiki.model.IWikiModel) wikiModel56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable62 = countingAppendable58.append((java.lang.CharSequence) "http://\"\"\"hi!\"\" \".wikipedia.org/wiki/", 35, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"\n\n" + "'", str10, "\"hi!\"\n\n");
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNotNull(annotationList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(annotationList44);
        org.junit.Assert.assertNotNull(annotationList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(wikiModel56);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText6 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum8 = null;
        safeTsvText6.warn("http://.wikipedia.org/wiki/hi%21", enum8);
        pignlproc.evaluation.CheckAbstract checkAbstract10 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum12 = null;
        checkAbstract10.warn("http://.wikipedia.org/wiki/hi%21", enum12);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        checkAbstract10.setPigLogger(pigLogger14);
        checkAbstract10.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract10.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = safeTsvText6.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = sentencesWithLink0.outputSchema(schema26);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList30 = sentencesWithLink0.getArgToFuncMapping();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(funcSpecList30);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://\"title\"\n.wikipedia.org/wiki/", "hi !");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", job4);
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader6, pigSplit7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat9);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int5 = annotation4.end;
        int int6 = annotation4.begin;
        int int7 = annotation4.begin;
        int int8 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href", "http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        org.apache.hadoop.mapreduce.RecordReader recordReader3 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit4 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader3, pigSplit4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple6 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader3 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = parsingWikipediaLoader3.getStatistics("hi!", job5);
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        parsingWikipediaLoader3.prepareToRead(recordReader7, pigSplit8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        java.lang.String[] strArray12 = parsingWikipediaLoader3.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job11);
        org.apache.pig.Expression expression13 = null;
        parsingWikipediaLoader3.setPartitionFilter(expression13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceStatistics resourceStatistics17 = parsingWikipediaLoader3.getStatistics("\"hi!\"\n\n", job16);
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceSchema resourceSchema20 = parsingWikipediaLoader3.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job19);
        uriUriNTriplesStorer1.checkSchema(resourceSchema20);
        org.apache.hadoop.fs.Path path23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = uriUriNTriplesStorer1.relToAbsPathForStoreLocation("\" http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / hrefwikiobject \"\"\"\"\"\" http : // hi ! . wikipedia . org / wiki / % 22 http % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 22 % 0 A \"\"\"\"\"\" wikiobject \"\" hi ! \"\" wikiobject wikiobjectopennlp / en - sent . binwikiobjecthttp : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ binwikiobjecthttp : // http : // \"\" title \"\" . wikipedia . org / wiki / % 22 hi % 21 % 22 . wikipedia . org / wiki / hi % 21 wikiobjecthttp : // \"\" http : // . wikipedia . org / wiki / hi % 21 \"\" . wikipedia . org / wiki / % 22 % 22 % 22 http % 3 A % 2 F % 2 Fhi _ % 21 _ . wikipedia . org % 2 Fwiki % 2 Fhttp % 253 A % 252 F % 252 Fhttp % 253 A % 252 F % 252 F . wikipedia . org % 252 Fwiki % 252 Fhi % 252521 % 250 A . wikipedia . org % 252 Fwiki % 252 F % 252522 title % 252522 % 22 % 22 % 22 wikiobject \"\" opennlp / en - sent . bin \"\" wikiobject \"\"\"\"\"", path23);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \" http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / hrefwikiobject \"\"\"\"\"\" http : // hi ! . wikipedia . org / wiki / % 22 http % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 22 % 0 A \"\"\"\"\"\" wikiobject \"\" hi ! \"\" wikiobject wikiobjectopennlp / en - sent . binwikiobjecthttp : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ binwikiobjecthttp : // http : // \"\" title \"\" . wikipedia . org / wiki / % 22 hi % 21 % 22 . wikipedia . org / wiki / hi % 21 wikiobjecthttp : // \"\" http : // . wikipedia . org / wiki / hi % 21 \"\" . wikipedia . org / wiki / % 22 % 22 % 22 http % 3 A % 2 F % 2 Fhi _ % 21 _ . wikipedia . org % 2 Fwiki % 2 Fhttp % 253 A % 252 F % 252 Fhttp % 253 A % 252 F % 252 F . wikipedia . org % 252 Fwiki % 252 Fhi % 252521 % 250 A . wikipedia . org % 252 Fwiki % 252 F % 252522 title % 252522 % 22 % 22 % 22 wikiobject \"\" opennlp / en - sent . bin \"\" wikiobject \"\"\"\"\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics6);
        org.junit.Assert.assertNull(strArray12);
        org.junit.Assert.assertNull(resourceStatistics17);
        org.junit.Assert.assertNotNull(resourceSchema20);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable70 = countingAppendable66.append((java.lang.CharSequence) "http://\"\"\"hi!\"\" \".wikipedia.org/wiki/", 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21", "hi !", "http://.wikipedia.org/wiki/hi%21\n");
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("\"title\"");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat6 = uriUriNTriplesStorer3.getOutputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.setStoreLocation("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522", job8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat6);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("hi!\n\n");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.cleanupOnFailure("wikiobject", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader0.getInputFormat();
        uriUriNTriplesLoader0.setUDFContextSignature("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        uriUriNTriplesLoader0.prepareToRead(recordReader7, pigSplit8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader0.setLocation("\"opennlp / en - sent . bin\"", job11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics3);
        org.junit.Assert.assertNotNull(inputFormat4);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://\"title\".wikipedia.org/wiki/%22hi%21%22", "http://.wikipedia.org/wiki/", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList2 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(funcSpecList2);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigLogger4);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 10, false);
        org.apache.commons.logging.Log log3 = aggregateTextBag2.getLogger();
        aggregateTextBag2.progress();
        org.junit.Assert.assertNotNull(log3);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"hi!\"\n");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        mergeAsOpenNLPAnnotatedText1.setPigLogger(pigLogger2);
        java.lang.Enum enum5 = null;
        mergeAsOpenNLPAnnotatedText1.warn("hi!", enum5);
        java.lang.Enum enum8 = null;
        mergeAsOpenNLPAnnotatedText1.warn("\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\" \"", enum8);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriStringLiteralNTriplesLoader2.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21", job14);
        uriStringLiteralNTriplesLoader2.setUDFContextSignature("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521");
        org.apache.pig.Expression expression18 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple20 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        safeTsvText0.setPigLogger(pigLogger1);
        safeTsvText0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        safeTsvText0.setPigLogger(pigLogger5);
        org.junit.Assert.assertNull(pigProgressable4);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 0);
        java.lang.reflect.Type type2 = aggregateTextBag1.getReturnType();
        java.lang.Enum enum4 = null;
        aggregateTextBag1.warn("\" http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522 \"", enum4);
        org.junit.Assert.assertNotNull(type2);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        pignlproc.evaluation.ConcatTextBag concatTextBag6 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum9 = null;
        checkAbstract7.warn("http://.wikipedia.org/wiki/hi%21", enum9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        checkAbstract7.setPigLogger(pigLogger11);
        checkAbstract7.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract7.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = concatTextBag6.outputSchema(schema24);
        org.apache.pig.data.Tuple tuple26 = null;
        java.lang.String str27 = concatTextBag6.exec(tuple26);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink28 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList29 = sentencesWithLink28.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        sentencesWithLink28.setPigLogger(pigLogger30);
        java.lang.reflect.Type type32 = sentencesWithLink28.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = sentencesWithLink28.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable34 = sentencesWithLink28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract35 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum37 = null;
        checkAbstract35.warn("http://.wikipedia.org/wiki/hi%21", enum37);
        java.lang.Enum enum40 = null;
        checkAbstract35.warn("hi !", enum40);
        pignlproc.evaluation.NoLoopInPath noLoopInPath42 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText43 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger44 = null;
        safeTsvText43.setPigLogger(pigLogger44);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText46 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable47 = mergeAsOpenNLPAnnotatedText46.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract48 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = checkAbstract48.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = mergeAsOpenNLPAnnotatedText46.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = safeTsvText43.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = noLoopInPath42.outputSchema(schema51);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag54 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText55 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        safeTsvText55.setPigLogger(pigLogger56);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText58 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable59 = mergeAsOpenNLPAnnotatedText58.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract60 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract60.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = mergeAsOpenNLPAnnotatedText58.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = safeTsvText55.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = aggregateTextBag54.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = noLoopInPath42.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = checkAbstract35.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = sentencesWithLink28.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = concatTextBag6.outputSchema(schema66);
        pignlproc.evaluation.ConcatTextBag concatTextBag71 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable72 = concatTextBag71.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList73 = concatTextBag71.getArgToFuncMapping();
        boolean boolean74 = concatTextBag71.isAsynchronous();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList75 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) strList4, (java.lang.Object) concatTextBag6, (java.lang.Object) boolean74);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.util.ArrayList cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(funcSpecList29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNull(pigProgressable34);
        org.junit.Assert.assertNull(pigProgressable47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(pigProgressable59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(pigProgressable72);
        org.junit.Assert.assertNull(funcSpecList73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriUriNTriplesLoader3.getSchema("", job10);
        org.apache.hadoop.mapreduce.InputFormat inputFormat12 = uriUriNTriplesLoader3.getInputFormat();
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader15 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job17 = null;
        org.apache.pig.ResourceSchema resourceSchema18 = uriStringLiteralNTriplesLoader15.getSchema("http://.wikipedia.org/wiki/hi%21", job17);
        org.apache.hadoop.mapreduce.InputFormat inputFormat19 = uriStringLiteralNTriplesLoader15.getInputFormat();
        org.apache.pig.Expression expression20 = null;
        uriStringLiteralNTriplesLoader15.setPartitionFilter(expression20);
        org.apache.hadoop.mapreduce.Job job23 = null;
        org.apache.pig.ResourceSchema resourceSchema24 = uriStringLiteralNTriplesLoader15.getSchema("http://hi!\n.wikipedia.org/wiki/%22_title_%22", job23);
        org.apache.hadoop.mapreduce.Job job26 = null;
        org.apache.pig.ResourceStatistics resourceStatistics27 = uriStringLiteralNTriplesLoader15.getStatistics("", job26);
        org.apache.hadoop.mapreduce.Job job29 = null;
        org.apache.pig.ResourceSchema resourceSchema30 = uriStringLiteralNTriplesLoader15.getSchema("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"", job29);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList31 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) uriUriNTriplesLoader3, (java.lang.Object) "\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: pignlproc.storage.UriUriNTriplesLoader cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(resourceSchema11);
        org.junit.Assert.assertNotNull(inputFormat12);
        org.junit.Assert.assertNotNull(resourceSchema18);
        org.junit.Assert.assertNotNull(inputFormat19);
        org.junit.Assert.assertNotNull(resourceSchema24);
        org.junit.Assert.assertNull(resourceStatistics27);
        org.junit.Assert.assertNotNull(resourceSchema30);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 1, false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("");
        mergeAsOpenNLPAnnotatedText4.progress();
        boolean boolean6 = mergeAsOpenNLPAnnotatedText4.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText8 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray10 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList11 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList11, spanArray10);
        java.lang.String str13 = mergeAsOpenNLPAnnotatedText8.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList11);
        java.lang.String str14 = mergeAsOpenNLPAnnotatedText4.merge("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", (java.util.List<opennlp.tools.util.Span>) spanList11);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink15 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        sentencesWithLink15.setPigLogger(pigLogger16);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList18 = sentencesWithLink15.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = sentencesWithLink15.getPigLogger();
        boolean boolean20 = sentencesWithLink15.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable22 = mergeAsOpenNLPAnnotatedText21.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract23.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = mergeAsOpenNLPAnnotatedText21.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = sentencesWithLink15.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = aggregateTextBag2.outputSchema(schema28);
        org.apache.commons.logging.Log log30 = aggregateTextBag2.getLogger();
        boolean boolean31 = aggregateTextBag2.isAsynchronous();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(spanArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "href" + "'", str13, "href");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522" + "'", str14, "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.junit.Assert.assertNull(funcSpecList18);
        org.junit.Assert.assertNull(pigLogger19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(pigProgressable22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(log30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\" opennlp / en - sent . bin \"\n", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("\"opennlp / en - sent . bin\"\n", "\" http : // . wikipedia . org / wiki / hi % 21 \"", "http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22");
        pignlproc.evaluation.ConcatTextBag concatTextBag6 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", false);
        java.lang.reflect.Type type7 = concatTextBag6.getReturnType();
        concatTextBag6.progress();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList9 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) "\" http : // . wikipedia . org / wiki / hi % 21 \"", (java.lang.Object) concatTextBag6);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type7);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        java.lang.String str5 = annotation4.value;
        java.lang.String str6 = annotation4.value;
        java.lang.String str7 = annotation4.label;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "href" + "'", str6, "href");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "wikiobject" + "'", str7, "wikiobject");
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        boolean boolean6 = annotatingMarkupParser0.noLinks();
        info.bliki.htmlcleaner.TagNode tagNode7 = null;
        info.bliki.wiki.model.ImageFormat imageFormat8 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser9.getHeaders();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser9.getHeaders();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser9.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser9.getHeaders();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser9.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser16.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser16.getParagraphAnnotations();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser16.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser16.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList23 = annotatingMarkupParser22.getHeaderAnnotations();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser22.getParagraphs();
        java.lang.Appendable appendable25 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser22.new CountingAppendable(appendable25);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser16.new CountingAppendable((java.lang.Appendable) countingAppendable26);
        countingAppendable26.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel33 = annotatingMarkupParser30.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser30.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList35 = annotatingMarkupParser30.getParagraphAnnotations();
        boolean boolean36 = annotatingMarkupParser30.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser30.makeWikiModel("\" title \"");
        annotatingMarkupParser9.nodesToText(annotationList15, (java.lang.Appendable) countingAppendable26, (info.bliki.wiki.model.IWikiModel) wikiModel38);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser40.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel43 = annotatingMarkupParser40.makeWikiModel("title");
        // The following exception was thrown during execution in test generation
        try {
            annotatingMarkupParser0.imageNodeToText(tagNode7, imageFormat8, (java.lang.Appendable) countingAppendable26, (info.bliki.wiki.model.IWikiModel) wikiModel43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(annotationList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNotNull(wikiModel33);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNotNull(annotationList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNotNull(wikiModel43);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum27 = null;
        checkAbstract25.warn("http://.wikipedia.org/wiki/hi%21", enum27);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        checkAbstract25.setPigLogger(pigLogger29);
        checkAbstract25.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText32 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = null;
        safeTsvText32.setPigLogger(pigLogger33);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText35 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable36 = mergeAsOpenNLPAnnotatedText35.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract37 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract37.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = mergeAsOpenNLPAnnotatedText35.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = safeTsvText32.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract25.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = noLoopInPath0.outputSchema(schema42);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = noLoopInPath0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        noLoopInPath0.setPigLogger(pigLogger45);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(pigProgressable36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(pigProgressable44);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum4 = null;
        checkAbstract2.warn("http://.wikipedia.org/wiki/hi%21", enum4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        checkAbstract2.setPigLogger(pigLogger6);
        checkAbstract2.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = checkAbstract2.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = concatTextBag1.outputSchema(schema19);
        org.apache.pig.data.Tuple tuple21 = null;
        java.lang.String str22 = concatTextBag1.exec(tuple21);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink23 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList24 = sentencesWithLink23.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        sentencesWithLink23.setPigLogger(pigLogger25);
        java.lang.reflect.Type type27 = sentencesWithLink23.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = sentencesWithLink23.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = sentencesWithLink23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum32 = null;
        checkAbstract30.warn("http://.wikipedia.org/wiki/hi%21", enum32);
        java.lang.Enum enum35 = null;
        checkAbstract30.warn("hi !", enum35);
        pignlproc.evaluation.NoLoopInPath noLoopInPath37 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText38 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        safeTsvText38.setPigLogger(pigLogger39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText41 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = mergeAsOpenNLPAnnotatedText41.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract43.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = mergeAsOpenNLPAnnotatedText41.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText38.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath37.outputSchema(schema46);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag49 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText50 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        safeTsvText50.setPigLogger(pigLogger51);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText53 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable54 = mergeAsOpenNLPAnnotatedText53.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract55 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract55.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = mergeAsOpenNLPAnnotatedText53.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = safeTsvText50.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = aggregateTextBag49.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = noLoopInPath37.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract30.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = sentencesWithLink23.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = concatTextBag1.outputSchema(schema61);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger65 = null;
        concatTextBag1.setPigLogger(pigLogger65);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList67 = concatTextBag1.getArgToFuncMapping();
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(funcSpecList24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNull(pigProgressable42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(pigProgressable54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(funcSpecList67);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.apache.hadoop.mapreduce.RecordReader recordReader14 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit15 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader14, pigSplit15);
        org.apache.hadoop.mapreduce.Job job18 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("hi !\n", job18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation(32, (int) (byte) 10, "http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22", "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href");
        int int5 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"\n", "\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", "");
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"http://.wikipedia.org/wiki/hi%21\"");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        sentencesWithLink0.finish();
        java.lang.reflect.Type type3 = sentencesWithLink0.getReturnType();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type3);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("wikiobject", "");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21\n", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"opennlp/en-sent.bin\"", job7);
        org.apache.pig.Expression expression9 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href", job12);
        org.apache.hadoop.mapreduce.RecordReader recordReader14 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit15 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader14, pigSplit15);
        java.lang.Class<?> wildcardClass17 = uriStringLiteralNTriplesLoader2.getClass();
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.fs.Path path6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = parsingWikipediaLoader1.relativeToAbsolutePath("\"opennlp / en - sent . bin\"\n", path6);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"opennlp / en - sent . bin\"? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.fs.Path path11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = uriUriNTriplesLoader3.relativeToAbsolutePath("\"hi!\"\n\n", path11);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"hi!\"?? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(inputFormat9);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.RecordReader recordReader2 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit3 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader2, pigSplit3);
        org.apache.hadoop.mapreduce.InputFormat inputFormat5 = parsingWikipediaLoader1.getInputFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple6 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat5);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type1 = safeTsvText0.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema3 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema4 = checkAbstract2.outputSchema(schema3);
        org.apache.pig.impl.logicalLayer.schema.Schema schema5 = safeTsvText0.outputSchema(schema4);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray8 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList9 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList9, spanArray8);
        java.lang.String str11 = mergeAsOpenNLPAnnotatedText6.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList9);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList12 = mergeAsOpenNLPAnnotatedText6.getArgToFuncMapping();
        org.apache.commons.logging.Log log13 = mergeAsOpenNLPAnnotatedText6.getLogger();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum16 = null;
        checkAbstract14.warn("http://.wikipedia.org/wiki/hi%21", enum16);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = null;
        checkAbstract14.setReporter(pigProgressable18);
        java.lang.reflect.Type type20 = checkAbstract14.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath21 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = noLoopInPath21.outputSchema(schema30);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag33 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText34 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        safeTsvText34.setPigLogger(pigLogger35);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText37 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable38 = mergeAsOpenNLPAnnotatedText37.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract39 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract39.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = mergeAsOpenNLPAnnotatedText37.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText34.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = aggregateTextBag33.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = noLoopInPath21.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract14.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = safeTsvText0.outputSchema(schema46);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = safeTsvText0.getReporter();
        org.junit.Assert.assertNotNull(type1);
        org.junit.Assert.assertNotNull(schema4);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNotNull(spanArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi !" + "'", str11, "hi !");
        org.junit.Assert.assertNull(funcSpecList12);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(pigProgressable38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(pigProgressable49);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("\"\"\"title\"\" \"href");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"\"\"\"title\"\" \"href\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        java.lang.reflect.Type type2 = mergeAsOpenNLPAnnotatedText1.getReturnType();
        boolean boolean3 = mergeAsOpenNLPAnnotatedText1.isAsynchronous();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag5 = new pignlproc.evaluation.AggregateTextBag((int) (short) 10);
        pignlproc.evaluation.ConcatTextBag concatTextBag7 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum10 = null;
        checkAbstract8.warn("http://.wikipedia.org/wiki/hi%21", enum10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        checkAbstract8.setPigLogger(pigLogger12);
        checkAbstract8.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract8.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = concatTextBag7.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = aggregateTextBag5.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema25);
        org.apache.pig.data.Tuple tuple29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = mergeAsOpenNLPAnnotatedText1.exec(tuple29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader0.getInputFormat();
        uriUriNTriplesLoader0.setUDFContextSignature("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        uriUriNTriplesLoader0.prepareToRead(recordReader7, pigSplit8);
        org.apache.hadoop.mapreduce.InputFormat inputFormat10 = uriUriNTriplesLoader0.getInputFormat();
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = uriUriNTriplesLoader0.getSchema("\"http://.wikipedia.org/wiki/hi%21\"", job12);
        pignlproc.evaluation.ConcatTextBag concatTextBag14 = new pignlproc.evaluation.ConcatTextBag();
        org.apache.pig.data.Tuple tuple15 = null;
        java.lang.String str16 = concatTextBag14.exec(tuple15);
        concatTextBag14.progress();
        boolean boolean18 = concatTextBag14.isAsynchronous();
        boolean boolean19 = concatTextBag14.isAsynchronous();
        pignlproc.evaluation.ConcatTextBag concatTextBag21 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple22 = null;
        java.lang.String str23 = concatTextBag21.exec(tuple22);
        pignlproc.evaluation.NoLoopInPath noLoopInPath24 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = noLoopInPath24.outputSchema(schema33);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag36 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText37 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = null;
        safeTsvText37.setPigLogger(pigLogger38);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText40 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = mergeAsOpenNLPAnnotatedText40.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract42 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract42.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = mergeAsOpenNLPAnnotatedText40.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = safeTsvText37.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = aggregateTextBag36.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath24.outputSchema(schema45);
        pignlproc.evaluation.CheckAbstract checkAbstract49 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum51 = null;
        checkAbstract49.warn("http://.wikipedia.org/wiki/hi%21", enum51);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger53 = null;
        checkAbstract49.setPigLogger(pigLogger53);
        checkAbstract49.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText56 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger57 = null;
        safeTsvText56.setPigLogger(pigLogger57);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText59 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable60 = mergeAsOpenNLPAnnotatedText59.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract61 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = checkAbstract61.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = mergeAsOpenNLPAnnotatedText59.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = safeTsvText56.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = checkAbstract49.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = noLoopInPath24.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = concatTextBag21.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = concatTextBag14.outputSchema(schema67);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList70 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) resourceSchema13, (java.lang.Object) concatTextBag14);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.pig.ResourceSchema cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics3);
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNotNull(inputFormat10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNull(pigProgressable41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(pigProgressable60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href");
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser0.getHeaders();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n" + "'", str43, "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n");
        org.junit.Assert.assertNotNull(strList44);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "title", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        org.apache.hadoop.mapreduce.Job job6 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.setStoreLocation("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"href", job6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriStringLiteralNTriplesLoader2.getPartitionKeys("", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriStringLiteralNTriplesLoader2.getSchema("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"", job13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceStatistics resourceStatistics17 = uriStringLiteralNTriplesLoader2.getStatistics("\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"", job16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple18 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(strArray11);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNull(resourceStatistics17);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", job10);
        org.apache.pig.Expression expression12 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression12);
        org.apache.hadoop.mapreduce.InputFormat inputFormat14 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job16 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("hi !\n\nhref", job16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(strArray11);
        org.junit.Assert.assertNotNull(inputFormat14);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        java.lang.Enum enum7 = null;
        checkAbstract0.warn("hi!\n", enum7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        checkAbstract0.setPigLogger(pigLogger10);
        org.junit.Assert.assertNull(pigProgressable9);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.pig.Expression expression7 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.RecordReader recordReader9 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit10 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader9, pigSplit10);
        org.apache.hadoop.mapreduce.RecordReader recordReader12 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit13 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader12, pigSplit13);
        org.apache.hadoop.mapreduce.InputFormat inputFormat15 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job17 = null;
        org.apache.pig.ResourceSchema resourceSchema18 = uriStringLiteralNTriplesLoader2.getSchema("\n", job17);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(inputFormat15);
        org.junit.Assert.assertNotNull(resourceSchema18);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"hi! \"");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("http://.wikipedia.org/wiki/hi%21\n");
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceStatistics resourceStatistics10 = parsingWikipediaLoader1.getStatistics("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader1.getSchema("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/hrefwikiobject\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"wikiobject\"hi!\"\nwikiobject\nwikiobjectopennlp/en-sent.binwikiobjecthttp://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"opennlp / en - sent . bin\"wikiobject\"\"", job13);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(resourceStatistics10);
        org.junit.Assert.assertNotNull(inputFormat11);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("title");
        org.apache.hadoop.mapreduce.InputFormat inputFormat2 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.InputFormat inputFormat3 = parsingWikipediaLoader1.getInputFormat();
        org.junit.Assert.assertNotNull(inputFormat2);
        org.junit.Assert.assertNotNull(inputFormat3);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"title\"\n", "\" title \"", "\"title\"");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader3.setLocation("\" title \"", job9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat4);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = checkAbstract0.exec(tuple5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = checkAbstract0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNull(pigLogger7);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray9 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList10 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList10, spanArray9);
        java.lang.String str12 = mergeAsOpenNLPAnnotatedText7.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        mergeAsOpenNLPAnnotatedText7.setPigLogger(pigLogger13);
        boolean boolean15 = mergeAsOpenNLPAnnotatedText7.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum18 = null;
        checkAbstract16.warn("http://.wikipedia.org/wiki/hi%21", enum18);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = null;
        checkAbstract16.setReporter(pigProgressable20);
        java.lang.reflect.Type type22 = checkAbstract16.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath23 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath23.outputSchema(schema32);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag35 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = aggregateTextBag35.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath23.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract16.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema44);
        pignlproc.evaluation.CheckAbstract checkAbstract51 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum53 = null;
        checkAbstract51.warn("http://.wikipedia.org/wiki/hi%21", enum53);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger55 = null;
        checkAbstract51.setPigLogger(pigLogger55);
        checkAbstract51.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText58 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger59 = null;
        safeTsvText58.setPigLogger(pigLogger59);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText61 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable62 = mergeAsOpenNLPAnnotatedText61.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract63 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract63.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = mergeAsOpenNLPAnnotatedText61.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = safeTsvText58.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract51.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema68);
        mergeAsOpenNLPAnnotatedText0.finish();
        boolean boolean71 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(spanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi !" + "'", str12, "hi !");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(pigProgressable62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21\n");
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"title\"\n", "\" title \"", "\"title\"");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader3.setLocation("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat4);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser3 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser3.getHeaders();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser3.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser3.getHeaderAnnotations();
        pignlproc.markup.Annotation annotation11 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation16 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        pignlproc.markup.Annotation annotation21 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation26 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation31 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str32 = annotation31.label;
        java.lang.String str33 = annotation31.label;
        pignlproc.markup.Annotation annotation38 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str39 = annotation38.label;
        java.lang.String str40 = annotation38.label;
        java.lang.String str41 = annotation38.value;
        pignlproc.markup.Annotation[] annotationArray42 = new pignlproc.markup.Annotation[] { annotation11, annotation16, annotation21, annotation26, annotation31, annotation38 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList43 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList43, annotationArray42);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser45 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser45.getHeaders();
        java.util.List<java.lang.String> strList47 = annotatingMarkupParser45.getHeaders();
        java.lang.Appendable appendable48 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser45.new CountingAppendable(appendable48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser50.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser50.getRedirect();
        pignlproc.markup.Annotation annotation57 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation62 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int63 = annotation62.end;
        int int64 = annotation62.begin;
        pignlproc.markup.Annotation[] annotationArray65 = new pignlproc.markup.Annotation[] { annotation57, annotation62 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList66 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList66, annotationArray65);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser68 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList69 = annotatingMarkupParser68.getHeaders();
        java.util.List<java.lang.String> strList70 = annotatingMarkupParser68.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList71 = annotatingMarkupParser68.getHeaderAnnotations();
        java.lang.String str72 = annotatingMarkupParser68.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList74 = annotatingMarkupParser73.getHeaders();
        java.util.List<java.lang.String> strList75 = annotatingMarkupParser73.getHeaders();
        java.lang.Appendable appendable76 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable77 = annotatingMarkupParser73.new CountingAppendable(appendable76);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable78 = annotatingMarkupParser68.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser79 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList80 = annotatingMarkupParser79.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel82 = annotatingMarkupParser79.makeWikiModel("title");
        annotatingMarkupParser50.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList66, (java.lang.Appendable) countingAppendable77, (info.bliki.wiki.model.IWikiModel) wikiModel82);
        annotatingMarkupParser3.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList43, appendable48, (info.bliki.wiki.model.IWikiModel) wikiModel82);
        java.util.List<pignlproc.markup.Annotation> annotationList85 = annotatingMarkupParser3.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser86 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList87 = annotatingMarkupParser86.getHeaders();
        java.util.List<java.lang.String> strList88 = annotatingMarkupParser86.getHeaders();
        java.lang.Appendable appendable89 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable90 = annotatingMarkupParser86.new CountingAppendable(appendable89);
        int int91 = countingAppendable90.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable92 = annotatingMarkupParser3.new CountingAppendable((java.lang.Appendable) countingAppendable90);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable93 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable92);
        countingAppendable92.currentPosition = (short) 100;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable97 = countingAppendable92.append((java.lang.CharSequence) "http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "title" + "'", str32, "title");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "title" + "'", str33, "title");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "title" + "'", str39, "title");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "title" + "'", str40, "title");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "hi!" + "'", str41, "hi!");
        org.junit.Assert.assertNotNull(annotationArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 52 + "'", int64 == 52);
        org.junit.Assert.assertNotNull(annotationArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(annotationList71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(annotationList80);
        org.junit.Assert.assertNotNull(wikiModel82);
        org.junit.Assert.assertNotNull(annotationList85);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        boolean boolean6 = annotatingMarkupParser0.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel8 = annotatingMarkupParser0.makeWikiModel("\" title \"");
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(wikiModel8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(annotationList10);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (byte) 1);
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.Boolean boolean3 = checkAbstract1.exec(tuple2);
        boolean boolean4 = checkAbstract1.isAsynchronous();
        org.junit.Assert.assertEquals("'" + boolean3 + "' != '" + false + "'", boolean3, false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.commons.logging.Log log3 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNull(funcSpecList6);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.RecordReader recordReader2 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit3 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader2, pigSplit3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.pig.Expression expression8 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression8);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable(appendable8);
        boolean boolean11 = annotatingMarkupParser0.noLinks();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("title");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("href", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n.wikipedia.org/wiki/%22%22", job6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", "http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", "");
        org.apache.hadoop.mapreduce.Job job5 = null;
        java.lang.String[] strArray6 = uriUriNTriplesLoader3.getPartitionKeys("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceStatistics resourceStatistics9 = uriUriNTriplesLoader3.getStatistics("", job8);
        uriUriNTriplesLoader3.setUDFContextSignature("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        org.junit.Assert.assertNull(strArray6);
        org.junit.Assert.assertNull(resourceStatistics9);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 1, false);
        pignlproc.evaluation.SafeTsvText safeTsvText3 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum5 = null;
        safeTsvText3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = safeTsvText3.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        safeTsvText3.setReporter(pigProgressable8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        safeTsvText3.setReporter(pigProgressable10);
        boolean boolean12 = safeTsvText3.isAsynchronous();
        java.lang.Enum enum14 = null;
        safeTsvText3.warn("\"title\"\n", enum14);
        pignlproc.evaluation.ConcatTextBag concatTextBag17 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum20 = null;
        checkAbstract18.warn("http://.wikipedia.org/wiki/hi%21", enum20);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        checkAbstract18.setPigLogger(pigLogger22);
        checkAbstract18.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract18.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = concatTextBag17.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = safeTsvText3.outputSchema(schema35);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink38 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        sentencesWithLink38.setPigLogger(pigLogger39);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = sentencesWithLink38.getReporter();
        java.lang.reflect.Type type42 = sentencesWithLink38.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText43 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger44 = null;
        safeTsvText43.setPigLogger(pigLogger44);
        safeTsvText43.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink47 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath48 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText49 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger50 = null;
        safeTsvText49.setPigLogger(pigLogger50);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText52 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable53 = mergeAsOpenNLPAnnotatedText52.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = checkAbstract54.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = mergeAsOpenNLPAnnotatedText52.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = safeTsvText49.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = noLoopInPath48.outputSchema(schema57);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag60 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText61 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        safeTsvText61.setPigLogger(pigLogger62);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText64 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable65 = mergeAsOpenNLPAnnotatedText64.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract66 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract66.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText64.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = safeTsvText61.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = aggregateTextBag60.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = noLoopInPath48.outputSchema(schema69);
        pignlproc.evaluation.CheckAbstract checkAbstract73 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum75 = null;
        checkAbstract73.warn("http://.wikipedia.org/wiki/hi%21", enum75);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger77 = null;
        checkAbstract73.setPigLogger(pigLogger77);
        checkAbstract73.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText80 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger81 = null;
        safeTsvText80.setPigLogger(pigLogger81);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText83 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable84 = mergeAsOpenNLPAnnotatedText83.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract85 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = checkAbstract85.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = mergeAsOpenNLPAnnotatedText83.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = safeTsvText80.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = checkAbstract73.outputSchema(schema89);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = noLoopInPath48.outputSchema(schema90);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = sentencesWithLink47.outputSchema(schema91);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = safeTsvText43.outputSchema(schema91);
        org.apache.pig.impl.logicalLayer.schema.Schema schema94 = sentencesWithLink38.outputSchema(schema91);
        org.apache.pig.impl.logicalLayer.schema.Schema schema95 = safeTsvText3.outputSchema(schema91);
        org.apache.pig.impl.logicalLayer.schema.Schema schema96 = aggregateTextBag2.outputSchema(schema91);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(pigProgressable41);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNull(pigProgressable53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(pigProgressable65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(pigProgressable84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader0 = new pignlproc.storage.UriStringLiteralNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceSchema resourceSchema3 = uriStringLiteralNTriplesLoader0.getSchema("", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriStringLiteralNTriplesLoader0.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriStringLiteralNTriplesLoader0.getSchema("hi !", job8);
        org.apache.hadoop.fs.Path path11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = uriStringLiteralNTriplesLoader0.relativeToAbsolutePath("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21", path11);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema3);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(resourceSchema9);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "hi!\n\n", "http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21");
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("hi !\n");
        mergeAsOpenNLPAnnotatedText1.progress();
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMaxInputSplitSize(job0, (long) 52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser4.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser4.getHeaderAnnotations();
        java.lang.String str8 = annotatingMarkupParser4.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser9.getHeaders();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser9.getHeaders();
        java.lang.Appendable appendable12 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser9.new CountingAppendable(appendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser4.new CountingAppendable((java.lang.Appendable) countingAppendable13);
        int int15 = countingAppendable13.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable18 = countingAppendable16.append(' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (byte) -1, (int) (short) 100, "http://\"title\"\n.wikipedia.org/wiki/", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        java.lang.String str5 = annotation4.value;
        int int6 = annotation4.end;
        java.lang.String str7 = annotation4.label;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22" + "'", str5, "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://\"title\"\n.wikipedia.org/wiki/" + "'", str7, "http://\"title\"\n.wikipedia.org/wiki/");
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"http://.wikipedia.org/wiki/hi%21\"\n", "http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521", "\"\"\n");
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        safeTsvText0.setReporter(pigProgressable7);
        boolean boolean9 = safeTsvText0.isAsynchronous();
        java.lang.Enum enum11 = null;
        safeTsvText0.warn("\"title\"\n", enum11);
        org.apache.pig.data.Tuple tuple13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = safeTsvText0.exec(tuple13);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        org.apache.commons.logging.Log log29 = noLoopInPath0.getLogger();
        noLoopInPath0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = noLoopInPath0.getReporter();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNull(pigProgressable31);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi !", "title", "title");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader4 = new pignlproc.storage.UriStringLiteralNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = uriStringLiteralNTriplesLoader4.getSchema("", job6);
        uriUriNTriplesStorer3.checkSchema(resourceSchema7);
        org.apache.hadoop.fs.Path path10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = uriUriNTriplesStorer3.relToAbsPathForStoreLocation("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A", path10);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema7);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        boolean boolean3 = sentencesWithLink0.isAsynchronous();
        pignlproc.evaluation.ConcatTextBag concatTextBag5 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple6 = null;
        java.lang.String str7 = concatTextBag5.exec(tuple6);
        pignlproc.evaluation.NoLoopInPath noLoopInPath8 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = noLoopInPath8.outputSchema(schema17);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag20 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText21 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        safeTsvText21.setPigLogger(pigLogger22);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = safeTsvText21.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = aggregateTextBag20.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = noLoopInPath8.outputSchema(schema29);
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum35 = null;
        checkAbstract33.warn("http://.wikipedia.org/wiki/hi%21", enum35);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        checkAbstract33.setPigLogger(pigLogger37);
        checkAbstract33.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = mergeAsOpenNLPAnnotatedText43.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract45.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = mergeAsOpenNLPAnnotatedText43.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = safeTsvText40.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = checkAbstract33.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = noLoopInPath8.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = concatTextBag5.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = sentencesWithLink0.outputSchema(schema52);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList54 = sentencesWithLink0.getArgToFuncMapping();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList55 = sentencesWithLink0.getArgToFuncMapping();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(funcSpecList54);
        org.junit.Assert.assertNull(funcSpecList55);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = uriUriNTriplesLoader3.getStatistics("hi !\n", job6);
        uriUriNTriplesLoader3.setUDFContextSignature("http://.wikipedia.org/wiki/hi%21\n");
        uriUriNTriplesLoader3.setUDFContextSignature("http://\" title \".wikipedia.org/wiki/");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader13 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceStatistics resourceStatistics16 = parsingWikipediaLoader13.getStatistics("hi!", job15);
        org.apache.hadoop.mapreduce.RecordReader recordReader17 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit18 = null;
        parsingWikipediaLoader13.prepareToRead(recordReader17, pigSplit18);
        org.apache.hadoop.mapreduce.Job job21 = null;
        java.lang.String[] strArray22 = parsingWikipediaLoader13.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job21);
        org.apache.hadoop.mapreduce.RecordReader recordReader23 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit24 = null;
        parsingWikipediaLoader13.prepareToRead(recordReader23, pigSplit24);
        java.util.List<opennlp.tools.util.Span> spanList26 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) "http://\" title \".wikipedia.org/wiki/", (java.lang.Object) recordReader23);
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNull(resourceStatistics7);
        org.junit.Assert.assertNull(resourceStatistics16);
        org.junit.Assert.assertNull(strArray22);
        org.junit.Assert.assertNotNull(spanList26);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriStringLiteralNTriplesLoader2.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21", job14);
        uriStringLiteralNTriplesLoader2.setUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21\n");
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceSchema resourceSchema20 = uriStringLiteralNTriplesLoader2.getSchema("\"opennlp / en - sent . bin\"\n", job19);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNotNull(resourceSchema20);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 1, (int) (byte) 100, "", "hi!\n\n");
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList12 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(annotationList12);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        countingAppendable15.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable30 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        int int31 = countingAppendable28.currentPosition;
        countingAppendable28.currentPosition = '4';
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = aggregateTextBag0.outputSchema(schema9);
        java.lang.Enum enum13 = null;
        aggregateTextBag0.warn("\"hi!\"\n", enum13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = null;
        aggregateTextBag0.setReporter(pigProgressable15);
        java.lang.reflect.Type type17 = aggregateTextBag0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList18 = aggregateTextBag0.getArgToFuncMapping();
        java.lang.reflect.Type type19 = aggregateTextBag0.getReturnType();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNull(funcSpecList18);
        org.junit.Assert.assertNotNull(type19);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.finish();
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        boolean boolean8 = sentencesWithLink0.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\" opennlp / en - sent . bin \"", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \" opennlp / en - sent . bin \" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.data.Tuple tuple1 = null;
        java.lang.Boolean boolean2 = checkAbstract0.exec(tuple1);
        java.lang.reflect.Type type3 = checkAbstract0.getReturnType();
        org.apache.pig.data.Tuple tuple4 = null;
        java.lang.Boolean boolean5 = checkAbstract0.exec(tuple4);
        org.junit.Assert.assertEquals("'" + boolean2 + "' != '" + false + "'", boolean2, false);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + boolean5 + "' != '" + false + "'", boolean5, false);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink6 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        sentencesWithLink6.setPigLogger(pigLogger7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink6.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        sentencesWithLink6.setReporter(pigProgressable10);
        sentencesWithLink6.progress();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray15 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList16 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList16, spanArray15);
        java.lang.String str18 = mergeAsOpenNLPAnnotatedText13.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray22 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList23 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList23, spanArray22);
        java.lang.String str25 = mergeAsOpenNLPAnnotatedText20.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList23);
        java.lang.String str26 = mergeAsOpenNLPAnnotatedText13.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList23);
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type28 = safeTsvText27.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText27.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = sentencesWithLink6.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = sentencesWithLink0.outputSchema(schema31);
        sentencesWithLink0.finish();
        org.apache.commons.logging.Log log37 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable38 = null;
        sentencesWithLink0.setReporter(pigProgressable38);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(spanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi !" + "'", str18, "hi !");
        org.junit.Assert.assertNotNull(spanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "href" + "'", str25, "href");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi !" + "'", str26, "hi !");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(log37);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = uriUriNTriplesLoader3.getStatistics("\"hi! \"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = uriUriNTriplesLoader3.getSchema("\"\"\"hi!\"\" \"", job9);
        org.apache.hadoop.fs.Path path12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = uriUriNTriplesLoader3.relativeToAbsolutePath("http://http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521", path12);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNull(resourceStatistics7);
        org.junit.Assert.assertNotNull(resourceSchema10);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract0.setReporter(pigProgressable4);
        java.lang.reflect.Type type6 = checkAbstract0.getReturnType();
        boolean boolean7 = checkAbstract0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = checkAbstract0.getArgToFuncMapping();
        checkAbstract0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = checkAbstract0.getPigLogger();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigLogger10);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader0 = new pignlproc.storage.ParsingWikipediaLoader();
        org.apache.pig.Expression expression1 = null;
        parsingWikipediaLoader0.setPartitionFilter(expression1);
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = parsingWikipediaLoader0.getPartitionKeys("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21", job4);
        parsingWikipediaLoader0.setUDFContextSignature("\"title\"");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple8 = parsingWikipediaLoader0.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray5);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("opennlp/en-sent.bin", "\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://\" http : // . wikipedia . org / wiki / hi % 21 \".wikipedia.org/wiki/opennlp%2Fen-sent.bin" + "'", str2, "http://\" http : // . wikipedia . org / wiki / hi % 21 \".wikipedia.org/wiki/opennlp%2Fen-sent.bin");
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("wikiobject", "");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader6, pigSplit7);
        org.apache.pig.LoadCaster loadCaster9 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job11 = null;
        java.lang.String[] strArray12 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", job11);
        org.apache.hadoop.mapreduce.InputFormat inputFormat13 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(loadCaster9);
        org.junit.Assert.assertNull(strArray12);
        org.junit.Assert.assertNotNull(inputFormat13);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        noLoopInPath0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = noLoopInPath0.getPigLogger();
        noLoopInPath0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = noLoopInPath0.getReporter();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNull(pigLogger30);
        org.junit.Assert.assertNull(pigProgressable32);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.RecordWriter recordWriter3 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter3);
        org.apache.pig.data.Tuple tuple5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        pignlproc.evaluation.NoLoopInPath noLoopInPath2 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText3 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        safeTsvText3.setPigLogger(pigLogger4);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = mergeAsOpenNLPAnnotatedText6.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = checkAbstract8.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = safeTsvText3.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = noLoopInPath2.outputSchema(schema11);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag14 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = aggregateTextBag14.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = noLoopInPath2.outputSchema(schema23);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        noLoopInPath2.setPigLogger(pigLogger27);
        org.apache.pig.data.Tuple tuple29 = null;
        java.lang.Boolean boolean30 = noLoopInPath2.exec(tuple29);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = null;
        noLoopInPath2.setReporter(pigProgressable31);
        java.lang.reflect.Type type33 = noLoopInPath2.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink34 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        sentencesWithLink34.setPigLogger(pigLogger35);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList37 = sentencesWithLink34.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = sentencesWithLink34.getPigLogger();
        boolean boolean39 = sentencesWithLink34.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText40 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = mergeAsOpenNLPAnnotatedText40.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract42 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract42.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = mergeAsOpenNLPAnnotatedText40.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = sentencesWithLink34.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath2.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath1.outputSchema(schema47);
        org.apache.commons.logging.Log log49 = noLoopInPath1.getLogger();
        org.apache.pig.data.Tuple tuple50 = null;
        java.lang.Boolean boolean51 = noLoopInPath1.exec(tuple50);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNull(funcSpecList37);
        org.junit.Assert.assertNull(pigLogger38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(pigProgressable41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(log49);
        org.junit.Assert.assertEquals("'" + boolean51 + "' != '" + true + "'", boolean51, true);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        safeTsvText0.setPigLogger(pigLogger1);
        pignlproc.evaluation.ConcatTextBag concatTextBag4 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.String str6 = concatTextBag4.exec(tuple5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        concatTextBag4.setPigLogger(pigLogger7);
        boolean boolean9 = concatTextBag4.isAsynchronous();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath13 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath13.outputSchema(schema22);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag25 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText26 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        safeTsvText26.setPigLogger(pigLogger27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = mergeAsOpenNLPAnnotatedText29.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract31 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = checkAbstract31.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = mergeAsOpenNLPAnnotatedText29.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = safeTsvText26.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = aggregateTextBag25.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = noLoopInPath13.outputSchema(schema34);
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum40 = null;
        checkAbstract38.warn("http://.wikipedia.org/wiki/hi%21", enum40);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        checkAbstract38.setPigLogger(pigLogger42);
        checkAbstract38.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText45 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        safeTsvText45.setPigLogger(pigLogger46);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = mergeAsOpenNLPAnnotatedText48.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract50.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText48.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = safeTsvText45.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract38.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath13.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = aggregateTextBag12.outputSchema(schema55);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag59 = new pignlproc.evaluation.AggregateTextBag((int) (short) 10);
        pignlproc.evaluation.ConcatTextBag concatTextBag61 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract62 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum64 = null;
        checkAbstract62.warn("http://.wikipedia.org/wiki/hi%21", enum64);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger66 = null;
        checkAbstract62.setPigLogger(pigLogger66);
        checkAbstract62.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText69 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger70 = null;
        safeTsvText69.setPigLogger(pigLogger70);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText72 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable73 = mergeAsOpenNLPAnnotatedText72.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract74 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = checkAbstract74.outputSchema(schema75);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = mergeAsOpenNLPAnnotatedText72.outputSchema(schema75);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = safeTsvText69.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = checkAbstract62.outputSchema(schema78);
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = concatTextBag61.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = aggregateTextBag59.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = aggregateTextBag12.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = concatTextBag4.outputSchema(schema82);
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = safeTsvText0.outputSchema(schema82);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(pigProgressable49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNull(pigProgressable73);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("href");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = null;
        noLoopInPath1.setReporter(pigProgressable2);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink4 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath5 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText6 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        safeTsvText6.setPigLogger(pigLogger7);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText9 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = mergeAsOpenNLPAnnotatedText9.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = checkAbstract11.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = mergeAsOpenNLPAnnotatedText9.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = safeTsvText6.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = noLoopInPath5.outputSchema(schema14);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag17 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText18 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        safeTsvText18.setPigLogger(pigLogger19);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable22 = mergeAsOpenNLPAnnotatedText21.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract23.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = mergeAsOpenNLPAnnotatedText21.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = safeTsvText18.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = aggregateTextBag17.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = noLoopInPath5.outputSchema(schema26);
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum32 = null;
        checkAbstract30.warn("http://.wikipedia.org/wiki/hi%21", enum32);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        checkAbstract30.setPigLogger(pigLogger34);
        checkAbstract30.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText37 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = null;
        safeTsvText37.setPigLogger(pigLogger38);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText40 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = mergeAsOpenNLPAnnotatedText40.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract42 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract42.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = mergeAsOpenNLPAnnotatedText40.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = safeTsvText37.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract30.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath5.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = sentencesWithLink4.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = noLoopInPath1.outputSchema(schema49);
        org.apache.pig.data.Tuple tuple51 = null;
        java.lang.Boolean boolean52 = noLoopInPath1.exec(tuple51);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(pigProgressable22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(pigProgressable41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + boolean52 + "' != '" + true + "'", boolean52, true);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        java.lang.Enum enum6 = null;
        sentencesWithLink0.warn("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", enum6);
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum10 = null;
        checkAbstract8.warn("http://.wikipedia.org/wiki/hi%21", enum10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = null;
        checkAbstract8.setReporter(pigProgressable12);
        java.lang.reflect.Type type14 = checkAbstract8.getReturnType();
        boolean boolean15 = checkAbstract8.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList16 = checkAbstract8.getArgToFuncMapping();
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = checkAbstract8.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = sentencesWithLink0.outputSchema(schema18);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = sentencesWithLink0.getReporter();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(funcSpecList16);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(pigProgressable20);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\" title \"");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        mergeAsOpenNLPAnnotatedText1.setPigLogger(pigLogger2);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        pignlproc.evaluation.NoLoopInPath noLoopInPath5 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText6 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        safeTsvText6.setPigLogger(pigLogger7);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText9 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = mergeAsOpenNLPAnnotatedText9.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = checkAbstract11.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = mergeAsOpenNLPAnnotatedText9.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = safeTsvText6.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = noLoopInPath5.outputSchema(schema14);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink17 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath18 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText19 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger20 = null;
        safeTsvText19.setPigLogger(pigLogger20);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText22 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable23 = mergeAsOpenNLPAnnotatedText22.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract24.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText22.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = safeTsvText19.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = noLoopInPath18.outputSchema(schema27);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag30 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText31 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        safeTsvText31.setPigLogger(pigLogger32);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText34 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable35 = mergeAsOpenNLPAnnotatedText34.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = checkAbstract36.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = mergeAsOpenNLPAnnotatedText34.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = safeTsvText31.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = aggregateTextBag30.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = noLoopInPath18.outputSchema(schema39);
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum45 = null;
        checkAbstract43.warn("http://.wikipedia.org/wiki/hi%21", enum45);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        checkAbstract43.setPigLogger(pigLogger47);
        checkAbstract43.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText50 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        safeTsvText50.setPigLogger(pigLogger51);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText53 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable54 = mergeAsOpenNLPAnnotatedText53.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract55 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract55.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = mergeAsOpenNLPAnnotatedText53.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = safeTsvText50.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = checkAbstract43.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = noLoopInPath18.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = sentencesWithLink17.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = noLoopInPath5.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = sentencesWithLink0.outputSchema(schema61);
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(pigProgressable23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(pigProgressable35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(pigProgressable54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type1 = safeTsvText0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = null;
        safeTsvText0.setReporter(pigProgressable2);
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = safeTsvText0.exec(tuple4);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type1);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 0, false);
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        checkAbstract3.setReporter(pigProgressable7);
        java.lang.reflect.Type type9 = checkAbstract3.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath10 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText11 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        safeTsvText11.setPigLogger(pigLogger12);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = mergeAsOpenNLPAnnotatedText14.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = checkAbstract16.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = mergeAsOpenNLPAnnotatedText14.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = safeTsvText11.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = noLoopInPath10.outputSchema(schema19);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag22 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText23 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        safeTsvText23.setPigLogger(pigLogger24);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText26 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable27 = mergeAsOpenNLPAnnotatedText26.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = checkAbstract28.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = mergeAsOpenNLPAnnotatedText26.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText23.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = aggregateTextBag22.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath10.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract3.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = aggregateTextBag2.outputSchema(schema35);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(pigProgressable27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"title\"\n");
        java.lang.Enum enum3 = null;
        mergeAsOpenNLPAnnotatedText1.warn("http://.wikipedia.org/wiki/hi%21", enum3);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"title\"\" \"");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        noLoopInPath0.setPigLogger(pigLogger1);
        noLoopInPath0.finish();
        pignlproc.evaluation.CheckAbstract checkAbstract4 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum6 = null;
        checkAbstract4.warn("http://.wikipedia.org/wiki/hi%21", enum6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        checkAbstract4.setReporter(pigProgressable8);
        pignlproc.evaluation.NoLoopInPath noLoopInPath10 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText11 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        safeTsvText11.setPigLogger(pigLogger12);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = mergeAsOpenNLPAnnotatedText14.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = checkAbstract16.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = mergeAsOpenNLPAnnotatedText14.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = safeTsvText11.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = noLoopInPath10.outputSchema(schema19);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag22 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText23 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        safeTsvText23.setPigLogger(pigLogger24);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText26 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable27 = mergeAsOpenNLPAnnotatedText26.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = checkAbstract28.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = mergeAsOpenNLPAnnotatedText26.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText23.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = aggregateTextBag22.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath10.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract4.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath0.outputSchema(schema35);
        pignlproc.evaluation.ConcatTextBag concatTextBag38 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract39 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum41 = null;
        checkAbstract39.warn("http://.wikipedia.org/wiki/hi%21", enum41);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        checkAbstract39.setPigLogger(pigLogger43);
        checkAbstract39.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText46 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        safeTsvText46.setPigLogger(pigLogger47);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText49 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable50 = mergeAsOpenNLPAnnotatedText49.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract51 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract51.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText49.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = safeTsvText46.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = checkAbstract39.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = concatTextBag38.outputSchema(schema56);
        org.apache.pig.data.Tuple tuple58 = null;
        java.lang.String str59 = concatTextBag38.exec(tuple58);
        pignlproc.evaluation.ConcatTextBag concatTextBag61 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable62 = concatTextBag61.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger63 = concatTextBag61.getPigLogger();
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = concatTextBag61.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = concatTextBag38.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = noLoopInPath0.outputSchema(schema64);
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(pigProgressable27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(pigProgressable50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
        org.junit.Assert.assertNull(pigProgressable62);
        org.junit.Assert.assertNull(pigLogger63);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        sentencesWithLink0.setReporter(pigProgressable7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        sentencesWithLink0.setReporter(pigProgressable9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        sentencesWithLink0.setPigLogger(pigLogger11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigLogger6);
        org.junit.Assert.assertNull(pigProgressable13);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\"hi!\"", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"hi!\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.RecordReader recordReader2 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit3 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader2, pigSplit3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = parsingWikipediaLoader1.getStatistics("hi !\n\nhref", job6);
        org.junit.Assert.assertNull(resourceStatistics7);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getHeaderAnnotations();
        java.lang.String str6 = annotatingMarkupParser2.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.lang.Appendable appendable10 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser7.new CountingAppendable(appendable10);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable11);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser13.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser13.getHeaders();
        java.lang.Appendable appendable16 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser13.new CountingAppendable(appendable16);
        countingAppendable17.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable17);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable20);
        countingAppendable21.currentPosition = ' ';
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable27 = countingAppendable21.append((java.lang.CharSequence) "\"\"\"opennlp / en - sent . bin\"\"\"", (int) (byte) 0, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("", job10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can not create a Path from an empty string");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema8);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("title");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.cleanupOnFailure("\n", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F%22hi%21%22%0A.wikipedia.org%2Fwiki%2F%2522hi%2521_%2522", "opennlp / en - sent . bin", "http : // http : // hi ! . wikipedia . org / wiki / % 22 _ title _ % 22 . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        sentencesWithLink0.setPigLogger(pigLogger5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigLogger7);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        int int5 = annotation4.begin;
        int int6 = annotation4.begin;
        java.lang.String str7 = annotation4.value;
        java.lang.String str8 = annotation4.label;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "title" + "'", str8, "title");
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = null;
        noLoopInPath0.setReporter(pigProgressable29);
        boolean boolean31 = noLoopInPath0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = noLoopInPath0.getReporter();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(pigProgressable32);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        sentencesWithLink0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        sentencesWithLink0.setReporter(pigProgressable7);
        java.lang.reflect.Type type9 = sentencesWithLink0.getReturnType();
        org.apache.pig.data.Tuple tuple10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag11 = sentencesWithLink0.exec(tuple10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type9);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("wikiobject", job9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = parsingWikipediaLoader1.getInputFormat();
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(inputFormat11);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "\"\"\" opennlp / en - sent . bin \"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("hi!");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = mergeAsOpenNLPAnnotatedText3.getPigLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = mergeAsOpenNLPAnnotatedText3.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        sentencesWithLink7.setPigLogger(pigLogger8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = sentencesWithLink7.getReporter();
        java.lang.reflect.Type type11 = sentencesWithLink7.getReturnType();
        boolean boolean12 = sentencesWithLink7.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = sentencesWithLink7.getPigLogger();
        java.lang.Enum enum15 = null;
        sentencesWithLink7.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", enum15);
        pignlproc.markup.Annotation annotation21 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str22 = annotation21.label;
        java.util.List<opennlp.tools.util.Span> spanList23 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) enum15, (java.lang.Object) str22);
        java.lang.String str24 = mergeAsOpenNLPAnnotatedText3.merge("\"hi!\"", spanList23);
        java.lang.String str25 = mergeAsOpenNLPAnnotatedText1.merge("\"http://.wikipedia.org/wiki/hi%21\"", spanList23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray29 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList30 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList30, spanArray29);
        java.lang.String str32 = mergeAsOpenNLPAnnotatedText27.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList30);
        java.lang.String str33 = mergeAsOpenNLPAnnotatedText1.merge("\"opennlp / en - sent . bin\"", (java.util.List<opennlp.tools.util.Span>) spanList30);
        org.apache.pig.data.Tuple tuple34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = mergeAsOpenNLPAnnotatedText1.exec(tuple34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(pigLogger13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "title" + "'", str22, "title");
        org.junit.Assert.assertNotNull(spanList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\" hi ! \"" + "'", str24, "\" hi ! \"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\" http : // . wikipedia . org / wiki / hi % 21 \"" + "'", str25, "\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.junit.Assert.assertNotNull(spanArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "href" + "'", str32, "href");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "\" opennlp / en - sent . bin \"" + "'", str33, "\" opennlp / en - sent . bin \"");
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str15 = annotatingMarkupParser0.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel17 = annotatingMarkupParser0.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser21.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList26 = annotatingMarkupParser23.getHeaderAnnotations();
        java.lang.String str27 = annotatingMarkupParser23.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser28.getHeaders();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getHeaders();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser23.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        info.bliki.wiki.model.WikiModel wikiModel35 = annotatingMarkupParser23.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser37 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser38.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser38.getHeaderAnnotations();
        java.lang.String str42 = annotatingMarkupParser38.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser43 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser43.getHeaders();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser43.getHeaders();
        java.lang.Appendable appendable46 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable47 = annotatingMarkupParser43.new CountingAppendable(appendable46);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable47);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser49 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser49.getHeaders();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser49.getHeaders();
        java.lang.Appendable appendable52 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable53 = annotatingMarkupParser49.new CountingAppendable(appendable52);
        countingAppendable53.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable56 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable53);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser37.new CountingAppendable((java.lang.Appendable) countingAppendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser23.new CountingAppendable((java.lang.Appendable) countingAppendable56);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser59.getHeaders();
        java.util.List<java.lang.String> strList61 = annotatingMarkupParser59.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList62 = annotatingMarkupParser59.getHeaderAnnotations();
        java.lang.String str63 = annotatingMarkupParser59.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser64 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList65 = annotatingMarkupParser64.getHeaders();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser64.getHeaders();
        java.lang.Appendable appendable67 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable68 = annotatingMarkupParser64.new CountingAppendable(appendable67);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable69 = annotatingMarkupParser59.new CountingAppendable((java.lang.Appendable) countingAppendable68);
        java.util.List<java.lang.String> strList70 = annotatingMarkupParser59.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel72 = annotatingMarkupParser59.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str74 = annotatingMarkupParser59.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel76 = annotatingMarkupParser59.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        java.util.List<pignlproc.markup.Annotation> annotationList77 = annotatingMarkupParser59.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList78 = annotatingMarkupParser59.getParagraphAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel80 = annotatingMarkupParser59.makeWikiModel("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        annotatingMarkupParser0.nodesToText(annotationList22, (java.lang.Appendable) countingAppendable56, (info.bliki.wiki.model.IWikiModel) wikiModel80);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable83 = countingAppendable56.append((java.lang.CharSequence) "http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !\n\n" + "'", str15, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(wikiModel35);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(annotationList62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(wikiModel72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi !\n\n" + "'", str74, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel76);
        org.junit.Assert.assertNotNull(annotationList77);
        org.junit.Assert.assertNotNull(annotationList78);
        org.junit.Assert.assertNotNull(wikiModel80);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.String str3 = concatTextBag1.exec(tuple2);
        pignlproc.evaluation.NoLoopInPath noLoopInPath4 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText5 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        safeTsvText5.setPigLogger(pigLogger6);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText8 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = mergeAsOpenNLPAnnotatedText8.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract10 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = checkAbstract10.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = mergeAsOpenNLPAnnotatedText8.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = safeTsvText5.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = noLoopInPath4.outputSchema(schema13);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag16 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = aggregateTextBag16.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = noLoopInPath4.outputSchema(schema25);
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum31 = null;
        checkAbstract29.warn("http://.wikipedia.org/wiki/hi%21", enum31);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = null;
        checkAbstract29.setPigLogger(pigLogger33);
        checkAbstract29.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract29.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath4.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = concatTextBag1.outputSchema(schema47);
        boolean boolean49 = concatTextBag1.isAsynchronous();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriStringLiteralNTriplesLoader2.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21", job14);
        org.apache.pig.Expression expression16 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression16);
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceStatistics resourceStatistics20 = uriStringLiteralNTriplesLoader2.getStatistics("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/%22%22%22_http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22%22%22", job19);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNull(resourceStatistics20);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"hi!\"\" \"");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"title\"", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        org.apache.hadoop.fs.Path path9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = uriStringLiteralNTriplesLoader2.relativeToAbsolutePath("http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22", path9);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray5);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getHeaderAnnotations();
        java.lang.String str6 = annotatingMarkupParser2.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.lang.Appendable appendable10 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser7.new CountingAppendable(appendable10);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable11);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser13.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser13.getHeaders();
        java.lang.Appendable appendable16 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser13.new CountingAppendable(appendable16);
        countingAppendable17.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable17);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable20);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable23 = countingAppendable20.append((java.lang.CharSequence) "http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        countingAppendable15.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser0.getParagraphs();
        java.lang.String str21 = annotatingMarkupParser0.parse("http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521\n" + "'", str21, "http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521\n");
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http://\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/http_%3A_%2F%2F_hi_%21_._wikipedia_._org_%2F_wiki_%2F_opennlp___%25_2_F___en___-___sent___.___bin");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        java.lang.reflect.Type type2 = sentencesWithLink0.getReturnType();
        java.lang.reflect.Type type3 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertNotNull(type3);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser6.getHeaderAnnotations();
        java.lang.String str10 = annotatingMarkupParser6.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser17.getHeaders();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser17.getHeaders();
        java.lang.Appendable appendable20 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser17.new CountingAppendable(appendable20);
        countingAppendable21.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getHeaderAnnotations();
        java.lang.String str29 = annotatingMarkupParser25.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.lang.Appendable appendable33 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser30.new CountingAppendable(appendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser25.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable36 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        countingAppendable34.currentPosition = 0;
        countingAppendable34.currentPosition = (short) 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable41 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable43 = countingAppendable41.append('a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel5 = annotatingMarkupParser0.makeWikiModel("\"hi! \"");
        java.lang.String str6 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(wikiModel5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("title", job4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple6 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.apache.hadoop.fs.Path path3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = parsingWikipediaLoader1.relativeToAbsolutePath("\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\"", path3);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"title\"", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple8 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray5);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href", true);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        noLoopInPath0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = noLoopInPath0.getPigLogger();
        noLoopInPath0.progress();
        org.apache.commons.logging.Log log32 = noLoopInPath0.getLogger();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNull(pigLogger30);
        org.junit.Assert.assertNotNull(log32);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        java.lang.reflect.Type type25 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = sentencesWithLink0.getReporter();
        java.lang.Enum enum28 = null;
        sentencesWithLink0.warn("\"opennlp/en-sent.bin\"", enum28);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList30 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNull(funcSpecList30);
        org.junit.Assert.assertNull(pigProgressable31);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("\"hi!\"", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        org.apache.pig.LoadCaster loadCaster8 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        org.apache.hadoop.mapreduce.RecordReader recordReader9 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit10 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader9, pigSplit10);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(loadCaster8);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("hi !\n");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriUriNTriplesStorer1.getOutputFormat();
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader4 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader4.getSchema("opennlp/en-sent.bin", job6);
        uriUriNTriplesStorer1.checkSchema(resourceSchema7);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat9 = uriUriNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.OutputFormat outputFormat10 = uriUriNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.OutputFormat outputFormat11 = uriUriNTriplesStorer1.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(outputFormat9);
        org.junit.Assert.assertNotNull(outputFormat10);
        org.junit.Assert.assertNotNull(outputFormat11);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink2 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag4 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum7 = null;
        checkAbstract5.warn("http://.wikipedia.org/wiki/hi%21", enum7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        checkAbstract5.setPigLogger(pigLogger9);
        checkAbstract5.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText12 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        safeTsvText12.setPigLogger(pigLogger13);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText15 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable16 = mergeAsOpenNLPAnnotatedText15.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract17 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = checkAbstract17.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = mergeAsOpenNLPAnnotatedText15.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = safeTsvText12.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract5.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = concatTextBag4.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = sentencesWithLink2.outputSchema(schema23);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        sentencesWithLink2.setPigLogger(pigLogger25);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList27 = sentencesWithLink2.getArgToFuncMapping();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag29 = new pignlproc.evaluation.AggregateTextBag((int) '4');
        java.lang.reflect.Type type30 = aggregateTextBag29.getReturnType();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag32 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum34 = null;
        aggregateTextBag32.warn("href", enum34);
        aggregateTextBag32.progress();
        pignlproc.evaluation.CheckAbstract checkAbstract37 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract37.outputSchema(schema38);
        org.apache.pig.data.Tuple tuple40 = null;
        java.lang.Boolean boolean41 = checkAbstract37.exec(tuple40);
        java.lang.Enum enum43 = null;
        checkAbstract37.warn("href", enum43);
        checkAbstract37.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText46 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        safeTsvText46.setPigLogger(pigLogger47);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText49 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable50 = mergeAsOpenNLPAnnotatedText49.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract51 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract51.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText49.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = safeTsvText46.outputSchema(schema54);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText56 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray58 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList59 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList59, spanArray58);
        java.lang.String str61 = mergeAsOpenNLPAnnotatedText56.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList59);
        pignlproc.evaluation.ConcatTextBag concatTextBag63 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract64 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum66 = null;
        checkAbstract64.warn("http://.wikipedia.org/wiki/hi%21", enum66);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger68 = null;
        checkAbstract64.setPigLogger(pigLogger68);
        checkAbstract64.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText71 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger72 = null;
        safeTsvText71.setPigLogger(pigLogger72);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText74 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable75 = mergeAsOpenNLPAnnotatedText74.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract76 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = checkAbstract76.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = mergeAsOpenNLPAnnotatedText74.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = safeTsvText71.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = checkAbstract64.outputSchema(schema80);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = concatTextBag63.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = mergeAsOpenNLPAnnotatedText56.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = safeTsvText46.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = checkAbstract37.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = aggregateTextBag32.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = aggregateTextBag29.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = sentencesWithLink2.outputSchema(schema87);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema88);
        org.apache.pig.data.Tuple tuple90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str91 = mergeAsOpenNLPAnnotatedText1.exec(tuple90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(funcSpecList27);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertEquals("'" + boolean41 + "' != '" + false + "'", boolean41, false);
        org.junit.Assert.assertNull(pigProgressable50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(spanArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "href" + "'", str61, "href");
        org.junit.Assert.assertNull(pigProgressable75);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\" hi ! \"\n");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.cleanupOnFailure("http : // http : // hi ! . wikipedia . org / wiki / % 22 _ title _ % 22 . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: http :%20/%20http%20:%20/%20hi%20!%20.%20wikipedia%20.%20org%20/%20wiki%20/%20%25%2022%20_%20title%20_%20%25%2022%20.%20wikipedia%20.%20org%20/%20wiki%20/%20opennlp%20_%20%25%202%20F%20_%20en%20_%20-%20_%20sent%20_%20.%20_%20bin");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) '#', false);
        pignlproc.evaluation.SafeTsvText safeTsvText3 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type4 = safeTsvText3.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema6 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = checkAbstract5.outputSchema(schema6);
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = safeTsvText3.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = aggregateTextBag2.outputSchema(schema7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        aggregateTextBag2.setPigLogger(pigLogger10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = aggregateTextBag2.getReporter();
        java.lang.reflect.Type type13 = aggregateTextBag2.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        safeTsvText14.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink25 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList26 = sentencesWithLink25.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        sentencesWithLink25.setPigLogger(pigLogger27);
        java.lang.reflect.Type type29 = sentencesWithLink25.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = sentencesWithLink25.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = sentencesWithLink25.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        sentencesWithLink25.setPigLogger(pigLogger32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser34.getHeaders();
        java.lang.String str38 = annotatingMarkupParser34.parse("\"title\"");
        pignlproc.evaluation.ConcatTextBag concatTextBag40 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum43 = null;
        checkAbstract41.warn("http://.wikipedia.org/wiki/hi%21", enum43);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        checkAbstract41.setPigLogger(pigLogger45);
        checkAbstract41.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText48 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger49 = null;
        safeTsvText48.setPigLogger(pigLogger49);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText51 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable52 = mergeAsOpenNLPAnnotatedText51.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract53 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract53.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = mergeAsOpenNLPAnnotatedText51.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = safeTsvText48.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract41.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = concatTextBag40.outputSchema(schema58);
        java.util.List<opennlp.tools.util.Span> spanList60 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) pigLogger32, (java.lang.Object) "\"title\"", (java.lang.Object) schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = safeTsvText14.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = aggregateTextBag2.outputSchema(schema61);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(pigProgressable12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(funcSpecList26);
        org.junit.Assert.assertNotNull(type29);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "\"title\"\n" + "'", str38, "\"title\"\n");
        org.junit.Assert.assertNull(pigProgressable52);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(spanList60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("wikiobject", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceStatistics resourceStatistics15 = uriUriNTriplesLoader3.getStatistics("opennlp / en - sent . bin", job14);
        org.apache.hadoop.mapreduce.RecordReader recordReader16 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit17 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader16, pigSplit17);
        org.apache.pig.LoadCaster loadCaster19 = uriUriNTriplesLoader3.getLoadCaster();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple20 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNull(resourceStatistics15);
        org.junit.Assert.assertNotNull(loadCaster19);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("\"\"\"hi!\"\" \"\n\n");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"title\"\n", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("\" title \"", job9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job13 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"", job13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%2521%22%22%22%22%20%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(inputFormat11);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMinInputSplitSize(job0, (long) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        checkAbstract0.setReporter(pigProgressable5);
        boolean boolean7 = checkAbstract0.isAsynchronous();
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.Boolean boolean9 = checkAbstract0.exec(tuple8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = checkAbstract0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(pigLogger10);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("http://\" title \".wikipedia.org/wiki/", job3);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple5 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) '4');
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum4 = null;
        checkAbstract2.warn("http://.wikipedia.org/wiki/hi%21", enum4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        checkAbstract2.setReporter(pigProgressable6);
        java.lang.reflect.Type type8 = checkAbstract2.getReturnType();
        boolean boolean9 = checkAbstract2.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = checkAbstract2.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        checkAbstract2.setPigLogger(pigLogger11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = checkAbstract2.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = checkAbstract2.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = null;
        checkAbstract2.setReporter(pigProgressable15);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag18 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 0);
        pignlproc.evaluation.ConcatTextBag concatTextBag21 = new pignlproc.evaluation.ConcatTextBag("http://\"title\".wikipedia.org/wiki/%22hi%21%22", true);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink22 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList23 = sentencesWithLink22.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum26 = null;
        checkAbstract24.warn("http://.wikipedia.org/wiki/hi%21", enum26);
        java.lang.Enum enum29 = null;
        checkAbstract24.warn("hi !", enum29);
        pignlproc.evaluation.NoLoopInPath noLoopInPath31 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText32 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = null;
        safeTsvText32.setPigLogger(pigLogger33);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText35 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable36 = mergeAsOpenNLPAnnotatedText35.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract37 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract37.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = mergeAsOpenNLPAnnotatedText35.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = safeTsvText32.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = noLoopInPath31.outputSchema(schema40);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag43 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText44 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        safeTsvText44.setPigLogger(pigLogger45);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText47 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable48 = mergeAsOpenNLPAnnotatedText47.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract49 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = checkAbstract49.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = mergeAsOpenNLPAnnotatedText47.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = safeTsvText44.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = aggregateTextBag43.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = noLoopInPath31.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = checkAbstract24.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = sentencesWithLink22.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = concatTextBag21.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = aggregateTextBag18.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = checkAbstract2.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = aggregateTextBag1.outputSchema(schema60);
        aggregateTextBag1.progress();
        org.apache.pig.data.Tuple tuple63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str64 = aggregateTextBag1.exec(tuple63);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNull(pigLogger14);
        org.junit.Assert.assertNull(funcSpecList23);
        org.junit.Assert.assertNull(pigProgressable36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(pigProgressable48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/hi%21");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "opennlp/en-sent.bin");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        java.lang.String str13 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "opennlp/en-sent.bin");
        java.lang.String str15 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "opennlp/en-sent.bin" + "'", str13, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "opennlp/en-sent.bin" + "'", str15, "opennlp/en-sent.bin");
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("http : // \"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\" . wikipedia . org / wiki / href");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink7.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        java.lang.Enum enum14 = null;
        checkAbstract9.warn("hi !", enum14);
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract9.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = sentencesWithLink7.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText0.outputSchema(schema41);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag46 = new pignlproc.evaluation.AggregateTextBag((int) '#', false);
        pignlproc.evaluation.SafeTsvText safeTsvText47 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type48 = safeTsvText47.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract49 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = checkAbstract49.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = safeTsvText47.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = aggregateTextBag46.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = safeTsvText0.outputSchema(schema53);
        java.lang.Enum enum56 = null;
        safeTsvText0.warn("http : // \"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\" . wikipedia . org / wiki / href", enum56);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(type48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((-1));
        pignlproc.evaluation.NoLoopInPath noLoopInPath2 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText3 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        safeTsvText3.setPigLogger(pigLogger4);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = mergeAsOpenNLPAnnotatedText6.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = checkAbstract8.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = safeTsvText3.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = noLoopInPath2.outputSchema(schema11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = noLoopInPath2.getPigLogger();
        java.lang.reflect.Type type15 = noLoopInPath2.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = noLoopInPath2.outputSchema(schema40);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = noLoopInPath2.getReporter();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag45 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText46 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray48 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList49 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList49, spanArray48);
        java.lang.String str51 = mergeAsOpenNLPAnnotatedText46.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList49);
        pignlproc.evaluation.ConcatTextBag concatTextBag53 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum56 = null;
        checkAbstract54.warn("http://.wikipedia.org/wiki/hi%21", enum56);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger58 = null;
        checkAbstract54.setPigLogger(pigLogger58);
        checkAbstract54.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText61 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        safeTsvText61.setPigLogger(pigLogger62);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText64 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable65 = mergeAsOpenNLPAnnotatedText64.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract66 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract66.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText64.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = safeTsvText61.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = checkAbstract54.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = concatTextBag53.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = mergeAsOpenNLPAnnotatedText46.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = aggregateTextBag45.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = noLoopInPath2.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = aggregateTextBag1.outputSchema(schema73);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(pigLogger14);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(pigProgressable42);
        org.junit.Assert.assertNotNull(spanArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "href" + "'", str51, "href");
        org.junit.Assert.assertNull(pigProgressable65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 1, false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag2.setReporter(pigProgressable3);
        pignlproc.evaluation.SafeTsvText safeTsvText5 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum7 = null;
        safeTsvText5.warn("http://.wikipedia.org/wiki/hi%21", enum7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = safeTsvText5.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        safeTsvText5.setReporter(pigProgressable10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = null;
        safeTsvText5.setReporter(pigProgressable12);
        boolean boolean14 = safeTsvText5.isAsynchronous();
        java.lang.Enum enum16 = null;
        safeTsvText5.warn("\"title\"\n", enum16);
        pignlproc.evaluation.ConcatTextBag concatTextBag19 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum22 = null;
        checkAbstract20.warn("http://.wikipedia.org/wiki/hi%21", enum22);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        checkAbstract20.setPigLogger(pigLogger24);
        checkAbstract20.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract20.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = concatTextBag19.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = safeTsvText5.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = aggregateTextBag2.outputSchema(schema37);
        aggregateTextBag2.finish();
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21", "hi !", "http://.wikipedia.org/wiki/hi%21\n");
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("\"title\"");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat6 = uriUriNTriplesStorer3.getOutputFormat();
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader8 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = parsingWikipediaLoader8.getSchema("", job10);
        uriUriNTriplesStorer3.checkSchema(resourceSchema11);
        org.apache.pig.data.Tuple tuple13 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema11);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = aggregateTextBag0.outputSchema(schema9);
        java.lang.Enum enum13 = null;
        aggregateTextBag0.warn("\"hi!\"\n", enum13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = null;
        aggregateTextBag0.setReporter(pigProgressable15);
        java.lang.reflect.Type type17 = aggregateTextBag0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        aggregateTextBag0.setPigLogger(pigLogger18);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(type17);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("title", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21", job7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job11 = null;
        java.lang.String[] strArray12 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href", job11);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNull(strArray12);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("hi!", job6);
        parsingWikipediaLoader1.setUDFContextSignature("title");
        org.apache.pig.Expression expression10 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader1.getSchema("\" http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / hrefwikiobject \"\"\"\"\"\" http : // hi ! . wikipedia . org / wiki / % 22 http % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 22 % 0 A \"\"\"\"\"\" wikiobject \"\" hi ! \"\" wikiobject wikiobjectopennlp / en - sent . binwikiobjecthttp : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ binwikiobjecthttp : // http : // \"\" title \"\" . wikipedia . org / wiki / % 22 hi % 21 % 22 . wikipedia . org / wiki / hi % 21 wikiobjecthttp : // \"\" http : // . wikipedia . org / wiki / hi % 21 \"\" . wikipedia . org / wiki / % 22 % 22 % 22 http % 3 A % 2 F % 2 Fhi _ % 21 _ . wikipedia . org % 2 Fwiki % 2 Fhttp % 253 A % 252 F % 252 Fhttp % 253 A % 252 F % 252 F . wikipedia . org % 252 Fwiki % 252 Fhi % 252521 % 250 A . wikipedia . org % 252 Fwiki % 252 F % 252522 title % 252522 % 22 % 22 % 22 wikiobject \"\" opennlp / en - sent . bin \"\" wikiobject \"\"\"\"\"", job13);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        checkAbstract0.finish();
        org.apache.commons.logging.Log log4 = checkAbstract0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        checkAbstract0.setReporter(pigProgressable5);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNotNull(log4);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.lang.String str6 = annotatingMarkupParser0.parse("");
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList8);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("http://http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F%22hi%21%22%0A.wikipedia.org%2Fwiki%2F%2522hi%2521_%2522");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"http://http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F%22hi%21%22%0A.wikipedia.org%2Fwiki%2F%2522hi%2521_%2522\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable13 = countingAppendable11.append((java.lang.CharSequence) "\"\"\"opennlp / en - sent . bin\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://\"title\"\n.wikipedia.org/wiki/", "http://http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F%22hi%21%22%0A.wikipedia.org%2Fwiki%2F%2522hi%2521_%2522");
        org.apache.hadoop.mapreduce.RecordReader recordReader3 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit4 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader3, pigSplit4);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        java.lang.Object obj0 = null;
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader4 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = uriUriNTriplesLoader4.getSchema("", job6);
        org.apache.pig.Expression expression8 = null;
        uriUriNTriplesLoader4.setPartitionFilter(expression8);
        org.apache.hadoop.mapreduce.InputFormat inputFormat10 = uriUriNTriplesLoader4.getInputFormat();
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = uriUriNTriplesLoader4.getSchema("wikiobject", job12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceSchema resourceSchema16 = uriUriNTriplesLoader4.getSchema("\"\"\"hi!\"\" \"", job15);
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader17 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceStatistics resourceStatistics20 = uriUriNTriplesLoader17.getStatistics("wikiobject", job19);
        org.apache.hadoop.mapreduce.Job job22 = null;
        org.apache.pig.ResourceStatistics resourceStatistics23 = uriUriNTriplesLoader17.getStatistics("\"opennlp / en - sent . bin\"", job22);
        org.apache.hadoop.mapreduce.Job job25 = null;
        java.lang.String[] strArray26 = uriUriNTriplesLoader17.getPartitionKeys("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job25);
        java.util.List<opennlp.tools.util.Span> spanList27 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans(obj0, (java.lang.Object) resourceSchema16, (java.lang.Object) uriUriNTriplesLoader17);
        org.apache.hadoop.fs.Path path29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = uriUriNTriplesLoader17.relativeToAbsolutePath("\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"", path29);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(inputFormat10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNotNull(resourceSchema16);
        org.junit.Assert.assertNull(resourceStatistics20);
        org.junit.Assert.assertNull(resourceStatistics23);
        org.junit.Assert.assertNull(strArray26);
        org.junit.Assert.assertNotNull(spanList27);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        sentencesWithLink0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        sentencesWithLink0.setPigLogger(pigLogger3);
        org.junit.Assert.assertNull(pigLogger1);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("wikiobject", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriUriNTriplesLoader3.getSchema("\"\"\"hi!\"\" \"", job14);
        org.apache.hadoop.fs.Path path17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = uriUriNTriplesLoader3.relativeToAbsolutePath("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", path17);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://hi !?.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("wikiobject", "");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader6, pigSplit7);
        org.apache.pig.LoadCaster loadCaster9 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        org.apache.hadoop.mapreduce.InputFormat inputFormat10 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(loadCaster9);
        org.junit.Assert.assertNotNull(inputFormat10);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) '4');
        java.lang.reflect.Type type2 = aggregateTextBag1.getReturnType();
        boolean boolean3 = aggregateTextBag1.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath4 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText5 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        safeTsvText5.setPigLogger(pigLogger6);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText8 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = mergeAsOpenNLPAnnotatedText8.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract10 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = checkAbstract10.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = mergeAsOpenNLPAnnotatedText8.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = safeTsvText5.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = noLoopInPath4.outputSchema(schema13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = noLoopInPath4.getPigLogger();
        java.lang.reflect.Type type17 = noLoopInPath4.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath18 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText19 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger20 = null;
        safeTsvText19.setPigLogger(pigLogger20);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText22 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable23 = mergeAsOpenNLPAnnotatedText22.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract24.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText22.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = safeTsvText19.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = noLoopInPath18.outputSchema(schema27);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag30 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText31 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        safeTsvText31.setPigLogger(pigLogger32);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText34 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable35 = mergeAsOpenNLPAnnotatedText34.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = checkAbstract36.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = mergeAsOpenNLPAnnotatedText34.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = safeTsvText31.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = aggregateTextBag30.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = noLoopInPath18.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = noLoopInPath4.outputSchema(schema42);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = noLoopInPath4.getReporter();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag47 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray50 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList51 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList51, spanArray50);
        java.lang.String str53 = mergeAsOpenNLPAnnotatedText48.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList51);
        pignlproc.evaluation.ConcatTextBag concatTextBag55 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract56 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum58 = null;
        checkAbstract56.warn("http://.wikipedia.org/wiki/hi%21", enum58);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger60 = null;
        checkAbstract56.setPigLogger(pigLogger60);
        checkAbstract56.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText63 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger64 = null;
        safeTsvText63.setPigLogger(pigLogger64);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText66 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable67 = mergeAsOpenNLPAnnotatedText66.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract68 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = checkAbstract68.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = mergeAsOpenNLPAnnotatedText66.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = safeTsvText63.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = checkAbstract56.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = concatTextBag55.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = mergeAsOpenNLPAnnotatedText48.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = aggregateTextBag47.outputSchema(schema75);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = noLoopInPath4.outputSchema(schema75);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = aggregateTextBag1.outputSchema(schema75);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable79 = null;
        aggregateTextBag1.setReporter(pigProgressable79);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(pigLogger16);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNull(pigProgressable23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(pigProgressable35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(spanArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "href" + "'", str53, "href");
        org.junit.Assert.assertNull(pigProgressable67);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation(10, (int) (byte) 1, "http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22", "\"\"\"title\"\" \"");
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract0.setReporter(pigProgressable4);
        java.lang.reflect.Type type6 = checkAbstract0.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath7 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText8 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        safeTsvText8.setPigLogger(pigLogger9);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = mergeAsOpenNLPAnnotatedText11.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = checkAbstract13.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = mergeAsOpenNLPAnnotatedText11.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = safeTsvText8.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = noLoopInPath7.outputSchema(schema16);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag19 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText20 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        safeTsvText20.setPigLogger(pigLogger21);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText23 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = mergeAsOpenNLPAnnotatedText23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract25.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText23.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = safeTsvText20.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = aggregateTextBag19.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath7.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract0.outputSchema(schema28);
        checkAbstract0.finish();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList34 = checkAbstract0.getArgToFuncMapping();
        java.lang.Enum enum36 = null;
        checkAbstract0.warn("\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\"", enum36);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(pigProgressable12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(pigProgressable24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(funcSpecList34);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        org.apache.commons.logging.Log log3 = sentencesWithLink0.getLogger();
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag5 = sentencesWithLink0.exec(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(log3);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"href");
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21", "http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\" opennlp / en - sent . bin \"\n", job4);
        org.junit.Assert.assertNull(strArray5);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("\"http://.wikipedia.org/wiki/hi%21\"\n\n");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.Boolean boolean3 = noLoopInPath1.exec(tuple2);
        org.junit.Assert.assertEquals("'" + boolean3 + "' != '" + true + "'", boolean3, true);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader6, pigSplit7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = parsingWikipediaLoader1.getSchema("\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \"", job10);
        parsingWikipediaLoader1.setUDFContextSignature("http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22");
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema11);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        countingAppendable29.currentPosition = (byte) 10;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable70 = countingAppendable29.append((java.lang.CharSequence) "http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple6 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"", "\"hi!\"\n\n", "\"title\"");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriUriNTriplesLoader3.getSchema("\"hi!\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriUriNTriplesLoader3.getSchema("\" http : // . wikipedia . org / wiki / hi % 21 \"", job10);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(resourceSchema11);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://hi!\n.wikipedia.org/wiki/%22_title_%22", "\"hi! \"", "\"title\"");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        org.apache.hadoop.mapreduce.Job job6 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.cleanupOnFailure("\"\"\"opennlp / en - sent . bin\"\"\"", job6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray5 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList6 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList6, spanArray5);
        java.lang.String str8 = mergeAsOpenNLPAnnotatedText3.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList6);
        pignlproc.evaluation.ConcatTextBag concatTextBag10 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum13 = null;
        checkAbstract11.warn("http://.wikipedia.org/wiki/hi%21", enum13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        checkAbstract11.setPigLogger(pigLogger15);
        checkAbstract11.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText18 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        safeTsvText18.setPigLogger(pigLogger19);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable22 = mergeAsOpenNLPAnnotatedText21.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract23.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = mergeAsOpenNLPAnnotatedText21.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = safeTsvText18.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract11.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = concatTextBag10.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText3.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = aggregateTextBag2.outputSchema(schema30);
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader33 = new pignlproc.storage.ParsingWikipediaLoader("href");
        parsingWikipediaLoader33.setUDFContextSignature("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        org.apache.hadoop.mapreduce.Job job37 = null;
        org.apache.pig.ResourceSchema resourceSchema38 = parsingWikipediaLoader33.getSchema("http://.wikipedia.org/wiki/hi%21", job37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList39 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) schema30, (java.lang.Object) "http://.wikipedia.org/wiki/hi%21");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.pig.impl.logicalLayer.schema.Schema cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "href" + "'", str8, "href");
        org.junit.Assert.assertNull(pigProgressable22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(resourceSchema38);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n.wikipedia.org/wiki/%22%22", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        boolean boolean25 = sentencesWithLink0.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", "http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin", "hi !\n");
        org.apache.hadoop.mapreduce.RecordReader recordReader4 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit5 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader4, pigSplit5);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.Annotation annotation8 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation13 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        pignlproc.markup.Annotation annotation18 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation23 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation28 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str29 = annotation28.label;
        java.lang.String str30 = annotation28.label;
        pignlproc.markup.Annotation annotation35 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str36 = annotation35.label;
        java.lang.String str37 = annotation35.label;
        java.lang.String str38 = annotation35.value;
        pignlproc.markup.Annotation[] annotationArray39 = new pignlproc.markup.Annotation[] { annotation8, annotation13, annotation18, annotation23, annotation28, annotation35 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList40 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList40, annotationArray39);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser42.getHeaders();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser42.getHeaders();
        java.lang.Appendable appendable45 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser42.new CountingAppendable(appendable45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser47 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList48 = annotatingMarkupParser47.getHeaderAnnotations();
        java.lang.String str49 = annotatingMarkupParser47.getRedirect();
        pignlproc.markup.Annotation annotation54 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation59 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int60 = annotation59.end;
        int int61 = annotation59.begin;
        pignlproc.markup.Annotation[] annotationArray62 = new pignlproc.markup.Annotation[] { annotation54, annotation59 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList63 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList63, annotationArray62);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser65.getHeaders();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser65.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList68 = annotatingMarkupParser65.getHeaderAnnotations();
        java.lang.String str69 = annotatingMarkupParser65.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser70 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser70.getHeaders();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser70.getHeaders();
        java.lang.Appendable appendable73 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable74 = annotatingMarkupParser70.new CountingAppendable(appendable73);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable75 = annotatingMarkupParser65.new CountingAppendable((java.lang.Appendable) countingAppendable74);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList77 = annotatingMarkupParser76.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel79 = annotatingMarkupParser76.makeWikiModel("title");
        annotatingMarkupParser47.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList63, (java.lang.Appendable) countingAppendable74, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList40, appendable45, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        java.util.List<pignlproc.markup.Annotation> annotationList82 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser83 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList84 = annotatingMarkupParser83.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList85 = annotatingMarkupParser83.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList86 = annotatingMarkupParser83.getParagraphAnnotations();
        java.util.List<java.lang.String> strList87 = annotatingMarkupParser83.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList88 = annotatingMarkupParser83.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser89 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList90 = annotatingMarkupParser89.getHeaderAnnotations();
        java.util.List<java.lang.String> strList91 = annotatingMarkupParser89.getParagraphs();
        java.lang.Appendable appendable92 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable93 = annotatingMarkupParser89.new CountingAppendable(appendable92);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable94 = annotatingMarkupParser83.new CountingAppendable((java.lang.Appendable) countingAppendable93);
        countingAppendable93.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable97 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable93);
        countingAppendable93.currentPosition = '#';
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "title" + "'", str29, "title");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "title" + "'", str30, "title");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "title" + "'", str36, "title");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "title" + "'", str37, "title");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(annotationList48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(annotationList68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(annotationList77);
        org.junit.Assert.assertNotNull(wikiModel79);
        org.junit.Assert.assertNotNull(annotationList82);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(annotationList85);
        org.junit.Assert.assertNotNull(annotationList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(annotationList88);
        org.junit.Assert.assertNotNull(annotationList90);
        org.junit.Assert.assertNotNull(strList91);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = parsingWikipediaLoader1.getStatistics("\"hi!\"", job7);
        org.apache.pig.LoadCaster loadCaster9 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.pig.Expression expression10 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression10);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(resourceStatistics8);
        org.junit.Assert.assertNotNull(loadCaster9);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum9 = null;
        checkAbstract7.warn("http://.wikipedia.org/wiki/hi%21", enum9);
        java.lang.Enum enum12 = null;
        checkAbstract7.warn("hi !", enum12);
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract7.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = sentencesWithLink0.outputSchema(schema38);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList41 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        pignlproc.evaluation.NoLoopInPath noLoopInPath43 = new pignlproc.evaluation.NoLoopInPath();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger44 = null;
        noLoopInPath43.setPigLogger(pigLogger44);
        pignlproc.evaluation.NoLoopInPath noLoopInPath46 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath46.progress();
        pignlproc.evaluation.NoLoopInPath noLoopInPath48 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText49 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger50 = null;
        safeTsvText49.setPigLogger(pigLogger50);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText52 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable53 = mergeAsOpenNLPAnnotatedText52.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = checkAbstract54.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = mergeAsOpenNLPAnnotatedText52.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = safeTsvText49.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = noLoopInPath48.outputSchema(schema57);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag60 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText61 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        safeTsvText61.setPigLogger(pigLogger62);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText64 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable65 = mergeAsOpenNLPAnnotatedText64.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract66 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract66.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText64.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = safeTsvText61.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = aggregateTextBag60.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = noLoopInPath48.outputSchema(schema69);
        pignlproc.evaluation.CheckAbstract checkAbstract73 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum75 = null;
        checkAbstract73.warn("http://.wikipedia.org/wiki/hi%21", enum75);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger77 = null;
        checkAbstract73.setPigLogger(pigLogger77);
        checkAbstract73.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText80 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger81 = null;
        safeTsvText80.setPigLogger(pigLogger81);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText83 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable84 = mergeAsOpenNLPAnnotatedText83.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract85 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = checkAbstract85.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = mergeAsOpenNLPAnnotatedText83.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = safeTsvText80.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = checkAbstract73.outputSchema(schema89);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = noLoopInPath48.outputSchema(schema90);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = noLoopInPath46.outputSchema(schema90);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = noLoopInPath43.outputSchema(schema92);
        org.apache.pig.impl.logicalLayer.schema.Schema schema94 = sentencesWithLink0.outputSchema(schema92);
        java.lang.Enum enum96 = null;
        sentencesWithLink0.warn("\"title\"\n", enum96);
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(funcSpecList41);
        org.junit.Assert.assertNull(pigProgressable53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNull(pigProgressable65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNull(pigProgressable84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = parsingWikipediaLoader1.getInputFormat();
        parsingWikipediaLoader1.setUDFContextSignature("\"\"\"hi!\"\" \"");
        org.apache.hadoop.mapreduce.Job job15 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A", job15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(inputFormat11);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\"\"", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        boolean boolean8 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray12 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList13 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList13, spanArray12);
        java.lang.String str15 = mergeAsOpenNLPAnnotatedText10.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList13);
        java.lang.String str16 = mergeAsOpenNLPAnnotatedText0.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList13);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray20 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList21 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList21, spanArray20);
        java.lang.String str23 = mergeAsOpenNLPAnnotatedText18.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        mergeAsOpenNLPAnnotatedText18.setPigLogger(pigLogger24);
        boolean boolean26 = mergeAsOpenNLPAnnotatedText18.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray30 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList31 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList31, spanArray30);
        java.lang.String str33 = mergeAsOpenNLPAnnotatedText28.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList31);
        java.lang.String str34 = mergeAsOpenNLPAnnotatedText18.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList31);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray45 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList46 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList46, spanArray45);
        java.lang.String str48 = mergeAsOpenNLPAnnotatedText43.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList46);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText50 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray52 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList53 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList53, spanArray52);
        java.lang.String str55 = mergeAsOpenNLPAnnotatedText50.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList53);
        java.lang.String str56 = mergeAsOpenNLPAnnotatedText43.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList53);
        java.lang.String str57 = mergeAsOpenNLPAnnotatedText36.merge("title", (java.util.List<opennlp.tools.util.Span>) spanList53);
        java.lang.String str58 = mergeAsOpenNLPAnnotatedText18.merge("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", (java.util.List<opennlp.tools.util.Span>) spanList53);
        java.lang.String str59 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList53);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText61 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray63 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList64 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList64, spanArray63);
        java.lang.String str66 = mergeAsOpenNLPAnnotatedText61.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList64);
        java.lang.String str67 = mergeAsOpenNLPAnnotatedText0.merge("\"hi!\"", (java.util.List<opennlp.tools.util.Span>) spanList64);
        java.lang.Enum enum69 = null;
        mergeAsOpenNLPAnnotatedText0.warn("\"opennlp / en - sent . bin\"\n", enum69);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(spanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "href" + "'", str15, "href");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "opennlp / en - sent . bin" + "'", str16, "opennlp / en - sent . bin");
        org.junit.Assert.assertNotNull(spanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi !" + "'", str23, "hi !");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(spanArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "href" + "'", str33, "href");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "opennlp / en - sent . bin" + "'", str34, "opennlp / en - sent . bin");
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(spanArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi !" + "'", str48, "hi !");
        org.junit.Assert.assertNotNull(spanArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "href" + "'", str55, "href");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi !" + "'", str56, "hi !");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "title" + "'", str57, "title");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21" + "'", str58, "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "href" + "'", str59, "href");
        org.junit.Assert.assertNotNull(spanArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi !" + "'", str66, "hi !");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "\" hi ! \"" + "'", str67, "\" hi ! \"");
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        sentencesWithLink0.progress();
        sentencesWithLink0.finish();
        boolean boolean9 = sentencesWithLink0.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("wikiobject", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceStatistics resourceStatistics15 = uriUriNTriplesLoader3.getStatistics("opennlp / en - sent . bin", job14);
        org.apache.hadoop.mapreduce.InputFormat inputFormat16 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job18 = null;
        org.apache.pig.ResourceStatistics resourceStatistics19 = uriUriNTriplesLoader3.getStatistics("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", job18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple20 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNull(resourceStatistics15);
        org.junit.Assert.assertNotNull(inputFormat16);
        org.junit.Assert.assertNull(resourceStatistics19);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser0.getParagraphs();
        info.bliki.wiki.model.WikiModel wikiModel8 = annotatingMarkupParser0.makeWikiModel("hi!");
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser0.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser10 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser10.getHeaders();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser10.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser10.getHeaderAnnotations();
        java.lang.String str14 = annotatingMarkupParser10.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser15.getHeaders();
        java.lang.Appendable appendable18 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable19 = annotatingMarkupParser15.new CountingAppendable(appendable18);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser10.new CountingAppendable((java.lang.Appendable) countingAppendable19);
        info.bliki.wiki.model.WikiModel wikiModel22 = annotatingMarkupParser10.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser23.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser25.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser29.getHeaders();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser29.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser29.getHeaderAnnotations();
        java.lang.String str33 = annotatingMarkupParser29.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser34.getHeaders();
        java.lang.Appendable appendable37 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable38 = annotatingMarkupParser34.new CountingAppendable(appendable37);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable39 = annotatingMarkupParser29.new CountingAppendable((java.lang.Appendable) countingAppendable38);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser40.getHeaderAnnotations();
        java.lang.String str42 = annotatingMarkupParser40.getRedirect();
        pignlproc.markup.Annotation annotation47 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation52 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int53 = annotation52.end;
        int int54 = annotation52.begin;
        pignlproc.markup.Annotation[] annotationArray55 = new pignlproc.markup.Annotation[] { annotation47, annotation52 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList56 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList56, annotationArray55);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList59 = annotatingMarkupParser58.getHeaders();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser58.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList61 = annotatingMarkupParser58.getHeaderAnnotations();
        java.lang.String str62 = annotatingMarkupParser58.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser63 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList64 = annotatingMarkupParser63.getHeaders();
        java.util.List<java.lang.String> strList65 = annotatingMarkupParser63.getHeaders();
        java.lang.Appendable appendable66 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable67 = annotatingMarkupParser63.new CountingAppendable(appendable66);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable68 = annotatingMarkupParser58.new CountingAppendable((java.lang.Appendable) countingAppendable67);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser69 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList70 = annotatingMarkupParser69.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel72 = annotatingMarkupParser69.makeWikiModel("title");
        annotatingMarkupParser40.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList56, (java.lang.Appendable) countingAppendable67, (info.bliki.wiki.model.IWikiModel) wikiModel72);
        annotatingMarkupParser23.nodesToText(annotationList28, (java.lang.Appendable) countingAppendable39, (info.bliki.wiki.model.IWikiModel) wikiModel72);
        int int75 = countingAppendable39.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable76 = annotatingMarkupParser10.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        countingAppendable39.currentPosition = (byte) 10;
        int int79 = countingAppendable39.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable80 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        int int81 = countingAppendable39.currentPosition;
        countingAppendable39.currentPosition = (short) 0;
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(wikiModel8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(wikiModel22);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(annotationList61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(annotationList70);
        org.junit.Assert.assertNotNull(wikiModel72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum4 = null;
        checkAbstract2.warn("http://.wikipedia.org/wiki/hi%21", enum4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        checkAbstract2.setPigLogger(pigLogger6);
        checkAbstract2.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = checkAbstract2.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = concatTextBag1.outputSchema(schema19);
        org.apache.pig.data.Tuple tuple21 = null;
        java.lang.String str22 = concatTextBag1.exec(tuple21);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink23 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList24 = sentencesWithLink23.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        sentencesWithLink23.setPigLogger(pigLogger25);
        java.lang.reflect.Type type27 = sentencesWithLink23.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = sentencesWithLink23.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = sentencesWithLink23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum32 = null;
        checkAbstract30.warn("http://.wikipedia.org/wiki/hi%21", enum32);
        java.lang.Enum enum35 = null;
        checkAbstract30.warn("hi !", enum35);
        pignlproc.evaluation.NoLoopInPath noLoopInPath37 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText38 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        safeTsvText38.setPigLogger(pigLogger39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText41 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = mergeAsOpenNLPAnnotatedText41.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract43.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = mergeAsOpenNLPAnnotatedText41.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText38.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath37.outputSchema(schema46);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag49 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText50 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        safeTsvText50.setPigLogger(pigLogger51);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText53 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable54 = mergeAsOpenNLPAnnotatedText53.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract55 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract55.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = mergeAsOpenNLPAnnotatedText53.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = safeTsvText50.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = aggregateTextBag49.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = noLoopInPath37.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract30.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = sentencesWithLink23.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = concatTextBag1.outputSchema(schema61);
        java.lang.Enum enum66 = null;
        concatTextBag1.warn("title", enum66);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(funcSpecList24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNull(pigProgressable42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(pigProgressable54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = uriUriNTriplesLoader3.getStatistics("http://.wikipedia.org/wiki/hi%21\n", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = uriUriNTriplesLoader3.getSchema("\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"", job9);
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNull(resourceStatistics7);
        org.junit.Assert.assertNotNull(resourceSchema10);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "hi!\n\n", "http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21");
        org.apache.hadoop.fs.Path path5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = uriStringLiteralNTriplesStorer3.relToAbsPathForStoreLocation("\"http://.wikipedia.org/wiki/hi%21\"\n\n", path5);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http://.wikipedia.org/wiki/hi%21\"?? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((-1), 0, "http://.wikipedia.org/wiki/hi%21\n", "opennlp / en - sent . bin");
        int int5 = annotation4.end;
        java.lang.String str6 = annotation4.label;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "http://.wikipedia.org/wiki/hi%21\n" + "'", str6, "http://.wikipedia.org/wiki/hi%21\n");
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"opennlp/en-sent.bin\"");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.cleanupOnFailure("\"http://.wikipedia.org/wiki/hi%21\"", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"http://.wikipedia.org/wiki/hi%2521%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"hi!\"\n", "");
        org.apache.pig.Expression expression3 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression3);
        uriStringLiteralNTriplesLoader2.setUDFContextSignature("\"hi! \"");
        org.apache.hadoop.mapreduce.InputFormat inputFormat7 = uriStringLiteralNTriplesLoader2.getInputFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple8 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat7);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader0 = new pignlproc.storage.UriStringLiteralNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceSchema resourceSchema3 = uriStringLiteralNTriplesLoader0.getSchema("hi!", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = uriStringLiteralNTriplesLoader0.getStatistics("href", job5);
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        uriStringLiteralNTriplesLoader0.prepareToRead(recordReader7, pigSplit8);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple10 = uriStringLiteralNTriplesLoader0.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema3);
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\n");
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getHeaders();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.commons.logging.Log log3 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        sentencesWithLink0.finish();
        org.junit.Assert.assertNotNull(log3);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://\"title\"\n.wikipedia.org/wiki/", "hi !");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", job4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple6 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("wikiobject", "http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22.wikipedia.org/wiki/wikiobject" + "'", str2, "http://http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22.wikipedia.org/wiki/wikiobject");
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.pig.Expression expression7 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriStringLiteralNTriplesLoader2.getSchema("http://hi!\n.wikipedia.org/wiki/%22_title_%22", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceStatistics resourceStatistics14 = uriStringLiteralNTriplesLoader2.getStatistics("", job13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceSchema resourceSchema17 = uriStringLiteralNTriplesLoader2.getSchema("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"", job16);
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceSchema resourceSchema20 = uriStringLiteralNTriplesLoader2.getSchema("\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\"", job19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple21 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema11);
        org.junit.Assert.assertNull(resourceStatistics14);
        org.junit.Assert.assertNotNull(resourceSchema17);
        org.junit.Assert.assertNotNull(resourceSchema20);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.apache.hadoop.mapreduce.InputFormat inputFormat14 = parsingWikipediaLoader1.getInputFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple15 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(inputFormat14);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http://\"\"\"hi!\"\" \".wikipedia.org/wiki/");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http://\"\"\"\"\"\"hi!\"\"\"\" \"\".wikipedia.org/wiki/\"" + "'", str1, "\"http://\"\"\"\"\"\"hi!\"\"\"\" \"\".wikipedia.org/wiki/\"");
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        java.lang.String str13 = annotatingMarkupParser0.parse("hi!\n");
        info.bliki.htmlcleaner.TagNode tagNode14 = null;
        info.bliki.wiki.model.ImageFormat imageFormat15 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser16.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser16.getHeaderAnnotations();
        java.lang.String str20 = annotatingMarkupParser16.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser21.getHeaders();
        java.lang.Appendable appendable24 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser21.new CountingAppendable(appendable24);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser16.new CountingAppendable((java.lang.Appendable) countingAppendable25);
        info.bliki.wiki.model.WikiModel wikiModel28 = annotatingMarkupParser16.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser29.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser31 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser31.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList33 = annotatingMarkupParser31.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser31.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser35 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser35.getHeaders();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser35.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList38 = annotatingMarkupParser35.getHeaderAnnotations();
        java.lang.String str39 = annotatingMarkupParser35.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList41 = annotatingMarkupParser40.getHeaders();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser40.getHeaders();
        java.lang.Appendable appendable43 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable44 = annotatingMarkupParser40.new CountingAppendable(appendable43);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable45 = annotatingMarkupParser35.new CountingAppendable((java.lang.Appendable) countingAppendable44);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser46 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser46.getHeaderAnnotations();
        java.lang.String str48 = annotatingMarkupParser46.getRedirect();
        pignlproc.markup.Annotation annotation53 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation58 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int59 = annotation58.end;
        int int60 = annotation58.begin;
        pignlproc.markup.Annotation[] annotationArray61 = new pignlproc.markup.Annotation[] { annotation53, annotation58 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList62 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList62, annotationArray61);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser64 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList65 = annotatingMarkupParser64.getHeaders();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser64.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList67 = annotatingMarkupParser64.getHeaderAnnotations();
        java.lang.String str68 = annotatingMarkupParser64.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser69 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList70 = annotatingMarkupParser69.getHeaders();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser69.getHeaders();
        java.lang.Appendable appendable72 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable73 = annotatingMarkupParser69.new CountingAppendable(appendable72);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable74 = annotatingMarkupParser64.new CountingAppendable((java.lang.Appendable) countingAppendable73);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser75 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList76 = annotatingMarkupParser75.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel78 = annotatingMarkupParser75.makeWikiModel("title");
        annotatingMarkupParser46.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList62, (java.lang.Appendable) countingAppendable73, (info.bliki.wiki.model.IWikiModel) wikiModel78);
        annotatingMarkupParser29.nodesToText(annotationList34, (java.lang.Appendable) countingAppendable45, (info.bliki.wiki.model.IWikiModel) wikiModel78);
        int int81 = countingAppendable45.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable82 = annotatingMarkupParser16.new CountingAppendable((java.lang.Appendable) countingAppendable45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser84 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        info.bliki.wiki.model.WikiModel wikiModel86 = annotatingMarkupParser84.makeWikiModel("hi !\n\n");
        java.util.List<java.lang.String> strList87 = annotatingMarkupParser84.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel89 = annotatingMarkupParser84.makeWikiModel("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        // The following exception was thrown during execution in test generation
        try {
            annotatingMarkupParser0.imageNodeToText(tagNode14, imageFormat15, (java.lang.Appendable) countingAppendable82, (info.bliki.wiki.model.IWikiModel) wikiModel89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!\n\n" + "'", str13, "hi!\n\n");
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(wikiModel28);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(annotationList33);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(annotationList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(annotationList47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(annotationArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(annotationList67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(annotationList76);
        org.junit.Assert.assertNotNull(wikiModel78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(wikiModel86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(wikiModel89);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"http://.wikipedia.org/wiki/hi%21\"\n", "http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22", "\"hi!\"");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.junit.Assert.assertNotNull(inputFormat4);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.apache.hadoop.mapreduce.InputFormat inputFormat3 = uriStringLiteralNTriplesLoader2.getInputFormat();
        uriStringLiteralNTriplesLoader2.setUDFContextSignature("\"hi!\"");
        org.junit.Assert.assertNotNull(inputFormat3);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str2 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.Annotation annotation7 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation12 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int13 = annotation12.end;
        int int14 = annotation12.begin;
        pignlproc.markup.Annotation[] annotationArray15 = new pignlproc.markup.Annotation[] { annotation7, annotation12 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList16 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList16, annotationArray15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser29.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser29.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList16, (java.lang.Appendable) countingAppendable27, (info.bliki.wiki.model.IWikiModel) wikiModel32);
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel36 = annotatingMarkupParser0.makeWikiModel("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21");
        boolean boolean37 = annotatingMarkupParser0.noLinks();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNotNull(wikiModel36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str5 = annotation4.label;
        int int6 = annotation4.end;
        int int7 = annotation4.end;
        java.lang.String str8 = annotation4.value;
        int int9 = annotation4.begin;
        int int10 = annotation4.end;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "title" + "'", str5, "title");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 10 + "'", int10 == 10);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        safeTsvText0.setPigLogger(pigLogger1);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = mergeAsOpenNLPAnnotatedText3.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema6 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = checkAbstract5.outputSchema(schema6);
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = mergeAsOpenNLPAnnotatedText3.outputSchema(schema6);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = safeTsvText0.outputSchema(schema8);
        pignlproc.evaluation.NoLoopInPath noLoopInPath10 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList13 = checkAbstract12.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray16 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList17 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList17, spanArray16);
        java.lang.String str19 = mergeAsOpenNLPAnnotatedText14.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList17);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList20 = mergeAsOpenNLPAnnotatedText14.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray23 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList24 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList24, spanArray23);
        java.lang.String str26 = mergeAsOpenNLPAnnotatedText21.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList24);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        mergeAsOpenNLPAnnotatedText21.setPigLogger(pigLogger27);
        boolean boolean29 = mergeAsOpenNLPAnnotatedText21.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum32 = null;
        checkAbstract30.warn("http://.wikipedia.org/wiki/hi%21", enum32);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable34 = null;
        checkAbstract30.setReporter(pigProgressable34);
        java.lang.reflect.Type type36 = checkAbstract30.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath37 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText38 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        safeTsvText38.setPigLogger(pigLogger39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText41 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = mergeAsOpenNLPAnnotatedText41.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract43.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = mergeAsOpenNLPAnnotatedText41.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText38.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath37.outputSchema(schema46);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag49 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText50 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        safeTsvText50.setPigLogger(pigLogger51);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText53 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable54 = mergeAsOpenNLPAnnotatedText53.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract55 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract55.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = mergeAsOpenNLPAnnotatedText53.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = safeTsvText50.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = aggregateTextBag49.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = noLoopInPath37.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract30.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = mergeAsOpenNLPAnnotatedText21.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = mergeAsOpenNLPAnnotatedText14.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract12.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = noLoopInPath10.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = safeTsvText0.outputSchema(schema66);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable68 = null;
        safeTsvText0.setReporter(pigProgressable68);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(funcSpecList13);
        org.junit.Assert.assertNotNull(spanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi !" + "'", str19, "hi !");
        org.junit.Assert.assertNull(funcSpecList20);
        org.junit.Assert.assertNotNull(spanArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi !" + "'", str26, "hi !");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNull(pigProgressable42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(pigProgressable54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.pig.Expression expression7 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.RecordReader recordReader9 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit10 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader9, pigSplit10);
        org.apache.hadoop.mapreduce.RecordReader recordReader12 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit13 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader12, pigSplit13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceStatistics resourceStatistics17 = uriStringLiteralNTriplesLoader2.getStatistics("\"hi ! \"", job16);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNull(resourceStatistics17);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = checkAbstract0.getReporter();
        checkAbstract0.progress();
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = checkAbstract0.exec(tuple5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = checkAbstract0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = checkAbstract0.getPigLogger();
        java.lang.Enum enum10 = null;
        checkAbstract0.warn("\"\"\n", enum10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + false + "'", boolean6, false);
        org.junit.Assert.assertNull(pigLogger7);
        org.junit.Assert.assertNull(pigLogger8);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        boolean boolean6 = annotatingMarkupParser0.noLinks();
        java.lang.String str8 = annotatingMarkupParser0.parse("\"opennlp / en - sent . bin\"");
        boolean boolean9 = annotatingMarkupParser0.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"opennlp / en - sent . bin\"\n" + "'", str8, "\"opennlp / en - sent . bin\"\n");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNotNull(annotationList11);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = concatTextBag1.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = concatTextBag1.getPigLogger();
        org.apache.pig.impl.logicalLayer.schema.Schema schema4 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema5 = concatTextBag1.outputSchema(schema4);
        java.lang.Enum enum7 = null;
        concatTextBag1.warn("\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", enum7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = concatTextBag1.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNull(pigLogger3);
        org.junit.Assert.assertNotNull(schema5);
        org.junit.Assert.assertNull(pigLogger9);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"hi! \"\n", "http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521");
        org.apache.pig.LoadCaster loadCaster3 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(loadCaster3);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("title", false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        concatTextBag2.setPigLogger(pigLogger3);
        java.lang.Enum enum6 = null;
        concatTextBag2.warn("\"opennlp / en - sent . bin\"", enum6);
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.String str9 = concatTextBag2.exec(tuple8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "\"\"\"hi!\"\" \"\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("hi !", "opennlp/en-sent.bin", "wikiobject");
        org.apache.hadoop.mapreduce.Job job5 = null;
        java.lang.String[] strArray6 = uriUriNTriplesLoader3.getPartitionKeys("", job5);
        uriUriNTriplesLoader3.setUDFContextSignature("\"hi ! \"");
        org.junit.Assert.assertNull(strArray6);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = uriUriNTriplesLoader3.getSchema("\"\"\"hi!\"\" \"", job6);
        org.apache.pig.Expression expression8 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression8);
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNotNull(resourceSchema7);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        java.lang.String[] strArray13 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job12);
        org.apache.hadoop.mapreduce.RecordReader recordReader14 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit15 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader14, pigSplit15);
        org.apache.pig.Expression expression17 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression17);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNull(strArray13);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) '#', false);
        java.lang.reflect.Type type3 = aggregateTextBag2.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract4 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum6 = null;
        checkAbstract4.warn("http://.wikipedia.org/wiki/hi%21", enum6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        checkAbstract4.setReporter(pigProgressable8);
        java.lang.reflect.Type type10 = checkAbstract4.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath11 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText12 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        safeTsvText12.setPigLogger(pigLogger13);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText15 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable16 = mergeAsOpenNLPAnnotatedText15.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract17 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = checkAbstract17.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = mergeAsOpenNLPAnnotatedText15.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = safeTsvText12.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = noLoopInPath11.outputSchema(schema20);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag23 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = aggregateTextBag23.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = noLoopInPath11.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract4.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag2.outputSchema(schema36);
        org.apache.commons.logging.Log log38 = aggregateTextBag2.getLogger();
        org.apache.pig.data.Tuple tuple39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str40 = aggregateTextBag2.exec(tuple39);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type10);
        org.junit.Assert.assertNull(pigProgressable16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(log38);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText2 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        safeTsvText2.setPigLogger(pigLogger3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = mergeAsOpenNLPAnnotatedText5.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = checkAbstract7.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = mergeAsOpenNLPAnnotatedText5.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = safeTsvText2.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = noLoopInPath1.outputSchema(schema10);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag13 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = aggregateTextBag13.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath1.outputSchema(schema22);
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum28 = null;
        checkAbstract26.warn("http://.wikipedia.org/wiki/hi%21", enum28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        checkAbstract26.setPigLogger(pigLogger30);
        checkAbstract26.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract26.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath1.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = sentencesWithLink0.outputSchema(schema44);
        boolean boolean46 = sentencesWithLink0.isAsynchronous();
        boolean boolean47 = sentencesWithLink0.isAsynchronous();
        java.lang.Enum enum49 = null;
        sentencesWithLink0.warn("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", enum49);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"\" hi ! \"\" \"", "\"\"\"hi!\"\" \"", "\" opennlp / en - sent . bin \"");
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"", "\"http://.wikipedia.org/wiki/hi%21\"", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("wikiobject", job5);
        org.junit.Assert.assertNotNull(resourceSchema6);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        org.apache.commons.logging.Log log1 = aggregateTextBag0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = aggregateTextBag0.getReporter();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag5 = new pignlproc.evaluation.AggregateTextBag((int) (short) 100, true);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag8 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath9 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = noLoopInPath9.outputSchema(schema18);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag21 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = aggregateTextBag21.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = noLoopInPath9.outputSchema(schema30);
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum36 = null;
        checkAbstract34.warn("http://.wikipedia.org/wiki/hi%21", enum36);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = null;
        checkAbstract34.setPigLogger(pigLogger38);
        checkAbstract34.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText41 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        safeTsvText41.setPigLogger(pigLogger42);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText44 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable45 = mergeAsOpenNLPAnnotatedText44.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract46 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract46.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = mergeAsOpenNLPAnnotatedText44.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = safeTsvText41.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = checkAbstract34.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = noLoopInPath9.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = aggregateTextBag8.outputSchema(schema51);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag55 = new pignlproc.evaluation.AggregateTextBag((int) (short) 10);
        pignlproc.evaluation.ConcatTextBag concatTextBag57 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract58 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum60 = null;
        checkAbstract58.warn("http://.wikipedia.org/wiki/hi%21", enum60);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        checkAbstract58.setPigLogger(pigLogger62);
        checkAbstract58.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText65 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger66 = null;
        safeTsvText65.setPigLogger(pigLogger66);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText68 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable69 = mergeAsOpenNLPAnnotatedText68.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract70 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = checkAbstract70.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = mergeAsOpenNLPAnnotatedText68.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = safeTsvText65.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = checkAbstract58.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = concatTextBag57.outputSchema(schema75);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = aggregateTextBag55.outputSchema(schema75);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = aggregateTextBag8.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = aggregateTextBag5.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = aggregateTextBag0.outputSchema(schema79);
        org.junit.Assert.assertNotNull(log1);
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(pigProgressable45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(pigProgressable69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("opennlp/en-sent.bin");
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", "\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\"");
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = concatTextBag2.getReporter();
        org.junit.Assert.assertNull(pigProgressable3);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", "\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\"");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\".wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522" + "'", str2, "http://\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\".wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        java.lang.Enum enum4 = null;
        checkAbstract0.warn("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", enum4);
        org.junit.Assert.assertNotNull(schema2);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser2.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser8.getHeaderAnnotations();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getParagraphs();
        java.lang.Appendable appendable11 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser8.new CountingAppendable(appendable11);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        int int15 = countingAppendable12.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable17 = countingAppendable12.append(' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser5.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel8 = annotatingMarkupParser5.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser5.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser5.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser11.getHeaderAnnotations();
        java.lang.String str15 = annotatingMarkupParser11.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser16.getHeaders();
        java.lang.Appendable appendable19 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser16.new CountingAppendable(appendable19);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser11.new CountingAppendable((java.lang.Appendable) countingAppendable20);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser22.getHeaders();
        java.lang.Appendable appendable25 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser22.new CountingAppendable(appendable25);
        countingAppendable26.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser11.new CountingAppendable((java.lang.Appendable) countingAppendable26);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList33 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str34 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser35 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser35.getHeaders();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser35.getHeaders();
        java.lang.Appendable appendable38 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable39 = annotatingMarkupParser35.new CountingAppendable(appendable38);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable40 = annotatingMarkupParser30.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable41 = annotatingMarkupParser11.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        countingAppendable39.currentPosition = 0;
        countingAppendable39.currentPosition = (short) 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser5.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        int int47 = countingAppendable39.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText49 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray51 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList52 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList52, spanArray51);
        java.lang.String str54 = mergeAsOpenNLPAnnotatedText49.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList52);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText56 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray58 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList59 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList59, spanArray58);
        java.lang.String str61 = mergeAsOpenNLPAnnotatedText56.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList59);
        java.lang.String str62 = mergeAsOpenNLPAnnotatedText49.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList59);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger63 = mergeAsOpenNLPAnnotatedText49.getPigLogger();
        pignlproc.markup.Annotation annotation68 = new pignlproc.markup.Annotation((int) (byte) -1, (int) (short) 100, "http://\"title\"\n.wikipedia.org/wiki/", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        java.util.List<opennlp.tools.util.Span> spanList69 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) annotatingMarkupParser0, (java.lang.Object) pigLogger63, (java.lang.Object) "http://\"title\"\n.wikipedia.org/wiki/");
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertNotNull(wikiModel8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(annotationList33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
        org.junit.Assert.assertNotNull(spanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "hi !" + "'", str54, "hi !");
        org.junit.Assert.assertNotNull(spanArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "href" + "'", str61, "href");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi !" + "'", str62, "hi !");
        org.junit.Assert.assertNull(pigLogger63);
        org.junit.Assert.assertNotNull(spanList69);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"\"\"opennlp / en - sent . bin\"\" \"", "http://http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F%22hi%21%22%0A.wikipedia.org%2Fwiki%2F%2522hi%2521_%2522");
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean2 = noLoopInPath1.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        noLoopInPath1.setPigLogger(pigLogger3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        noLoopInPath1.setPigLogger(pigLogger5);
        noLoopInPath1.progress();
        noLoopInPath1.finish();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "href" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.String str6 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "");
        java.lang.String str8 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        java.lang.String str10 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        java.lang.String str12 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "title");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "href" + "'", str6, "href");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href" + "'", str8, "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href" + "'", str10, "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "titlehref" + "'", str12, "titlehref");
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.commons.logging.Log log25 = noLoopInPath0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = noLoopInPath0.getReporter();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink27 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        sentencesWithLink27.setPigLogger(pigLogger28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = sentencesWithLink27.getReporter();
        org.apache.commons.logging.Log log31 = sentencesWithLink27.getLogger();
        java.lang.reflect.Type type32 = sentencesWithLink27.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink33 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        sentencesWithLink33.setPigLogger(pigLogger34);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable36 = sentencesWithLink33.getReporter();
        java.lang.reflect.Type type37 = sentencesWithLink33.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText38 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        safeTsvText38.setPigLogger(pigLogger39);
        safeTsvText38.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink42 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath43 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText44 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        safeTsvText44.setPigLogger(pigLogger45);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText47 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable48 = mergeAsOpenNLPAnnotatedText47.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract49 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = checkAbstract49.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = mergeAsOpenNLPAnnotatedText47.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = safeTsvText44.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = noLoopInPath43.outputSchema(schema52);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag55 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText56 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger57 = null;
        safeTsvText56.setPigLogger(pigLogger57);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText59 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable60 = mergeAsOpenNLPAnnotatedText59.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract61 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = checkAbstract61.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = mergeAsOpenNLPAnnotatedText59.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = safeTsvText56.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = aggregateTextBag55.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = noLoopInPath43.outputSchema(schema64);
        pignlproc.evaluation.CheckAbstract checkAbstract68 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum70 = null;
        checkAbstract68.warn("http://.wikipedia.org/wiki/hi%21", enum70);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger72 = null;
        checkAbstract68.setPigLogger(pigLogger72);
        checkAbstract68.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText75 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger76 = null;
        safeTsvText75.setPigLogger(pigLogger76);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText78 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable79 = mergeAsOpenNLPAnnotatedText78.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract80 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = checkAbstract80.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = mergeAsOpenNLPAnnotatedText78.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = safeTsvText75.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = checkAbstract68.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = noLoopInPath43.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = sentencesWithLink42.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = safeTsvText38.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = sentencesWithLink33.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = sentencesWithLink27.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = noLoopInPath0.outputSchema(schema86);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNull(pigProgressable36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertNull(pigProgressable48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(pigProgressable60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNull(pigProgressable79);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "\"opennlp/en-sent.bin\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"\"", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"hi!\"\n\n");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", job3);
        org.junit.Assert.assertNull(resourceStatistics4);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.apache.hadoop.fs.Path path3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = uriUriNTriplesStorer1.relToAbsPathForStoreLocation("\"opennlp / en - sent . bin\"", path3);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"opennlp / en - sent . bin\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22");
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://\"title\"\n.wikipedia.org/wiki/\n");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation(0, (int) (byte) 1, "hi !\n", "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href");
        java.lang.String str5 = annotation4.value;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href" + "'", str5, "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href");
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("title", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        org.apache.hadoop.mapreduce.InputFormat inputFormat8 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", job10);
        org.apache.hadoop.mapreduce.RecordReader recordReader12 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit13 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader12, pigSplit13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceSchema resourceSchema17 = uriStringLiteralNTriplesLoader2.getSchema("", job16);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat8);
        org.junit.Assert.assertNull(strArray11);
        org.junit.Assert.assertNotNull(resourceSchema17);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("hi!");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("http://.wikipedia.org/wiki/hi%21\n", job12);
        org.apache.pig.Expression expression14 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        org.apache.pig.ResourceSchema resourceSchema18 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job17);
        org.apache.hadoop.mapreduce.Job job20 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("\"hi!\"\n", job20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNotNull(resourceSchema18);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"title\"", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", job9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray5);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.lang.String str6 = annotatingMarkupParser0.parse("");
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser8.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel11 = annotatingMarkupParser8.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList12 = annotatingMarkupParser8.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser8.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser14.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser16.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser16.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser20 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser20.getHeaders();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser20.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList23 = annotatingMarkupParser20.getHeaderAnnotations();
        java.lang.String str24 = annotatingMarkupParser20.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.lang.Appendable appendable28 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser25.new CountingAppendable(appendable28);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable30 = annotatingMarkupParser20.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser31 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser31.getHeaderAnnotations();
        java.lang.String str33 = annotatingMarkupParser31.getRedirect();
        pignlproc.markup.Annotation annotation38 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation43 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int44 = annotation43.end;
        int int45 = annotation43.begin;
        pignlproc.markup.Annotation[] annotationArray46 = new pignlproc.markup.Annotation[] { annotation38, annotation43 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList47 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList47, annotationArray46);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser49 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser49.getHeaders();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser49.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser49.getHeaderAnnotations();
        java.lang.String str53 = annotatingMarkupParser49.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser54 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser54.getHeaders();
        java.util.List<java.lang.String> strList56 = annotatingMarkupParser54.getHeaders();
        java.lang.Appendable appendable57 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser54.new CountingAppendable(appendable57);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable59 = annotatingMarkupParser49.new CountingAppendable((java.lang.Appendable) countingAppendable58);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser60 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList61 = annotatingMarkupParser60.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel63 = annotatingMarkupParser60.makeWikiModel("title");
        annotatingMarkupParser31.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList47, (java.lang.Appendable) countingAppendable58, (info.bliki.wiki.model.IWikiModel) wikiModel63);
        annotatingMarkupParser14.nodesToText(annotationList19, (java.lang.Appendable) countingAppendable30, (info.bliki.wiki.model.IWikiModel) wikiModel63);
        countingAppendable30.currentPosition = ' ';
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser68 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList69 = annotatingMarkupParser68.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel71 = annotatingMarkupParser68.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText(annotationList13, (java.lang.Appendable) countingAppendable30, (info.bliki.wiki.model.IWikiModel) wikiModel71);
        int int73 = countingAppendable30.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable77 = countingAppendable30.append((java.lang.CharSequence) "title\n", (int) (byte) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(wikiModel11);
        org.junit.Assert.assertNotNull(annotationList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(annotationList23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(annotationList61);
        org.junit.Assert.assertNotNull(wikiModel63);
        org.junit.Assert.assertNotNull(annotationList69);
        org.junit.Assert.assertNotNull(wikiModel71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 32 + "'", int73 == 32);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        org.apache.commons.logging.Log log3 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader0 = new pignlproc.storage.ParsingWikipediaLoader();
        org.apache.pig.Expression expression1 = null;
        parsingWikipediaLoader0.setPartitionFilter(expression1);
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = parsingWikipediaLoader0.getPartitionKeys("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21", job4);
        parsingWikipediaLoader0.setUDFContextSignature("\"title\"");
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader0.getSchema("http://.wikipedia.org/wiki/hi%21", job9);
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNotNull(resourceSchema10);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("wikiobject", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceStatistics resourceStatistics15 = uriUriNTriplesLoader3.getStatistics("opennlp / en - sent . bin", job14);
        org.apache.pig.LoadCaster loadCaster16 = uriUriNTriplesLoader3.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job18 = null;
        org.apache.pig.ResourceSchema resourceSchema19 = uriUriNTriplesLoader3.getSchema("hi !\n\n", job18);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNull(resourceStatistics15);
        org.junit.Assert.assertNotNull(loadCaster16);
        org.junit.Assert.assertNotNull(resourceSchema19);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = concatTextBag1.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = concatTextBag1.getPigLogger();
        java.lang.Enum enum5 = null;
        concatTextBag1.warn("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", enum5);
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = concatTextBag1.outputSchema(schema7);
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNull(pigLogger3);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"href");
        org.apache.hadoop.fs.Path path3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = uriUriNTriplesStorer1.relToAbsPathForStoreLocation("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21", path3);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        noLoopInPath0.setPigLogger(pigLogger1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = noLoopInPath0.exec(tuple3);
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = noLoopInPath0.exec(tuple5);
        java.lang.reflect.Type type7 = noLoopInPath0.getReturnType();
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
        org.junit.Assert.assertNotNull(type7);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", "http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/http%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhrefwikiobject%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22wikiobject%22hi%21%22%0Awikiobject%0Awikiobjectopennlp%2Fen-sent.binwikiobjecthttp%3A%2F%2Fhi%21%0A.wikipedia.org%2Fwiki%2Fopennlp_%252F_en_-_sent_._binwikiobjecthttp%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521wikiobjecthttp%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22opennlp_%2F_en_-_sent_._bin%22wikiobject%22%22\n", "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"hi!\"\n\n");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.Job job4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.cleanupOnFailure("\n", job4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader0.getInputFormat();
        uriUriNTriplesLoader0.setUDFContextSignature("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        uriUriNTriplesLoader0.prepareToRead(recordReader7, pigSplit8);
        org.apache.hadoop.mapreduce.InputFormat inputFormat10 = uriUriNTriplesLoader0.getInputFormat();
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceStatistics resourceStatistics13 = uriUriNTriplesLoader0.getStatistics("title", job12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader0.setLocation("\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"", job15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \"\"\" http :%20/%20http%20:%20/%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics3);
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNotNull(inputFormat10);
        org.junit.Assert.assertNull(resourceStatistics13);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.RecordReader recordReader3 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit4 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader3, pigSplit4);
        org.apache.pig.LoadCaster loadCaster6 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        org.junit.Assert.assertNotNull(loadCaster6);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.RecordWriter recordWriter3 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter3);
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer6 = new pignlproc.storage.UriStringLiteralNTriplesStorer("title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader8 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = parsingWikipediaLoader8.getStatistics("hi!", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader8.getSchema("hi!", job13);
        uriStringLiteralNTriplesStorer6.checkSchema(resourceSchema14);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema14);
        org.apache.hadoop.mapreduce.RecordWriter recordWriter17 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter17);
        org.apache.hadoop.fs.Path path20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("", path20);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location:  curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job11 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("hi !\n\n", job11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(inputFormat9);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("\" hi ! \"", "http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22" + "'", str2, "http://http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22");
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList3);
        pignlproc.evaluation.ConcatTextBag concatTextBag7 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum10 = null;
        checkAbstract8.warn("http://.wikipedia.org/wiki/hi%21", enum10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        checkAbstract8.setPigLogger(pigLogger12);
        checkAbstract8.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract8.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = concatTextBag7.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray31 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList32 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList32, spanArray31);
        java.lang.String str34 = mergeAsOpenNLPAnnotatedText29.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList32);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        mergeAsOpenNLPAnnotatedText29.setPigLogger(pigLogger35);
        boolean boolean37 = mergeAsOpenNLPAnnotatedText29.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray41 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList42 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList42, spanArray41);
        java.lang.String str44 = mergeAsOpenNLPAnnotatedText39.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList42);
        java.lang.String str45 = mergeAsOpenNLPAnnotatedText29.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList42);
        java.lang.String str46 = mergeAsOpenNLPAnnotatedText0.merge("\"title\"", (java.util.List<opennlp.tools.util.Span>) spanList42);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger47);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = null;
        mergeAsOpenNLPAnnotatedText0.setReporter(pigProgressable49);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(spanArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "hi !" + "'", str34, "hi !");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(spanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "href" + "'", str44, "href");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "opennlp / en - sent . bin" + "'", str45, "opennlp / en - sent . bin");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "\" title \"" + "'", str46, "\" title \"");
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str2 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.Annotation annotation7 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation12 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int13 = annotation12.end;
        int int14 = annotation12.begin;
        pignlproc.markup.Annotation[] annotationArray15 = new pignlproc.markup.Annotation[] { annotation7, annotation12 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList16 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList16, annotationArray15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser29.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser29.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList16, (java.lang.Appendable) countingAppendable27, (info.bliki.wiki.model.IWikiModel) wikiModel32);
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.lang.String str36 = annotatingMarkupParser0.parse("\"hi!\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser37 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList38 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList41 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser37.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser44.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList46 = annotatingMarkupParser44.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser44.getParagraphAnnotations();
        java.util.List<java.lang.String> strList48 = annotatingMarkupParser44.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList49 = annotatingMarkupParser44.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser50.getHeaderAnnotations();
        java.util.List<java.lang.String> strList52 = annotatingMarkupParser50.getParagraphs();
        java.lang.Appendable appendable53 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable54 = annotatingMarkupParser50.new CountingAppendable(appendable53);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable55 = annotatingMarkupParser44.new CountingAppendable((java.lang.Appendable) countingAppendable54);
        countingAppendable54.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList59 = annotatingMarkupParser58.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel61 = annotatingMarkupParser58.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList62 = annotatingMarkupParser58.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList63 = annotatingMarkupParser58.getParagraphAnnotations();
        boolean boolean64 = annotatingMarkupParser58.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel66 = annotatingMarkupParser58.makeWikiModel("\" title \"");
        annotatingMarkupParser37.nodesToText(annotationList43, (java.lang.Appendable) countingAppendable54, (info.bliki.wiki.model.IWikiModel) wikiModel66);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable68 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable54);
        countingAppendable68.currentPosition = (short) 10;
        int int71 = countingAppendable68.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable73 = countingAppendable68.append('a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"hi!\"\n" + "'", str36, "\"hi!\"\n");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(annotationList46);
        org.junit.Assert.assertNotNull(annotationList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(annotationList49);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(annotationList59);
        org.junit.Assert.assertNotNull(wikiModel61);
        org.junit.Assert.assertNotNull(annotationList62);
        org.junit.Assert.assertNotNull(annotationList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wikiModel66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceStatistics resourceStatistics9 = uriStringLiteralNTriplesLoader2.getStatistics("\"http://.wikipedia.org/wiki/hi%21\"\n\n", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("\"http://.wikipedia.org/wiki/hi%21\"", job11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"http://.wikipedia.org/wiki/hi%2521%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNull(resourceStatistics9);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMinInputSplitSize(job0, 1L);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract0.setReporter(pigProgressable4);
        java.lang.reflect.Type type6 = checkAbstract0.getReturnType();
        boolean boolean7 = checkAbstract0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = checkAbstract0.outputSchema(schema9);
        org.apache.pig.data.Tuple tuple11 = null;
        java.lang.Boolean boolean12 = checkAbstract0.exec(tuple11);
        org.apache.pig.data.Tuple tuple13 = null;
        java.lang.Boolean boolean14 = checkAbstract0.exec(tuple13);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertEquals("'" + boolean14 + "' != '" + false + "'", boolean14, false);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"", "\"hi!\"\n\n", "\"title\"");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
        org.apache.pig.Expression expression6 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression6);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://http://http://.wikipedia.org/wiki/hi%21?.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (short) 10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = checkAbstract1.getReporter();
        checkAbstract1.progress();
        java.lang.reflect.Type type4 = checkAbstract1.getReturnType();
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNotNull(type4);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.lang.Appendable appendable5 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable6 = annotatingMarkupParser2.new CountingAppendable(appendable5);
        java.lang.String str8 = annotatingMarkupParser2.parse("");
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser10 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser10.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser10.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser10.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser10.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser16.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList20 = annotatingMarkupParser18.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getHeaderAnnotations();
        java.lang.String str26 = annotatingMarkupParser22.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser27 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList28 = annotatingMarkupParser27.getHeaders();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser27.getHeaders();
        java.lang.Appendable appendable30 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable31 = annotatingMarkupParser27.new CountingAppendable(appendable30);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable31);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser33 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser33.getHeaderAnnotations();
        java.lang.String str35 = annotatingMarkupParser33.getRedirect();
        pignlproc.markup.Annotation annotation40 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation45 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int46 = annotation45.end;
        int int47 = annotation45.begin;
        pignlproc.markup.Annotation[] annotationArray48 = new pignlproc.markup.Annotation[] { annotation40, annotation45 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList49 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList49, annotationArray48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser51 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList52 = annotatingMarkupParser51.getHeaders();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser51.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList54 = annotatingMarkupParser51.getHeaderAnnotations();
        java.lang.String str55 = annotatingMarkupParser51.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser56 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList57 = annotatingMarkupParser56.getHeaders();
        java.util.List<java.lang.String> strList58 = annotatingMarkupParser56.getHeaders();
        java.lang.Appendable appendable59 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable60 = annotatingMarkupParser56.new CountingAppendable(appendable59);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable61 = annotatingMarkupParser51.new CountingAppendable((java.lang.Appendable) countingAppendable60);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser62 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList63 = annotatingMarkupParser62.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel65 = annotatingMarkupParser62.makeWikiModel("title");
        annotatingMarkupParser33.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList49, (java.lang.Appendable) countingAppendable60, (info.bliki.wiki.model.IWikiModel) wikiModel65);
        annotatingMarkupParser16.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable32, (info.bliki.wiki.model.IWikiModel) wikiModel65);
        countingAppendable32.currentPosition = ' ';
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser70 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList71 = annotatingMarkupParser70.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel73 = annotatingMarkupParser70.makeWikiModel("title");
        annotatingMarkupParser2.nodesToText(annotationList15, (java.lang.Appendable) countingAppendable32, (info.bliki.wiki.model.IWikiModel) wikiModel73);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable75 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable77 = countingAppendable75.append((java.lang.CharSequence) "\"opennlp/en-sent.bin\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(annotationList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(annotationArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(annotationList54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(annotationList63);
        org.junit.Assert.assertNotNull(wikiModel65);
        org.junit.Assert.assertNotNull(annotationList71);
        org.junit.Assert.assertNotNull(wikiModel73);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://\"title\"\n.wikipedia.org/wiki/");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21\n", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\"", job6);
        org.apache.hadoop.mapreduce.InputFormat inputFormat8 = parsingWikipediaLoader1.getInputFormat();
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(inputFormat8);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        noLoopInPath0.setPigLogger(pigLogger1);
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath3.progress();
        pignlproc.evaluation.NoLoopInPath noLoopInPath5 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText6 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        safeTsvText6.setPigLogger(pigLogger7);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText9 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = mergeAsOpenNLPAnnotatedText9.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = checkAbstract11.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = mergeAsOpenNLPAnnotatedText9.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = safeTsvText6.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = noLoopInPath5.outputSchema(schema14);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag17 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText18 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        safeTsvText18.setPigLogger(pigLogger19);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable22 = mergeAsOpenNLPAnnotatedText21.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract23.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = mergeAsOpenNLPAnnotatedText21.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = safeTsvText18.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = aggregateTextBag17.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = noLoopInPath5.outputSchema(schema26);
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum32 = null;
        checkAbstract30.warn("http://.wikipedia.org/wiki/hi%21", enum32);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        checkAbstract30.setPigLogger(pigLogger34);
        checkAbstract30.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText37 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = null;
        safeTsvText37.setPigLogger(pigLogger38);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText40 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = mergeAsOpenNLPAnnotatedText40.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract42 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract42.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = mergeAsOpenNLPAnnotatedText40.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = safeTsvText37.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract30.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath5.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = noLoopInPath3.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = noLoopInPath0.outputSchema(schema49);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        noLoopInPath0.setPigLogger(pigLogger51);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink53 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList54 = sentencesWithLink53.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger55 = null;
        sentencesWithLink53.setPigLogger(pigLogger55);
        java.lang.reflect.Type type57 = sentencesWithLink53.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable58 = sentencesWithLink53.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable59 = sentencesWithLink53.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract60 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum62 = null;
        checkAbstract60.warn("http://.wikipedia.org/wiki/hi%21", enum62);
        java.lang.Enum enum65 = null;
        checkAbstract60.warn("hi !", enum65);
        pignlproc.evaluation.NoLoopInPath noLoopInPath67 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText68 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger69 = null;
        safeTsvText68.setPigLogger(pigLogger69);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText71 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable72 = mergeAsOpenNLPAnnotatedText71.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract73 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = checkAbstract73.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = mergeAsOpenNLPAnnotatedText71.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = safeTsvText68.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = noLoopInPath67.outputSchema(schema76);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag79 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText80 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger81 = null;
        safeTsvText80.setPigLogger(pigLogger81);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText83 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable84 = mergeAsOpenNLPAnnotatedText83.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract85 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = checkAbstract85.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = mergeAsOpenNLPAnnotatedText83.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = safeTsvText80.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = aggregateTextBag79.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = noLoopInPath67.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = checkAbstract60.outputSchema(schema91);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = sentencesWithLink53.outputSchema(schema91);
        org.apache.pig.impl.logicalLayer.schema.Schema schema94 = noLoopInPath0.outputSchema(schema93);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList95 = noLoopInPath0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable96 = null;
        noLoopInPath0.setReporter(pigProgressable96);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(pigProgressable22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(pigProgressable41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(funcSpecList54);
        org.junit.Assert.assertNotNull(type57);
        org.junit.Assert.assertNull(pigProgressable58);
        org.junit.Assert.assertNull(pigProgressable59);
        org.junit.Assert.assertNull(pigProgressable72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(pigProgressable84);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNull(funcSpecList95);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMaxInputSplitSize(job0, (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.Expression expression2 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression2);
        org.apache.pig.LoadCaster loadCaster4 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"opennlp / en - sent . bin\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceStatistics resourceStatistics10 = parsingWikipediaLoader1.getStatistics("\"hi!\"\n\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("hi !\n\nhref", job12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(loadCaster4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNull(resourceStatistics10);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"", "\"hi!\"\n\n", "\"title\"");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple6 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("", "href", "http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        java.util.AbstractCollection<java.lang.String> strCollection0 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.join(strCollection0, "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("wikiobject", "");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", job4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple6 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        java.lang.String[] strArray3 = uriUriNTriplesLoader0.getPartitionKeys("title", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        java.lang.String[] strArray6 = uriUriNTriplesLoader0.getPartitionKeys("http://\"title\".wikipedia.org/wiki/%22hi%21%22", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        java.lang.String[] strArray9 = uriUriNTriplesLoader0.getPartitionKeys("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        java.lang.String[] strArray12 = uriUriNTriplesLoader0.getPartitionKeys("title\n", job11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple13 = uriUriNTriplesLoader0.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray3);
        org.junit.Assert.assertNull(strArray6);
        org.junit.Assert.assertNull(strArray9);
        org.junit.Assert.assertNull(strArray12);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21\"" + "'", str1, "\"http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21\"");
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable70 = countingAppendable29.append((java.lang.CharSequence) "http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", 100, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        sentencesWithLink0.setReporter(pigProgressable6);
        java.lang.Class<?> wildcardClass8 = sentencesWithLink0.getClass();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        sentencesWithLink0.setReporter(pigProgressable3);
        org.apache.commons.logging.Log log5 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigLogger2);
        org.junit.Assert.assertNotNull(log5);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"hi! \"");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.pig.Expression expression11 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceStatistics resourceStatistics15 = parsingWikipediaLoader1.getStatistics("\"hi!\"\n\n", job14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        org.apache.pig.ResourceSchema resourceSchema18 = parsingWikipediaLoader1.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job17);
        org.apache.pig.Expression expression19 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression19);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNull(resourceStatistics15);
        org.junit.Assert.assertNotNull(resourceSchema18);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        java.lang.Object obj0 = null;
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer2 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader4 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = parsingWikipediaLoader4.getStatistics("hi!", job6);
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        parsingWikipediaLoader4.prepareToRead(recordReader8, pigSplit9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        java.lang.String[] strArray13 = parsingWikipediaLoader4.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job12);
        org.apache.hadoop.mapreduce.InputFormat inputFormat14 = parsingWikipediaLoader4.getInputFormat();
        java.util.List<opennlp.tools.util.Span> spanList15 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans(obj0, (java.lang.Object) uriStringLiteralNTriplesStorer2, (java.lang.Object) inputFormat14);
        org.apache.hadoop.fs.Path path17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = uriStringLiteralNTriplesStorer2.relToAbsPathForStoreLocation("title\n\n", path17);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: title?? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics7);
        org.junit.Assert.assertNull(strArray13);
        org.junit.Assert.assertNotNull(inputFormat14);
        org.junit.Assert.assertNotNull(spanList15);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        concatTextBag1.progress();
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable1 = mergeAsOpenNLPAnnotatedText0.getReporter();
        java.lang.Enum enum3 = null;
        mergeAsOpenNLPAnnotatedText0.warn("title", enum3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.apache.commons.logging.Log log6 = mergeAsOpenNLPAnnotatedText0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        mergeAsOpenNLPAnnotatedText0.setReporter(pigProgressable7);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("hi!");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = mergeAsOpenNLPAnnotatedText13.getPigLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList15 = mergeAsOpenNLPAnnotatedText13.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink17 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        sentencesWithLink17.setPigLogger(pigLogger18);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = sentencesWithLink17.getReporter();
        java.lang.reflect.Type type21 = sentencesWithLink17.getReturnType();
        boolean boolean22 = sentencesWithLink17.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = sentencesWithLink17.getPigLogger();
        java.lang.Enum enum25 = null;
        sentencesWithLink17.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", enum25);
        pignlproc.markup.Annotation annotation31 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str32 = annotation31.label;
        java.util.List<opennlp.tools.util.Span> spanList33 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) enum25, (java.lang.Object) str32);
        java.lang.String str34 = mergeAsOpenNLPAnnotatedText13.merge("\"hi!\"", spanList33);
        java.lang.String str35 = mergeAsOpenNLPAnnotatedText11.merge("\"http://.wikipedia.org/wiki/hi%21\"", spanList33);
        java.lang.String str36 = mergeAsOpenNLPAnnotatedText0.merge("title\n\n", spanList33);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = mergeAsOpenNLPAnnotatedText38.getPigLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList40 = mergeAsOpenNLPAnnotatedText38.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink42 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        sentencesWithLink42.setPigLogger(pigLogger43);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable45 = sentencesWithLink42.getReporter();
        java.lang.reflect.Type type46 = sentencesWithLink42.getReturnType();
        boolean boolean47 = sentencesWithLink42.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger48 = sentencesWithLink42.getPigLogger();
        java.lang.Enum enum50 = null;
        sentencesWithLink42.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", enum50);
        pignlproc.markup.Annotation annotation56 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str57 = annotation56.label;
        java.util.List<opennlp.tools.util.Span> spanList58 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) enum50, (java.lang.Object) str57);
        java.lang.String str59 = mergeAsOpenNLPAnnotatedText38.merge("\"hi!\"", spanList58);
        java.lang.String str60 = mergeAsOpenNLPAnnotatedText0.merge("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", spanList58);
        org.junit.Assert.assertNull(pigProgressable1);
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNull(pigLogger14);
        org.junit.Assert.assertNull(funcSpecList15);
        org.junit.Assert.assertNull(pigProgressable20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(pigLogger23);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "title" + "'", str32, "title");
        org.junit.Assert.assertNotNull(spanList33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "\" hi ! \"" + "'", str34, "\" hi ! \"");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\" http : // . wikipedia . org / wiki / hi % 21 \"" + "'", str35, "\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "title" + "'", str36, "title");
        org.junit.Assert.assertNull(pigLogger39);
        org.junit.Assert.assertNull(funcSpecList40);
        org.junit.Assert.assertNull(pigProgressable45);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(pigLogger48);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "title" + "'", str57, "title");
        org.junit.Assert.assertNotNull(spanList58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "\" hi ! \"" + "'", str59, "\" hi ! \"");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22" + "'", str60, "http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22");
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray9 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList10 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList10, spanArray9);
        java.lang.String str12 = mergeAsOpenNLPAnnotatedText7.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList10);
        java.lang.String str13 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = mergeAsOpenNLPAnnotatedText0.getPigLogger();
        mergeAsOpenNLPAnnotatedText0.progress();
        mergeAsOpenNLPAnnotatedText0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText0.getReporter();
        org.apache.pig.data.Tuple tuple18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = mergeAsOpenNLPAnnotatedText0.exec(tuple18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNotNull(spanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "href" + "'", str12, "href");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi !" + "'", str13, "hi !");
        org.junit.Assert.assertNull(pigLogger14);
        org.junit.Assert.assertNull(pigProgressable17);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("\"hi!\"", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        org.apache.pig.LoadCaster loadCaster8 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple9 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(loadCaster8);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink6 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        sentencesWithLink6.setPigLogger(pigLogger7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink6.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        sentencesWithLink6.setReporter(pigProgressable10);
        sentencesWithLink6.progress();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray15 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList16 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList16, spanArray15);
        java.lang.String str18 = mergeAsOpenNLPAnnotatedText13.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray22 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList23 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList23, spanArray22);
        java.lang.String str25 = mergeAsOpenNLPAnnotatedText20.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList23);
        java.lang.String str26 = mergeAsOpenNLPAnnotatedText13.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList23);
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type28 = safeTsvText27.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText27.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = sentencesWithLink6.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = sentencesWithLink0.outputSchema(schema31);
        sentencesWithLink0.progress();
        boolean boolean37 = sentencesWithLink0.isAsynchronous();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(spanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi !" + "'", str18, "hi !");
        org.junit.Assert.assertNotNull(spanArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "href" + "'", str25, "href");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "hi !" + "'", str26, "hi !");
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        int int5 = countingAppendable4.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable7 = countingAppendable4.append('a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) '4');
        checkAbstract1.finish();
        java.lang.reflect.Type type3 = checkAbstract1.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = checkAbstract1.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = checkAbstract1.getPigLogger();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNull(pigLogger5);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser2.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser8.getHeaderAnnotations();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getParagraphs();
        java.lang.Appendable appendable11 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser8.new CountingAppendable(appendable11);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser15.getHeaderAnnotations();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser15.getParagraphs();
        java.lang.Appendable appendable18 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable19 = annotatingMarkupParser15.new CountingAppendable(appendable18);
        int int20 = countingAppendable19.currentPosition;
        countingAppendable19.currentPosition = ' ';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable19);
        int int24 = countingAppendable23.currentPosition;
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        java.lang.String[] strArray7 = parsingWikipediaLoader1.getPartitionKeys("wikiobject", job6);
        parsingWikipediaLoader1.setUDFContextSignature("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        org.apache.hadoop.mapreduce.InputFormat inputFormat10 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceStatistics resourceStatistics13 = parsingWikipediaLoader1.getStatistics("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", job12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("\"title\"\n", job15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNull(strArray7);
        org.junit.Assert.assertNotNull(inputFormat10);
        org.junit.Assert.assertNull(resourceStatistics13);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader8, pigSplit9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.apache.hadoop.mapreduce.InputFormat inputFormat14 = parsingWikipediaLoader1.getInputFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple15 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(inputFormat14);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.Boolean boolean9 = checkAbstract0.exec(tuple8);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = checkAbstract0.getArgToFuncMapping();
        checkAbstract0.progress();
        checkAbstract0.progress();
        checkAbstract0.finish();
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink26 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath27 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText28 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        safeTsvText28.setPigLogger(pigLogger29);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText31 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = mergeAsOpenNLPAnnotatedText31.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract33.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = mergeAsOpenNLPAnnotatedText31.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = safeTsvText28.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath27.outputSchema(schema36);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag39 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = mergeAsOpenNLPAnnotatedText43.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract45.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = mergeAsOpenNLPAnnotatedText43.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = safeTsvText40.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = aggregateTextBag39.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = noLoopInPath27.outputSchema(schema48);
        pignlproc.evaluation.CheckAbstract checkAbstract52 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum54 = null;
        checkAbstract52.warn("http://.wikipedia.org/wiki/hi%21", enum54);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        checkAbstract52.setPigLogger(pigLogger56);
        checkAbstract52.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText59 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger60 = null;
        safeTsvText59.setPigLogger(pigLogger60);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText62 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable63 = mergeAsOpenNLPAnnotatedText62.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract64 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = checkAbstract64.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = mergeAsOpenNLPAnnotatedText62.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = safeTsvText59.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = checkAbstract52.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = noLoopInPath27.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = sentencesWithLink26.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = noLoopInPath14.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = checkAbstract0.outputSchema(schema72);
        org.apache.commons.logging.Log log74 = checkAbstract0.getLogger();
        java.lang.reflect.Type type75 = checkAbstract0.getReturnType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(pigProgressable63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(log74);
        org.junit.Assert.assertNotNull(type75);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        sentencesWithLink0.progress();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray9 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList10 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList10, spanArray9);
        java.lang.String str12 = mergeAsOpenNLPAnnotatedText7.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray16 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList17 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList17, spanArray16);
        java.lang.String str19 = mergeAsOpenNLPAnnotatedText14.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList17);
        java.lang.String str20 = mergeAsOpenNLPAnnotatedText7.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList17);
        pignlproc.evaluation.SafeTsvText safeTsvText21 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type22 = safeTsvText21.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract23.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText21.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = sentencesWithLink0.outputSchema(schema25);
        org.apache.commons.logging.Log log29 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        sentencesWithLink0.setPigLogger(pigLogger30);
        org.apache.commons.logging.Log log32 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(spanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi !" + "'", str12, "hi !");
        org.junit.Assert.assertNotNull(spanArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "href" + "'", str19, "href");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi !" + "'", str20, "hi !");
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(log32);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: http :%20/%20%22%20opennlp%20/%20en%20-%20sent%20.%20bin%20%22%20.%20wikipedia%20.%20org%20/%20wiki%20/%20href");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("hi !\n\n");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        boolean boolean7 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        java.lang.reflect.Type type8 = mergeAsOpenNLPAnnotatedText0.getReturnType();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray15 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList16 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList16, spanArray15);
        java.lang.String str18 = mergeAsOpenNLPAnnotatedText13.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList16);
        java.lang.String str19 = mergeAsOpenNLPAnnotatedText11.merge("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", (java.util.List<opennlp.tools.util.Span>) spanList16);
        java.lang.String str20 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList16);
        java.lang.Enum enum22 = null;
        mergeAsOpenNLPAnnotatedText0.warn("\"title\"\n", enum22);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList24 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(spanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "href" + "'", str18, "href");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin" + "'", str19, "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi !" + "'", str20, "hi !");
        org.junit.Assert.assertNull(funcSpecList24);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21\n", "wikiobject", "hi!");
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("\"http://.wikipedia.org/wiki/hi%21\"\n");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat6 = uriUriNTriplesStorer3.getOutputFormat();
        org.apache.hadoop.mapreduce.OutputFormat outputFormat7 = uriUriNTriplesStorer3.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat6);
        org.junit.Assert.assertNotNull(outputFormat7);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((-1), 0, "http://.wikipedia.org/wiki/hi%21\n", "opennlp / en - sent . bin");
        java.lang.String str5 = annotation4.value;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp / en - sent . bin" + "'", str5, "opennlp / en - sent . bin");
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter5 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter5);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat7 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat10 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNotNull(outputFormat7);
        org.junit.Assert.assertNotNull(outputFormat10);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("\"hi!\"", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22" + "'", str2, "http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22");
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag(10);
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = aggregateTextBag1.exec(tuple2);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.reflect.Type type5 = checkAbstract0.getReturnType();
        org.apache.pig.data.Tuple tuple6 = null;
        java.lang.Boolean boolean7 = checkAbstract0.exec(tuple6);
        org.apache.commons.logging.Log log8 = checkAbstract0.getLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList9 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = checkAbstract0.getPigLogger();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(funcSpecList9);
        org.junit.Assert.assertNull(pigLogger10);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\"\"" + "'", str1, "\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\"\"");
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        pignlproc.evaluation.NoLoopInPath noLoopInPath2 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText3 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        safeTsvText3.setPigLogger(pigLogger4);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = mergeAsOpenNLPAnnotatedText6.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = checkAbstract8.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = safeTsvText3.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = noLoopInPath2.outputSchema(schema11);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag14 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = aggregateTextBag14.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = noLoopInPath2.outputSchema(schema23);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        noLoopInPath2.setPigLogger(pigLogger27);
        org.apache.pig.data.Tuple tuple29 = null;
        java.lang.Boolean boolean30 = noLoopInPath2.exec(tuple29);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = null;
        noLoopInPath2.setReporter(pigProgressable31);
        java.lang.reflect.Type type33 = noLoopInPath2.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink34 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        sentencesWithLink34.setPigLogger(pigLogger35);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList37 = sentencesWithLink34.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = sentencesWithLink34.getPigLogger();
        boolean boolean39 = sentencesWithLink34.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText40 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = mergeAsOpenNLPAnnotatedText40.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract42 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract42.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = mergeAsOpenNLPAnnotatedText40.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = sentencesWithLink34.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath2.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath1.outputSchema(schema47);
        org.apache.pig.data.Tuple tuple49 = null;
        java.lang.Boolean boolean50 = noLoopInPath1.exec(tuple49);
        org.apache.commons.logging.Log log51 = noLoopInPath1.getLogger();
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertEquals("'" + boolean30 + "' != '" + true + "'", boolean30, true);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertNull(funcSpecList37);
        org.junit.Assert.assertNull(pigLogger38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(pigProgressable41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertEquals("'" + boolean50 + "' != '" + true + "'", boolean50, true);
        org.junit.Assert.assertNotNull(log51);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("\"opennlp / en - sent . bin\"\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", job12);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple14 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(resourceSchema13);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "hi!\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str15 = annotatingMarkupParser0.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel17 = annotatingMarkupParser0.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser21.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList26 = annotatingMarkupParser23.getHeaderAnnotations();
        java.lang.String str27 = annotatingMarkupParser23.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser28.getHeaders();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getHeaders();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser23.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        info.bliki.wiki.model.WikiModel wikiModel35 = annotatingMarkupParser23.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser37 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser38.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser38.getHeaderAnnotations();
        java.lang.String str42 = annotatingMarkupParser38.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser43 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser43.getHeaders();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser43.getHeaders();
        java.lang.Appendable appendable46 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable47 = annotatingMarkupParser43.new CountingAppendable(appendable46);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable47);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser49 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser49.getHeaders();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser49.getHeaders();
        java.lang.Appendable appendable52 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable53 = annotatingMarkupParser49.new CountingAppendable(appendable52);
        countingAppendable53.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable56 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable53);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser37.new CountingAppendable((java.lang.Appendable) countingAppendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser23.new CountingAppendable((java.lang.Appendable) countingAppendable56);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser59.getHeaders();
        java.util.List<java.lang.String> strList61 = annotatingMarkupParser59.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList62 = annotatingMarkupParser59.getHeaderAnnotations();
        java.lang.String str63 = annotatingMarkupParser59.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser64 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList65 = annotatingMarkupParser64.getHeaders();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser64.getHeaders();
        java.lang.Appendable appendable67 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable68 = annotatingMarkupParser64.new CountingAppendable(appendable67);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable69 = annotatingMarkupParser59.new CountingAppendable((java.lang.Appendable) countingAppendable68);
        java.util.List<java.lang.String> strList70 = annotatingMarkupParser59.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel72 = annotatingMarkupParser59.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str74 = annotatingMarkupParser59.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel76 = annotatingMarkupParser59.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        java.util.List<pignlproc.markup.Annotation> annotationList77 = annotatingMarkupParser59.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList78 = annotatingMarkupParser59.getParagraphAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel80 = annotatingMarkupParser59.makeWikiModel("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        annotatingMarkupParser0.nodesToText(annotationList22, (java.lang.Appendable) countingAppendable56, (info.bliki.wiki.model.IWikiModel) wikiModel80);
        java.lang.Class<?> wildcardClass82 = annotatingMarkupParser0.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !\n\n" + "'", str15, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(wikiModel35);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(annotationList62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(wikiModel72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "hi !\n\n" + "'", str74, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel76);
        org.junit.Assert.assertNotNull(annotationList77);
        org.junit.Assert.assertNotNull(annotationList78);
        org.junit.Assert.assertNotNull(wikiModel80);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (byte) 1, (int) (byte) 0, "\"http://.wikipedia.org/wiki/hi%21\"\n", "\"\"\n");
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        mergeAsOpenNLPAnnotatedText0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        mergeAsOpenNLPAnnotatedText0.setReporter(pigProgressable9);
        boolean boolean11 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger12);
        org.apache.pig.data.Tuple tuple14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = mergeAsOpenNLPAnnotatedText0.exec(tuple14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = checkAbstract0.getPigLogger();
        boolean boolean6 = checkAbstract0.isAsynchronous();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract0.outputSchema(schema7);
        checkAbstract0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = checkAbstract0.getReporter();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigLogger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(pigProgressable10);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str15 = annotatingMarkupParser0.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel17 = annotatingMarkupParser0.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser0.getParagraphAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel21 = annotatingMarkupParser0.makeWikiModel("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !\n\n" + "'", str15, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNotNull(wikiModel21);
        org.junit.Assert.assertNotNull(annotationList22);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"", "\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"", "http://.wikipedia.org/wiki/hi%21");
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel4 = annotatingMarkupParser0.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser8.getHeaders();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getHeaders();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser8.getHeaders();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser8.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser8.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser14.getHeaderAnnotations();
        java.lang.String str18 = annotatingMarkupParser14.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser14.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel27 = annotatingMarkupParser14.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser28.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser28.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser28.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel34 = annotatingMarkupParser28.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList35 = annotatingMarkupParser28.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser36 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser36.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList38 = annotatingMarkupParser36.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList39 = annotatingMarkupParser36.getParagraphAnnotations();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser36.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser36.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = annotatingMarkupParser42.getHeaderAnnotations();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser42.getParagraphs();
        java.lang.Appendable appendable45 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser42.new CountingAppendable(appendable45);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable47 = annotatingMarkupParser36.new CountingAppendable((java.lang.Appendable) countingAppendable46);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList50 = annotatingMarkupParser48.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel52 = annotatingMarkupParser48.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel54 = annotatingMarkupParser48.makeWikiModel("hi!\n");
        annotatingMarkupParser14.nodesToText(annotationList35, (java.lang.Appendable) countingAppendable47, (info.bliki.wiki.model.IWikiModel) wikiModel54);
        countingAppendable47.currentPosition = 0;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList59 = annotatingMarkupParser58.getHeaderAnnotations();
        java.lang.String str60 = annotatingMarkupParser58.getRedirect();
        pignlproc.markup.Annotation annotation65 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation70 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int71 = annotation70.end;
        int int72 = annotation70.begin;
        pignlproc.markup.Annotation[] annotationArray73 = new pignlproc.markup.Annotation[] { annotation65, annotation70 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList74 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList74, annotationArray73);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList77 = annotatingMarkupParser76.getHeaders();
        java.util.List<java.lang.String> strList78 = annotatingMarkupParser76.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList79 = annotatingMarkupParser76.getHeaderAnnotations();
        java.lang.String str80 = annotatingMarkupParser76.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser81 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList82 = annotatingMarkupParser81.getHeaders();
        java.util.List<java.lang.String> strList83 = annotatingMarkupParser81.getHeaders();
        java.lang.Appendable appendable84 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable85 = annotatingMarkupParser81.new CountingAppendable(appendable84);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable86 = annotatingMarkupParser76.new CountingAppendable((java.lang.Appendable) countingAppendable85);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser87 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList88 = annotatingMarkupParser87.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel90 = annotatingMarkupParser87.makeWikiModel("title");
        annotatingMarkupParser58.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList74, (java.lang.Appendable) countingAppendable85, (info.bliki.wiki.model.IWikiModel) wikiModel90);
        annotatingMarkupParser0.nodesToText(annotationList13, (java.lang.Appendable) countingAppendable47, (info.bliki.wiki.model.IWikiModel) wikiModel90);
        boolean boolean93 = annotatingMarkupParser0.noLinks();
        java.lang.String str95 = annotatingMarkupParser0.parse("hi !\n\nhref");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(wikiModel4);
        org.junit.Assert.assertNotNull(wikiModel6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(wikiModel27);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(wikiModel34);
        org.junit.Assert.assertNotNull(annotationList35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(annotationList38);
        org.junit.Assert.assertNotNull(annotationList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNotNull(annotationList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(annotationList50);
        org.junit.Assert.assertNotNull(wikiModel52);
        org.junit.Assert.assertNotNull(wikiModel54);
        org.junit.Assert.assertNotNull(annotationList59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(annotationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(annotationList79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(annotationList88);
        org.junit.Assert.assertNotNull(wikiModel90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "hi !\nhref\n" + "'", str95, "hi !\nhref\n");
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        java.lang.String str2 = annotatingMarkupParser1.getRedirect();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser1.getWikiLinkAnnotations();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(annotationList3);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "title", "opennlp/en-sent.bin");
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = checkAbstract0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = checkAbstract0.getReporter();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigLogger5);
        org.junit.Assert.assertNull(pigProgressable6);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("\"hi!\"", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        org.apache.pig.LoadCaster loadCaster8 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job10 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("\"\"\"hi!\"\" \"", job10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(loadCaster8);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        boolean boolean3 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNull(pigProgressable6);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum4 = null;
        checkAbstract2.warn("http://.wikipedia.org/wiki/hi%21", enum4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        checkAbstract2.setPigLogger(pigLogger6);
        checkAbstract2.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = checkAbstract2.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = concatTextBag1.outputSchema(schema19);
        org.apache.pig.data.Tuple tuple21 = null;
        java.lang.String str22 = concatTextBag1.exec(tuple21);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink23 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList24 = sentencesWithLink23.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        sentencesWithLink23.setPigLogger(pigLogger25);
        java.lang.reflect.Type type27 = sentencesWithLink23.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = sentencesWithLink23.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = sentencesWithLink23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum32 = null;
        checkAbstract30.warn("http://.wikipedia.org/wiki/hi%21", enum32);
        java.lang.Enum enum35 = null;
        checkAbstract30.warn("hi !", enum35);
        pignlproc.evaluation.NoLoopInPath noLoopInPath37 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText38 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        safeTsvText38.setPigLogger(pigLogger39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText41 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = mergeAsOpenNLPAnnotatedText41.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract43.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = mergeAsOpenNLPAnnotatedText41.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText38.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath37.outputSchema(schema46);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag49 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText50 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        safeTsvText50.setPigLogger(pigLogger51);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText53 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable54 = mergeAsOpenNLPAnnotatedText53.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract55 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract55.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = mergeAsOpenNLPAnnotatedText53.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = safeTsvText50.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = aggregateTextBag49.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = noLoopInPath37.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract30.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = sentencesWithLink23.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = concatTextBag1.outputSchema(schema61);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger65 = null;
        concatTextBag1.setPigLogger(pigLogger65);
        boolean boolean67 = concatTextBag1.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(funcSpecList24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNull(pigProgressable42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(pigProgressable54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"http://.wikipedia.org/wiki/hi%21\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser2.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser6.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser6.makeWikiModel("opennlp / en - sent . bin");
        info.bliki.wiki.model.WikiModel wikiModel14 = annotatingMarkupParser6.makeWikiModel("\"hi!\"");
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser6.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser29.getHeaders();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser29.getHeaders();
        java.lang.Appendable appendable32 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser29.new CountingAppendable(appendable32);
        countingAppendable33.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable36 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable37 = annotatingMarkupParser17.new CountingAppendable((java.lang.Appendable) countingAppendable36);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser38.getHeaders();
        java.lang.String str42 = annotatingMarkupParser38.parse("\"title\"");
        info.bliki.wiki.model.WikiModel wikiModel44 = annotatingMarkupParser38.makeWikiModel("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"");
        info.bliki.wiki.model.WikiModel wikiModel46 = annotatingMarkupParser38.makeWikiModel("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
        annotatingMarkupParser2.nodesToText(annotationList15, (java.lang.Appendable) countingAppendable36, (info.bliki.wiki.model.IWikiModel) wikiModel46);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable36);
        countingAppendable36.currentPosition = (short) 1;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable54 = countingAppendable36.append((java.lang.CharSequence) "\"\"\"hi!\"\" \"\n", (int) (short) 10, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(wikiModel14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "\"title\"\n" + "'", str42, "\"title\"\n");
        org.junit.Assert.assertNotNull(wikiModel44);
        org.junit.Assert.assertNotNull(wikiModel46);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        sentencesWithLink0.setPigLogger(pigLogger4);
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        java.lang.Enum enum8 = null;
        sentencesWithLink0.warn("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href", enum8);
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        mergeAsOpenNLPAnnotatedText0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        mergeAsOpenNLPAnnotatedText0.setReporter(pigProgressable9);
        boolean boolean11 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag14 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum16 = null;
        aggregateTextBag14.warn("href", enum16);
        aggregateTextBag14.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = aggregateTextBag14.getPigLogger();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser26 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser26.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser26.getWikiLinkAnnotations();
        java.util.List<opennlp.tools.util.Span> spanList29 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) pigLogger19, (java.lang.Object) schema23, (java.lang.Object) annotationList28);
        java.lang.String str30 = mergeAsOpenNLPAnnotatedText0.merge("titlehref", spanList29);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = mergeAsOpenNLPAnnotatedText0.getPigLogger();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink33 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        sentencesWithLink33.setPigLogger(pigLogger34);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable36 = sentencesWithLink33.getReporter();
        java.lang.reflect.Type type37 = sentencesWithLink33.getReturnType();
        boolean boolean38 = sentencesWithLink33.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = sentencesWithLink33.getPigLogger();
        java.lang.Enum enum41 = null;
        sentencesWithLink33.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", enum41);
        pignlproc.markup.Annotation annotation47 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str48 = annotation47.label;
        java.util.List<opennlp.tools.util.Span> spanList49 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) enum41, (java.lang.Object) str48);
        java.lang.String str50 = mergeAsOpenNLPAnnotatedText0.merge("\"\"\" opennlp / en - sent . bin \"\"\"", spanList49);
        mergeAsOpenNLPAnnotatedText0.finish();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(pigLogger19);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNotNull(spanList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "titlehref" + "'", str30, "titlehref");
        org.junit.Assert.assertNull(pigLogger31);
        org.junit.Assert.assertNull(pigProgressable36);
        org.junit.Assert.assertNotNull(type37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(pigLogger39);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "title" + "'", str48, "title");
        org.junit.Assert.assertNotNull(spanList49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "\"\"\" opennlp / en - sent . bin \"\"\"" + "'", str50, "\"\"\" opennlp / en - sent . bin \"\"\"");
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("href");
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("\"\"\"opennlp / en - sent . bin\"\"\"");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.setStoreLocation("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/http%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhrefwikiobject%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22wikiobject%22hi%21%22%0Awikiobject%0Awikiobjectopennlp%2Fen-sent.binwikiobjecthttp%3A%2F%2Fhi%21%0A.wikipedia.org%2Fwiki%2Fopennlp_%252F_en_-_sent_._binwikiobjecthttp%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521wikiobjecthttp%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22opennlp_%2F_en_-_sent_._bin%22wikiobject%22%22\n");
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.hadoop.mapreduce.InputFormat inputFormat5 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = parsingWikipediaLoader1.getSchema("\"\"\" http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522 \"\"\"", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("\"\"\n", job10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(inputFormat5);
        org.junit.Assert.assertNotNull(resourceSchema8);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) '4');
        java.lang.reflect.Type type2 = aggregateTextBag1.getReturnType();
        org.apache.pig.data.Tuple tuple3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = aggregateTextBag1.exec(tuple3);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type2);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = sentencesWithLink0.getPigLogger();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigLogger2);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) 35, (long) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"opennlp / en - sent . bin\"", "\"opennlp / en - sent . bin\"\n", "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        org.apache.pig.data.Tuple tuple5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"title\"\n", "hi!", "");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = uriUriNTriplesLoader3.getStatistics("\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader3.setLocation("http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22", job8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (short) 100, true);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag5 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath6 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText7 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        safeTsvText7.setPigLogger(pigLogger8);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = mergeAsOpenNLPAnnotatedText10.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = checkAbstract12.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = mergeAsOpenNLPAnnotatedText10.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = safeTsvText7.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = noLoopInPath6.outputSchema(schema15);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag18 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText19 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger20 = null;
        safeTsvText19.setPigLogger(pigLogger20);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText22 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable23 = mergeAsOpenNLPAnnotatedText22.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract24.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText22.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = safeTsvText19.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = aggregateTextBag18.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = noLoopInPath6.outputSchema(schema27);
        pignlproc.evaluation.CheckAbstract checkAbstract31 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum33 = null;
        checkAbstract31.warn("http://.wikipedia.org/wiki/hi%21", enum33);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        checkAbstract31.setPigLogger(pigLogger35);
        checkAbstract31.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText38 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        safeTsvText38.setPigLogger(pigLogger39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText41 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = mergeAsOpenNLPAnnotatedText41.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract43.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = mergeAsOpenNLPAnnotatedText41.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText38.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract31.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = noLoopInPath6.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = aggregateTextBag5.outputSchema(schema48);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag52 = new pignlproc.evaluation.AggregateTextBag((int) (short) 10);
        pignlproc.evaluation.ConcatTextBag concatTextBag54 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract55 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum57 = null;
        checkAbstract55.warn("http://.wikipedia.org/wiki/hi%21", enum57);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger59 = null;
        checkAbstract55.setPigLogger(pigLogger59);
        checkAbstract55.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText62 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger63 = null;
        safeTsvText62.setPigLogger(pigLogger63);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText65 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable66 = mergeAsOpenNLPAnnotatedText65.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract67 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = checkAbstract67.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = mergeAsOpenNLPAnnotatedText65.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = safeTsvText62.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = checkAbstract55.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = concatTextBag54.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = aggregateTextBag52.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = aggregateTextBag5.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = aggregateTextBag2.outputSchema(schema74);
        aggregateTextBag2.finish();
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(pigProgressable23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(pigProgressable42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(pigProgressable66);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.apache.hadoop.mapreduce.InputFormat inputFormat14 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceStatistics resourceStatistics17 = parsingWikipediaLoader1.getStatistics("opennlp/en-sent.bin", job16);
        java.lang.Class<?> wildcardClass18 = parsingWikipediaLoader1.getClass();
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(inputFormat14);
        org.junit.Assert.assertNull(resourceStatistics17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21");
        org.apache.hadoop.fs.Path path3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = uriUriNTriplesStorer1.relToAbsPathForStoreLocation("", path3);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location:  curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = safeTsvText0.getReporter();
        pignlproc.evaluation.SafeTsvText safeTsvText6 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        safeTsvText6.setPigLogger(pigLogger7);
        org.apache.commons.logging.Log log9 = safeTsvText6.getLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = safeTsvText6.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink11 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList12 = sentencesWithLink11.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum15 = null;
        checkAbstract13.warn("http://.wikipedia.org/wiki/hi%21", enum15);
        java.lang.Enum enum18 = null;
        checkAbstract13.warn("hi !", enum18);
        pignlproc.evaluation.NoLoopInPath noLoopInPath20 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText21 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        safeTsvText21.setPigLogger(pigLogger22);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = safeTsvText21.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath20.outputSchema(schema29);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag32 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = aggregateTextBag32.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath20.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract13.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = sentencesWithLink11.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText6.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = safeTsvText0.outputSchema(schema47);
        org.apache.pig.data.Tuple tuple49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str50 = safeTsvText0.exec(tuple49);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertNull(funcSpecList12);
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMaxInputSplitSize(job0, (long) 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader8, pigSplit9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        java.lang.String[] strArray16 = parsingWikipediaLoader1.getPartitionKeys("", job15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple17 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(strArray16);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        int int5 = countingAppendable4.currentPosition;
        countingAppendable4.currentPosition = ' ';
        int int8 = countingAppendable4.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable10 = countingAppendable4.append((java.lang.CharSequence) "http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 32 + "'", int8 == 32);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: Can not create a Path from an empty string");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22");
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = uriUriNTriplesLoader3.getStatistics("\"hi! \"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = uriUriNTriplesLoader3.getPartitionKeys("\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"", job9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple11 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNull(resourceStatistics7);
        org.junit.Assert.assertNull(strArray10);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        checkAbstract0.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray21 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList22 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList22, spanArray21);
        java.lang.String str24 = mergeAsOpenNLPAnnotatedText19.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList22);
        pignlproc.evaluation.ConcatTextBag concatTextBag26 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum29 = null;
        checkAbstract27.warn("http://.wikipedia.org/wiki/hi%21", enum29);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = null;
        checkAbstract27.setPigLogger(pigLogger31);
        checkAbstract27.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText34 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        safeTsvText34.setPigLogger(pigLogger35);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText37 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable38 = mergeAsOpenNLPAnnotatedText37.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract39 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract39.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = mergeAsOpenNLPAnnotatedText37.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText34.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract27.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = concatTextBag26.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = mergeAsOpenNLPAnnotatedText19.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText9.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract0.outputSchema(schema44);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = null;
        checkAbstract0.setReporter(pigProgressable49);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable51 = null;
        checkAbstract0.setReporter(pigProgressable51);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(spanArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "href" + "'", str24, "href");
        org.junit.Assert.assertNull(pigProgressable38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521\n", "\"http://.wikipedia.org/wiki/hi%21\"\n\n");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A" + "'", str2, "http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A");
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.Boolean boolean9 = checkAbstract0.exec(tuple8);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.data.Tuple tuple11 = null;
        java.lang.Boolean boolean12 = checkAbstract0.exec(tuple11);
        checkAbstract0.finish();
        pignlproc.evaluation.ConcatTextBag concatTextBag14 = new pignlproc.evaluation.ConcatTextBag();
        org.apache.pig.data.Tuple tuple15 = null;
        java.lang.String str16 = concatTextBag14.exec(tuple15);
        concatTextBag14.progress();
        org.apache.pig.data.Tuple tuple18 = null;
        java.lang.String str19 = concatTextBag14.exec(tuple18);
        java.lang.Enum enum21 = null;
        concatTextBag14.warn("http://\"title\"\n.wikipedia.org/wiki/", enum21);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink23 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag25 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum28 = null;
        checkAbstract26.warn("http://.wikipedia.org/wiki/hi%21", enum28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        checkAbstract26.setPigLogger(pigLogger30);
        checkAbstract26.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract26.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = concatTextBag25.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = sentencesWithLink23.outputSchema(schema44);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        sentencesWithLink23.setPigLogger(pigLogger46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList48 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) checkAbstract0, (java.lang.Object) "http://\"title\"\n.wikipedia.org/wiki/", (java.lang.Object) pigLogger46);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: pignlproc.evaluation.CheckAbstract cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMinInputSplitSize(job0, (long) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("wikiobject", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceStatistics resourceStatistics15 = uriUriNTriplesLoader3.getStatistics("opennlp / en - sent . bin", job14);
        org.apache.pig.LoadCaster loadCaster16 = uriUriNTriplesLoader3.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job18 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader3.setLocation("\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"", job18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \" http :%20/%20http%20:%20/%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNull(resourceStatistics15);
        org.junit.Assert.assertNotNull(loadCaster16);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("title", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://\"title\"\n.wikipedia.org/wiki/", job9);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNull(strArray10);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\" title \"");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = concatTextBag1.getReporter();
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText4 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        safeTsvText4.setPigLogger(pigLogger5);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = mergeAsOpenNLPAnnotatedText7.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = checkAbstract9.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = safeTsvText4.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = noLoopInPath3.outputSchema(schema12);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag17 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath18 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText19 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger20 = null;
        safeTsvText19.setPigLogger(pigLogger20);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText22 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable23 = mergeAsOpenNLPAnnotatedText22.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract24.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText22.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = safeTsvText19.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = noLoopInPath18.outputSchema(schema27);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag30 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText31 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        safeTsvText31.setPigLogger(pigLogger32);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText34 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable35 = mergeAsOpenNLPAnnotatedText34.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = checkAbstract36.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = mergeAsOpenNLPAnnotatedText34.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = safeTsvText31.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = aggregateTextBag30.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = noLoopInPath18.outputSchema(schema39);
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum45 = null;
        checkAbstract43.warn("http://.wikipedia.org/wiki/hi%21", enum45);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        checkAbstract43.setPigLogger(pigLogger47);
        checkAbstract43.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText50 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        safeTsvText50.setPigLogger(pigLogger51);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText53 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable54 = mergeAsOpenNLPAnnotatedText53.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract55 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract55.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = mergeAsOpenNLPAnnotatedText53.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = safeTsvText50.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = checkAbstract43.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = noLoopInPath18.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = aggregateTextBag17.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = noLoopInPath3.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = concatTextBag1.outputSchema(schema63);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger65 = concatTextBag1.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(pigProgressable23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(pigProgressable35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(pigProgressable54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNull(pigLogger65);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str15 = annotatingMarkupParser0.parse("hi !\n");
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser0.getHeaders();
        java.lang.Class<?> wildcardClass17 = strList16.getClass();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !\n\n" + "'", str15, "hi !\n\n");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser0.getParagraphAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList6);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = checkAbstract0.getReporter();
        checkAbstract0.progress();
        checkAbstract0.progress();
        java.lang.Enum enum7 = null;
        checkAbstract0.warn("\" http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / hrefwikiobject \"\"\"\"\"\" http : // hi ! . wikipedia . org / wiki / % 22 http % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 22 % 0 A \"\"\"\"\"\" wikiobject \"\" hi ! \"\" wikiobject wikiobjectopennlp / en - sent . binwikiobjecthttp : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ binwikiobjecthttp : // http : // \"\" title \"\" . wikipedia . org / wiki / % 22 hi % 21 % 22 . wikipedia . org / wiki / hi % 21 wikiobjecthttp : // \"\" http : // . wikipedia . org / wiki / hi % 21 \"\" . wikipedia . org / wiki / % 22 % 22 % 22 http % 3 A % 2 F % 2 Fhi _ % 21 _ . wikipedia . org % 2 Fwiki % 2 Fhttp % 253 A % 252 F % 252 Fhttp % 253 A % 252 F % 252 F . wikipedia . org % 252 Fwiki % 252 Fhi % 252521 % 250 A . wikipedia . org % 252 Fwiki % 252 F % 252522 title % 252522 % 22 % 22 % 22 wikiobject \"\" opennlp / en - sent . bin \"\" wikiobject \"\"\"\"\"", enum7);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(pigProgressable3);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) 'a');
        pignlproc.evaluation.SafeTsvText safeTsvText2 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        safeTsvText2.setPigLogger(pigLogger3);
        org.apache.commons.logging.Log log5 = safeTsvText2.getLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = safeTsvText2.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink7.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        java.lang.Enum enum14 = null;
        checkAbstract9.warn("hi !", enum14);
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract9.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = sentencesWithLink7.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText2.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract1.outputSchema(schema42);
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer46 = new pignlproc.storage.UriUriNTriplesStorer("title");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList47 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) checkAbstract1, (java.lang.Object) uriUriNTriplesStorer46);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: pignlproc.evaluation.CheckAbstract cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"opennlp / en - sent . bin\"\n", "\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\n\n", "hi !");
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("hi!", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("http://.wikipedia.org/wiki/hi%21\n", job9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("\"hi! \"");
        org.apache.commons.logging.Log log2 = noLoopInPath1.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        noLoopInPath1.setReporter(pigProgressable3);
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = noLoopInPath1.exec(tuple5);
        java.lang.reflect.Type type7 = noLoopInPath1.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = noLoopInPath1.getReporter();
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(pigProgressable8);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        java.lang.reflect.Type type2 = sentencesWithLink0.getReturnType();
        boolean boolean3 = sentencesWithLink0.isAsynchronous();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigProgressable7);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        boolean boolean3 = sentencesWithLink0.isAsynchronous();
        pignlproc.evaluation.ConcatTextBag concatTextBag5 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple6 = null;
        java.lang.String str7 = concatTextBag5.exec(tuple6);
        pignlproc.evaluation.NoLoopInPath noLoopInPath8 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = noLoopInPath8.outputSchema(schema17);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag20 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText21 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        safeTsvText21.setPigLogger(pigLogger22);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = safeTsvText21.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = aggregateTextBag20.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = noLoopInPath8.outputSchema(schema29);
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum35 = null;
        checkAbstract33.warn("http://.wikipedia.org/wiki/hi%21", enum35);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        checkAbstract33.setPigLogger(pigLogger37);
        checkAbstract33.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = mergeAsOpenNLPAnnotatedText43.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract45.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = mergeAsOpenNLPAnnotatedText43.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = safeTsvText40.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = checkAbstract33.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = noLoopInPath8.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = concatTextBag5.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = sentencesWithLink0.outputSchema(schema52);
        sentencesWithLink0.finish();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        org.apache.commons.logging.Log log7 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        sentencesWithLink0.setReporter(pigProgressable9);
        org.apache.pig.data.Tuple tuple11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag12 = sentencesWithLink0.exec(tuple11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNull(pigProgressable8);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("title");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("href", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = parsingWikipediaLoader1.getStatistics("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job6);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(resourceStatistics7);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.pig.Expression expression5 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/http%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhrefwikiobject%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22wikiobject%22hi%21%22%0Awikiobject%0Awikiobjectopennlp%2Fen-sent.binwikiobjecthttp%3A%2F%2Fhi%21%0A.wikipedia.org%2Fwiki%2Fopennlp_%252F_en_-_sent_._binwikiobjecthttp%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521wikiobjecthttp%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22opennlp_%2F_en_-_sent_._bin%22wikiobject%22%22\n", job8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        java.lang.String str7 = annotatingMarkupParser0.parse("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n" + "'", str7, "\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n");
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean2 = noLoopInPath1.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = noLoopInPath1.getPigLogger();
        noLoopInPath1.finish();
        boolean boolean5 = noLoopInPath1.isAsynchronous();
        org.apache.commons.logging.Log log6 = noLoopInPath1.getLogger();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(pigLogger3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel4 = annotatingMarkupParser0.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("hi!\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser7.getHeaderAnnotations();
        java.lang.String str11 = annotatingMarkupParser7.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser12 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser12.getHeaders();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser12.getHeaders();
        java.lang.Appendable appendable15 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser12.new CountingAppendable(appendable15);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser7.new CountingAppendable((java.lang.Appendable) countingAppendable16);
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser7.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList20 = annotatingMarkupParser19.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList23 = annotatingMarkupParser21.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser21.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getHeaderAnnotations();
        java.lang.String str29 = annotatingMarkupParser25.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.lang.Appendable appendable33 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser30.new CountingAppendable(appendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser25.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser36 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList37 = annotatingMarkupParser36.getHeaderAnnotations();
        java.lang.String str38 = annotatingMarkupParser36.getRedirect();
        pignlproc.markup.Annotation annotation43 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation48 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int49 = annotation48.end;
        int int50 = annotation48.begin;
        pignlproc.markup.Annotation[] annotationArray51 = new pignlproc.markup.Annotation[] { annotation43, annotation48 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList52 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList52, annotationArray51);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser54 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser54.getHeaders();
        java.util.List<java.lang.String> strList56 = annotatingMarkupParser54.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList57 = annotatingMarkupParser54.getHeaderAnnotations();
        java.lang.String str58 = annotatingMarkupParser54.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser59.getHeaders();
        java.util.List<java.lang.String> strList61 = annotatingMarkupParser59.getHeaders();
        java.lang.Appendable appendable62 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable63 = annotatingMarkupParser59.new CountingAppendable(appendable62);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable64 = annotatingMarkupParser54.new CountingAppendable((java.lang.Appendable) countingAppendable63);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList66 = annotatingMarkupParser65.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel68 = annotatingMarkupParser65.makeWikiModel("title");
        annotatingMarkupParser36.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList52, (java.lang.Appendable) countingAppendable63, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        annotatingMarkupParser19.nodesToText(annotationList24, (java.lang.Appendable) countingAppendable35, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser71 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser71.getHeaders();
        java.util.List<java.lang.String> strList73 = annotatingMarkupParser71.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList74 = annotatingMarkupParser71.getHeaderAnnotations();
        java.lang.String str75 = annotatingMarkupParser71.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList77 = annotatingMarkupParser76.getHeaders();
        java.util.List<java.lang.String> strList78 = annotatingMarkupParser76.getHeaders();
        java.lang.Appendable appendable79 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable80 = annotatingMarkupParser76.new CountingAppendable(appendable79);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable81 = annotatingMarkupParser71.new CountingAppendable((java.lang.Appendable) countingAppendable80);
        java.util.List<java.lang.String> strList82 = annotatingMarkupParser71.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel84 = annotatingMarkupParser71.makeWikiModel("opennlp / en - sent . bin");
        annotatingMarkupParser0.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable35, (info.bliki.wiki.model.IWikiModel) wikiModel84);
        boolean boolean86 = annotatingMarkupParser0.noLinks();
        java.lang.String str88 = annotatingMarkupParser0.parse("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(wikiModel4);
        org.junit.Assert.assertNotNull(wikiModel6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(annotationList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(annotationList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(annotationList57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(annotationList66);
        org.junit.Assert.assertNotNull(wikiModel68);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(annotationList74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(wikiModel84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin\n" + "'", str88, "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin\n");
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList7 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.data.Tuple tuple8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag9 = sentencesWithLink0.exec(tuple8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(funcSpecList7);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("titlehref", "http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/http%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhrefwikiobject%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22wikiobject%22hi%21%22%0Awikiobject%0Awikiobjectopennlp%2Fen-sent.binwikiobjecthttp%3A%2F%2Fhi%21%0A.wikipedia.org%2Fwiki%2Fopennlp_%252F_en_-_sent_._binwikiobjecthttp%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521wikiobjecthttp%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22opennlp_%2F_en_-_sent_._bin%22wikiobject%22%22\n", "\"hi!\"\n");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel4 = annotatingMarkupParser0.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser8.getHeaders();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getHeaders();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser8.getHeaders();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser8.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser8.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser14.getHeaderAnnotations();
        java.lang.String str18 = annotatingMarkupParser14.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser14.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel27 = annotatingMarkupParser14.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser28.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser28.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser28.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel34 = annotatingMarkupParser28.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList35 = annotatingMarkupParser28.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser36 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser36.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList38 = annotatingMarkupParser36.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList39 = annotatingMarkupParser36.getParagraphAnnotations();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser36.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser36.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = annotatingMarkupParser42.getHeaderAnnotations();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser42.getParagraphs();
        java.lang.Appendable appendable45 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser42.new CountingAppendable(appendable45);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable47 = annotatingMarkupParser36.new CountingAppendable((java.lang.Appendable) countingAppendable46);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList50 = annotatingMarkupParser48.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel52 = annotatingMarkupParser48.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel54 = annotatingMarkupParser48.makeWikiModel("hi!\n");
        annotatingMarkupParser14.nodesToText(annotationList35, (java.lang.Appendable) countingAppendable47, (info.bliki.wiki.model.IWikiModel) wikiModel54);
        countingAppendable47.currentPosition = 0;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList59 = annotatingMarkupParser58.getHeaderAnnotations();
        java.lang.String str60 = annotatingMarkupParser58.getRedirect();
        pignlproc.markup.Annotation annotation65 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation70 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int71 = annotation70.end;
        int int72 = annotation70.begin;
        pignlproc.markup.Annotation[] annotationArray73 = new pignlproc.markup.Annotation[] { annotation65, annotation70 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList74 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList74, annotationArray73);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList77 = annotatingMarkupParser76.getHeaders();
        java.util.List<java.lang.String> strList78 = annotatingMarkupParser76.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList79 = annotatingMarkupParser76.getHeaderAnnotations();
        java.lang.String str80 = annotatingMarkupParser76.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser81 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList82 = annotatingMarkupParser81.getHeaders();
        java.util.List<java.lang.String> strList83 = annotatingMarkupParser81.getHeaders();
        java.lang.Appendable appendable84 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable85 = annotatingMarkupParser81.new CountingAppendable(appendable84);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable86 = annotatingMarkupParser76.new CountingAppendable((java.lang.Appendable) countingAppendable85);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser87 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList88 = annotatingMarkupParser87.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel90 = annotatingMarkupParser87.makeWikiModel("title");
        annotatingMarkupParser58.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList74, (java.lang.Appendable) countingAppendable85, (info.bliki.wiki.model.IWikiModel) wikiModel90);
        annotatingMarkupParser0.nodesToText(annotationList13, (java.lang.Appendable) countingAppendable47, (info.bliki.wiki.model.IWikiModel) wikiModel90);
        boolean boolean93 = annotatingMarkupParser0.noLinks();
        java.util.List<java.lang.String> strList94 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList95 = annotatingMarkupParser0.getHeaders();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(wikiModel4);
        org.junit.Assert.assertNotNull(wikiModel6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(wikiModel27);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(wikiModel34);
        org.junit.Assert.assertNotNull(annotationList35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(annotationList38);
        org.junit.Assert.assertNotNull(annotationList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNotNull(annotationList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(annotationList50);
        org.junit.Assert.assertNotNull(wikiModel52);
        org.junit.Assert.assertNotNull(wikiModel54);
        org.junit.Assert.assertNotNull(annotationList59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertNotNull(annotationArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(annotationList79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(annotationList88);
        org.junit.Assert.assertNotNull(wikiModel90);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertNotNull(strList94);
        org.junit.Assert.assertNotNull(strList95);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser5.getHeaderAnnotations();
        java.lang.String str9 = annotatingMarkupParser5.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser10 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser10.getHeaders();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser10.getHeaders();
        java.lang.Appendable appendable13 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser10.new CountingAppendable(appendable13);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser5.new CountingAppendable((java.lang.Appendable) countingAppendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        boolean boolean18 = annotatingMarkupParser0.noLinks();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(annotationList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        checkAbstract0.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray21 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList22 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList22, spanArray21);
        java.lang.String str24 = mergeAsOpenNLPAnnotatedText19.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList22);
        pignlproc.evaluation.ConcatTextBag concatTextBag26 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum29 = null;
        checkAbstract27.warn("http://.wikipedia.org/wiki/hi%21", enum29);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = null;
        checkAbstract27.setPigLogger(pigLogger31);
        checkAbstract27.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText34 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        safeTsvText34.setPigLogger(pigLogger35);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText37 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable38 = mergeAsOpenNLPAnnotatedText37.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract39 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract39.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = mergeAsOpenNLPAnnotatedText37.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText34.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract27.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = concatTextBag26.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = mergeAsOpenNLPAnnotatedText19.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText9.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract0.outputSchema(schema44);
        java.lang.reflect.Type type49 = checkAbstract0.getReturnType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(spanArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "href" + "'", str24, "href");
        org.junit.Assert.assertNull(pigProgressable38);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(type49);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser8.getHeaders();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser8.getHeaderAnnotations();
        java.lang.String str12 = annotatingMarkupParser8.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser13.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser13.getHeaders();
        java.lang.Appendable appendable16 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser13.new CountingAppendable(appendable16);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser8.new CountingAppendable((java.lang.Appendable) countingAppendable17);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        countingAppendable23.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser8.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser7.new CountingAppendable((java.lang.Appendable) countingAppendable26);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser28.getHeaders();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser28.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser28.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser33 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList34 = annotatingMarkupParser33.getHeaders();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser33.getHeaders();
        java.lang.Appendable appendable36 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable37 = annotatingMarkupParser33.new CountingAppendable(appendable36);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable38 = annotatingMarkupParser28.new CountingAppendable((java.lang.Appendable) countingAppendable37);
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser28.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel41 = annotatingMarkupParser28.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser42.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList44 = annotatingMarkupParser42.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel46 = annotatingMarkupParser42.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel48 = annotatingMarkupParser42.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList49 = annotatingMarkupParser42.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser50.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser50.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList53 = annotatingMarkupParser50.getParagraphAnnotations();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser50.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList55 = annotatingMarkupParser50.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser56 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList57 = annotatingMarkupParser56.getHeaderAnnotations();
        java.util.List<java.lang.String> strList58 = annotatingMarkupParser56.getParagraphs();
        java.lang.Appendable appendable59 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable60 = annotatingMarkupParser56.new CountingAppendable(appendable59);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable61 = annotatingMarkupParser50.new CountingAppendable((java.lang.Appendable) countingAppendable60);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser62 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList63 = annotatingMarkupParser62.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList64 = annotatingMarkupParser62.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel66 = annotatingMarkupParser62.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel68 = annotatingMarkupParser62.makeWikiModel("hi!\n");
        annotatingMarkupParser28.nodesToText(annotationList49, (java.lang.Appendable) countingAppendable61, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        annotatingMarkupParser0.nodesToText(annotationList5, (java.lang.Appendable) countingAppendable26, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable72 = countingAppendable26.append('4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList10);
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(wikiModel41);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(annotationList44);
        org.junit.Assert.assertNotNull(wikiModel46);
        org.junit.Assert.assertNotNull(wikiModel48);
        org.junit.Assert.assertNotNull(annotationList49);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNotNull(annotationList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(annotationList55);
        org.junit.Assert.assertNotNull(annotationList57);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(annotationList64);
        org.junit.Assert.assertNotNull(wikiModel66);
        org.junit.Assert.assertNotNull(wikiModel68);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser5.getHeaderAnnotations();
        java.lang.String str9 = annotatingMarkupParser5.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser10 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser10.getHeaders();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser10.getHeaders();
        java.lang.Appendable appendable13 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser10.new CountingAppendable(appendable13);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser5.new CountingAppendable((java.lang.Appendable) countingAppendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable19 = countingAppendable17.append((java.lang.CharSequence) "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(annotationList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser2.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser8.getHeaderAnnotations();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getParagraphs();
        java.lang.Appendable appendable11 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser8.new CountingAppendable(appendable11);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        java.lang.Appendable appendable15 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser1.new CountingAppendable(appendable15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable18 = countingAppendable16.append('#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(strList10);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = null;
        mergeAsOpenNLPAnnotatedText1.setReporter(pigProgressable2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        mergeAsOpenNLPAnnotatedText1.setReporter(pigProgressable4);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = noLoopInPath0.getPigLogger();
        java.lang.reflect.Type type13 = noLoopInPath0.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = noLoopInPath0.outputSchema(schema38);
        boolean boolean40 = noLoopInPath0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        noLoopInPath0.setPigLogger(pigLogger41);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigLogger12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\" http : // . wikipedia . org / wiki / hi % 21 \"", false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        noLoopInPath3.setPigLogger(pigLogger4);
        pignlproc.evaluation.NoLoopInPath noLoopInPath6 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath6.progress();
        pignlproc.evaluation.NoLoopInPath noLoopInPath8 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = noLoopInPath8.outputSchema(schema17);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag20 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText21 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        safeTsvText21.setPigLogger(pigLogger22);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = safeTsvText21.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = aggregateTextBag20.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = noLoopInPath8.outputSchema(schema29);
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum35 = null;
        checkAbstract33.warn("http://.wikipedia.org/wiki/hi%21", enum35);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        checkAbstract33.setPigLogger(pigLogger37);
        checkAbstract33.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = mergeAsOpenNLPAnnotatedText43.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract45.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = mergeAsOpenNLPAnnotatedText43.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = safeTsvText40.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = checkAbstract33.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = noLoopInPath8.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = noLoopInPath6.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = noLoopInPath3.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = concatTextBag2.outputSchema(schema52);
        java.lang.Class<?> wildcardClass55 = schema54.getClass();
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriStringLiteralNTriplesLoader2.getStatistics("hi !\n", job10);
        org.apache.pig.LoadCaster loadCaster12 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        uriStringLiteralNTriplesLoader2.setUDFContextSignature("http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22");
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(loadCaster12);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum3 = null;
        aggregateTextBag1.warn("href", enum3);
        org.apache.pig.data.Tuple tuple5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = aggregateTextBag1.exec(tuple5);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", true);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = concatTextBag2.getPigLogger();
        org.apache.pig.data.Tuple tuple4 = null;
        java.lang.String str5 = concatTextBag2.exec(tuple4);
        java.lang.Enum enum7 = null;
        concatTextBag2.warn("http://\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\".wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", enum7);
        org.junit.Assert.assertNull(pigLogger3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("titlehref");
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "title\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader8, pigSplit9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple11 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract0.setReporter(pigProgressable4);
        pignlproc.evaluation.NoLoopInPath noLoopInPath7 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean8 = noLoopInPath7.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath9 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = noLoopInPath9.outputSchema(schema18);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink21 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath22 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText23 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        safeTsvText23.setPigLogger(pigLogger24);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText26 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable27 = mergeAsOpenNLPAnnotatedText26.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = checkAbstract28.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = mergeAsOpenNLPAnnotatedText26.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText23.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = noLoopInPath22.outputSchema(schema31);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag34 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText35 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        safeTsvText35.setPigLogger(pigLogger36);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText35.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = aggregateTextBag34.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = noLoopInPath22.outputSchema(schema43);
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum49 = null;
        checkAbstract47.warn("http://.wikipedia.org/wiki/hi%21", enum49);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        checkAbstract47.setPigLogger(pigLogger51);
        checkAbstract47.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText54 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger55 = null;
        safeTsvText54.setPigLogger(pigLogger55);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText57 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable58 = mergeAsOpenNLPAnnotatedText57.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract59 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = checkAbstract59.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = mergeAsOpenNLPAnnotatedText57.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = safeTsvText54.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = checkAbstract47.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = noLoopInPath22.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = sentencesWithLink21.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = noLoopInPath9.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = noLoopInPath7.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = checkAbstract0.outputSchema(schema67);
        pignlproc.evaluation.ConcatTextBag concatTextBag71 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract72 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum74 = null;
        checkAbstract72.warn("http://.wikipedia.org/wiki/hi%21", enum74);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger76 = null;
        checkAbstract72.setPigLogger(pigLogger76);
        checkAbstract72.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText79 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger80 = null;
        safeTsvText79.setPigLogger(pigLogger80);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText82 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable83 = mergeAsOpenNLPAnnotatedText82.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract84 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = checkAbstract84.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = mergeAsOpenNLPAnnotatedText82.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = safeTsvText79.outputSchema(schema87);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = checkAbstract72.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = concatTextBag71.outputSchema(schema89);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = checkAbstract0.outputSchema(schema90);
        org.apache.commons.logging.Log log92 = checkAbstract0.getLogger();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(pigProgressable27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(pigProgressable58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(pigProgressable83);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(log92);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href", true);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        org.apache.pig.data.Tuple tuple25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag26 = sentencesWithLink0.exec(tuple25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getParagraphs();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser6.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel10 = annotatingMarkupParser6.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser6.makeWikiModel("hi!\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser13.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser13.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser13.getHeaderAnnotations();
        java.lang.String str17 = annotatingMarkupParser13.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.lang.Appendable appendable21 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable22 = annotatingMarkupParser18.new CountingAppendable(appendable21);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser13.new CountingAppendable((java.lang.Appendable) countingAppendable22);
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList26 = annotatingMarkupParser25.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser27 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList28 = annotatingMarkupParser27.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser27.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser27.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser31 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser31.getHeaders();
        java.util.List<java.lang.String> strList33 = annotatingMarkupParser31.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser31.getHeaderAnnotations();
        java.lang.String str35 = annotatingMarkupParser31.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser36 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser36.getHeaders();
        java.util.List<java.lang.String> strList38 = annotatingMarkupParser36.getHeaders();
        java.lang.Appendable appendable39 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable40 = annotatingMarkupParser36.new CountingAppendable(appendable39);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable41 = annotatingMarkupParser31.new CountingAppendable((java.lang.Appendable) countingAppendable40);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = annotatingMarkupParser42.getHeaderAnnotations();
        java.lang.String str44 = annotatingMarkupParser42.getRedirect();
        pignlproc.markup.Annotation annotation49 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation54 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int55 = annotation54.end;
        int int56 = annotation54.begin;
        pignlproc.markup.Annotation[] annotationArray57 = new pignlproc.markup.Annotation[] { annotation49, annotation54 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList58 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList58, annotationArray57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser60 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList61 = annotatingMarkupParser60.getHeaders();
        java.util.List<java.lang.String> strList62 = annotatingMarkupParser60.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList63 = annotatingMarkupParser60.getHeaderAnnotations();
        java.lang.String str64 = annotatingMarkupParser60.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser65.getHeaders();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser65.getHeaders();
        java.lang.Appendable appendable68 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable69 = annotatingMarkupParser65.new CountingAppendable(appendable68);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable70 = annotatingMarkupParser60.new CountingAppendable((java.lang.Appendable) countingAppendable69);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser71 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList72 = annotatingMarkupParser71.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel74 = annotatingMarkupParser71.makeWikiModel("title");
        annotatingMarkupParser42.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList58, (java.lang.Appendable) countingAppendable69, (info.bliki.wiki.model.IWikiModel) wikiModel74);
        annotatingMarkupParser25.nodesToText(annotationList30, (java.lang.Appendable) countingAppendable41, (info.bliki.wiki.model.IWikiModel) wikiModel74);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser77 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList78 = annotatingMarkupParser77.getHeaders();
        java.util.List<java.lang.String> strList79 = annotatingMarkupParser77.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList80 = annotatingMarkupParser77.getHeaderAnnotations();
        java.lang.String str81 = annotatingMarkupParser77.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser82 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList83 = annotatingMarkupParser82.getHeaders();
        java.util.List<java.lang.String> strList84 = annotatingMarkupParser82.getHeaders();
        java.lang.Appendable appendable85 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable86 = annotatingMarkupParser82.new CountingAppendable(appendable85);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable87 = annotatingMarkupParser77.new CountingAppendable((java.lang.Appendable) countingAppendable86);
        java.util.List<java.lang.String> strList88 = annotatingMarkupParser77.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel90 = annotatingMarkupParser77.makeWikiModel("opennlp / en - sent . bin");
        annotatingMarkupParser6.nodesToText(annotationList24, (java.lang.Appendable) countingAppendable41, (info.bliki.wiki.model.IWikiModel) wikiModel90);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable92 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable41);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable94 = countingAppendable92.append('#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(annotationList8);
        org.junit.Assert.assertNotNull(wikiModel10);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList26);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(strList33);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(annotationList43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 52 + "'", int56 == 52);
        org.junit.Assert.assertNotNull(annotationArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(strList62);
        org.junit.Assert.assertNotNull(annotationList63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(annotationList72);
        org.junit.Assert.assertNotNull(wikiModel74);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(annotationList80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(strList88);
        org.junit.Assert.assertNotNull(wikiModel90);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriStringLiteralNTriplesLoader2.getStatistics("hi !\n", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        java.lang.String[] strArray14 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", job13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceSchema resourceSchema17 = uriStringLiteralNTriplesLoader2.getSchema("\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/hrefwikiobject\"\"\"\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"\"\"\"wikiobject\"\"hi!\"\" wikiobject wikiobjectopennlp/en-sent.binwikiobjecthttp://hi! .wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"\"http://.wikipedia.org/wiki/hi%21\"\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"\"opennlp / en - sent . bin\"\"wikiobject\"\"\"\"\"", job16);
        org.apache.pig.LoadCaster loadCaster18 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple19 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNull(strArray14);
        org.junit.Assert.assertNotNull(resourceSchema17);
        org.junit.Assert.assertNotNull(loadCaster18);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        sentencesWithLink0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNotNull(type5);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("wikiobject");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        concatTextBag1.setPigLogger(pigLogger2);
        concatTextBag1.progress();
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.String str6 = concatTextBag1.exec(tuple5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        int int11 = countingAppendable9.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable15 = countingAppendable9.append((java.lang.CharSequence) "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", (int) (byte) -1, 32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.InputFormat inputFormat5 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader6, pigSplit7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"", job10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"http://hi!.wikipedia.org/wiki/%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(inputFormat5);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter5 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter5);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat7 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.pig.data.Tuple tuple8 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNotNull(outputFormat7);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("\"title\"\n");
        org.apache.pig.Expression expression8 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression8);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/hi%21");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "opennlp/en-sent.bin");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        java.lang.String str13 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "opennlp/en-sent.bin");
        java.lang.String str15 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\"\"\"title\"\" \"href");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "opennlp/en-sent.bin" + "'", str13, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "opennlp/en-sent.bin" + "'", str15, "opennlp/en-sent.bin");
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        checkAbstract0.setPigLogger(pigLogger6);
        pignlproc.evaluation.NoLoopInPath noLoopInPath8 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = noLoopInPath8.outputSchema(schema17);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag20 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText21 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        safeTsvText21.setPigLogger(pigLogger22);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = safeTsvText21.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = aggregateTextBag20.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = noLoopInPath8.outputSchema(schema29);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = null;
        noLoopInPath8.setPigLogger(pigLogger33);
        org.apache.pig.data.Tuple tuple35 = null;
        java.lang.Boolean boolean36 = noLoopInPath8.exec(tuple35);
        org.apache.commons.logging.Log log37 = noLoopInPath8.getLogger();
        noLoopInPath8.progress();
        pignlproc.evaluation.CheckAbstract checkAbstract39 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum41 = null;
        checkAbstract39.warn("http://.wikipedia.org/wiki/hi%21", enum41);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable43 = null;
        checkAbstract39.setReporter(pigProgressable43);
        java.lang.reflect.Type type45 = checkAbstract39.getReturnType();
        boolean boolean46 = checkAbstract39.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList47 = checkAbstract39.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger48 = null;
        checkAbstract39.setPigLogger(pigLogger48);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable50 = checkAbstract39.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = checkAbstract39.getPigLogger();
        org.apache.commons.logging.Log log52 = checkAbstract39.getLogger();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText53 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray55 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList56 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList56, spanArray55);
        java.lang.String str58 = mergeAsOpenNLPAnnotatedText53.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList56);
        pignlproc.evaluation.ConcatTextBag concatTextBag60 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract61 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum63 = null;
        checkAbstract61.warn("http://.wikipedia.org/wiki/hi%21", enum63);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger65 = null;
        checkAbstract61.setPigLogger(pigLogger65);
        checkAbstract61.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText68 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger69 = null;
        safeTsvText68.setPigLogger(pigLogger69);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText71 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable72 = mergeAsOpenNLPAnnotatedText71.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract73 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = checkAbstract73.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = mergeAsOpenNLPAnnotatedText71.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = safeTsvText68.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = checkAbstract61.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = concatTextBag60.outputSchema(schema78);
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = mergeAsOpenNLPAnnotatedText53.outputSchema(schema78);
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = checkAbstract39.outputSchema(schema80);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = noLoopInPath8.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = checkAbstract0.outputSchema(schema81);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + boolean36 + "' != '" + true + "'", boolean36, true);
        org.junit.Assert.assertNotNull(log37);
        org.junit.Assert.assertNotNull(type45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(funcSpecList47);
        org.junit.Assert.assertNull(pigProgressable50);
        org.junit.Assert.assertNull(pigLogger51);
        org.junit.Assert.assertNotNull(log52);
        org.junit.Assert.assertNotNull(spanArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "href" + "'", str58, "href");
        org.junit.Assert.assertNull(pigProgressable72);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "title", "opennlp/en-sent.bin");
        uriStringLiteralNTriplesStorer3.setStoreFuncUDFContextSignature("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21");
        org.apache.hadoop.mapreduce.Job job7 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.cleanupOnFailure("\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"", job7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"http://hi!.wikipedia.org/wiki/%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        boolean boolean3 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = sentencesWithLink0.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink5 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        sentencesWithLink5.setPigLogger(pigLogger6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = sentencesWithLink5.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        sentencesWithLink5.setReporter(pigProgressable9);
        sentencesWithLink5.progress();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray14 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList15 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList15, spanArray14);
        java.lang.String str17 = mergeAsOpenNLPAnnotatedText12.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray21 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList22 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList22, spanArray21);
        java.lang.String str24 = mergeAsOpenNLPAnnotatedText19.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList22);
        java.lang.String str25 = mergeAsOpenNLPAnnotatedText12.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList22);
        pignlproc.evaluation.SafeTsvText safeTsvText26 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type27 = safeTsvText26.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = checkAbstract28.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText26.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = sentencesWithLink5.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = sentencesWithLink0.outputSchema(schema30);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(funcSpecList4);
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNotNull(spanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi !" + "'", str17, "hi !");
        org.junit.Assert.assertNotNull(spanArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "href" + "'", str24, "href");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi !" + "'", str25, "hi !");
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser4.getHeaders();
        java.lang.Appendable appendable7 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable8 = annotatingMarkupParser4.new CountingAppendable(appendable7);
        java.lang.String str10 = annotatingMarkupParser4.parse("\"hi!\"\n");
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser4.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser14.getHeaderAnnotations();
        java.lang.String str18 = annotatingMarkupParser14.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.lang.Appendable appendable22 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser19.new CountingAppendable(appendable22);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.lang.Appendable appendable28 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser25.new CountingAppendable(appendable28);
        countingAppendable29.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser13.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        java.lang.String str35 = annotatingMarkupParser13.parse("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin");
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser13.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser39 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser39.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser39.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList42 = annotatingMarkupParser39.getParagraphAnnotations();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser39.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList44 = annotatingMarkupParser39.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser45 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList46 = annotatingMarkupParser45.getHeaderAnnotations();
        java.util.List<java.lang.String> strList47 = annotatingMarkupParser45.getParagraphs();
        java.lang.Appendable appendable48 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser45.new CountingAppendable(appendable48);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable50 = annotatingMarkupParser39.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable51 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        int int52 = countingAppendable49.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser54 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        info.bliki.wiki.model.WikiModel wikiModel56 = annotatingMarkupParser54.makeWikiModel("hi !\n\n");
        annotatingMarkupParser4.nodesToText(annotationList36, (java.lang.Appendable) countingAppendable49, (info.bliki.wiki.model.IWikiModel) wikiModel56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        countingAppendable58.currentPosition = 100;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable62 = countingAppendable58.append((java.lang.CharSequence) "\"hi! \"\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"hi!\"\n\n" + "'", str10, "\"hi!\"\n\n");
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "\n" + "'", str35, "\n");
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNotNull(annotationList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(annotationList44);
        org.junit.Assert.assertNotNull(annotationList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(wikiModel56);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("\"title\"\n", "", "http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriUriNTriplesStorer3.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        checkAbstract0.progress();
        java.lang.Enum enum7 = null;
        checkAbstract0.warn("href", enum7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        checkAbstract0.setPigLogger(pigLogger9);
        checkAbstract0.progress();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = uriUriNTriplesLoader3.getSchema("\"\"\"hi!\"\" \"", job6);
        java.lang.Class<?> wildcardClass8 = uriUriNTriplesLoader3.getClass();
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.RecordWriter recordWriter3 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter3);
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer6 = new pignlproc.storage.UriStringLiteralNTriplesStorer("title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader8 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = parsingWikipediaLoader8.getStatistics("hi!", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader8.getSchema("hi!", job13);
        uriStringLiteralNTriplesStorer6.checkSchema(resourceSchema14);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema14);
        org.apache.hadoop.fs.Path path18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("title", path18);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: title curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        java.lang.String str5 = annotation4.value;
        int int6 = annotation4.end;
        java.lang.String str7 = annotation4.label;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "wikiobject" + "'", str7, "wikiobject");
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21\n");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriUriNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.OutputFormat outputFormat3 = uriUriNTriplesStorer1.getOutputFormat();
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href");
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNotNull(outputFormat3);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriUriNTriplesLoader3.getSchema("\"hi! \"\n", job10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray14 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList15 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList15, spanArray14);
        java.lang.String str17 = mergeAsOpenNLPAnnotatedText12.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList15);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        mergeAsOpenNLPAnnotatedText12.setPigLogger(pigLogger18);
        mergeAsOpenNLPAnnotatedText12.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = null;
        mergeAsOpenNLPAnnotatedText12.setReporter(pigProgressable21);
        boolean boolean23 = mergeAsOpenNLPAnnotatedText12.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        mergeAsOpenNLPAnnotatedText12.setPigLogger(pigLogger24);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink26 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag28 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum31 = null;
        checkAbstract29.warn("http://.wikipedia.org/wiki/hi%21", enum31);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = null;
        checkAbstract29.setPigLogger(pigLogger33);
        checkAbstract29.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract29.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = concatTextBag28.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = sentencesWithLink26.outputSchema(schema47);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger49 = null;
        sentencesWithLink26.setPigLogger(pigLogger49);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList51 = sentencesWithLink26.getArgToFuncMapping();
        sentencesWithLink26.progress();
        java.lang.Enum enum54 = null;
        sentencesWithLink26.warn("\"titlehref\"", enum54);
        java.util.List<opennlp.tools.util.Span> spanList56 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) uriUriNTriplesLoader3, (java.lang.Object) pigLogger24, (java.lang.Object) sentencesWithLink26);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(resourceSchema11);
        org.junit.Assert.assertNotNull(spanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "href" + "'", str17, "href");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(funcSpecList51);
        org.junit.Assert.assertNotNull(spanList56);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href");
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522");
        org.apache.pig.data.Tuple tuple5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        java.lang.Enum enum4 = null;
        checkAbstract0.warn("hi !", enum4);
        boolean boolean6 = checkAbstract0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract0.setPigLogger(pigLogger7);
        checkAbstract0.finish();
        checkAbstract0.progress();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("href", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("hi !", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21\n", job10);
        org.apache.hadoop.mapreduce.RecordReader recordReader12 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit13 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader12, pigSplit13);
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(resourceSchema11);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        aggregateTextBag1.progress();
        org.apache.commons.logging.Log log3 = aggregateTextBag1.getLogger();
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = aggregateTextBag1.exec(tuple4);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(log3);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable13 = countingAppendable10.append('a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"\"\"" + "'", str1, "\"\"\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"\"\"");
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel4 = annotatingMarkupParser0.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser5.getHeaderAnnotations();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getParagraphs();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser5.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser11.getHeaderAnnotations();
        java.lang.String str15 = annotatingMarkupParser11.getRedirect();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser11.getParagraphs();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser11.getParagraphs();
        info.bliki.wiki.model.WikiModel wikiModel19 = annotatingMarkupParser11.makeWikiModel("hi!");
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser11.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser21.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser21.getHeaderAnnotations();
        java.lang.String str25 = annotatingMarkupParser21.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser26 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser26.getHeaders();
        java.util.List<java.lang.String> strList28 = annotatingMarkupParser26.getHeaders();
        java.lang.Appendable appendable29 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable30 = annotatingMarkupParser26.new CountingAppendable(appendable29);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable31 = annotatingMarkupParser21.new CountingAppendable((java.lang.Appendable) countingAppendable30);
        info.bliki.wiki.model.WikiModel wikiModel33 = annotatingMarkupParser21.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList35 = annotatingMarkupParser34.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser36 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser36.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList38 = annotatingMarkupParser36.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList39 = annotatingMarkupParser36.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList41 = annotatingMarkupParser40.getHeaders();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser40.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = annotatingMarkupParser40.getHeaderAnnotations();
        java.lang.String str44 = annotatingMarkupParser40.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser45 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser45.getHeaders();
        java.util.List<java.lang.String> strList47 = annotatingMarkupParser45.getHeaders();
        java.lang.Appendable appendable48 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser45.new CountingAppendable(appendable48);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable50 = annotatingMarkupParser40.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser51 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser51.getHeaderAnnotations();
        java.lang.String str53 = annotatingMarkupParser51.getRedirect();
        pignlproc.markup.Annotation annotation58 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation63 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int64 = annotation63.end;
        int int65 = annotation63.begin;
        pignlproc.markup.Annotation[] annotationArray66 = new pignlproc.markup.Annotation[] { annotation58, annotation63 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList67 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList67, annotationArray66);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser69 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList70 = annotatingMarkupParser69.getHeaders();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser69.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList72 = annotatingMarkupParser69.getHeaderAnnotations();
        java.lang.String str73 = annotatingMarkupParser69.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser74 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList75 = annotatingMarkupParser74.getHeaders();
        java.util.List<java.lang.String> strList76 = annotatingMarkupParser74.getHeaders();
        java.lang.Appendable appendable77 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable78 = annotatingMarkupParser74.new CountingAppendable(appendable77);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable79 = annotatingMarkupParser69.new CountingAppendable((java.lang.Appendable) countingAppendable78);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser80 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList81 = annotatingMarkupParser80.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel83 = annotatingMarkupParser80.makeWikiModel("title");
        annotatingMarkupParser51.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList67, (java.lang.Appendable) countingAppendable78, (info.bliki.wiki.model.IWikiModel) wikiModel83);
        annotatingMarkupParser34.nodesToText(annotationList39, (java.lang.Appendable) countingAppendable50, (info.bliki.wiki.model.IWikiModel) wikiModel83);
        int int86 = countingAppendable50.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable87 = annotatingMarkupParser21.new CountingAppendable((java.lang.Appendable) countingAppendable50);
        countingAppendable50.currentPosition = (byte) 10;
        int int90 = countingAppendable50.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable91 = annotatingMarkupParser11.new CountingAppendable((java.lang.Appendable) countingAppendable50);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser92 = new pignlproc.markup.AnnotatingMarkupParser();
        java.lang.String str93 = annotatingMarkupParser92.getRedirect();
        info.bliki.wiki.model.WikiModel wikiModel95 = annotatingMarkupParser92.makeWikiModel("\"hi!\"\n\n");
        annotatingMarkupParser0.nodesToText(annotationList10, (java.lang.Appendable) countingAppendable91, (info.bliki.wiki.model.IWikiModel) wikiModel95);
        boolean boolean97 = annotatingMarkupParser0.noLinks();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(wikiModel4);
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(wikiModel19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertNotNull(wikiModel33);
        org.junit.Assert.assertNotNull(annotationList35);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(annotationList38);
        org.junit.Assert.assertNotNull(annotationList39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(annotationList43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList47);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertNotNull(annotationArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(annotationList72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(strList76);
        org.junit.Assert.assertNotNull(annotationList81);
        org.junit.Assert.assertNotNull(wikiModel83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 10 + "'", int90 == 10);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(wikiModel95);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) -1, (-1), "hi!", "href");
        int int5 = annotation4.begin;
        java.lang.String str6 = annotation4.value;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "href" + "'", str6, "href");
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\" opennlp / en - sent . bin \"\n", "http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A");
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"");
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum4 = null;
        checkAbstract2.warn("http://.wikipedia.org/wiki/hi%21", enum4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        checkAbstract2.setPigLogger(pigLogger6);
        checkAbstract2.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = checkAbstract2.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = concatTextBag1.outputSchema(schema19);
        pignlproc.evaluation.SafeTsvText safeTsvText21 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type22 = safeTsvText21.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText21.setPigLogger(pigLogger23);
        pignlproc.evaluation.ConcatTextBag concatTextBag25 = new pignlproc.evaluation.ConcatTextBag();
        org.apache.pig.data.Tuple tuple26 = null;
        java.lang.String str27 = concatTextBag25.exec(tuple26);
        java.lang.Enum enum29 = null;
        concatTextBag25.warn("href", enum29);
        pignlproc.evaluation.CheckAbstract checkAbstract31 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = checkAbstract31.outputSchema(schema32);
        checkAbstract31.finish();
        java.lang.Enum enum36 = null;
        checkAbstract31.warn("href", enum36);
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum40 = null;
        checkAbstract38.warn("http://.wikipedia.org/wiki/hi%21", enum40);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = null;
        checkAbstract38.setReporter(pigProgressable42);
        java.lang.reflect.Type type44 = checkAbstract38.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath45 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText46 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        safeTsvText46.setPigLogger(pigLogger47);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText49 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable50 = mergeAsOpenNLPAnnotatedText49.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract51 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract51.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText49.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = safeTsvText46.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath45.outputSchema(schema54);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag57 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText58 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger59 = null;
        safeTsvText58.setPigLogger(pigLogger59);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText61 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable62 = mergeAsOpenNLPAnnotatedText61.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract63 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract63.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = mergeAsOpenNLPAnnotatedText61.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = safeTsvText58.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = aggregateTextBag57.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = noLoopInPath45.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = checkAbstract38.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = checkAbstract31.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = concatTextBag25.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = safeTsvText21.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = concatTextBag1.outputSchema(schema73);
        java.lang.reflect.Type type75 = concatTextBag1.getReturnType();
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(type44);
        org.junit.Assert.assertNull(pigProgressable50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(pigProgressable62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(type75);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        java.lang.String[] strArray3 = uriUriNTriplesLoader0.getPartitionKeys("title", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader0.getSchema("http://.wikipedia.org/wiki/hi%21", job5);
        org.apache.pig.LoadCaster loadCaster7 = uriUriNTriplesLoader0.getLoadCaster();
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        uriUriNTriplesLoader0.prepareToRead(recordReader8, pigSplit9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = uriUriNTriplesLoader0.getInputFormat();
        org.apache.hadoop.mapreduce.Job job13 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader0.setLocation("http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522", job13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: http :%20/%20hi%20!%20.%20wikipedia%20.%20org%20/%20wiki%20/%20http%20%25%203%20A%20%25%202%20F%20%25%202%20Fhttp%20%25%203%20A%20%25%202%20F%20%25%202%20F%20.%20wikipedia%20.%20org%20%25%202%20Fwiki%20%25%202%20Fhi%20%25%202521%20%25%200%20A%20.%20wikipedia%20.%20org%20%25%202%20Fwiki%20%25%202%20F%20%25%202522%20title%20%25%202522");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray3);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(loadCaster7);
        org.junit.Assert.assertNotNull(inputFormat11);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser1.getWikiLinkAnnotations();
        boolean boolean3 = annotatingMarkupParser1.noLinks();
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \"http :%20/%20%22%22%20opennlp%20/%20en%20-%20sent%20.%20bin%20%22%22%20.%20wikipedia%20.%20org%20/%20wiki%20/%20href%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("\"title\"", job3);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple5 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) '4', (int) '#', "", "http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A");
        int int5 = annotation4.begin;
        int int6 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 35 + "'", int6 == 35);
    }
}

