package pignlproc;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test3001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3001");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"", "\"hi!\"\n\n", "\"title\"");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriUriNTriplesLoader3.getSchema("\"hi!\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriUriNTriplesLoader3.getStatistics("opennlp/en-sent.bin", job10);
        org.apache.pig.Expression expression12 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression12);
        org.apache.hadoop.mapreduce.Job job15 = null;
        org.apache.pig.ResourceSchema resourceSchema16 = uriUriNTriplesLoader3.getSchema("\" opennlp / en - sent . bin \"", job15);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(resourceSchema16);
    }

    @Test
    public void test3002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3002");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        java.lang.String str13 = annotatingMarkupParser0.parse("hi!\n");
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser0.getHeaders();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!\n\n" + "'", str13, "hi!\n\n");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(strList16);
    }

    @Test
    public void test3003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3003");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"hi!\"\n", "");
        org.apache.pig.Expression expression3 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader5, pigSplit6);
    }

    @Test
    public void test3004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3004");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3005");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        countingAppendable29.currentPosition = (byte) 10;
        int int69 = countingAppendable29.currentPosition;
        countingAppendable29.currentPosition = 52;
        java.lang.CharSequence charSequence72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable73 = countingAppendable29.append(charSequence72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
    }

    @Test
    public void test3006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3006");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.commons.logging.Log log4 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        java.lang.Enum enum7 = null;
        sentencesWithLink0.warn("\"title\"\n", enum7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = null;
        sentencesWithLink0.setReporter(pigProgressable11);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNull(pigLogger10);
    }

    @Test
    public void test3007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3007");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("hi!\n\n", false);
    }

    @Test
    public void test3008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3008");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema3 = checkAbstract1.outputSchema(schema2);
        java.lang.Enum enum5 = null;
        checkAbstract1.warn("hi !", enum5);
        boolean boolean7 = checkAbstract1.isAsynchronous();
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.Boolean boolean9 = checkAbstract1.exec(tuple8);
        java.util.List<opennlp.tools.util.Span> spanList10 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) "\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"", (java.lang.Object) tuple8);
        org.junit.Assert.assertNotNull(schema3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNotNull(spanList10);
    }

    @Test
    public void test3009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3009");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        int int5 = annotation4.end;
        java.lang.String str6 = annotation4.value;
        java.lang.String str7 = annotation4.label;
        int int8 = annotation4.begin;
        java.lang.String str9 = annotation4.label;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "title" + "'", str7, "title");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "title" + "'", str9, "title");
    }

    @Test
    public void test3010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3010");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / % 22 title % 22 href \"", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \" http :%20/%20http%20:%20/%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20.%20wikipedia%20.%20org%20/%20wiki%20/%20%25%2022%20title%20%25%2022%20href%20%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3011");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("hi !\n\n", "http://.wikipedia.org/wiki/hi%21", "");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.cleanupOnFailure("\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \"", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"http://.wikipedia.org/wiki/hi%2521%22%22%20%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3012");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("http://\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/http_%3A_%2F%2F_hi_%21_._wikipedia_._org_%2F_wiki_%2F_opennlp___%25_2_F___en___-___sent___.___bin");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"http://\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/http_%3A_%2F%2F_hi_%21_._wikipedia_._org_%2F_wiki_%2F_opennlp___%25_2_F___en___-___sent___.___bin\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3013");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        java.lang.String str12 = annotatingMarkupParser6.parse("\"hi!\"\n");
        java.lang.Appendable appendable13 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser6.new CountingAppendable(appendable13);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable14);
        countingAppendable15.currentPosition = (short) 100;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable21 = countingAppendable15.append((java.lang.CharSequence) "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi _ % 21", (int) '#', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "\"hi!\"\n\n" + "'", str12, "\"hi!\"\n\n");
    }

    @Test
    public void test3014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3014");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        parsingWikipediaLoader1.setUDFContextSignature("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple13 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
    }

    @Test
    public void test3015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3015");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.commons.logging.Log log4 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        java.lang.Enum enum7 = null;
        sentencesWithLink0.warn("\"title\"\n", enum7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = sentencesWithLink0.getPigLogger();
        java.lang.reflect.Type type11 = sentencesWithLink0.getReturnType();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNull(pigLogger10);
        org.junit.Assert.assertNotNull(type11);
    }

    @Test
    public void test3016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3016");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 1, false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag2.setReporter(pigProgressable3);
        pignlproc.evaluation.ConcatTextBag concatTextBag6 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = concatTextBag6.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = concatTextBag6.getPigLogger();
        java.lang.Enum enum10 = null;
        concatTextBag6.warn("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", enum10);
        boolean boolean12 = concatTextBag6.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath13 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath13.outputSchema(schema22);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag25 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText26 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        safeTsvText26.setPigLogger(pigLogger27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = mergeAsOpenNLPAnnotatedText29.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract31 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = checkAbstract31.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = mergeAsOpenNLPAnnotatedText29.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = safeTsvText26.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = aggregateTextBag25.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = noLoopInPath13.outputSchema(schema34);
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum40 = null;
        checkAbstract38.warn("http://.wikipedia.org/wiki/hi%21", enum40);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        checkAbstract38.setPigLogger(pigLogger42);
        checkAbstract38.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText45 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        safeTsvText45.setPigLogger(pigLogger46);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = mergeAsOpenNLPAnnotatedText48.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract50.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText48.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = safeTsvText45.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract38.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath13.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = concatTextBag6.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = aggregateTextBag2.outputSchema(schema56);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable59 = null;
        aggregateTextBag2.setReporter(pigProgressable59);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger61 = aggregateTextBag2.getPigLogger();
        aggregateTextBag2.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger63 = null;
        aggregateTextBag2.setPigLogger(pigLogger63);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNull(pigLogger8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(pigProgressable49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(pigLogger61);
    }

    @Test
    public void test3017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3017");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) '#');
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.Boolean boolean3 = checkAbstract1.exec(tuple2);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag5 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 0);
        pignlproc.evaluation.ConcatTextBag concatTextBag8 = new pignlproc.evaluation.ConcatTextBag("http://\"title\".wikipedia.org/wiki/%22hi%21%22", true);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink9 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = sentencesWithLink9.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum13 = null;
        checkAbstract11.warn("http://.wikipedia.org/wiki/hi%21", enum13);
        java.lang.Enum enum16 = null;
        checkAbstract11.warn("hi !", enum16);
        pignlproc.evaluation.NoLoopInPath noLoopInPath18 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText19 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger20 = null;
        safeTsvText19.setPigLogger(pigLogger20);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText22 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable23 = mergeAsOpenNLPAnnotatedText22.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract24.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText22.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = safeTsvText19.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = noLoopInPath18.outputSchema(schema27);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag30 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText31 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        safeTsvText31.setPigLogger(pigLogger32);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText34 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable35 = mergeAsOpenNLPAnnotatedText34.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = checkAbstract36.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = mergeAsOpenNLPAnnotatedText34.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = safeTsvText31.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = aggregateTextBag30.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = noLoopInPath18.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract11.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = sentencesWithLink9.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = concatTextBag8.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = aggregateTextBag5.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract1.outputSchema(schema43);
        checkAbstract1.progress();
        org.junit.Assert.assertEquals("'" + boolean3 + "' != '" + false + "'", boolean3, false);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertNull(pigProgressable23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(pigProgressable35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test3018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3018");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("hi!");
        info.bliki.wiki.model.WikiModel wikiModel45 = annotatingMarkupParser0.makeWikiModel("");
        info.bliki.wiki.model.WikiModel wikiModel47 = annotatingMarkupParser0.makeWikiModel("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        java.util.List<java.lang.String> strList48 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList49 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!\n" + "'", str43, "hi!\n");
        org.junit.Assert.assertNotNull(wikiModel45);
        org.junit.Assert.assertNotNull(wikiModel47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(annotationList49);
    }

    @Test
    public void test3019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3019");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("\" http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / hrefwikiobject \"\"\"\"\"\" http : // hi ! . wikipedia . org / wiki / % 22 http % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 22 % 0 A \"\"\"\"\"\" wikiobject \"\" hi ! \"\" wikiobject wikiobjectopennlp / en - sent . binwikiobjecthttp : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ binwikiobjecthttp : // http : // \"\" title \"\" . wikipedia . org / wiki / % 22 hi % 21 % 22 . wikipedia . org / wiki / hi % 21 wikiobjecthttp : // \"\" http : // . wikipedia . org / wiki / hi % 21 \"\" . wikipedia . org / wiki / % 22 % 22 % 22 http % 3 A % 2 F % 2 Fhi _ % 21 _ . wikipedia . org % 2 Fwiki % 2 Fhttp % 253 A % 252 F % 252 Fhttp % 253 A % 252 F % 252 F . wikipedia . org % 252 Fwiki % 252 Fhi % 252521 % 250 A . wikipedia . org % 252 Fwiki % 252 F % 252522 title % 252522 % 22 % 22 % 22 wikiobject \"\" opennlp / en - sent . bin \"\" wikiobject \"\"\"\"\"");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test3020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3020");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = parsingWikipediaLoader1.getInputFormat();
        org.apache.pig.Expression expression12 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression12);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(inputFormat11);
    }

    @Test
    public void test3021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3021");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceStatistics resourceStatistics9 = uriUriNTriplesLoader3.getStatistics("opennlp/en-sent.bin", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("http://\"title\".wikipedia.org/wiki/%22hi%21%22", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriUriNTriplesLoader3.getSchema("wikiobject", job14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        java.lang.String[] strArray18 = uriUriNTriplesLoader3.getPartitionKeys("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", job17);
        org.apache.hadoop.mapreduce.Job job20 = null;
        java.lang.String[] strArray21 = uriUriNTriplesLoader3.getPartitionKeys("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href", job20);
        org.apache.hadoop.mapreduce.Job job23 = null;
        org.apache.pig.ResourceSchema resourceSchema24 = uriUriNTriplesLoader3.getSchema("http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22", job23);
        org.apache.hadoop.mapreduce.Job job26 = null;
        java.lang.String[] strArray27 = uriUriNTriplesLoader3.getPartitionKeys("\"\"\"title\"\" \"href", job26);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(resourceStatistics9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNull(strArray18);
        org.junit.Assert.assertNull(strArray21);
        org.junit.Assert.assertNotNull(resourceSchema24);
        org.junit.Assert.assertNull(strArray27);
    }

    @Test
    public void test3022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3022");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("\"http://.wikipedia.org/wiki/hi%21\"");
        java.lang.String str45 = annotatingMarkupParser0.parse("\"opennlp/en-sent.bin\"");
        java.util.List<pignlproc.markup.Annotation> annotationList46 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"http://.wikipedia.org/wiki/hi%21\"\n" + "'", str43, "\"http://.wikipedia.org/wiki/hi%21\"\n");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "\"opennlp/en-sent.bin\"\n" + "'", str45, "\"opennlp/en-sent.bin\"\n");
        org.junit.Assert.assertNotNull(annotationList46);
    }

    @Test
    public void test3023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3023");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"title\"", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriStringLiteralNTriplesLoader2.getSchema("titlehref", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriStringLiteralNTriplesLoader2.getSchema("\"hi! \"", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21\n", job14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple16 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test3024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3024");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/", "href", "\" http : // . wikipedia . org / wiki / hi % 21 \"");
        uriUriNTriplesLoader3.setUDFContextSignature("\"hi! \"");
    }

    @Test
    public void test3025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3025");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\" title \"\n");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test3026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3026");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"\"hi!\"\" \"", "\" http : // . wikipedia . org / wiki / hi % 21 \"", "http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22");
        uriUriNTriplesLoader3.setUDFContextSignature("\" hi ! \"");
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = uriUriNTriplesLoader3.getStatistics("http://title\n\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriUriNTriplesLoader3.getSchema("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", job10);
        org.junit.Assert.assertNull(resourceStatistics8);
        org.junit.Assert.assertNotNull(resourceSchema11);
    }

    @Test
    public void test3027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3027");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"hi!\"");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.setStoreLocation("\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3028");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href");
        java.lang.String str13 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "hi !");
        java.lang.String str15 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "opennlp/en-sent.bin" + "'", str13, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "opennlp/en-sent.bin" + "'", str15, "opennlp/en-sent.bin");
    }

    @Test
    public void test3029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3029");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        java.lang.reflect.Type type8 = sentencesWithLink0.getReturnType();
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader11 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"", "href");
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceStatistics resourceStatistics14 = uriStringLiteralNTriplesLoader11.getStatistics("\"titlehref\"", job13);
        java.util.List<opennlp.tools.util.Span> spanList15 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) sentencesWithLink0, (java.lang.Object) resourceStatistics14);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(resourceStatistics14);
        org.junit.Assert.assertNotNull(spanList15);
    }

    @Test
    public void test3030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3030");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = mergeAsOpenNLPAnnotatedText1.exec(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3031");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.String str4 = annotatingMarkupParser0.parse("\"title\"");
        java.lang.String str6 = annotatingMarkupParser0.parse("hi !");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser7.getHeaderAnnotations();
        pignlproc.markup.Annotation annotation15 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation20 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        pignlproc.markup.Annotation annotation25 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation30 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation35 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str36 = annotation35.label;
        java.lang.String str37 = annotation35.label;
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str43 = annotation42.label;
        java.lang.String str44 = annotation42.label;
        java.lang.String str45 = annotation42.value;
        pignlproc.markup.Annotation[] annotationArray46 = new pignlproc.markup.Annotation[] { annotation15, annotation20, annotation25, annotation30, annotation35, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList47 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList47, annotationArray46);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser49 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser49.getHeaders();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser49.getHeaders();
        java.lang.Appendable appendable52 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable53 = annotatingMarkupParser49.new CountingAppendable(appendable52);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser54 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList55 = annotatingMarkupParser54.getHeaderAnnotations();
        java.lang.String str56 = annotatingMarkupParser54.getRedirect();
        pignlproc.markup.Annotation annotation61 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation66 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int67 = annotation66.end;
        int int68 = annotation66.begin;
        pignlproc.markup.Annotation[] annotationArray69 = new pignlproc.markup.Annotation[] { annotation61, annotation66 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList70 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList70, annotationArray69);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser72 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList73 = annotatingMarkupParser72.getHeaders();
        java.util.List<java.lang.String> strList74 = annotatingMarkupParser72.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList75 = annotatingMarkupParser72.getHeaderAnnotations();
        java.lang.String str76 = annotatingMarkupParser72.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser77 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList78 = annotatingMarkupParser77.getHeaders();
        java.util.List<java.lang.String> strList79 = annotatingMarkupParser77.getHeaders();
        java.lang.Appendable appendable80 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable81 = annotatingMarkupParser77.new CountingAppendable(appendable80);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable82 = annotatingMarkupParser72.new CountingAppendable((java.lang.Appendable) countingAppendable81);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser83 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList84 = annotatingMarkupParser83.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel86 = annotatingMarkupParser83.makeWikiModel("title");
        annotatingMarkupParser54.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList70, (java.lang.Appendable) countingAppendable81, (info.bliki.wiki.model.IWikiModel) wikiModel86);
        annotatingMarkupParser7.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList47, appendable52, (info.bliki.wiki.model.IWikiModel) wikiModel86);
        java.util.List<pignlproc.markup.Annotation> annotationList89 = annotatingMarkupParser7.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser90 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList91 = annotatingMarkupParser90.getHeaders();
        java.util.List<java.lang.String> strList92 = annotatingMarkupParser90.getHeaders();
        java.lang.Appendable appendable93 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable94 = annotatingMarkupParser90.new CountingAppendable(appendable93);
        int int95 = countingAppendable94.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable96 = annotatingMarkupParser7.new CountingAppendable((java.lang.Appendable) countingAppendable94);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable97 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable94);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable99 = countingAppendable97.append(' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "\"title\"\n" + "'", str4, "\"title\"\n");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi !\n" + "'", str6, "hi !\n");
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "title" + "'", str36, "title");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "title" + "'", str37, "title");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "title" + "'", str43, "title");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "title" + "'", str44, "title");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi!" + "'", str45, "hi!");
        org.junit.Assert.assertNotNull(annotationArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertNotNull(annotationArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(annotationList75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(annotationList84);
        org.junit.Assert.assertNotNull(wikiModel86);
        org.junit.Assert.assertNotNull(annotationList89);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test3032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3032");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "hi!\n\n", "http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21");
        uriStringLiteralNTriplesStorer3.setStoreFuncUDFContextSignature("wikiobject");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat6 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat6);
    }

    @Test
    public void test3033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3033");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriUriNTriplesStorer1.getOutputFormat();
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader4 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader4.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = parsingWikipediaLoader4.getSchema("hi!", job7);
        uriUriNTriplesStorer1.checkSchema(resourceSchema8);
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader13 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat14 = uriUriNTriplesLoader13.getInputFormat();
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceStatistics resourceStatistics17 = uriUriNTriplesLoader13.getStatistics("\"hi! \"", job16);
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceSchema resourceSchema20 = uriUriNTriplesLoader13.getSchema("\"\"\"hi!\"\" \"", job19);
        uriUriNTriplesStorer1.checkSchema(resourceSchema20);
        org.apache.hadoop.fs.Path path23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = uriUriNTriplesStorer1.relToAbsPathForStoreLocation("\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"", path23);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(inputFormat14);
        org.junit.Assert.assertNull(resourceStatistics17);
        org.junit.Assert.assertNotNull(resourceSchema20);
    }

    @Test
    public void test3034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3034");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation(52, (int) (short) 10, "\" http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / hrefwikiobject \"\"\"\"\"\" http : // hi ! . wikipedia . org / wiki / % 22 http % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 22 % 0 A \"\"\"\"\"\" wikiobject \"\" hi ! \"\" wikiobject wikiobjectopennlp / en - sent . binwikiobjecthttp : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ binwikiobjecthttp : // http : // \"\" title \"\" . wikipedia . org / wiki / % 22 hi % 21 % 22 . wikipedia . org / wiki / hi % 21 wikiobjecthttp : // \"\" http : // . wikipedia . org / wiki / hi % 21 \"\" . wikipedia . org / wiki / % 22 % 22 % 22 http % 3 A % 2 F % 2 Fhi _ % 21 _ . wikipedia . org % 2 Fwiki % 2 Fhttp % 253 A % 252 F % 252 Fhttp % 253 A % 252 F % 252 F . wikipedia . org % 252 Fwiki % 252 Fhi % 252521 % 250 A . wikipedia . org % 252 Fwiki % 252 F % 252522 title % 252522 % 22 % 22 % 22 wikiobject \"\" opennlp / en - sent . bin \"\" wikiobject \"\"\"\"\"", "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href");
    }

    @Test
    public void test3035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3035");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getHeaderAnnotations();
        java.lang.String str19 = annotatingMarkupParser15.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser20 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser20.getHeaders();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser20.getHeaders();
        java.lang.Appendable appendable23 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser20.new CountingAppendable(appendable23);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser15.new CountingAppendable((java.lang.Appendable) countingAppendable24);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser26 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser26.getHeaders();
        java.util.List<java.lang.String> strList28 = annotatingMarkupParser26.getHeaders();
        java.lang.Appendable appendable29 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable30 = annotatingMarkupParser26.new CountingAppendable(appendable29);
        countingAppendable30.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser15.new CountingAppendable((java.lang.Appendable) countingAppendable30);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser14.new CountingAppendable((java.lang.Appendable) countingAppendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable33);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable39 = countingAppendable33.append((java.lang.CharSequence) "\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"", (int) (byte) 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(strList28);
    }

    @Test
    public void test3036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3036");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        countingAppendable15.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable30 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        countingAppendable28.currentPosition = '4';
        countingAppendable28.currentPosition = (short) -1;
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
    }

    @Test
    public void test3037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3037");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser1.getParagraphAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser1.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser1.getRedirect();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser1.getParagraphAnnotations();
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(annotationList5);
    }

    @Test
    public void test3038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3038");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test3039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3039");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        mergeAsOpenNLPAnnotatedText0.setReporter(pigProgressable8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger10);
        org.apache.pig.data.Tuple tuple12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = mergeAsOpenNLPAnnotatedText0.exec(tuple12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
    }

    @Test
    public void test3040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3040");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        parsingWikipediaLoader1.setUDFContextSignature("\" title \"");
        org.apache.hadoop.fs.Path path8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = parsingWikipediaLoader1.relativeToAbsolutePath("\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"", path8);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
    }

    @Test
    public void test3041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3041");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum4 = null;
        checkAbstract2.warn("http://.wikipedia.org/wiki/hi%21", enum4);
        java.lang.Enum enum7 = null;
        checkAbstract2.warn("hi !", enum7);
        pignlproc.evaluation.NoLoopInPath noLoopInPath9 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = noLoopInPath9.outputSchema(schema18);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag21 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = aggregateTextBag21.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = noLoopInPath9.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract2.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = sentencesWithLink0.outputSchema(schema34);
        org.apache.commons.logging.Log log36 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = sentencesWithLink0.getReporter();
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(log36);
        org.junit.Assert.assertNull(pigProgressable37);
    }

    @Test
    public void test3042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3042");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = checkAbstract0.getPigLogger();
        boolean boolean6 = checkAbstract0.isAsynchronous();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract0.outputSchema(schema7);
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.data.Tuple tuple10 = null;
        java.lang.Boolean boolean11 = checkAbstract9.exec(tuple10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        checkAbstract9.setPigLogger(pigLogger12);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = checkAbstract9.getPigLogger();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag17 = new pignlproc.evaluation.AggregateTextBag((int) (short) 1, false);
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum20 = null;
        checkAbstract18.warn("http://.wikipedia.org/wiki/hi%21", enum20);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        checkAbstract18.setPigLogger(pigLogger22);
        checkAbstract18.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract18.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = aggregateTextBag17.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract9.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = checkAbstract0.outputSchema(schema36);
        boolean boolean39 = checkAbstract0.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigLogger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
        org.junit.Assert.assertNull(pigLogger14);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test3043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3043");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser0.getParagraphs();
        info.bliki.wiki.model.WikiModel wikiModel8 = annotatingMarkupParser0.makeWikiModel("hi!");
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser0.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser10 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser10.getHeaders();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser10.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser10.getHeaderAnnotations();
        java.lang.String str14 = annotatingMarkupParser10.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser15.getHeaders();
        java.lang.Appendable appendable18 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable19 = annotatingMarkupParser15.new CountingAppendable(appendable18);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser10.new CountingAppendable((java.lang.Appendable) countingAppendable19);
        info.bliki.wiki.model.WikiModel wikiModel22 = annotatingMarkupParser10.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser23.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser25.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser29.getHeaders();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser29.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser29.getHeaderAnnotations();
        java.lang.String str33 = annotatingMarkupParser29.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser34.getHeaders();
        java.lang.Appendable appendable37 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable38 = annotatingMarkupParser34.new CountingAppendable(appendable37);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable39 = annotatingMarkupParser29.new CountingAppendable((java.lang.Appendable) countingAppendable38);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser40.getHeaderAnnotations();
        java.lang.String str42 = annotatingMarkupParser40.getRedirect();
        pignlproc.markup.Annotation annotation47 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation52 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int53 = annotation52.end;
        int int54 = annotation52.begin;
        pignlproc.markup.Annotation[] annotationArray55 = new pignlproc.markup.Annotation[] { annotation47, annotation52 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList56 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList56, annotationArray55);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList59 = annotatingMarkupParser58.getHeaders();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser58.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList61 = annotatingMarkupParser58.getHeaderAnnotations();
        java.lang.String str62 = annotatingMarkupParser58.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser63 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList64 = annotatingMarkupParser63.getHeaders();
        java.util.List<java.lang.String> strList65 = annotatingMarkupParser63.getHeaders();
        java.lang.Appendable appendable66 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable67 = annotatingMarkupParser63.new CountingAppendable(appendable66);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable68 = annotatingMarkupParser58.new CountingAppendable((java.lang.Appendable) countingAppendable67);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser69 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList70 = annotatingMarkupParser69.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel72 = annotatingMarkupParser69.makeWikiModel("title");
        annotatingMarkupParser40.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList56, (java.lang.Appendable) countingAppendable67, (info.bliki.wiki.model.IWikiModel) wikiModel72);
        annotatingMarkupParser23.nodesToText(annotationList28, (java.lang.Appendable) countingAppendable39, (info.bliki.wiki.model.IWikiModel) wikiModel72);
        int int75 = countingAppendable39.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable76 = annotatingMarkupParser10.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        countingAppendable39.currentPosition = (byte) 10;
        int int79 = countingAppendable39.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable80 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable82 = countingAppendable80.append('4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(wikiModel8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(wikiModel22);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(annotationList61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(annotationList70);
        org.junit.Assert.assertNotNull(wikiModel72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
    }

    @Test
    public void test3044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3044");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = parsingWikipediaLoader1.getStatistics("\"hi!\"", job7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = parsingWikipediaLoader1.getInputFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple10 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(resourceStatistics8);
        org.junit.Assert.assertNotNull(inputFormat9);
    }

    @Test
    public void test3045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3045");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        noLoopInPath0.progress();
        boolean boolean30 = noLoopInPath0.isAsynchronous();
        noLoopInPath0.finish();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test3046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3046");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.pig.Expression expression4 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader7, pigSplit8);
        org.junit.Assert.assertNotNull(inputFormat6);
    }

    @Test
    public void test3047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3047");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader5, pigSplit6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple8 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputFormat4);
    }

    @Test
    public void test3048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3048");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser1.getParagraphs();
        java.lang.String str3 = annotatingMarkupParser1.getRedirect();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test3049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3049");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", "http://http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F%22hi%21%22%0A.wikipedia.org%2Fwiki%2F%2522hi%2521_%2522", "http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22");
    }

    @Test
    public void test3050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3050");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = checkAbstract0.getPigLogger();
        boolean boolean6 = checkAbstract0.isAsynchronous();
        pignlproc.evaluation.ConcatTextBag concatTextBag8 = new pignlproc.evaluation.ConcatTextBag("\" title \"");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = concatTextBag8.getReporter();
        pignlproc.evaluation.NoLoopInPath noLoopInPath10 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText11 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        safeTsvText11.setPigLogger(pigLogger12);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = mergeAsOpenNLPAnnotatedText14.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = checkAbstract16.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = mergeAsOpenNLPAnnotatedText14.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = safeTsvText11.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = noLoopInPath10.outputSchema(schema19);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag24 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath25 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText26 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        safeTsvText26.setPigLogger(pigLogger27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = mergeAsOpenNLPAnnotatedText29.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract31 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = checkAbstract31.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = mergeAsOpenNLPAnnotatedText29.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = safeTsvText26.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath25.outputSchema(schema34);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag37 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText38 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        safeTsvText38.setPigLogger(pigLogger39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText41 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = mergeAsOpenNLPAnnotatedText41.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract43.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = mergeAsOpenNLPAnnotatedText41.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText38.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = aggregateTextBag37.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = noLoopInPath25.outputSchema(schema46);
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum52 = null;
        checkAbstract50.warn("http://.wikipedia.org/wiki/hi%21", enum52);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger54 = null;
        checkAbstract50.setPigLogger(pigLogger54);
        checkAbstract50.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText57 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger58 = null;
        safeTsvText57.setPigLogger(pigLogger58);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText60 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable61 = mergeAsOpenNLPAnnotatedText60.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract62 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = checkAbstract62.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = mergeAsOpenNLPAnnotatedText60.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = safeTsvText57.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = checkAbstract50.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = noLoopInPath25.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = aggregateTextBag24.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = noLoopInPath10.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = concatTextBag8.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = checkAbstract0.outputSchema(schema71);
        boolean boolean73 = checkAbstract0.isAsynchronous();
        org.apache.pig.data.Tuple tuple74 = null;
        java.lang.Boolean boolean75 = checkAbstract0.exec(tuple74);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigLogger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(pigProgressable42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(pigProgressable61);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + boolean75 + "' != '" + false + "'", boolean75, false);
    }

    @Test
    public void test3051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3051");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        boolean boolean8 = checkAbstract0.isAsynchronous();
        org.apache.commons.logging.Log log9 = checkAbstract0.getLogger();
        org.apache.pig.data.Tuple tuple10 = null;
        java.lang.Boolean boolean11 = checkAbstract0.exec(tuple10);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + false + "'", boolean11, false);
    }

    @Test
    public void test3052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3052");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\"\"\"title\"\" \"", false);
    }

    @Test
    public void test3053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3053");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str15 = annotatingMarkupParser0.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel17 = annotatingMarkupParser0.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        boolean boolean18 = annotatingMarkupParser0.noLinks();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser0.getHeaders();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !\n\n" + "'", str15, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strList19);
    }

    @Test
    public void test3054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3054");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader8, pigSplit9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = parsingWikipediaLoader1.getInputFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple12 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(inputFormat11);
    }

    @Test
    public void test3055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3055");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum3 = null;
        aggregateTextBag1.warn("href", enum3);
        aggregateTextBag1.progress();
        org.apache.commons.logging.Log log6 = aggregateTextBag1.getLogger();
        org.apache.pig.data.Tuple tuple7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = aggregateTextBag1.exec(tuple7);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test3056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3056");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.lang.reflect.Type type3 = sentencesWithLink0.getReturnType();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type6 = sentencesWithLink0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList7 = sentencesWithLink0.getArgToFuncMapping();
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNull(funcSpecList7);
    }

    @Test
    public void test3057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3057");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser6.getHeaderAnnotations();
        java.lang.String str10 = annotatingMarkupParser6.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser17.getHeaders();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser17.getHeaders();
        java.lang.Appendable appendable20 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser17.new CountingAppendable(appendable20);
        countingAppendable21.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getHeaderAnnotations();
        java.lang.String str29 = annotatingMarkupParser25.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.lang.Appendable appendable33 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser30.new CountingAppendable(appendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser25.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable36 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        countingAppendable34.currentPosition = 0;
        countingAppendable34.currentPosition = (short) 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable41 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        countingAppendable34.currentPosition = ' ';
        countingAppendable34.currentPosition = (short) -1;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable47 = countingAppendable34.append((java.lang.CharSequence) "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
    }

    @Test
    public void test3058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3058");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"\"\"hi!\"\" \"");
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser1.getParagraphAnnotations();
        java.lang.String str3 = annotatingMarkupParser1.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser4.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser11.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser11.getParagraphAnnotations();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser11.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser11.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser17.getHeaderAnnotations();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser17.getParagraphs();
        java.lang.Appendable appendable20 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser17.new CountingAppendable(appendable20);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable22 = annotatingMarkupParser11.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        countingAppendable21.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList26 = annotatingMarkupParser25.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel28 = annotatingMarkupParser25.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser25.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser25.getParagraphAnnotations();
        boolean boolean31 = annotatingMarkupParser25.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel33 = annotatingMarkupParser25.makeWikiModel("\" title \"");
        annotatingMarkupParser4.nodesToText(annotationList10, (java.lang.Appendable) countingAppendable21, (info.bliki.wiki.model.IWikiModel) wikiModel33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        int int36 = countingAppendable35.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable38 = countingAppendable35.append((java.lang.CharSequence) "\"\"\"opennlp / en - sent . bin\"\" \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(annotationList26);
        org.junit.Assert.assertNotNull(wikiModel28);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(wikiModel33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test3059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3059");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriUriNTriplesLoader3.getSchema("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple13 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(resourceSchema9);
        org.junit.Assert.assertNotNull(resourceSchema12);
    }

    @Test
    public void test3060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3060");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        noLoopInPath0.setPigLogger(pigLogger1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = noLoopInPath0.exec(tuple3);
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = noLoopInPath0.exec(tuple5);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag8 = new pignlproc.evaluation.AggregateTextBag((int) '4');
        pignlproc.evaluation.ConcatTextBag concatTextBag10 = new pignlproc.evaluation.ConcatTextBag("\" title \"");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = concatTextBag10.getReporter();
        pignlproc.evaluation.NoLoopInPath noLoopInPath12 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = noLoopInPath12.outputSchema(schema21);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath27 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText28 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        safeTsvText28.setPigLogger(pigLogger29);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText31 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = mergeAsOpenNLPAnnotatedText31.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract33.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = mergeAsOpenNLPAnnotatedText31.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = safeTsvText28.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath27.outputSchema(schema36);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag39 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = mergeAsOpenNLPAnnotatedText43.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract45.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = mergeAsOpenNLPAnnotatedText43.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = safeTsvText40.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = aggregateTextBag39.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = noLoopInPath27.outputSchema(schema48);
        pignlproc.evaluation.CheckAbstract checkAbstract52 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum54 = null;
        checkAbstract52.warn("http://.wikipedia.org/wiki/hi%21", enum54);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        checkAbstract52.setPigLogger(pigLogger56);
        checkAbstract52.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText59 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger60 = null;
        safeTsvText59.setPigLogger(pigLogger60);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText62 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable63 = mergeAsOpenNLPAnnotatedText62.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract64 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = checkAbstract64.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = mergeAsOpenNLPAnnotatedText62.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = safeTsvText59.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = checkAbstract52.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = noLoopInPath27.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = aggregateTextBag26.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = noLoopInPath12.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = concatTextBag10.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = aggregateTextBag8.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = noLoopInPath0.outputSchema(schema72);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable76 = noLoopInPath0.getReporter();
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + true + "'", boolean4, true);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(pigProgressable32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNull(pigProgressable63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(pigProgressable76);
    }

    @Test
    public void test3061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3061");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/hrefwikiobject\"\"\"\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"\"\"\"wikiobject\"\"hi!\"\" wikiobject wikiobjectopennlp/en-sent.binwikiobjecthttp://hi! .wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"\"http://.wikipedia.org/wiki/hi%21\"\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"\"opennlp / en - sent . bin\"\"wikiobject\"\"\"\"\"", "\"hi! \"\n", "\"\"\"opennlp / en - sent . bin\"\" \"");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader7 = new pignlproc.storage.UriUriNTriplesLoader("\"title\"\n", "\" title \"", "\"title\"");
        org.apache.hadoop.mapreduce.InputFormat inputFormat8 = uriUriNTriplesLoader7.getInputFormat();
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriUriNTriplesLoader7.getSchema("http : // . wikipedia . org / wiki / hi % 21", job10);
        uriStringLiteralNTriplesStorer3.checkSchema(resourceSchema11);
        org.junit.Assert.assertNotNull(inputFormat8);
        org.junit.Assert.assertNotNull(resourceSchema11);
    }

    @Test
    public void test3062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3062");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22", "\"\"\"title\"\" \"", "\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\"");
    }

    @Test
    public void test3063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3063");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
    }

    @Test
    public void test3064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3064");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"\n\n");
        java.lang.String str2 = annotatingMarkupParser1.getRedirect();
        org.junit.Assert.assertNull(str2);
    }

    @Test
    public void test3065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3065");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) '#');
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.Boolean boolean3 = checkAbstract1.exec(tuple2);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = checkAbstract1.getArgToFuncMapping();
        org.apache.commons.logging.Log log5 = checkAbstract1.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        checkAbstract1.setReporter(pigProgressable6);
        org.junit.Assert.assertEquals("'" + boolean3 + "' != '" + false + "'", boolean3, false);
        org.junit.Assert.assertNull(funcSpecList4);
        org.junit.Assert.assertNotNull(log5);
    }

    @Test
    public void test3066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3066");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"\"opennlp/en-sent.bin\"\" \"");
    }

    @Test
    public void test3067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3067");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"");
    }

    @Test
    public void test3068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3068");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        checkAbstract0.progress();
        pignlproc.evaluation.ConcatTextBag concatTextBag8 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = concatTextBag8.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = concatTextBag8.getArgToFuncMapping();
        boolean boolean11 = concatTextBag8.isAsynchronous();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink12 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        sentencesWithLink12.setPigLogger(pigLogger13);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList15 = sentencesWithLink12.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = sentencesWithLink12.getPigLogger();
        boolean boolean17 = sentencesWithLink12.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = sentencesWithLink12.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = concatTextBag8.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract0.outputSchema(schema24);
        java.lang.Enum enum28 = null;
        checkAbstract0.warn("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", enum28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = checkAbstract0.getPigLogger();
        org.apache.pig.data.Tuple tuple31 = null;
        java.lang.Boolean boolean32 = checkAbstract0.exec(tuple31);
        checkAbstract0.progress();
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(funcSpecList15);
        org.junit.Assert.assertNull(pigLogger16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(pigLogger30);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + false + "'", boolean32, false);
    }

    @Test
    public void test3069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3069");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        countingAppendable15.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        info.bliki.wiki.model.WikiModel wikiModel31 = annotatingMarkupParser19.makeWikiModel("\"hi!\"\n");
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser19.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser33 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList34 = annotatingMarkupParser33.getHeaders();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser33.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser33.getHeaderAnnotations();
        java.lang.String str37 = annotatingMarkupParser33.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser38.getHeaders();
        java.lang.Appendable appendable41 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable42 = annotatingMarkupParser38.new CountingAppendable(appendable41);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable43 = annotatingMarkupParser33.new CountingAppendable((java.lang.Appendable) countingAppendable42);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser44.getHeaders();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser44.getHeaders();
        java.lang.Appendable appendable47 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser44.new CountingAppendable(appendable47);
        countingAppendable48.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable51 = annotatingMarkupParser33.new CountingAppendable((java.lang.Appendable) countingAppendable48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser52 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser52.getHeaders();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser52.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList55 = annotatingMarkupParser52.getHeaderAnnotations();
        java.lang.String str56 = annotatingMarkupParser52.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser57 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList58 = annotatingMarkupParser57.getHeaders();
        java.util.List<java.lang.String> strList59 = annotatingMarkupParser57.getHeaders();
        java.lang.Appendable appendable60 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable61 = annotatingMarkupParser57.new CountingAppendable(appendable60);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable62 = annotatingMarkupParser52.new CountingAppendable((java.lang.Appendable) countingAppendable61);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable63 = annotatingMarkupParser33.new CountingAppendable((java.lang.Appendable) countingAppendable61);
        countingAppendable61.currentPosition = 0;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser66 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser66.getHeaders();
        java.util.List<java.lang.String> strList68 = annotatingMarkupParser66.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList69 = annotatingMarkupParser66.getHeaderAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel71 = annotatingMarkupParser66.makeWikiModel("wikiobject");
        annotatingMarkupParser0.nodesToText(annotationList32, (java.lang.Appendable) countingAppendable61, (info.bliki.wiki.model.IWikiModel) wikiModel71);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList74 = annotatingMarkupParser73.getHeaders();
        java.util.List<java.lang.String> strList75 = annotatingMarkupParser73.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList76 = annotatingMarkupParser73.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser77 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList78 = annotatingMarkupParser77.getHeaders();
        java.util.List<java.lang.String> strList79 = annotatingMarkupParser77.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList80 = annotatingMarkupParser77.getHeaderAnnotations();
        java.lang.String str81 = annotatingMarkupParser77.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser82 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList83 = annotatingMarkupParser82.getHeaders();
        java.util.List<java.lang.String> strList84 = annotatingMarkupParser82.getHeaders();
        java.lang.Appendable appendable85 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable86 = annotatingMarkupParser82.new CountingAppendable(appendable85);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable87 = annotatingMarkupParser77.new CountingAppendable((java.lang.Appendable) countingAppendable86);
        int int88 = countingAppendable86.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser89 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList90 = annotatingMarkupParser89.getHeaders();
        java.util.List<java.lang.String> strList91 = annotatingMarkupParser89.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList92 = annotatingMarkupParser89.getParagraphAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList93 = annotatingMarkupParser89.getHeaderAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel95 = annotatingMarkupParser89.makeWikiModel("hi!");
        annotatingMarkupParser0.nodesToText(annotationList76, (java.lang.Appendable) countingAppendable86, (info.bliki.wiki.model.IWikiModel) wikiModel95);
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(wikiModel31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(annotationList55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(annotationList69);
        org.junit.Assert.assertNotNull(wikiModel71);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(strList75);
        org.junit.Assert.assertNotNull(annotationList76);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertNotNull(annotationList80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strList83);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(annotationList92);
        org.junit.Assert.assertNotNull(annotationList93);
        org.junit.Assert.assertNotNull(wikiModel95);
    }

    @Test
    public void test3070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3070");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21\n", "\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"", "");
        org.apache.hadoop.fs.Path path5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = uriStringLiteralNTriplesStorer3.relToAbsPathForStoreLocation("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", path5);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://\"hi!\"?.wikipedia.org/wiki/%22hi%21_%22 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3071");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        checkAbstract0.finish();
        checkAbstract0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        checkAbstract0.setReporter(pigProgressable10);
        org.apache.pig.data.Tuple tuple12 = null;
        java.lang.Boolean boolean13 = checkAbstract0.exec(tuple12);
        java.lang.reflect.Type type14 = checkAbstract0.getReturnType();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + false + "'", boolean13, false);
        org.junit.Assert.assertNotNull(type14);
    }

    @Test
    public void test3072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3072");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", "\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"");
        org.apache.hadoop.fs.Path path4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = uriStringLiteralNTriplesLoader2.relativeToAbsolutePath("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href", path4);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3073");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        checkAbstract0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        checkAbstract0.setReporter(pigProgressable6);
        org.junit.Assert.assertNotNull(schema2);
    }

    @Test
    public void test3074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3074");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\"http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21\"", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3075");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("\"hi! \"");
        org.apache.commons.logging.Log log2 = noLoopInPath1.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        noLoopInPath1.setReporter(pigProgressable3);
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = noLoopInPath1.exec(tuple5);
        java.lang.reflect.Type type7 = noLoopInPath1.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        noLoopInPath1.setReporter(pigProgressable8);
        org.apache.pig.data.Tuple tuple10 = null;
        java.lang.Boolean boolean11 = noLoopInPath1.exec(tuple10);
        pignlproc.evaluation.ConcatTextBag concatTextBag14 = new pignlproc.evaluation.ConcatTextBag("title", false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = concatTextBag14.getReporter();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag17 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        aggregateTextBag17.progress();
        org.apache.commons.logging.Log log19 = aggregateTextBag17.getLogger();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink20 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        sentencesWithLink20.setPigLogger(pigLogger21);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList23 = sentencesWithLink20.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = sentencesWithLink20.getPigLogger();
        boolean boolean25 = sentencesWithLink20.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText26 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable27 = mergeAsOpenNLPAnnotatedText26.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = checkAbstract28.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = mergeAsOpenNLPAnnotatedText26.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = sentencesWithLink20.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = aggregateTextBag17.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = concatTextBag14.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = noLoopInPath1.outputSchema(schema34);
        org.junit.Assert.assertNotNull(log2);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertEquals("'" + boolean11 + "' != '" + true + "'", boolean11, true);
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNotNull(log19);
        org.junit.Assert.assertNull(funcSpecList23);
        org.junit.Assert.assertNull(pigLogger24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(pigProgressable27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
    }

    @Test
    public void test3076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3076");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"http://.wikipedia.org/wiki/hi%21\"");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader5 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriUriNTriplesLoader5.getSchema("", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriUriNTriplesLoader5.getStatistics("opennlp/en-sent.bin", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriUriNTriplesLoader5.getSchema("wikiobject", job13);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema14);
        org.apache.pig.data.Tuple tuple16 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test3077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3077");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"\" opennlp / en - sent . bin \"\"\"");
        org.apache.hadoop.fs.Path path3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\"", path3);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3078");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22\n");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: http :%20/%20%22%20hi%20!%20%22%20.%20wikipedia%20.%20org%20/%20wiki%20/%20%25%2022%20hi%20%25%2021%20_%20%25%2022");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3079");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.Expression expression2 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression2);
        org.apache.pig.LoadCaster loadCaster4 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = parsingWikipediaLoader1.getStatistics("http://\"title\"\n.wikipedia.org/wiki/\n", job6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple8 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(loadCaster4);
        org.junit.Assert.assertNull(resourceStatistics7);
    }

    @Test
    public void test3080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3080");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"\"\"\"\"\"\"opennlp / en - sent . bin\"\"\"\"\"\"\"");
    }

    @Test
    public void test3081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3081");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        sentencesWithLink0.setPigLogger(pigLogger7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNull(pigLogger9);
    }

    @Test
    public void test3082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3082");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        java.lang.reflect.Type type3 = aggregateTextBag2.getReturnType();
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = aggregateTextBag2.exec(tuple4);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
    }

    @Test
    public void test3083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3083");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int5 = annotation4.end;
        int int6 = annotation4.begin;
        int int7 = annotation4.begin;
        java.lang.String str8 = annotation4.value;
        int int9 = annotation4.end;
        java.lang.String str10 = annotation4.value;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://.wikipedia.org/wiki/hi%21" + "'", str8, "http://.wikipedia.org/wiki/hi%21");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://.wikipedia.org/wiki/hi%21" + "'", str10, "http://.wikipedia.org/wiki/hi%21");
    }

    @Test
    public void test3084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3084");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) '4');
        checkAbstract1.finish();
        java.lang.reflect.Type type3 = checkAbstract1.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract1.setReporter(pigProgressable4);
        org.junit.Assert.assertNotNull(type3);
    }

    @Test
    public void test3085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3085");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("title", job4);
        org.apache.pig.Expression expression6 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression6);
        org.apache.hadoop.mapreduce.InputFormat inputFormat8 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", job10);
        org.apache.hadoop.mapreduce.RecordReader recordReader12 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit13 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader12, pigSplit13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceStatistics resourceStatistics17 = uriStringLiteralNTriplesLoader2.getStatistics("", job16);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat8);
        org.junit.Assert.assertNull(strArray11);
        org.junit.Assert.assertNull(resourceStatistics17);
    }

    @Test
    public void test3086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3086");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", false);
        concatTextBag2.progress();
    }

    @Test
    public void test3087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3087");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.lang.String str6 = annotatingMarkupParser0.parse("");
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser9 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser9.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser11.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser11.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getHeaderAnnotations();
        java.lang.String str19 = annotatingMarkupParser15.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser20 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser20.getHeaders();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser20.getHeaders();
        java.lang.Appendable appendable23 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser20.new CountingAppendable(appendable23);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser15.new CountingAppendable((java.lang.Appendable) countingAppendable24);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser26 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser26.getHeaderAnnotations();
        java.lang.String str28 = annotatingMarkupParser26.getRedirect();
        pignlproc.markup.Annotation annotation33 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation38 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int39 = annotation38.end;
        int int40 = annotation38.begin;
        pignlproc.markup.Annotation[] annotationArray41 = new pignlproc.markup.Annotation[] { annotation33, annotation38 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList42 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList42, annotationArray41);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser44.getHeaders();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser44.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser44.getHeaderAnnotations();
        java.lang.String str48 = annotatingMarkupParser44.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser49 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser49.getHeaders();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser49.getHeaders();
        java.lang.Appendable appendable52 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable53 = annotatingMarkupParser49.new CountingAppendable(appendable52);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable54 = annotatingMarkupParser44.new CountingAppendable((java.lang.Appendable) countingAppendable53);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser55 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList56 = annotatingMarkupParser55.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel58 = annotatingMarkupParser55.makeWikiModel("title");
        annotatingMarkupParser26.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList42, (java.lang.Appendable) countingAppendable53, (info.bliki.wiki.model.IWikiModel) wikiModel58);
        annotatingMarkupParser9.nodesToText(annotationList14, (java.lang.Appendable) countingAppendable25, (info.bliki.wiki.model.IWikiModel) wikiModel58);
        int int61 = countingAppendable25.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser62 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList63 = annotatingMarkupParser62.getHeaders();
        java.util.List<java.lang.String> strList64 = annotatingMarkupParser62.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList65 = annotatingMarkupParser62.getHeaderAnnotations();
        java.lang.String str66 = annotatingMarkupParser62.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser67 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList68 = annotatingMarkupParser67.getHeaders();
        java.util.List<java.lang.String> strList69 = annotatingMarkupParser67.getHeaders();
        java.lang.Appendable appendable70 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable71 = annotatingMarkupParser67.new CountingAppendable(appendable70);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable72 = annotatingMarkupParser62.new CountingAppendable((java.lang.Appendable) countingAppendable71);
        info.bliki.wiki.model.WikiModel wikiModel74 = annotatingMarkupParser62.makeWikiModel("\"hi!\"\n");
        annotatingMarkupParser0.nodesToText(annotationList8, (java.lang.Appendable) countingAppendable25, (info.bliki.wiki.model.IWikiModel) wikiModel74);
        int int76 = countingAppendable25.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable78 = countingAppendable25.append('a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(annotationArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(annotationList47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList56);
        org.junit.Assert.assertNotNull(wikiModel58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(annotationList65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNotNull(wikiModel74);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test3088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3088");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) (-1), (long) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3089");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        countingAppendable15.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        boolean boolean19 = annotatingMarkupParser0.noLinks();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test3090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3090");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"");
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"");
    }

    @Test
    public void test3091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3091");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\" opennlp / en - sent . bin \"\n");
    }

    @Test
    public void test3092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3092");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.lang.reflect.Type type3 = sentencesWithLink0.getReturnType();
        pignlproc.evaluation.ConcatTextBag concatTextBag4 = new pignlproc.evaluation.ConcatTextBag();
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.String str6 = concatTextBag4.exec(tuple5);
        concatTextBag4.progress();
        boolean boolean8 = concatTextBag4.isAsynchronous();
        boolean boolean9 = concatTextBag4.isAsynchronous();
        pignlproc.evaluation.ConcatTextBag concatTextBag11 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple12 = null;
        java.lang.String str13 = concatTextBag11.exec(tuple12);
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        pignlproc.evaluation.CheckAbstract checkAbstract39 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum41 = null;
        checkAbstract39.warn("http://.wikipedia.org/wiki/hi%21", enum41);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        checkAbstract39.setPigLogger(pigLogger43);
        checkAbstract39.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText46 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        safeTsvText46.setPigLogger(pigLogger47);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText49 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable50 = mergeAsOpenNLPAnnotatedText49.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract51 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract51.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText49.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = safeTsvText46.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = checkAbstract39.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = noLoopInPath14.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = concatTextBag11.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = concatTextBag4.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = sentencesWithLink0.outputSchema(schema59);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger61 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        sentencesWithLink0.setPigLogger(pigLogger62);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(pigProgressable50);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNull(pigLogger61);
    }

    @Test
    public void test3093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3093");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("http://\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/http_%3A_%2F%2F_hi_%21_._wikipedia_._org_%2F_wiki_%2F_opennlp___%25_2_F___en___-___sent___.___bin", "titlehref");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://titlehref.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhttp%3A%2F%2F%22%22title%22%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2Fhttp_%253A_%252F%252F_hi_%2521_._wikipedia_._org_%252F_wiki_%252F_opennlp___%2525_2_F___en___-___sent___.___bin" + "'", str2, "http://titlehref.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhttp%3A%2F%2F%22%22title%22%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2Fhttp_%253A_%252F%252F_hi_%2521_._wikipedia_._org_%252F_wiki_%252F_opennlp___%2525_2_F___en___-___sent___.___bin");
    }

    @Test
    public void test3094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3094");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22");
    }

    @Test
    public void test3095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3095");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("http://.wikipedia.org/wiki/hi%21\n", job12);
        org.apache.pig.Expression expression14 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        org.apache.pig.ResourceSchema resourceSchema18 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job17);
        org.apache.hadoop.fs.Path path20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str21 = parsingWikipediaLoader1.relativeToAbsolutePath("http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href", path20);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNotNull(resourceSchema18);
    }

    @Test
    public void test3096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3096");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract0.setReporter(pigProgressable4);
        java.lang.reflect.Type type6 = checkAbstract0.getReturnType();
        boolean boolean7 = checkAbstract0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        checkAbstract0.setPigLogger(pigLogger9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = checkAbstract0.getReporter();
        java.lang.Enum enum13 = null;
        checkAbstract0.warn("hi !\n", enum13);
        checkAbstract0.progress();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray18 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList19 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList19, spanArray18);
        java.lang.String str21 = mergeAsOpenNLPAnnotatedText16.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList19);
        pignlproc.evaluation.ConcatTextBag concatTextBag23 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum26 = null;
        checkAbstract24.warn("http://.wikipedia.org/wiki/hi%21", enum26);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        checkAbstract24.setPigLogger(pigLogger28);
        checkAbstract24.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText31 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        safeTsvText31.setPigLogger(pigLogger32);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText34 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable35 = mergeAsOpenNLPAnnotatedText34.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = checkAbstract36.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = mergeAsOpenNLPAnnotatedText34.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = safeTsvText31.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract24.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = concatTextBag23.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract0.outputSchema(schema41);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(spanArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "href" + "'", str21, "href");
        org.junit.Assert.assertNull(pigProgressable35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
    }

    @Test
    public void test3097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3097");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://\" http : // . wikipedia . org / wiki / hi % 21 \".wikipedia.org/wiki/opennlp%2Fen-sent.bin", "http://\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\".wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", "http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href");
    }

    @Test
    public void test3098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3098");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        sentencesWithLink0.progress();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink4 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        sentencesWithLink4.setPigLogger(pigLogger5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = sentencesWithLink4.getReporter();
        org.apache.commons.logging.Log log8 = sentencesWithLink4.getLogger();
        java.lang.reflect.Type type9 = sentencesWithLink4.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink10 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        sentencesWithLink10.setPigLogger(pigLogger11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = sentencesWithLink10.getReporter();
        java.lang.reflect.Type type14 = sentencesWithLink10.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        safeTsvText15.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink19 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath20 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText21 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        safeTsvText21.setPigLogger(pigLogger22);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = safeTsvText21.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath20.outputSchema(schema29);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag32 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = aggregateTextBag32.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath20.outputSchema(schema41);
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum47 = null;
        checkAbstract45.warn("http://.wikipedia.org/wiki/hi%21", enum47);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger49 = null;
        checkAbstract45.setPigLogger(pigLogger49);
        checkAbstract45.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText52 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger53 = null;
        safeTsvText52.setPigLogger(pigLogger53);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText55 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable56 = mergeAsOpenNLPAnnotatedText55.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract57 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = checkAbstract57.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = mergeAsOpenNLPAnnotatedText55.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = safeTsvText52.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract45.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = noLoopInPath20.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = sentencesWithLink19.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = safeTsvText15.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = sentencesWithLink10.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = sentencesWithLink4.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = sentencesWithLink0.outputSchema(schema67);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList69 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger70 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(pigProgressable56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNull(funcSpecList69);
        org.junit.Assert.assertNull(pigLogger70);
    }

    @Test
    public void test3099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3099");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.pig.Expression expression11 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression11);
        org.apache.pig.LoadCaster loadCaster13 = parsingWikipediaLoader1.getLoadCaster();
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(loadCaster13);
    }

    @Test
    public void test3100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3100");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        aggregateTextBag1.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag1.setReporter(pigProgressable3);
        boolean boolean5 = aggregateTextBag1.isAsynchronous();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test3101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3101");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3102");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22.wikipedia.org/wiki/wikiobject");
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"");
    }

    @Test
    public void test3103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3103");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\"");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = null;
        concatTextBag1.setReporter(pigProgressable2);
    }

    @Test
    public void test3104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3104");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.pig.Expression expression8 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = parsingWikipediaLoader1.getSchema("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = parsingWikipediaLoader1.getSchema("\"opennlp / en - sent . bin\"", job14);
        org.apache.pig.LoadCaster loadCaster16 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.InputFormat inputFormat17 = parsingWikipediaLoader1.getInputFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple18 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNotNull(loadCaster16);
        org.junit.Assert.assertNotNull(inputFormat17);
    }

    @Test
    public void test3105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3105");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        java.lang.String[] strArray13 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job12);
        org.apache.hadoop.mapreduce.RecordReader recordReader14 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit15 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader14, pigSplit15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple17 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNull(strArray13);
    }

    @Test
    public void test3106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3106");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum8 = null;
        sentencesWithLink0.warn("http://\"title\"\n.wikipedia.org/wiki/", enum8);
        boolean boolean10 = sentencesWithLink0.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigLogger6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test3107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3107");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3108");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        org.apache.commons.logging.Log log29 = noLoopInPath0.getLogger();
        java.lang.reflect.Type type30 = noLoopInPath0.getReturnType();
        pignlproc.evaluation.ConcatTextBag concatTextBag32 = new pignlproc.evaluation.ConcatTextBag("\"opennlp / en - sent . bin\"");
        java.util.List<org.apache.pig.FuncSpec> funcSpecList33 = concatTextBag32.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink34 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = sentencesWithLink34.getPigLogger();
        java.lang.Enum enum37 = null;
        sentencesWithLink34.warn("opennlp / en - sent . bin", enum37);
        java.lang.reflect.Type type39 = sentencesWithLink34.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum42 = null;
        safeTsvText40.warn("http://.wikipedia.org/wiki/hi%21", enum42);
        pignlproc.evaluation.CheckAbstract checkAbstract44 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum46 = null;
        checkAbstract44.warn("http://.wikipedia.org/wiki/hi%21", enum46);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger48 = null;
        checkAbstract44.setPigLogger(pigLogger48);
        checkAbstract44.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText51 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger52 = null;
        safeTsvText51.setPigLogger(pigLogger52);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText54 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable55 = mergeAsOpenNLPAnnotatedText54.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract56 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract56.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = mergeAsOpenNLPAnnotatedText54.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = safeTsvText51.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = checkAbstract44.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = safeTsvText40.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = sentencesWithLink34.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = concatTextBag32.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = noLoopInPath0.outputSchema(schema64);
        org.apache.pig.data.Tuple tuple66 = null;
        java.lang.Boolean boolean67 = noLoopInPath0.exec(tuple66);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(funcSpecList33);
        org.junit.Assert.assertNull(pigLogger35);
        org.junit.Assert.assertNotNull(type39);
        org.junit.Assert.assertNull(pigProgressable55);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertEquals("'" + boolean67 + "' != '" + true + "'", boolean67, true);
    }

    @Test
    public void test3109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3109");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("hi!\n");
        mergeAsOpenNLPAnnotatedText1.progress();
    }

    @Test
    public void test3110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3110");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://\"title\".wikipedia.org/wiki/%22hi%21%22", true);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink3 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = sentencesWithLink3.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum7 = null;
        checkAbstract5.warn("http://.wikipedia.org/wiki/hi%21", enum7);
        java.lang.Enum enum10 = null;
        checkAbstract5.warn("hi !", enum10);
        pignlproc.evaluation.NoLoopInPath noLoopInPath12 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = noLoopInPath12.outputSchema(schema21);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag24 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = aggregateTextBag24.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath12.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract5.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = sentencesWithLink3.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = concatTextBag2.outputSchema(schema37);
        concatTextBag2.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        concatTextBag2.setPigLogger(pigLogger41);
        org.apache.commons.logging.Log log43 = concatTextBag2.getLogger();
        org.junit.Assert.assertNull(funcSpecList4);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(log43);
    }

    @Test
    public void test3111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3111");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation(100, (int) (byte) -1, "", "title");
        int int5 = annotation4.begin;
        int int6 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test3112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3112");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        safeTsvText0.progress();
    }

    @Test
    public void test3113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3113");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://titlehref.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhttp%3A%2F%2F%22%22title%22%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2Fhttp_%253A_%252F%252F_hi_%2521_._wikipedia_._org_%252F_wiki_%252F_opennlp___%2525_2_F___en___-___sent___.___bin", "\"http://.wikipedia.org/wiki/hi%21\"", "http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521\n");
    }

    @Test
    public void test3114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3114");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = concatTextBag1.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = concatTextBag1.getArgToFuncMapping();
        org.apache.pig.data.Tuple tuple4 = null;
        java.lang.String str5 = concatTextBag1.exec(tuple4);
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test3115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3115");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceStatistics resourceStatistics5 = uriStringLiteralNTriplesLoader2.getStatistics("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\n", job4);
        org.junit.Assert.assertNull(resourceStatistics5);
    }

    @Test
    public void test3116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3116");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = checkAbstract2.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray6 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList7 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList7, spanArray6);
        java.lang.String str9 = mergeAsOpenNLPAnnotatedText4.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList7);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = mergeAsOpenNLPAnnotatedText4.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray13 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList14 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList14, spanArray13);
        java.lang.String str16 = mergeAsOpenNLPAnnotatedText11.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList14);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        mergeAsOpenNLPAnnotatedText11.setPigLogger(pigLogger17);
        boolean boolean19 = mergeAsOpenNLPAnnotatedText11.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum22 = null;
        checkAbstract20.warn("http://.wikipedia.org/wiki/hi%21", enum22);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = null;
        checkAbstract20.setReporter(pigProgressable24);
        java.lang.reflect.Type type26 = checkAbstract20.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath27 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText28 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        safeTsvText28.setPigLogger(pigLogger29);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText31 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = mergeAsOpenNLPAnnotatedText31.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract33.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = mergeAsOpenNLPAnnotatedText31.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = safeTsvText28.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath27.outputSchema(schema36);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag39 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText40 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        safeTsvText40.setPigLogger(pigLogger41);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = mergeAsOpenNLPAnnotatedText43.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract45.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = mergeAsOpenNLPAnnotatedText43.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = safeTsvText40.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = aggregateTextBag39.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = noLoopInPath27.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract20.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText11.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract2.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath0.outputSchema(schema55);
        noLoopInPath0.finish();
        java.lang.reflect.Type type58 = noLoopInPath0.getReturnType();
        pignlproc.evaluation.ConcatTextBag concatTextBag60 = new pignlproc.evaluation.ConcatTextBag("\"opennlp / en - sent . bin\"");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink61 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        sentencesWithLink61.setPigLogger(pigLogger62);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList64 = sentencesWithLink61.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger65 = sentencesWithLink61.getPigLogger();
        boolean boolean66 = sentencesWithLink61.isAsynchronous();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink67 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger68 = null;
        sentencesWithLink67.setPigLogger(pigLogger68);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable70 = sentencesWithLink67.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable71 = null;
        sentencesWithLink67.setReporter(pigProgressable71);
        sentencesWithLink67.progress();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText74 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray76 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList77 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList77, spanArray76);
        java.lang.String str79 = mergeAsOpenNLPAnnotatedText74.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList77);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText81 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray83 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList84 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList84, spanArray83);
        java.lang.String str86 = mergeAsOpenNLPAnnotatedText81.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList84);
        java.lang.String str87 = mergeAsOpenNLPAnnotatedText74.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList84);
        pignlproc.evaluation.SafeTsvText safeTsvText88 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type89 = safeTsvText88.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract90 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = checkAbstract90.outputSchema(schema91);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = safeTsvText88.outputSchema(schema92);
        org.apache.pig.impl.logicalLayer.schema.Schema schema94 = mergeAsOpenNLPAnnotatedText74.outputSchema(schema92);
        org.apache.pig.impl.logicalLayer.schema.Schema schema95 = sentencesWithLink67.outputSchema(schema92);
        org.apache.pig.impl.logicalLayer.schema.Schema schema96 = sentencesWithLink61.outputSchema(schema92);
        org.apache.pig.impl.logicalLayer.schema.Schema schema97 = concatTextBag60.outputSchema(schema96);
        org.apache.pig.impl.logicalLayer.schema.Schema schema98 = noLoopInPath0.outputSchema(schema97);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNotNull(spanArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi !" + "'", str9, "hi !");
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertNotNull(spanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi !" + "'", str16, "hi !");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(type26);
        org.junit.Assert.assertNull(pigProgressable32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNull(pigProgressable44);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(type58);
        org.junit.Assert.assertNull(funcSpecList64);
        org.junit.Assert.assertNull(pigLogger65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(pigProgressable70);
        org.junit.Assert.assertNotNull(spanArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "hi !" + "'", str79, "hi !");
        org.junit.Assert.assertNotNull(spanArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "href" + "'", str86, "href");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "hi !" + "'", str87, "hi !");
        org.junit.Assert.assertNotNull(type89);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test3117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3117");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("http://http://http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22.wikipedia.org/wiki/%22hi%21%22");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test3118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3118");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.Annotation annotation8 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation13 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        pignlproc.markup.Annotation annotation18 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation23 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation28 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str29 = annotation28.label;
        java.lang.String str30 = annotation28.label;
        pignlproc.markup.Annotation annotation35 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str36 = annotation35.label;
        java.lang.String str37 = annotation35.label;
        java.lang.String str38 = annotation35.value;
        pignlproc.markup.Annotation[] annotationArray39 = new pignlproc.markup.Annotation[] { annotation8, annotation13, annotation18, annotation23, annotation28, annotation35 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList40 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList40, annotationArray39);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser42.getHeaders();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser42.getHeaders();
        java.lang.Appendable appendable45 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser42.new CountingAppendable(appendable45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser47 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList48 = annotatingMarkupParser47.getHeaderAnnotations();
        java.lang.String str49 = annotatingMarkupParser47.getRedirect();
        pignlproc.markup.Annotation annotation54 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation59 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int60 = annotation59.end;
        int int61 = annotation59.begin;
        pignlproc.markup.Annotation[] annotationArray62 = new pignlproc.markup.Annotation[] { annotation54, annotation59 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList63 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList63, annotationArray62);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser65.getHeaders();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser65.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList68 = annotatingMarkupParser65.getHeaderAnnotations();
        java.lang.String str69 = annotatingMarkupParser65.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser70 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser70.getHeaders();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser70.getHeaders();
        java.lang.Appendable appendable73 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable74 = annotatingMarkupParser70.new CountingAppendable(appendable73);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable75 = annotatingMarkupParser65.new CountingAppendable((java.lang.Appendable) countingAppendable74);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList77 = annotatingMarkupParser76.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel79 = annotatingMarkupParser76.makeWikiModel("title");
        annotatingMarkupParser47.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList63, (java.lang.Appendable) countingAppendable74, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList40, appendable45, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        java.util.List<pignlproc.markup.Annotation> annotationList82 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser83 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList84 = annotatingMarkupParser83.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList85 = annotatingMarkupParser83.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList86 = annotatingMarkupParser83.getParagraphAnnotations();
        java.util.List<java.lang.String> strList87 = annotatingMarkupParser83.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList88 = annotatingMarkupParser83.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser89 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList90 = annotatingMarkupParser89.getHeaderAnnotations();
        java.util.List<java.lang.String> strList91 = annotatingMarkupParser89.getParagraphs();
        java.lang.Appendable appendable92 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable93 = annotatingMarkupParser89.new CountingAppendable(appendable92);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable94 = annotatingMarkupParser83.new CountingAppendable((java.lang.Appendable) countingAppendable93);
        countingAppendable93.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable97 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable93);
        int int98 = countingAppendable93.currentPosition;
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "title" + "'", str29, "title");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "title" + "'", str30, "title");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "title" + "'", str36, "title");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "title" + "'", str37, "title");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(annotationList48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(annotationList68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(annotationList77);
        org.junit.Assert.assertNotNull(wikiModel79);
        org.junit.Assert.assertNotNull(annotationList82);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(annotationList85);
        org.junit.Assert.assertNotNull(annotationList86);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertNotNull(annotationList88);
        org.junit.Assert.assertNotNull(annotationList90);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 35 + "'", int98 == 35);
    }

    @Test
    public void test3119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3119");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("http://\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"href.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        noLoopInPath1.finish();
    }

    @Test
    public void test3120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3120");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        safeTsvText0.setReporter(pigProgressable5);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink7.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        java.lang.Enum enum14 = null;
        checkAbstract9.warn("hi !", enum14);
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract9.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = sentencesWithLink7.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = safeTsvText0.outputSchema(schema41);
        pignlproc.evaluation.CheckAbstract checkAbstract44 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract44.outputSchema(schema45);
        org.apache.pig.data.Tuple tuple47 = null;
        java.lang.Boolean boolean48 = checkAbstract44.exec(tuple47);
        java.lang.Enum enum50 = null;
        checkAbstract44.warn("href", enum50);
        checkAbstract44.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText53 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger54 = null;
        safeTsvText53.setPigLogger(pigLogger54);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText56 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable57 = mergeAsOpenNLPAnnotatedText56.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract58 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = checkAbstract58.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = mergeAsOpenNLPAnnotatedText56.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = safeTsvText53.outputSchema(schema61);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText63 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray65 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList66 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList66, spanArray65);
        java.lang.String str68 = mergeAsOpenNLPAnnotatedText63.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList66);
        pignlproc.evaluation.ConcatTextBag concatTextBag70 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract71 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum73 = null;
        checkAbstract71.warn("http://.wikipedia.org/wiki/hi%21", enum73);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger75 = null;
        checkAbstract71.setPigLogger(pigLogger75);
        checkAbstract71.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText78 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger79 = null;
        safeTsvText78.setPigLogger(pigLogger79);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText81 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable82 = mergeAsOpenNLPAnnotatedText81.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract83 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = checkAbstract83.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = mergeAsOpenNLPAnnotatedText81.outputSchema(schema84);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = safeTsvText78.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = checkAbstract71.outputSchema(schema87);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = concatTextBag70.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = mergeAsOpenNLPAnnotatedText63.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = safeTsvText53.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = checkAbstract44.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = safeTsvText0.outputSchema(schema92);
        safeTsvText0.finish();
        org.apache.pig.data.Tuple tuple95 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str96 = safeTsvText0.exec(tuple95);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in SafeTsvText");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertEquals("'" + boolean48 + "' != '" + false + "'", boolean48, false);
        org.junit.Assert.assertNull(pigProgressable57);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(spanArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "href" + "'", str68, "href");
        org.junit.Assert.assertNull(pigProgressable82);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
    }

    @Test
    public void test3121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3121");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.cleanupOnFailure("http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3122");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) '#', false);
        pignlproc.evaluation.SafeTsvText safeTsvText3 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type4 = safeTsvText3.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema6 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = checkAbstract5.outputSchema(schema6);
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = safeTsvText3.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = aggregateTextBag2.outputSchema(schema7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        aggregateTextBag2.setPigLogger(pigLogger10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = aggregateTextBag2.getReporter();
        aggregateTextBag2.finish();
        org.apache.commons.logging.Log log14 = aggregateTextBag2.getLogger();
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(pigProgressable12);
        org.junit.Assert.assertNotNull(log14);
    }

    @Test
    public void test3123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3123");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str15 = annotatingMarkupParser0.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel17 = annotatingMarkupParser0.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        boolean boolean18 = annotatingMarkupParser0.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.lang.String str20 = annotatingMarkupParser0.getRedirect();
        java.lang.String str21 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !\n\n" + "'", str15, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test3124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3124");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        boolean boolean6 = annotatingMarkupParser0.noLinks();
        java.lang.String str8 = annotatingMarkupParser0.parse("\"opennlp / en - sent . bin\"");
        boolean boolean9 = annotatingMarkupParser0.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser0.getHeaders();
        java.lang.String str14 = annotatingMarkupParser0.parse("hi !");
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"opennlp / en - sent . bin\"\n" + "'", str8, "\"opennlp / en - sent . bin\"\n");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi !\n" + "'", str14, "hi !\n");
    }

    @Test
    public void test3125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3125");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, 0L, (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3126");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://http://http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22.wikipedia.org/wiki/%22hi%21%22");
    }

    @Test
    public void test3127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3127");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.commons.logging.Log log25 = noLoopInPath0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = noLoopInPath0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        noLoopInPath0.setPigLogger(pigLogger27);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(log25);
        org.junit.Assert.assertNull(pigLogger26);
    }

    @Test
    public void test3128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3128");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
    }

    @Test
    public void test3129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3129");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\"http://\"\"\"\"\"\"hi!\"\"\"\" \"\".wikipedia.org/wiki/\"", true);
    }

    @Test
    public void test3130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3130");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job7);
        org.apache.pig.LoadCaster loadCaster9 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceStatistics resourceStatistics12 = parsingWikipediaLoader1.getStatistics("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job11);
        org.apache.hadoop.mapreduce.InputFormat inputFormat13 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job15 = null;
        java.lang.String[] strArray16 = parsingWikipediaLoader1.getPartitionKeys("\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"", job15);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(loadCaster9);
        org.junit.Assert.assertNull(resourceStatistics12);
        org.junit.Assert.assertNotNull(inputFormat13);
        org.junit.Assert.assertNull(strArray16);
    }

    @Test
    public void test3131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3131");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href");
        info.bliki.wiki.model.WikiModel wikiModel45 = annotatingMarkupParser0.makeWikiModel("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n");
        java.util.List<pignlproc.markup.Annotation> annotationList46 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList48 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser0.getParagraphs();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n" + "'", str43, "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n");
        org.junit.Assert.assertNotNull(wikiModel45);
        org.junit.Assert.assertNotNull(annotationList46);
        org.junit.Assert.assertNotNull(annotationList47);
        org.junit.Assert.assertNotNull(annotationList48);
        org.junit.Assert.assertNotNull(strList49);
    }

    @Test
    public void test3132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3132");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (short) 1);
        checkAbstract1.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        checkAbstract1.setPigLogger(pigLogger3);
    }

    @Test
    public void test3133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3133");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/hi%21");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\"hi!\"");
        java.lang.String str13 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\"hi!\"\n");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "opennlp/en-sent.bin" + "'", str13, "opennlp/en-sent.bin");
    }

    @Test
    public void test3134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3134");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceStatistics resourceStatistics13 = parsingWikipediaLoader1.getStatistics("http://.wikipedia.org/wiki/http%3A%2F%2F%22%22%22hi%21%22%22_%22.wikipedia.org%2Fwiki%2F", job12);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNull(resourceStatistics13);
    }

    @Test
    public void test3135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3135");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = noLoopInPath0.getPigLogger();
        java.lang.reflect.Type type13 = noLoopInPath0.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = noLoopInPath0.outputSchema(schema38);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = noLoopInPath0.getReporter();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag43 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText44 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray46 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList47 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList47, spanArray46);
        java.lang.String str49 = mergeAsOpenNLPAnnotatedText44.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList47);
        pignlproc.evaluation.ConcatTextBag concatTextBag51 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract52 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum54 = null;
        checkAbstract52.warn("http://.wikipedia.org/wiki/hi%21", enum54);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        checkAbstract52.setPigLogger(pigLogger56);
        checkAbstract52.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText59 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger60 = null;
        safeTsvText59.setPigLogger(pigLogger60);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText62 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable63 = mergeAsOpenNLPAnnotatedText62.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract64 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = checkAbstract64.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = mergeAsOpenNLPAnnotatedText62.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = safeTsvText59.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = checkAbstract52.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = concatTextBag51.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = mergeAsOpenNLPAnnotatedText44.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = aggregateTextBag43.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = noLoopInPath0.outputSchema(schema71);
        noLoopInPath0.finish();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList75 = noLoopInPath0.getArgToFuncMapping();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigLogger12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(spanArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "href" + "'", str49, "href");
        org.junit.Assert.assertNull(pigProgressable63);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNull(funcSpecList75);
    }

    @Test
    public void test3136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3136");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi !", "title", "title");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader4 = new pignlproc.storage.UriStringLiteralNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = uriStringLiteralNTriplesLoader4.getSchema("", job6);
        uriUriNTriplesStorer3.checkSchema(resourceSchema7);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat9 = uriUriNTriplesStorer3.getOutputFormat();
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(outputFormat9);
    }

    @Test
    public void test3137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3137");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, 0L, (-1L));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3138");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (byte) 1, (int) (byte) -1, "http://.wikipedia.org/wiki/", "\"title\"");
        int int5 = annotation4.end;
        int int6 = annotation4.begin;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
    }

    @Test
    public void test3139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3139");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriStringLiteralNTriplesLoader2.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job8);
        uriStringLiteralNTriplesLoader2.setUDFContextSignature("http://\"http://.wikipedia.org/wiki/hi%21\"\n\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A");
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema9);
    }

    @Test
    public void test3140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3140");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.progress();
        boolean boolean10 = sentencesWithLink0.isAsynchronous();
        java.lang.reflect.Type type11 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.progress();
        java.lang.reflect.Type type13 = sentencesWithLink0.getReturnType();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertNotNull(type13);
    }

    @Test
    public void test3141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3141");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        countingAppendable15.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable30 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        java.lang.String str31 = annotatingMarkupParser0.getRedirect();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser0.getWikiLinkAnnotations();
        boolean boolean33 = annotatingMarkupParser0.noLinks();
        boolean boolean34 = annotatingMarkupParser0.noLinks();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test3142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3142");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.pig.Expression expression4 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = parsingWikipediaLoader1.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", job7);
        org.apache.hadoop.mapreduce.RecordReader recordReader9 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit10 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader9, pigSplit10);
        org.apache.hadoop.mapreduce.InputFormat inputFormat12 = parsingWikipediaLoader1.getInputFormat();
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(inputFormat12);
    }

    @Test
    public void test3143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3143");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 \"\"\"");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter2 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter2);
    }

    @Test
    public void test3144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3144");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 1, false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag2.setReporter(pigProgressable3);
        pignlproc.evaluation.ConcatTextBag concatTextBag6 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = concatTextBag6.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = concatTextBag6.getPigLogger();
        java.lang.Enum enum10 = null;
        concatTextBag6.warn("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", enum10);
        boolean boolean12 = concatTextBag6.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath13 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath13.outputSchema(schema22);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag25 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText26 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        safeTsvText26.setPigLogger(pigLogger27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = mergeAsOpenNLPAnnotatedText29.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract31 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = checkAbstract31.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = mergeAsOpenNLPAnnotatedText29.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = safeTsvText26.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = aggregateTextBag25.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = noLoopInPath13.outputSchema(schema34);
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum40 = null;
        checkAbstract38.warn("http://.wikipedia.org/wiki/hi%21", enum40);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        checkAbstract38.setPigLogger(pigLogger42);
        checkAbstract38.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText45 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        safeTsvText45.setPigLogger(pigLogger46);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = mergeAsOpenNLPAnnotatedText48.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract50.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText48.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = safeTsvText45.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract38.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath13.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = concatTextBag6.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = aggregateTextBag2.outputSchema(schema56);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger59 = null;
        aggregateTextBag2.setPigLogger(pigLogger59);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNull(pigLogger8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(pigProgressable49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test3145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3145");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        countingAppendable15.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        countingAppendable18.currentPosition = (byte) -1;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable22 = countingAppendable18.append((java.lang.CharSequence) "\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / % 22 title % 22 href \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
    }

    @Test
    public void test3146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3146");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel5 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        java.lang.String str7 = annotatingMarkupParser0.parse("http://.wikipedia.org/wiki/");
        java.lang.String str9 = annotatingMarkupParser0.parse("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22");
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(wikiModel5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://.wikipedia.org/wiki/\n" + "'", str7, "http://.wikipedia.org/wiki/\n");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22\n" + "'", str9, "http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22\n");
        org.junit.Assert.assertNotNull(annotationList10);
    }

    @Test
    public void test3147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3147");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText2 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        safeTsvText2.setPigLogger(pigLogger3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = mergeAsOpenNLPAnnotatedText5.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = checkAbstract7.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = mergeAsOpenNLPAnnotatedText5.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = safeTsvText2.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = noLoopInPath1.outputSchema(schema10);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag13 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = aggregateTextBag13.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath1.outputSchema(schema22);
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum28 = null;
        checkAbstract26.warn("http://.wikipedia.org/wiki/hi%21", enum28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        checkAbstract26.setPigLogger(pigLogger30);
        checkAbstract26.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract26.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath1.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = sentencesWithLink0.outputSchema(schema44);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        sentencesWithLink0.setPigLogger(pigLogger46);
        sentencesWithLink0.finish();
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test3148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3148");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        java.lang.reflect.Type type25 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = sentencesWithLink0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList27 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = null;
        sentencesWithLink0.setReporter(pigProgressable28);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(type25);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNull(funcSpecList27);
    }

    @Test
    public void test3149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3149");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"\"hi!\"\" \"", "\" http : // . wikipedia . org / wiki / hi % 21 \"", "http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22");
        uriUriNTriplesLoader3.setUDFContextSignature("\" hi ! \"");
        org.apache.pig.LoadCaster loadCaster6 = uriUriNTriplesLoader3.getLoadCaster();
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader3.setLocation("hi !\n\n", job10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(loadCaster6);
    }

    @Test
    public void test3150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3150");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"title\"", "hi !\n\n", "http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        org.apache.hadoop.mapreduce.RecordReader recordReader4 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit5 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader4, pigSplit5);
    }

    @Test
    public void test3151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3151");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        pignlproc.evaluation.NoLoopInPath noLoopInPath8 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = noLoopInPath8.outputSchema(schema17);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag22 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath23 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath23.outputSchema(schema32);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag35 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = aggregateTextBag35.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath23.outputSchema(schema44);
        pignlproc.evaluation.CheckAbstract checkAbstract48 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum50 = null;
        checkAbstract48.warn("http://.wikipedia.org/wiki/hi%21", enum50);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger52 = null;
        checkAbstract48.setPigLogger(pigLogger52);
        checkAbstract48.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText55 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        safeTsvText55.setPigLogger(pigLogger56);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText58 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable59 = mergeAsOpenNLPAnnotatedText58.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract60 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract60.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = mergeAsOpenNLPAnnotatedText58.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = safeTsvText55.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract48.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = noLoopInPath23.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = aggregateTextBag22.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = noLoopInPath8.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema68);
        java.lang.reflect.Type type70 = mergeAsOpenNLPAnnotatedText0.getReturnType();
        org.apache.pig.data.Tuple tuple71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str72 = mergeAsOpenNLPAnnotatedText0.exec(tuple71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(pigProgressable59);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(type70);
    }

    @Test
    public void test3152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3152");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("titlehref");
    }

    @Test
    public void test3153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3153");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\"\"\"opennlp / en - sent . bin\"\" \"", false);
    }

    @Test
    public void test3154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3154");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        boolean boolean7 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        java.lang.reflect.Type type8 = mergeAsOpenNLPAnnotatedText0.getReturnType();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray15 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList16 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList16, spanArray15);
        java.lang.String str18 = mergeAsOpenNLPAnnotatedText13.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList16);
        java.lang.String str19 = mergeAsOpenNLPAnnotatedText11.merge("http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin", (java.util.List<opennlp.tools.util.Span>) spanList16);
        java.lang.String str20 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList16);
        boolean boolean21 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        boolean boolean22 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNotNull(spanArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "href" + "'", str18, "href");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin" + "'", str19, "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "hi !" + "'", str20, "hi !");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test3155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3155");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521");
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser0.getParagraphAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(wikiModel6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(annotationList8);
        org.junit.Assert.assertNotNull(annotationList9);
    }

    @Test
    public void test3156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3156");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\"\"" + "'", str1, "\"\"\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\"\"");
    }

    @Test
    public void test3157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3157");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://\"title\".wikipedia.org/wiki/%22hi%21%22", true);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.String str4 = concatTextBag2.exec(tuple3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test3158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3158");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        countingAppendable15.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable22 = countingAppendable18.append((java.lang.CharSequence) "\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\" \"", 97, 35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
    }

    @Test
    public void test3159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3159");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", false);
        java.lang.reflect.Type type3 = concatTextBag2.getReturnType();
        concatTextBag2.progress();
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.String str6 = concatTextBag2.exec(tuple5);
        org.junit.Assert.assertNotNull(type3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
    }

    @Test
    public void test3160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3160");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.commons.logging.Log log27 = noLoopInPath0.getLogger();
        noLoopInPath0.progress();
        noLoopInPath0.finish();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(log27);
    }

    @Test
    public void test3161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3161");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\" title \"");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = concatTextBag1.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = concatTextBag1.getArgToFuncMapping();
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNull(funcSpecList3);
    }

    @Test
    public void test3162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3162");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        sentencesWithLink0.progress();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink4 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        sentencesWithLink4.setPigLogger(pigLogger5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = sentencesWithLink4.getReporter();
        org.apache.commons.logging.Log log8 = sentencesWithLink4.getLogger();
        java.lang.reflect.Type type9 = sentencesWithLink4.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink10 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        sentencesWithLink10.setPigLogger(pigLogger11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = sentencesWithLink10.getReporter();
        java.lang.reflect.Type type14 = sentencesWithLink10.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        safeTsvText15.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink19 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath20 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText21 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        safeTsvText21.setPigLogger(pigLogger22);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = safeTsvText21.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath20.outputSchema(schema29);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag32 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = aggregateTextBag32.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath20.outputSchema(schema41);
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum47 = null;
        checkAbstract45.warn("http://.wikipedia.org/wiki/hi%21", enum47);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger49 = null;
        checkAbstract45.setPigLogger(pigLogger49);
        checkAbstract45.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText52 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger53 = null;
        safeTsvText52.setPigLogger(pigLogger53);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText55 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable56 = mergeAsOpenNLPAnnotatedText55.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract57 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = checkAbstract57.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = mergeAsOpenNLPAnnotatedText55.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = safeTsvText52.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract45.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = noLoopInPath20.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = sentencesWithLink19.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = safeTsvText15.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = sentencesWithLink10.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = sentencesWithLink4.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = sentencesWithLink0.outputSchema(schema67);
        boolean boolean69 = sentencesWithLink0.isAsynchronous();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(pigProgressable56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test3163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3163");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.setStoreLocation("hi !\n\nhref", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3164");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"http://hi!.wikipedia.org/wiki/%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3165");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str5 = annotation4.label;
        int int6 = annotation4.end;
        int int7 = annotation4.end;
        java.lang.String str8 = annotation4.label;
        int int9 = annotation4.end;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "title" + "'", str5, "title");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "title" + "'", str8, "title");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    public void test3166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3166");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation(10, (int) 'a', "http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", "hi !\n\n");
        int int5 = annotation4.begin;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
    }

    @Test
    public void test3167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3167");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"");
    }

    @Test
    public void test3168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3168");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\"hi ! \"", false);
    }

    @Test
    public void test3169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3169");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader8, pigSplit9);
        org.apache.pig.LoadCaster loadCaster11 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceStatistics resourceStatistics14 = parsingWikipediaLoader1.getStatistics("", job13);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(loadCaster11);
        org.junit.Assert.assertNull(resourceStatistics14);
    }

    @Test
    public void test3170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3170");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\"", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http :%20/%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20%22%22%22%22%22%22%22%22%20%22%22%22%22%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3171");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("hi !\n\n", "http://.wikipedia.org/wiki/hi%21", "");
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3172");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str2 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.Annotation annotation7 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation12 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int13 = annotation12.end;
        int int14 = annotation12.begin;
        pignlproc.markup.Annotation[] annotationArray15 = new pignlproc.markup.Annotation[] { annotation7, annotation12 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList16 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList16, annotationArray15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser29.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser29.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList16, (java.lang.Appendable) countingAppendable27, (info.bliki.wiki.model.IWikiModel) wikiModel32);
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.lang.String str36 = annotatingMarkupParser0.parse("\"hi!\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser37 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList38 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList41 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser37.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser44.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList46 = annotatingMarkupParser44.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser44.getParagraphAnnotations();
        java.util.List<java.lang.String> strList48 = annotatingMarkupParser44.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList49 = annotatingMarkupParser44.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser50.getHeaderAnnotations();
        java.util.List<java.lang.String> strList52 = annotatingMarkupParser50.getParagraphs();
        java.lang.Appendable appendable53 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable54 = annotatingMarkupParser50.new CountingAppendable(appendable53);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable55 = annotatingMarkupParser44.new CountingAppendable((java.lang.Appendable) countingAppendable54);
        countingAppendable54.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList59 = annotatingMarkupParser58.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel61 = annotatingMarkupParser58.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList62 = annotatingMarkupParser58.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList63 = annotatingMarkupParser58.getParagraphAnnotations();
        boolean boolean64 = annotatingMarkupParser58.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel66 = annotatingMarkupParser58.makeWikiModel("\" title \"");
        annotatingMarkupParser37.nodesToText(annotationList43, (java.lang.Appendable) countingAppendable54, (info.bliki.wiki.model.IWikiModel) wikiModel66);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable68 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable54);
        countingAppendable68.currentPosition = (short) 10;
        int int71 = countingAppendable68.currentPosition;
        countingAppendable68.currentPosition = (short) 0;
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"hi!\"\n" + "'", str36, "\"hi!\"\n");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(annotationList46);
        org.junit.Assert.assertNotNull(annotationList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(annotationList49);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(annotationList59);
        org.junit.Assert.assertNotNull(wikiModel61);
        org.junit.Assert.assertNotNull(annotationList62);
        org.junit.Assert.assertNotNull(annotationList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wikiModel66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
    }

    @Test
    public void test3173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3173");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.lang.Enum enum3 = null;
        checkAbstract1.warn("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = checkAbstract1.getReporter();
        checkAbstract1.finish();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList7 = checkAbstract1.getArgToFuncMapping();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNull(funcSpecList7);
    }

    @Test
    public void test3174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3174");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        java.lang.String str13 = annotatingMarkupParser0.parse("hi!\n");
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser16.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser16.getHeaderAnnotations();
        java.lang.String str20 = annotatingMarkupParser16.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser21.getHeaders();
        java.lang.Appendable appendable24 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser21.new CountingAppendable(appendable24);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser16.new CountingAppendable((java.lang.Appendable) countingAppendable25);
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser16.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel29 = annotatingMarkupParser16.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser30.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel34 = annotatingMarkupParser30.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel36 = annotatingMarkupParser30.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList37 = annotatingMarkupParser30.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList40 = annotatingMarkupParser38.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser38.getParagraphAnnotations();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser38.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = annotatingMarkupParser38.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList45 = annotatingMarkupParser44.getHeaderAnnotations();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser44.getParagraphs();
        java.lang.Appendable appendable47 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser44.new CountingAppendable(appendable47);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser50.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser50.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel54 = annotatingMarkupParser50.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel56 = annotatingMarkupParser50.makeWikiModel("hi!\n");
        annotatingMarkupParser16.nodesToText(annotationList37, (java.lang.Appendable) countingAppendable49, (info.bliki.wiki.model.IWikiModel) wikiModel56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        countingAppendable49.currentPosition = 0;
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!\n\n" + "'", str13, "hi!\n\n");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(wikiModel29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNotNull(wikiModel34);
        org.junit.Assert.assertNotNull(wikiModel36);
        org.junit.Assert.assertNotNull(annotationList37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(annotationList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(annotationList43);
        org.junit.Assert.assertNotNull(annotationList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNotNull(wikiModel54);
        org.junit.Assert.assertNotNull(wikiModel56);
    }

    @Test
    public void test3175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3175");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("http://http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3176");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("hi !");
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("\" hi ! \"");
        org.apache.hadoop.mapreduce.Job job8 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.setStoreLocation("\"\"\"opennlp / en - sent . bin\"\"\"", job8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test3177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3177");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.String str3 = concatTextBag1.exec(tuple2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = concatTextBag1.getReporter();
        org.apache.commons.logging.Log log5 = concatTextBag1.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = concatTextBag1.getReporter();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNull(pigProgressable6);
    }

    @Test
    public void test3178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3178");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.commons.logging.Log log7 = sentencesWithLink0.getLogger();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(log7);
    }

    @Test
    public void test3179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3179");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str15 = annotatingMarkupParser0.parse("hi !\n");
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser0.getParagraphs();
        java.lang.String str18 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !\n\n" + "'", str15, "hi !\n\n");
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test3180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3180");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        boolean boolean3 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNull(pigLogger7);
    }

    @Test
    public void test3181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3181");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"title\"", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriStringLiteralNTriplesLoader2.getSchema("titlehref", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriStringLiteralNTriplesLoader2.getSchema("opennlp/en-sent.bin", job11);
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema9);
        org.junit.Assert.assertNotNull(resourceSchema12);
    }

    @Test
    public void test3182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3182");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = parsingWikipediaLoader1.getStatistics("\"hi!\"", job7);
        org.apache.pig.LoadCaster loadCaster9 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("\"\"\" hi ! \"\" \"");
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader1.getSchema("http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22", job13);
        org.apache.pig.LoadCaster loadCaster15 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job17 = null;
        // The following exception was thrown during execution in test generation
        try {
            parsingWikipediaLoader1.setLocation("http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n.wikipedia.org/wiki/%22%22", job17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(resourceStatistics8);
        org.junit.Assert.assertNotNull(loadCaster9);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNotNull(loadCaster15);
    }

    @Test
    public void test3183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3183");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        org.apache.commons.logging.Log log7 = sentencesWithLink0.getLogger();
        org.apache.commons.logging.Log log8 = sentencesWithLink0.getLogger();
        org.apache.commons.logging.Log log9 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type10 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = null;
        sentencesWithLink0.setReporter(pigProgressable11);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(log9);
        org.junit.Assert.assertNotNull(type10);
    }

    @Test
    public void test3184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3184");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("http://hi!\n.wikipedia.org/wiki/%22_title_%22", enum3);
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(funcSpecList1);
    }

    @Test
    public void test3185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3185");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        noLoopInPath0.setPigLogger(pigLogger1);
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath3.progress();
        pignlproc.evaluation.NoLoopInPath noLoopInPath5 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText6 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        safeTsvText6.setPigLogger(pigLogger7);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText9 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = mergeAsOpenNLPAnnotatedText9.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = checkAbstract11.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = mergeAsOpenNLPAnnotatedText9.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = safeTsvText6.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = noLoopInPath5.outputSchema(schema14);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag17 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText18 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        safeTsvText18.setPigLogger(pigLogger19);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable22 = mergeAsOpenNLPAnnotatedText21.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract23.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = mergeAsOpenNLPAnnotatedText21.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = safeTsvText18.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = aggregateTextBag17.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = noLoopInPath5.outputSchema(schema26);
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum32 = null;
        checkAbstract30.warn("http://.wikipedia.org/wiki/hi%21", enum32);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        checkAbstract30.setPigLogger(pigLogger34);
        checkAbstract30.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText37 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = null;
        safeTsvText37.setPigLogger(pigLogger38);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText40 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = mergeAsOpenNLPAnnotatedText40.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract42 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract42.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = mergeAsOpenNLPAnnotatedText40.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = safeTsvText37.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract30.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath5.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = noLoopInPath3.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = noLoopInPath0.outputSchema(schema49);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable51 = null;
        noLoopInPath0.setReporter(pigProgressable51);
        java.lang.reflect.Type type53 = noLoopInPath0.getReturnType();
        noLoopInPath0.progress();
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(pigProgressable22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(pigProgressable41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(type53);
    }

    @Test
    public void test3186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3186");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        checkAbstract0.setReporter(pigProgressable5);
        boolean boolean7 = checkAbstract0.isAsynchronous();
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.Boolean boolean9 = checkAbstract0.exec(tuple8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        checkAbstract0.setReporter(pigProgressable10);
        boolean boolean12 = checkAbstract0.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test3187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3187");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"\n\n");
    }

    @Test
    public void test3188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3188");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        java.lang.String[] strArray7 = parsingWikipediaLoader1.getPartitionKeys("\"title\"\n", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job12);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNull(strArray7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(resourceSchema13);
    }

    @Test
    public void test3189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3189");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = null;
        sentencesWithLink0.setReporter(pigProgressable24);
        boolean boolean26 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigLogger23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(pigLogger27);
    }

    @Test
    public void test3190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3190");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("http://http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3191");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://\"title\"\n.wikipedia.org/wiki/", "hi !");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\"", job7);
        java.lang.String[] strArray10 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        java.lang.String str14 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList11, "");
        java.lang.String str16 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList11, "http://.wikipedia.org/wiki/hi%21");
        java.lang.String str18 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList11, "opennlp/en-sent.bin");
        java.lang.String str20 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList11, "http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        java.lang.String str22 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList11, "opennlp/en-sent.bin");
        java.lang.String str24 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList11, "\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/hrefwikiobject\"\"\"\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"\"\"\"wikiobject\"\"hi!\"\" wikiobject wikiobjectopennlp/en-sent.binwikiobjecthttp://hi! .wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"\"http://.wikipedia.org/wiki/hi%21\"\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"\"opennlp / en - sent . bin\"\"wikiobject\"\"\"\"\"");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList25 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) "\"http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21\"", (java.lang.Object) strList11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.String cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "opennlp/en-sent.bin" + "'", str14, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "opennlp/en-sent.bin" + "'", str16, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "opennlp/en-sent.bin" + "'", str18, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "opennlp/en-sent.bin" + "'", str20, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "opennlp/en-sent.bin" + "'", str22, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "opennlp/en-sent.bin" + "'", str24, "opennlp/en-sent.bin");
    }

    @Test
    public void test3192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3192");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum25 = null;
        sentencesWithLink0.warn("title", enum25);
        sentencesWithLink0.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText28 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum30 = null;
        safeTsvText28.warn("opennlp/en-sent.bin", enum30);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList32 = safeTsvText28.getArgToFuncMapping();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag34 = new pignlproc.evaluation.AggregateTextBag((int) (short) 10);
        pignlproc.evaluation.ConcatTextBag concatTextBag36 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract37 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum39 = null;
        checkAbstract37.warn("http://.wikipedia.org/wiki/hi%21", enum39);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        checkAbstract37.setPigLogger(pigLogger41);
        checkAbstract37.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText44 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        safeTsvText44.setPigLogger(pigLogger45);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText47 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable48 = mergeAsOpenNLPAnnotatedText47.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract49 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = checkAbstract49.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = mergeAsOpenNLPAnnotatedText47.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = safeTsvText44.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract37.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = concatTextBag36.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = aggregateTextBag34.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = safeTsvText28.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = sentencesWithLink0.outputSchema(schema54);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable59 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigLogger23);
        org.junit.Assert.assertNull(funcSpecList32);
        org.junit.Assert.assertNull(pigProgressable48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(pigProgressable59);
    }

    @Test
    public void test3193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3193");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"href");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3194");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray9 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList10 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList10, spanArray9);
        java.lang.String str12 = mergeAsOpenNLPAnnotatedText7.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        mergeAsOpenNLPAnnotatedText7.setPigLogger(pigLogger13);
        boolean boolean15 = mergeAsOpenNLPAnnotatedText7.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum18 = null;
        checkAbstract16.warn("http://.wikipedia.org/wiki/hi%21", enum18);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = null;
        checkAbstract16.setReporter(pigProgressable20);
        java.lang.reflect.Type type22 = checkAbstract16.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath23 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = noLoopInPath23.outputSchema(schema32);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag35 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = aggregateTextBag35.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath23.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract16.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema44);
        pignlproc.evaluation.CheckAbstract checkAbstract51 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum53 = null;
        checkAbstract51.warn("http://.wikipedia.org/wiki/hi%21", enum53);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger55 = null;
        checkAbstract51.setPigLogger(pigLogger55);
        checkAbstract51.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText58 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger59 = null;
        safeTsvText58.setPigLogger(pigLogger59);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText61 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable62 = mergeAsOpenNLPAnnotatedText61.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract63 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = checkAbstract63.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = mergeAsOpenNLPAnnotatedText61.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = safeTsvText58.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract51.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema68);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger70 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger70);
        java.lang.Enum enum73 = null;
        mergeAsOpenNLPAnnotatedText0.warn("", enum73);
        mergeAsOpenNLPAnnotatedText0.progress();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(spanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi !" + "'", str12, "hi !");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(type22);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNull(pigProgressable62);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
    }

    @Test
    public void test3195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3195");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = noLoopInPath0.getPigLogger();
        java.lang.Enum enum14 = null;
        noLoopInPath0.warn("hi !\n\n", enum14);
        java.lang.reflect.Type type16 = noLoopInPath0.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink17 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath18 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText19 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger20 = null;
        safeTsvText19.setPigLogger(pigLogger20);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText22 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable23 = mergeAsOpenNLPAnnotatedText22.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract24.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText22.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = safeTsvText19.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = noLoopInPath18.outputSchema(schema27);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag30 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText31 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        safeTsvText31.setPigLogger(pigLogger32);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText34 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable35 = mergeAsOpenNLPAnnotatedText34.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = checkAbstract36.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = mergeAsOpenNLPAnnotatedText34.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = safeTsvText31.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = aggregateTextBag30.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = noLoopInPath18.outputSchema(schema39);
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum45 = null;
        checkAbstract43.warn("http://.wikipedia.org/wiki/hi%21", enum45);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        checkAbstract43.setPigLogger(pigLogger47);
        checkAbstract43.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText50 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        safeTsvText50.setPigLogger(pigLogger51);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText53 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable54 = mergeAsOpenNLPAnnotatedText53.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract55 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract55.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = mergeAsOpenNLPAnnotatedText53.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = safeTsvText50.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = checkAbstract43.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = noLoopInPath18.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = sentencesWithLink17.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = noLoopInPath0.outputSchema(schema62);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger64 = noLoopInPath0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigLogger12);
        org.junit.Assert.assertNotNull(type16);
        org.junit.Assert.assertNull(pigProgressable23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(pigProgressable35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNull(pigProgressable54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNull(pigLogger64);
    }

    @Test
    public void test3196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3196");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi!", "\"opennlp / en - sent . bin\"\n", "http : // \"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\" . wikipedia . org / wiki / href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.setStoreLocation("http://.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A%0A.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3197");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader0 = new pignlproc.storage.ParsingWikipediaLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceSchema resourceSchema3 = parsingWikipediaLoader0.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job2);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple4 = parsingWikipediaLoader0.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema3);
    }

    @Test
    public void test3198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3198");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521");
        uriStringLiteralNTriplesStorer1.setStoreFuncUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href");
    }

    @Test
    public void test3199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3199");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        countingAppendable15.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable18 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        info.bliki.wiki.model.WikiModel wikiModel31 = annotatingMarkupParser19.makeWikiModel("\"hi!\"\n");
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser19.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser33 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList34 = annotatingMarkupParser33.getHeaders();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser33.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser33.getHeaderAnnotations();
        java.lang.String str37 = annotatingMarkupParser33.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser38.getHeaders();
        java.lang.Appendable appendable41 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable42 = annotatingMarkupParser38.new CountingAppendable(appendable41);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable43 = annotatingMarkupParser33.new CountingAppendable((java.lang.Appendable) countingAppendable42);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser44.getHeaders();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser44.getHeaders();
        java.lang.Appendable appendable47 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser44.new CountingAppendable(appendable47);
        countingAppendable48.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable51 = annotatingMarkupParser33.new CountingAppendable((java.lang.Appendable) countingAppendable48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser52 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser52.getHeaders();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser52.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList55 = annotatingMarkupParser52.getHeaderAnnotations();
        java.lang.String str56 = annotatingMarkupParser52.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser57 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList58 = annotatingMarkupParser57.getHeaders();
        java.util.List<java.lang.String> strList59 = annotatingMarkupParser57.getHeaders();
        java.lang.Appendable appendable60 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable61 = annotatingMarkupParser57.new CountingAppendable(appendable60);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable62 = annotatingMarkupParser52.new CountingAppendable((java.lang.Appendable) countingAppendable61);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable63 = annotatingMarkupParser33.new CountingAppendable((java.lang.Appendable) countingAppendable61);
        countingAppendable61.currentPosition = 0;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser66 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser66.getHeaders();
        java.util.List<java.lang.String> strList68 = annotatingMarkupParser66.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList69 = annotatingMarkupParser66.getHeaderAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel71 = annotatingMarkupParser66.makeWikiModel("wikiobject");
        annotatingMarkupParser0.nodesToText(annotationList32, (java.lang.Appendable) countingAppendable61, (info.bliki.wiki.model.IWikiModel) wikiModel71);
        java.util.List<pignlproc.markup.Annotation> annotationList73 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.lang.String str74 = annotatingMarkupParser0.getRedirect();
        java.util.List<pignlproc.markup.Annotation> annotationList75 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList76 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(wikiModel31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(annotationList55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strList58);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(annotationList69);
        org.junit.Assert.assertNotNull(wikiModel71);
        org.junit.Assert.assertNotNull(annotationList73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(annotationList75);
        org.junit.Assert.assertNotNull(annotationList76);
    }

    @Test
    public void test3200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3200");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "\"\"\"\"\"\"\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"\"\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"\"\"\"\"http://http:/.wikipedia.org/wiki/hi%2521%20.wikipedia.org/wiki/%2522title%2522href%22%22%22%22%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3201");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        java.lang.String[] strArray3 = uriUriNTriplesLoader0.getPartitionKeys("title", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader0.getSchema("http://.wikipedia.org/wiki/hi%21", job5);
        org.apache.hadoop.mapreduce.RecordReader recordReader7 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit8 = null;
        uriUriNTriplesLoader0.prepareToRead(recordReader7, pigSplit8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        java.lang.String[] strArray12 = uriUriNTriplesLoader0.getPartitionKeys("", job11);
        org.apache.pig.LoadCaster loadCaster13 = uriUriNTriplesLoader0.getLoadCaster();
        org.apache.hadoop.mapreduce.InputFormat inputFormat14 = uriUriNTriplesLoader0.getInputFormat();
        org.junit.Assert.assertNull(strArray3);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(strArray12);
        org.junit.Assert.assertNotNull(loadCaster13);
        org.junit.Assert.assertNotNull(inputFormat14);
    }

    @Test
    public void test3202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3202");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        sentencesWithLink0.setPigLogger(pigLogger6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigLogger8);
    }

    @Test
    public void test3203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3203");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) 'a', true);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = aggregateTextBag2.getReporter();
        org.junit.Assert.assertNull(pigProgressable3);
    }

    @Test
    public void test3204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3204");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.util.List<pignlproc.markup.Annotation> annotationList42 = annotatingMarkupParser0.getWikiLinkAnnotations();
        boolean boolean43 = annotatingMarkupParser0.noLinks();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertNotNull(annotationList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
    }

    @Test
    public void test3205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3205");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\" http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / % 22 title % 22 href \"");
    }

    @Test
    public void test3206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3206");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21\n", "http://http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22.wikipedia.org/wiki/wikiobject");
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3207");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        parsingWikipediaLoader1.setUDFContextSignature("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        org.apache.hadoop.mapreduce.Job job5 = null;
        java.lang.String[] strArray6 = parsingWikipediaLoader1.getPartitionKeys("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"", job5);
        org.apache.pig.LoadCaster loadCaster7 = parsingWikipediaLoader1.getLoadCaster();
        org.junit.Assert.assertNull(strArray6);
        org.junit.Assert.assertNotNull(loadCaster7);
    }

    @Test
    public void test3208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3208");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) 'a', (int) '4', "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", "\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"");
        java.lang.String str5 = annotation4.label;
        java.lang.String str6 = annotation4.label;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"" + "'", str5, "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"" + "'", str6, "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"");
    }

    @Test
    public void test3209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3209");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("title", job4);
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader6, pigSplit7);
        org.junit.Assert.assertNotNull(resourceSchema5);
    }

    @Test
    public void test3210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3210");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter2 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter2);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.pig.data.Tuple tuple5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test3211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3211");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"\"opennlp / en - sent . bin\"\"\"");
        org.apache.hadoop.fs.Path path3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str4 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("\"\"", path3);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3212");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int5 = annotation4.end;
        int int6 = annotation4.begin;
        java.lang.String str7 = annotation4.value;
        java.lang.String str8 = annotation4.label;
        int int9 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "http://.wikipedia.org/wiki/hi%21" + "'", str7, "http://.wikipedia.org/wiki/hi%21");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://.wikipedia.org/wiki/hi%21" + "'", str8, "http://.wikipedia.org/wiki/hi%21");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test3213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3213");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = checkAbstract0.getReporter();
        org.apache.commons.logging.Log log4 = checkAbstract0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        checkAbstract0.setPigLogger(pigLogger5);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
    }

    @Test
    public void test3214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3214");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n");
        org.apache.hadoop.mapreduce.Job job4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("http://hi!\n.wikipedia.org/wiki/%22_title_%22\n", job4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3215");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceStatistics resourceStatistics9 = uriUriNTriplesLoader3.getStatistics("opennlp/en-sent.bin", job8);
        org.apache.pig.Expression expression10 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceStatistics resourceStatistics14 = uriUriNTriplesLoader3.getStatistics("\"\"\"hi!\"\" \"", job13);
        org.apache.hadoop.mapreduce.InputFormat inputFormat15 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.pig.LoadCaster loadCaster16 = uriUriNTriplesLoader3.getLoadCaster();
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(resourceStatistics9);
        org.junit.Assert.assertNull(resourceStatistics14);
        org.junit.Assert.assertNotNull(inputFormat15);
        org.junit.Assert.assertNotNull(loadCaster16);
    }

    @Test
    public void test3216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3216");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = concatTextBag1.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = concatTextBag1.getArgToFuncMapping();
        org.apache.commons.logging.Log log4 = concatTextBag1.getLogger();
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNotNull(log4);
    }

    @Test
    public void test3217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3217");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"\"\"hi!\"\" \"\n\n");
    }

    @Test
    public void test3218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3218");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel5 = annotatingMarkupParser0.makeWikiModel("\"hi! \"");
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(wikiModel5);
        org.junit.Assert.assertNotNull(annotationList6);
    }

    @Test
    public void test3219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3219");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation(100, (int) (byte) -1, "", "title");
        java.lang.String str5 = annotation4.value;
        int int6 = annotation4.begin;
        java.lang.String str7 = annotation4.label;
        int int8 = annotation4.begin;
        int int9 = annotation4.end;
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "title" + "'", str5, "title");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 100 + "'", int6 == 100);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 100 + "'", int8 == 100);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test3220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3220");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.Boolean boolean9 = checkAbstract0.exec(tuple8);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = checkAbstract0.getArgToFuncMapping();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList11 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = checkAbstract0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList13 = checkAbstract0.getArgToFuncMapping();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertNull(funcSpecList11);
        org.junit.Assert.assertNull(pigProgressable12);
        org.junit.Assert.assertNull(funcSpecList13);
    }

    @Test
    public void test3221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3221");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", "hi !");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceStatistics resourceStatistics5 = uriStringLiteralNTriplesLoader2.getStatistics("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("http://.wikipedia.org/wiki/\n", job8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics5);
        org.junit.Assert.assertNotNull(inputFormat6);
    }

    @Test
    public void test3222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3222");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable1 = mergeAsOpenNLPAnnotatedText0.getReporter();
        java.lang.Enum enum3 = null;
        mergeAsOpenNLPAnnotatedText0.warn("title", enum3);
        org.apache.commons.logging.Log log5 = mergeAsOpenNLPAnnotatedText0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = mergeAsOpenNLPAnnotatedText0.getReporter();
        org.apache.pig.data.Tuple tuple7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = mergeAsOpenNLPAnnotatedText0.exec(tuple7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable1);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNull(pigProgressable6);
    }

    @Test
    public void test3223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3223");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job7);
        org.apache.pig.LoadCaster loadCaster9 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceStatistics resourceStatistics12 = parsingWikipediaLoader1.getStatistics("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = parsingWikipediaLoader1.getSchema("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"", job14);
        org.apache.pig.Expression expression16 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression16);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNotNull(loadCaster9);
        org.junit.Assert.assertNull(resourceStatistics12);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test3224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3224");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n\n", "http://.wikipedia.org/wiki/", "http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22");
        org.apache.hadoop.fs.Path path5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = uriUriNTriplesStorer3.relToAbsPathForStoreLocation("http://http://http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22.wikipedia.org/wiki/%22hi%21%22", path5);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://http://http://hi !?.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22.wikipedia.org/wiki/%22hi%21%22 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3225");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 100, (int) (byte) 100, "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
    }

    @Test
    public void test3226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3226");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        boolean boolean3 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test3227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3227");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNull(pigLogger2);
    }

    @Test
    public void test3228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3228");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum25 = null;
        sentencesWithLink0.warn("title", enum25);
        sentencesWithLink0.finish();
        sentencesWithLink0.progress();
        java.lang.reflect.Type type29 = sentencesWithLink0.getReturnType();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigLogger23);
        org.junit.Assert.assertNotNull(type29);
    }

    @Test
    public void test3229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3229");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray27 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList28 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList28, spanArray27);
        java.lang.String str30 = mergeAsOpenNLPAnnotatedText25.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray34 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList35 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList35, spanArray34);
        java.lang.String str37 = mergeAsOpenNLPAnnotatedText32.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList35);
        java.lang.String str38 = mergeAsOpenNLPAnnotatedText25.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList35);
        pignlproc.evaluation.SafeTsvText safeTsvText39 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type40 = safeTsvText39.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText39.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = sentencesWithLink0.outputSchema(schema45);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable47 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger48 = null;
        sentencesWithLink0.setPigLogger(pigLogger48);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(spanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi !" + "'", str30, "hi !");
        org.junit.Assert.assertNotNull(spanArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "href" + "'", str37, "href");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi !" + "'", str38, "hi !");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(pigProgressable47);
    }

    @Test
    public void test3230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3230");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = null;
        mergeAsOpenNLPAnnotatedText1.setReporter(pigProgressable2);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink4 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        sentencesWithLink4.setPigLogger(pigLogger5);
        boolean boolean7 = sentencesWithLink4.isAsynchronous();
        pignlproc.evaluation.ConcatTextBag concatTextBag9 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple10 = null;
        java.lang.String str11 = concatTextBag9.exec(tuple10);
        pignlproc.evaluation.NoLoopInPath noLoopInPath12 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = noLoopInPath12.outputSchema(schema21);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag24 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = aggregateTextBag24.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath12.outputSchema(schema33);
        pignlproc.evaluation.CheckAbstract checkAbstract37 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum39 = null;
        checkAbstract37.warn("http://.wikipedia.org/wiki/hi%21", enum39);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger41 = null;
        checkAbstract37.setPigLogger(pigLogger41);
        checkAbstract37.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText44 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        safeTsvText44.setPigLogger(pigLogger45);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText47 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable48 = mergeAsOpenNLPAnnotatedText47.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract49 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = checkAbstract49.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = mergeAsOpenNLPAnnotatedText47.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = safeTsvText44.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract37.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = noLoopInPath12.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = concatTextBag9.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = sentencesWithLink4.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema57);
        boolean boolean59 = mergeAsOpenNLPAnnotatedText1.isAsynchronous();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNull(pigProgressable48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test3231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3231");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\"", false);
    }

    @Test
    public void test3232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3232");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((-1));
        boolean boolean2 = aggregateTextBag1.isAsynchronous();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test3233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3233");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum4 = null;
        checkAbstract2.warn("http://.wikipedia.org/wiki/hi%21", enum4);
        java.lang.Enum enum7 = null;
        checkAbstract2.warn("hi !", enum7);
        pignlproc.evaluation.NoLoopInPath noLoopInPath9 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = noLoopInPath9.outputSchema(schema18);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag21 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        safeTsvText22.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText22.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = aggregateTextBag21.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = noLoopInPath9.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract2.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = sentencesWithLink0.outputSchema(schema34);
        java.lang.Enum enum37 = null;
        sentencesWithLink0.warn("http://\"title\"\n.wikipedia.org/wiki/\n", enum37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText40 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        java.lang.reflect.Type type41 = mergeAsOpenNLPAnnotatedText40.getReturnType();
        boolean boolean42 = mergeAsOpenNLPAnnotatedText40.isAsynchronous();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag44 = new pignlproc.evaluation.AggregateTextBag((int) (short) 10);
        pignlproc.evaluation.ConcatTextBag concatTextBag46 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum49 = null;
        checkAbstract47.warn("http://.wikipedia.org/wiki/hi%21", enum49);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        checkAbstract47.setPigLogger(pigLogger51);
        checkAbstract47.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText54 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger55 = null;
        safeTsvText54.setPigLogger(pigLogger55);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText57 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable58 = mergeAsOpenNLPAnnotatedText57.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract59 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = checkAbstract59.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = mergeAsOpenNLPAnnotatedText57.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = safeTsvText54.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = checkAbstract47.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = concatTextBag46.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = aggregateTextBag44.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = mergeAsOpenNLPAnnotatedText40.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = sentencesWithLink0.outputSchema(schema67);
        org.apache.pig.data.Tuple tuple69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.DataBag dataBag70 = sentencesWithLink0.exec(tuple69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(type41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(pigProgressable58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
    }

    @Test
    public void test3234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3234");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("\"\"\"opennlp / en - sent . bin\"\"\"");
    }

    @Test
    public void test3235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3235");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.commons.logging.Log log4 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        java.lang.Enum enum7 = null;
        sentencesWithLink0.warn("\"title\"\n", enum7);
        java.lang.reflect.Type type9 = sentencesWithLink0.getReturnType();
        java.lang.Enum enum11 = null;
        sentencesWithLink0.warn("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin", enum11);
        org.apache.commons.logging.Log log13 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(log13);
    }

    @Test
    public void test3236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3236");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.String str3 = concatTextBag1.exec(tuple2);
        pignlproc.evaluation.NoLoopInPath noLoopInPath4 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText5 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        safeTsvText5.setPigLogger(pigLogger6);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText8 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = mergeAsOpenNLPAnnotatedText8.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract10 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = checkAbstract10.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = mergeAsOpenNLPAnnotatedText8.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = safeTsvText5.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = noLoopInPath4.outputSchema(schema13);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag16 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = aggregateTextBag16.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = noLoopInPath4.outputSchema(schema25);
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum31 = null;
        checkAbstract29.warn("http://.wikipedia.org/wiki/hi%21", enum31);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = null;
        checkAbstract29.setPigLogger(pigLogger33);
        checkAbstract29.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText36 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger37 = null;
        safeTsvText36.setPigLogger(pigLogger37);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = mergeAsOpenNLPAnnotatedText39.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = mergeAsOpenNLPAnnotatedText39.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = safeTsvText36.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract29.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath4.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = concatTextBag1.outputSchema(schema47);
        concatTextBag1.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger50 = concatTextBag1.getPigLogger();
        concatTextBag1.progress();
        concatTextBag1.progress();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNull(pigProgressable40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(pigLogger50);
    }

    @Test
    public void test3237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3237");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.pig.data.Tuple tuple3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test3238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3238");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        boolean boolean6 = sentencesWithLink0.isAsynchronous();
        boolean boolean7 = sentencesWithLink0.isAsynchronous();
        pignlproc.evaluation.ConcatTextBag concatTextBag9 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = concatTextBag9.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = concatTextBag9.getPigLogger();
        java.lang.Enum enum13 = null;
        concatTextBag9.warn("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", enum13);
        boolean boolean15 = concatTextBag9.isAsynchronous();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink16 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList17 = sentencesWithLink16.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        sentencesWithLink16.setPigLogger(pigLogger18);
        java.lang.reflect.Type type20 = sentencesWithLink16.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = sentencesWithLink16.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList22 = sentencesWithLink16.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink23 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList24 = sentencesWithLink23.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        sentencesWithLink23.setPigLogger(pigLogger25);
        java.lang.reflect.Type type27 = sentencesWithLink23.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = sentencesWithLink23.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = sentencesWithLink23.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        sentencesWithLink23.setPigLogger(pigLogger30);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink32 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList33 = sentencesWithLink32.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        sentencesWithLink32.setPigLogger(pigLogger34);
        java.lang.reflect.Type type36 = sentencesWithLink32.getReturnType();
        java.lang.Enum enum38 = null;
        sentencesWithLink32.warn("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", enum38);
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum42 = null;
        checkAbstract40.warn("http://.wikipedia.org/wiki/hi%21", enum42);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable44 = null;
        checkAbstract40.setReporter(pigProgressable44);
        java.lang.reflect.Type type46 = checkAbstract40.getReturnType();
        boolean boolean47 = checkAbstract40.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList48 = checkAbstract40.getArgToFuncMapping();
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = checkAbstract40.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = sentencesWithLink32.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = sentencesWithLink23.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = sentencesWithLink16.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = concatTextBag9.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = sentencesWithLink0.outputSchema(schema53);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger56 = null;
        sentencesWithLink0.setPigLogger(pigLogger56);
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNull(pigLogger11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(funcSpecList17);
        org.junit.Assert.assertNotNull(type20);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNull(funcSpecList22);
        org.junit.Assert.assertNull(funcSpecList24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNull(funcSpecList33);
        org.junit.Assert.assertNotNull(type36);
        org.junit.Assert.assertNotNull(type46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(funcSpecList48);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
    }

    @Test
    public void test3239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3239");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigLogger10);
    }

    @Test
    public void test3240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3240");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22");
    }

    @Test
    public void test3241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3241");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser4.getHeaders();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser4.getHeaders();
        java.lang.Appendable appendable7 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable8 = annotatingMarkupParser4.new CountingAppendable(appendable7);
        java.lang.String str10 = annotatingMarkupParser4.parse("");
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser4.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser12 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser12.getHeaderAnnotations();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser12.getParagraphs();
        java.lang.Appendable appendable15 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser12.new CountingAppendable(appendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser17.getHeaderAnnotations();
        java.lang.String str19 = annotatingMarkupParser17.getRedirect();
        pignlproc.markup.Annotation annotation24 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation29 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int30 = annotation29.end;
        int int31 = annotation29.begin;
        pignlproc.markup.Annotation[] annotationArray32 = new pignlproc.markup.Annotation[] { annotation24, annotation29 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList33 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList33, annotationArray32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser35 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser35.getHeaders();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser35.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList38 = annotatingMarkupParser35.getHeaderAnnotations();
        java.lang.String str39 = annotatingMarkupParser35.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList41 = annotatingMarkupParser40.getHeaders();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser40.getHeaders();
        java.lang.Appendable appendable43 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable44 = annotatingMarkupParser40.new CountingAppendable(appendable43);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable45 = annotatingMarkupParser35.new CountingAppendable((java.lang.Appendable) countingAppendable44);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser46 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser46.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel49 = annotatingMarkupParser46.makeWikiModel("title");
        annotatingMarkupParser17.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList33, (java.lang.Appendable) countingAppendable44, (info.bliki.wiki.model.IWikiModel) wikiModel49);
        annotatingMarkupParser0.nodesToText(annotationList11, appendable15, (info.bliki.wiki.model.IWikiModel) wikiModel49);
        java.lang.String str52 = annotatingMarkupParser0.getRedirect();
        boolean boolean53 = annotatingMarkupParser0.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList54 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(annotationList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(annotationList47);
        org.junit.Assert.assertNotNull(wikiModel49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(annotationList54);
    }

    @Test
    public void test3242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3242");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) '4');
        java.lang.reflect.Type type2 = aggregateTextBag1.getReturnType();
        boolean boolean3 = aggregateTextBag1.isAsynchronous();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink4 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = sentencesWithLink4.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        sentencesWithLink4.setPigLogger(pigLogger6);
        java.lang.reflect.Type type8 = sentencesWithLink4.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = sentencesWithLink4.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = sentencesWithLink4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum13 = null;
        checkAbstract11.warn("http://.wikipedia.org/wiki/hi%21", enum13);
        java.lang.Enum enum16 = null;
        checkAbstract11.warn("hi !", enum16);
        pignlproc.evaluation.NoLoopInPath noLoopInPath18 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText19 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger20 = null;
        safeTsvText19.setPigLogger(pigLogger20);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText22 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable23 = mergeAsOpenNLPAnnotatedText22.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract24.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = mergeAsOpenNLPAnnotatedText22.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = safeTsvText19.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = noLoopInPath18.outputSchema(schema27);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag30 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText31 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        safeTsvText31.setPigLogger(pigLogger32);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText34 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable35 = mergeAsOpenNLPAnnotatedText34.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = checkAbstract36.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = mergeAsOpenNLPAnnotatedText34.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = safeTsvText31.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = aggregateTextBag30.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = noLoopInPath18.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract11.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = sentencesWithLink4.outputSchema(schema42);
        boolean boolean45 = sentencesWithLink4.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath46 = new pignlproc.evaluation.NoLoopInPath();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger47 = null;
        noLoopInPath46.setPigLogger(pigLogger47);
        pignlproc.evaluation.NoLoopInPath noLoopInPath49 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath49.progress();
        pignlproc.evaluation.NoLoopInPath noLoopInPath51 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText52 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger53 = null;
        safeTsvText52.setPigLogger(pigLogger53);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText55 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable56 = mergeAsOpenNLPAnnotatedText55.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract57 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = checkAbstract57.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = mergeAsOpenNLPAnnotatedText55.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = safeTsvText52.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = noLoopInPath51.outputSchema(schema60);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag63 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText64 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger65 = null;
        safeTsvText64.setPigLogger(pigLogger65);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText67 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable68 = mergeAsOpenNLPAnnotatedText67.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract69 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = checkAbstract69.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = mergeAsOpenNLPAnnotatedText67.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = safeTsvText64.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = aggregateTextBag63.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = noLoopInPath51.outputSchema(schema72);
        pignlproc.evaluation.CheckAbstract checkAbstract76 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum78 = null;
        checkAbstract76.warn("http://.wikipedia.org/wiki/hi%21", enum78);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger80 = null;
        checkAbstract76.setPigLogger(pigLogger80);
        checkAbstract76.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText83 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger84 = null;
        safeTsvText83.setPigLogger(pigLogger84);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText86 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable87 = mergeAsOpenNLPAnnotatedText86.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract88 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = checkAbstract88.outputSchema(schema89);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = mergeAsOpenNLPAnnotatedText86.outputSchema(schema89);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = safeTsvText83.outputSchema(schema91);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = checkAbstract76.outputSchema(schema92);
        org.apache.pig.impl.logicalLayer.schema.Schema schema94 = noLoopInPath51.outputSchema(schema93);
        org.apache.pig.impl.logicalLayer.schema.Schema schema95 = noLoopInPath49.outputSchema(schema93);
        org.apache.pig.impl.logicalLayer.schema.Schema schema96 = noLoopInPath46.outputSchema(schema95);
        org.apache.pig.impl.logicalLayer.schema.Schema schema97 = sentencesWithLink4.outputSchema(schema96);
        org.apache.pig.impl.logicalLayer.schema.Schema schema98 = aggregateTextBag1.outputSchema(schema97);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNull(pigProgressable23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(pigProgressable35);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(pigProgressable56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNull(pigProgressable68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(pigProgressable87);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
        org.junit.Assert.assertNotNull(schema95);
        org.junit.Assert.assertNotNull(schema96);
        org.junit.Assert.assertNotNull(schema97);
        org.junit.Assert.assertNotNull(schema98);
    }

    @Test
    public void test3243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3243");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.pig.Expression expression7 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = uriStringLiteralNTriplesLoader2.getSchema("http://hi!\n.wikipedia.org/wiki/%22_title_%22", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceStatistics resourceStatistics14 = uriStringLiteralNTriplesLoader2.getStatistics("", job13);
        org.apache.pig.Expression expression15 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression15);
        org.apache.pig.LoadCaster loadCaster17 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceStatistics resourceStatistics20 = uriStringLiteralNTriplesLoader2.getStatistics("\"hi!\"", job19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple21 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema11);
        org.junit.Assert.assertNull(resourceStatistics14);
        org.junit.Assert.assertNotNull(loadCaster17);
        org.junit.Assert.assertNull(resourceStatistics20);
    }

    @Test
    public void test3244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3244");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader2 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit3 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader2, pigSplit3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href", job6);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple8 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema7);
    }

    @Test
    public void test3245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3245");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str2 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.Annotation annotation7 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation12 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int13 = annotation12.end;
        int int14 = annotation12.begin;
        pignlproc.markup.Annotation[] annotationArray15 = new pignlproc.markup.Annotation[] { annotation7, annotation12 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList16 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList16, annotationArray15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser18 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser18.getHeaders();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser18.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser18.getHeaderAnnotations();
        java.lang.String str22 = annotatingMarkupParser18.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser23.getHeaders();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser23.getHeaders();
        java.lang.Appendable appendable26 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser23.new CountingAppendable(appendable26);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser18.new CountingAppendable((java.lang.Appendable) countingAppendable27);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList30 = annotatingMarkupParser29.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel32 = annotatingMarkupParser29.makeWikiModel("title");
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList16, (java.lang.Appendable) countingAppendable27, (info.bliki.wiki.model.IWikiModel) wikiModel32);
        java.util.List<pignlproc.markup.Annotation> annotationList34 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.lang.String str36 = annotatingMarkupParser0.parse("\"hi!\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser37 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList38 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList40 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList41 = annotatingMarkupParser37.getHeaders();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser37.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList45 = annotatingMarkupParser44.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList46 = annotatingMarkupParser44.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser44.getParagraphAnnotations();
        java.util.List<java.lang.String> strList48 = annotatingMarkupParser44.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList49 = annotatingMarkupParser44.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser50.getHeaderAnnotations();
        java.util.List<java.lang.String> strList52 = annotatingMarkupParser50.getParagraphs();
        java.lang.Appendable appendable53 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable54 = annotatingMarkupParser50.new CountingAppendable(appendable53);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable55 = annotatingMarkupParser44.new CountingAppendable((java.lang.Appendable) countingAppendable54);
        countingAppendable54.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList59 = annotatingMarkupParser58.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel61 = annotatingMarkupParser58.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList62 = annotatingMarkupParser58.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList63 = annotatingMarkupParser58.getParagraphAnnotations();
        boolean boolean64 = annotatingMarkupParser58.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel66 = annotatingMarkupParser58.makeWikiModel("\" title \"");
        annotatingMarkupParser37.nodesToText(annotationList43, (java.lang.Appendable) countingAppendable54, (info.bliki.wiki.model.IWikiModel) wikiModel66);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable68 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable72 = countingAppendable68.append((java.lang.CharSequence) "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", (int) (short) 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(annotationArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(annotationList30);
        org.junit.Assert.assertNotNull(wikiModel32);
        org.junit.Assert.assertNotNull(annotationList34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "\"hi!\"\n" + "'", str36, "\"hi!\"\n");
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList45);
        org.junit.Assert.assertNotNull(annotationList46);
        org.junit.Assert.assertNotNull(annotationList47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(annotationList49);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertNotNull(annotationList59);
        org.junit.Assert.assertNotNull(wikiModel61);
        org.junit.Assert.assertNotNull(annotationList62);
        org.junit.Assert.assertNotNull(annotationList63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(wikiModel66);
    }

    @Test
    public void test3246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3246");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser67 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList68 = annotatingMarkupParser67.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList69 = annotatingMarkupParser67.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList70 = annotatingMarkupParser67.getParagraphAnnotations();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser67.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList72 = annotatingMarkupParser67.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList74 = annotatingMarkupParser73.getHeaderAnnotations();
        java.util.List<java.lang.String> strList75 = annotatingMarkupParser73.getParagraphs();
        java.lang.Appendable appendable76 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable77 = annotatingMarkupParser73.new CountingAppendable(appendable76);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable78 = annotatingMarkupParser67.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable79 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable77);
        countingAppendable77.currentPosition = 97;
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(strList68);
        org.junit.Assert.assertNotNull(annotationList69);
        org.junit.Assert.assertNotNull(annotationList70);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(annotationList72);
        org.junit.Assert.assertNotNull(annotationList74);
        org.junit.Assert.assertNotNull(strList75);
    }

    @Test
    public void test3247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3247");
        pignlproc.evaluation.ConcatTextBag concatTextBag0 = new pignlproc.evaluation.ConcatTextBag();
        java.lang.Enum enum2 = null;
        concatTextBag0.warn("", enum2);
        pignlproc.evaluation.NoLoopInPath noLoopInPath4 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText5 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        safeTsvText5.setPigLogger(pigLogger6);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText8 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = mergeAsOpenNLPAnnotatedText8.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract10 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = checkAbstract10.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = mergeAsOpenNLPAnnotatedText8.outputSchema(schema11);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = safeTsvText5.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = noLoopInPath4.outputSchema(schema13);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag16 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = aggregateTextBag16.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = noLoopInPath4.outputSchema(schema25);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        noLoopInPath4.setPigLogger(pigLogger29);
        org.apache.pig.data.Tuple tuple31 = null;
        java.lang.Boolean boolean32 = noLoopInPath4.exec(tuple31);
        org.apache.commons.logging.Log log33 = noLoopInPath4.getLogger();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag35 = new pignlproc.evaluation.AggregateTextBag((int) (short) 10);
        pignlproc.evaluation.ConcatTextBag concatTextBag37 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum40 = null;
        checkAbstract38.warn("http://.wikipedia.org/wiki/hi%21", enum40);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        checkAbstract38.setPigLogger(pigLogger42);
        checkAbstract38.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText45 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        safeTsvText45.setPigLogger(pigLogger46);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = mergeAsOpenNLPAnnotatedText48.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract50.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText48.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = safeTsvText45.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract38.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = concatTextBag37.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = aggregateTextBag35.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = noLoopInPath4.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = concatTextBag0.outputSchema(schema55);
        concatTextBag0.progress();
        org.apache.commons.logging.Log log61 = concatTextBag0.getLogger();
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertEquals("'" + boolean32 + "' != '" + true + "'", boolean32, true);
        org.junit.Assert.assertNotNull(log33);
        org.junit.Assert.assertNull(pigProgressable49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(log61);
    }

    @Test
    public void test3248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3248");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 10);
        pignlproc.evaluation.ConcatTextBag concatTextBag3 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract4 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum6 = null;
        checkAbstract4.warn("http://.wikipedia.org/wiki/hi%21", enum6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        checkAbstract4.setPigLogger(pigLogger8);
        checkAbstract4.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText11 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        safeTsvText11.setPigLogger(pigLogger12);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText14 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = mergeAsOpenNLPAnnotatedText14.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract16 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = checkAbstract16.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = mergeAsOpenNLPAnnotatedText14.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = safeTsvText11.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract4.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = concatTextBag3.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag1.outputSchema(schema21);
        aggregateTextBag1.finish();
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test3249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3249");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"title\"\" \"href");
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("\"http://.wikipedia.org/wiki/hi%21\"\n");
    }

    @Test
    public void test3250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3250");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList6 = annotatingMarkupParser5.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel8 = annotatingMarkupParser5.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser5.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser5.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser11.getHeaderAnnotations();
        java.lang.String str15 = annotatingMarkupParser11.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser16.getHeaders();
        java.lang.Appendable appendable19 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser16.new CountingAppendable(appendable19);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser11.new CountingAppendable((java.lang.Appendable) countingAppendable20);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser22.getHeaders();
        java.lang.Appendable appendable25 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser22.new CountingAppendable(appendable25);
        countingAppendable26.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser11.new CountingAppendable((java.lang.Appendable) countingAppendable26);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList33 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str34 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser35 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser35.getHeaders();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser35.getHeaders();
        java.lang.Appendable appendable38 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable39 = annotatingMarkupParser35.new CountingAppendable(appendable38);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable40 = annotatingMarkupParser30.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable41 = annotatingMarkupParser11.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        countingAppendable39.currentPosition = 0;
        countingAppendable39.currentPosition = (short) 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser5.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        int int47 = countingAppendable39.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable52 = countingAppendable48.append((java.lang.CharSequence) "http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", 10, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList6);
        org.junit.Assert.assertNotNull(wikiModel8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(annotationList33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 100 + "'", int47 == 100);
    }

    @Test
    public void test3251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3251");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("\"\"\"opennlp/en-sent.bin\"\" \"", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3252");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("http://\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"href.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test3253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3253");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\"hi!\"\n");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = concatTextBag1.getReporter();
        org.junit.Assert.assertNull(pigProgressable2);
    }

    @Test
    public void test3254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3254");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.lang.Class<?> wildcardClass5 = annotatingMarkupParser0.getClass();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test3255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3255");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("hi!");
        info.bliki.wiki.model.WikiModel wikiModel45 = annotatingMarkupParser0.makeWikiModel("");
        info.bliki.wiki.model.WikiModel wikiModel47 = annotatingMarkupParser0.makeWikiModel("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        java.util.List<java.lang.String> strList48 = annotatingMarkupParser0.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser50.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser52 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList53 = annotatingMarkupParser52.getHeaders();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser52.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser52.getHeaders();
        java.util.List<java.lang.String> strList56 = annotatingMarkupParser52.getHeaders();
        java.util.List<java.lang.String> strList57 = annotatingMarkupParser52.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList58 = null;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser59.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList61 = annotatingMarkupParser59.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList62 = annotatingMarkupParser59.getParagraphAnnotations();
        java.util.List<java.lang.String> strList63 = annotatingMarkupParser59.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList64 = annotatingMarkupParser59.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList66 = annotatingMarkupParser65.getHeaderAnnotations();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser65.getParagraphs();
        java.lang.Appendable appendable68 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable69 = annotatingMarkupParser65.new CountingAppendable(appendable68);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable70 = annotatingMarkupParser59.new CountingAppendable((java.lang.Appendable) countingAppendable69);
        countingAppendable69.currentPosition = 35;
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList74 = annotatingMarkupParser73.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel76 = annotatingMarkupParser73.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList77 = annotatingMarkupParser73.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList78 = annotatingMarkupParser73.getParagraphAnnotations();
        boolean boolean79 = annotatingMarkupParser73.noLinks();
        info.bliki.wiki.model.WikiModel wikiModel81 = annotatingMarkupParser73.makeWikiModel("\" title \"");
        annotatingMarkupParser52.nodesToText(annotationList58, (java.lang.Appendable) countingAppendable69, (info.bliki.wiki.model.IWikiModel) wikiModel81);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser84 = new pignlproc.markup.AnnotatingMarkupParser("opennlp/en-sent.bin");
        java.lang.String str86 = annotatingMarkupParser84.parse("\"http://.wikipedia.org/wiki/hi%21\"\n");
        java.util.List<pignlproc.markup.Annotation> annotationList87 = annotatingMarkupParser84.getWikiLinkAnnotations();
        java.lang.String str89 = annotatingMarkupParser84.parse("\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n");
        info.bliki.wiki.model.WikiModel wikiModel91 = annotatingMarkupParser84.makeWikiModel("hi!\n\n");
        annotatingMarkupParser0.nodesToText(annotationList51, (java.lang.Appendable) countingAppendable69, (info.bliki.wiki.model.IWikiModel) wikiModel91);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable94 = countingAppendable69.append('#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!\n" + "'", str43, "hi!\n");
        org.junit.Assert.assertNotNull(wikiModel45);
        org.junit.Assert.assertNotNull(wikiModel47);
        org.junit.Assert.assertNotNull(strList48);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(strList57);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(annotationList61);
        org.junit.Assert.assertNotNull(annotationList62);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(annotationList64);
        org.junit.Assert.assertNotNull(annotationList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(annotationList74);
        org.junit.Assert.assertNotNull(wikiModel76);
        org.junit.Assert.assertNotNull(annotationList77);
        org.junit.Assert.assertNotNull(annotationList78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(wikiModel81);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "\"http://.wikipedia.org/wiki/hi%21\"\n\n" + "'", str86, "\"http://.wikipedia.org/wiki/hi%21\"\n\n");
        org.junit.Assert.assertNotNull(annotationList87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n\n" + "'", str89, "\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n\n");
        org.junit.Assert.assertNotNull(wikiModel91);
    }

    @Test
    public void test3256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3256");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"href");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test3257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3257");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser8.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser8.getWikiLinkAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser11.getHeaderAnnotations();
        java.lang.String str15 = annotatingMarkupParser11.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser16.getHeaders();
        java.lang.Appendable appendable19 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser16.new CountingAppendable(appendable19);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser11.new CountingAppendable((java.lang.Appendable) countingAppendable20);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable22 = annotatingMarkupParser8.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable23 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable23);
        int int25 = countingAppendable24.currentPosition;
        int int26 = countingAppendable24.currentPosition;
        countingAppendable24.currentPosition = 100;
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test3258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3258");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = checkAbstract0.getArgToFuncMapping();
        checkAbstract0.progress();
        checkAbstract0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = checkAbstract0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertNull(pigLogger8);
    }

    @Test
    public void test3259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3259");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\" hi ! \"\n");
    }

    @Test
    public void test3260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3260");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\" hi ! \"");
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser1.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser1.parse("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\n" + "'", str4, "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\n");
    }

    @Test
    public void test3261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3261");
        java.lang.String[] strArray1 = org.apache.pig.LoadFunc.getPathStrings("\"\"\" opennlp / en - sent . bin \"\"\"");
        org.junit.Assert.assertNotNull(strArray1);
    }

    @Test
    public void test3262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3262");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        org.apache.commons.logging.Log log29 = noLoopInPath0.getLogger();
        java.lang.reflect.Type type30 = noLoopInPath0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = noLoopInPath0.getPigLogger();
        noLoopInPath0.progress();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList33 = noLoopInPath0.getArgToFuncMapping();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertNotNull(type30);
        org.junit.Assert.assertNull(pigLogger31);
        org.junit.Assert.assertNull(funcSpecList33);
    }

    @Test
    public void test3263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3263");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("", "hi !\n\n", "http://\"\"\"hi!\"\" \".wikipedia.org/wiki/");
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.cleanupOnFailure("\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"http://hi!.wikipedia.org/wiki/%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3264");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        org.apache.pig.ResourceStatistics resourceStatistics3 = uriUriNTriplesLoader0.getStatistics("wikiobject", job2);
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader0.getInputFormat();
        org.apache.pig.LoadCaster loadCaster5 = uriUriNTriplesLoader0.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriUriNTriplesLoader0.getSchema("opennlp / en - sent . bin", job7);
        org.junit.Assert.assertNull(resourceStatistics3);
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema8);
    }

    @Test
    public void test3265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3265");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriUriNTriplesLoader3.getSchema("wikiobject", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceStatistics resourceStatistics15 = uriUriNTriplesLoader3.getStatistics("opennlp / en - sent . bin", job14);
        org.apache.hadoop.mapreduce.RecordReader recordReader16 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit17 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader16, pigSplit17);
        org.apache.hadoop.mapreduce.Job job20 = null;
        org.apache.pig.ResourceSchema resourceSchema21 = uriUriNTriplesLoader3.getSchema("\"hi!\"", job20);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple22 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNull(resourceStatistics15);
        org.junit.Assert.assertNotNull(resourceSchema21);
    }

    @Test
    public void test3266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3266");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, (long) ' ', (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3267");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.RecordReader recordReader6 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit7 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader6, pigSplit7);
        org.apache.pig.Expression expression9 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression9);
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
    }

    @Test
    public void test3268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3268");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList2 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        java.lang.reflect.Type type8 = sentencesWithLink0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList9 = sentencesWithLink0.getArgToFuncMapping();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(funcSpecList2);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(funcSpecList9);
    }

    @Test
    public void test3269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3269");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.commons.logging.Log log4 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type5 = sentencesWithLink0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.progress();
        java.lang.reflect.Type type8 = sentencesWithLink0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        sentencesWithLink0.setReporter(pigProgressable9);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(type8);
    }

    @Test
    public void test3270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3270");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getHeaderAnnotations();
        java.lang.String str6 = annotatingMarkupParser2.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.lang.Appendable appendable10 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser7.new CountingAppendable(appendable10);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable11);
        info.bliki.wiki.model.WikiModel wikiModel14 = annotatingMarkupParser2.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser("\"title\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser17.getHeaders();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser17.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList20 = annotatingMarkupParser17.getHeaderAnnotations();
        java.lang.String str21 = annotatingMarkupParser17.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<java.lang.String> strList24 = annotatingMarkupParser22.getHeaders();
        java.lang.Appendable appendable25 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser22.new CountingAppendable(appendable25);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable27 = annotatingMarkupParser17.new CountingAppendable((java.lang.Appendable) countingAppendable26);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList29 = annotatingMarkupParser28.getHeaders();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getHeaders();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        countingAppendable32.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser17.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable36 = annotatingMarkupParser16.new CountingAppendable((java.lang.Appendable) countingAppendable35);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable37 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable35);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable38 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable37);
        countingAppendable37.currentPosition = 100;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable42 = countingAppendable37.append((java.lang.CharSequence) "http://\"title\".wikipedia.org/wiki/%22hi%21%22");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(wikiModel14);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(annotationList20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList24);
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNotNull(strList30);
    }

    @Test
    public void test3271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3271");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("http://\"title\"\n.wikipedia.org/wiki/", "\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\"");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\".wikipedia.org/wiki/http%3A%2F%2F%22title%22%0A.wikipedia.org%2Fwiki%2F" + "'", str2, "http://\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\".wikipedia.org/wiki/http%3A%2F%2F%22title%22%0A.wikipedia.org%2Fwiki%2F");
    }

    @Test
    public void test3272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3272");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521", "http://\"\"\"hi!\"\" \".wikipedia.org/wiki/", "");
    }

    @Test
    public void test3273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3273");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"hi!\"\n\n");
        org.apache.hadoop.mapreduce.InputFormat inputFormat2 = parsingWikipediaLoader1.getInputFormat();
        org.apache.pig.Expression expression3 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression3);
        org.junit.Assert.assertNotNull(inputFormat2);
    }

    @Test
    public void test3274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3274");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        sentencesWithLink0.progress();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink4 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        sentencesWithLink4.setPigLogger(pigLogger5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = sentencesWithLink4.getReporter();
        org.apache.commons.logging.Log log8 = sentencesWithLink4.getLogger();
        java.lang.reflect.Type type9 = sentencesWithLink4.getReturnType();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink10 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        sentencesWithLink10.setPigLogger(pigLogger11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = sentencesWithLink10.getReporter();
        java.lang.reflect.Type type14 = sentencesWithLink10.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        safeTsvText15.finish();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink19 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath20 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText21 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        safeTsvText21.setPigLogger(pigLogger22);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText24 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = mergeAsOpenNLPAnnotatedText24.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = checkAbstract26.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = mergeAsOpenNLPAnnotatedText24.outputSchema(schema27);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = safeTsvText21.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath20.outputSchema(schema29);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag32 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = aggregateTextBag32.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath20.outputSchema(schema41);
        pignlproc.evaluation.CheckAbstract checkAbstract45 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum47 = null;
        checkAbstract45.warn("http://.wikipedia.org/wiki/hi%21", enum47);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger49 = null;
        checkAbstract45.setPigLogger(pigLogger49);
        checkAbstract45.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText52 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger53 = null;
        safeTsvText52.setPigLogger(pigLogger53);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText55 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable56 = mergeAsOpenNLPAnnotatedText55.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract57 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = checkAbstract57.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = mergeAsOpenNLPAnnotatedText55.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = safeTsvText52.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract45.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = noLoopInPath20.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = sentencesWithLink19.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = safeTsvText15.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = sentencesWithLink10.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = sentencesWithLink4.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = sentencesWithLink0.outputSchema(schema67);
        sentencesWithLink0.finish();
        org.apache.commons.logging.Log log70 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable71 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(pigProgressable56);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(log70);
        org.junit.Assert.assertNull(pigProgressable71);
    }

    @Test
    public void test3275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3275");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("http://\"title\"\n.wikipedia.org/wiki/\n");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = noLoopInPath1.getPigLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = noLoopInPath1.getArgToFuncMapping();
        org.junit.Assert.assertNull(pigLogger2);
        org.junit.Assert.assertNull(funcSpecList3);
    }

    @Test
    public void test3276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3276");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21\n");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        concatTextBag1.setPigLogger(pigLogger2);
        org.apache.commons.logging.Log log4 = concatTextBag1.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = concatTextBag1.getReporter();
        concatTextBag1.progress();
        org.junit.Assert.assertNotNull(log4);
        org.junit.Assert.assertNull(pigProgressable5);
    }

    @Test
    public void test3277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3277");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = parsingWikipediaLoader1.getStatistics("\"hi!\"", job7);
        org.apache.hadoop.mapreduce.InputFormat inputFormat9 = parsingWikipediaLoader1.getInputFormat();
        java.lang.Class<?> wildcardClass10 = inputFormat9.getClass();
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(resourceStatistics8);
        org.junit.Assert.assertNotNull(inputFormat9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test3278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3278");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        sentencesWithLink0.finish();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum7 = null;
        checkAbstract5.warn("http://.wikipedia.org/wiki/hi%21", enum7);
        java.lang.Enum enum10 = null;
        checkAbstract5.warn("hi !", enum10);
        pignlproc.evaluation.NoLoopInPath noLoopInPath12 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = noLoopInPath12.outputSchema(schema21);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag24 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = aggregateTextBag24.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath12.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract5.outputSchema(schema36);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList38 = checkAbstract5.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink39 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag41 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract42 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum44 = null;
        checkAbstract42.warn("http://.wikipedia.org/wiki/hi%21", enum44);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        checkAbstract42.setPigLogger(pigLogger46);
        checkAbstract42.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText49 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger50 = null;
        safeTsvText49.setPigLogger(pigLogger50);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText52 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable53 = mergeAsOpenNLPAnnotatedText52.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = checkAbstract54.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = mergeAsOpenNLPAnnotatedText52.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = safeTsvText49.outputSchema(schema57);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = checkAbstract42.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = concatTextBag41.outputSchema(schema59);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = sentencesWithLink39.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract5.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = sentencesWithLink0.outputSchema(schema60);
        org.apache.commons.logging.Log log64 = sentencesWithLink0.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable65 = null;
        sentencesWithLink0.setReporter(pigProgressable65);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(funcSpecList38);
        org.junit.Assert.assertNull(pigProgressable53);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(log64);
    }

    @Test
    public void test3279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3279");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3280");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        noLoopInPath0.setPigLogger(pigLogger1);
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath3.progress();
        pignlproc.evaluation.NoLoopInPath noLoopInPath5 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText6 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        safeTsvText6.setPigLogger(pigLogger7);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText9 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = mergeAsOpenNLPAnnotatedText9.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = checkAbstract11.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = mergeAsOpenNLPAnnotatedText9.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = safeTsvText6.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = noLoopInPath5.outputSchema(schema14);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag17 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText18 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        safeTsvText18.setPigLogger(pigLogger19);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText21 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable22 = mergeAsOpenNLPAnnotatedText21.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = checkAbstract23.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = mergeAsOpenNLPAnnotatedText21.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = safeTsvText18.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = aggregateTextBag17.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = noLoopInPath5.outputSchema(schema26);
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum32 = null;
        checkAbstract30.warn("http://.wikipedia.org/wiki/hi%21", enum32);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        checkAbstract30.setPigLogger(pigLogger34);
        checkAbstract30.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText37 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger38 = null;
        safeTsvText37.setPigLogger(pigLogger38);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText40 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable41 = mergeAsOpenNLPAnnotatedText40.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract42 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = checkAbstract42.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = mergeAsOpenNLPAnnotatedText40.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = safeTsvText37.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = checkAbstract30.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath5.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = noLoopInPath3.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = noLoopInPath0.outputSchema(schema49);
        java.lang.Enum enum52 = null;
        noLoopInPath0.warn("\"\"\n", enum52);
        org.apache.pig.data.Tuple tuple54 = null;
        java.lang.Boolean boolean55 = noLoopInPath0.exec(tuple54);
        org.apache.commons.logging.Log log56 = noLoopInPath0.getLogger();
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(pigProgressable22);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNull(pigProgressable41);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertEquals("'" + boolean55 + "' != '" + true + "'", boolean55, true);
        org.junit.Assert.assertNotNull(log56);
    }

    @Test
    public void test3281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3281");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.lang.String str15 = annotatingMarkupParser0.parse("hi !\n");
        info.bliki.wiki.model.WikiModel wikiModel17 = annotatingMarkupParser0.makeWikiModel("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi !\n\n" + "'", str15, "hi !\n\n");
        org.junit.Assert.assertNotNull(wikiModel17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList19);
    }

    @Test
    public void test3282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3282");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"\"", "\"hi!\"\n\n", "\"title\"");
        org.apache.pig.Expression expression4 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriUriNTriplesLoader3.getSchema("\"hi!\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriUriNTriplesLoader3.getStatistics("opennlp/en-sent.bin", job10);
        org.apache.hadoop.mapreduce.InputFormat inputFormat12 = uriUriNTriplesLoader3.getInputFormat();
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(inputFormat12);
    }

    @Test
    public void test3283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3283");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"");
        pignlproc.evaluation.NoLoopInPath noLoopInPath2 = new pignlproc.evaluation.NoLoopInPath();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        noLoopInPath2.setPigLogger(pigLogger3);
        org.apache.pig.data.Tuple tuple5 = null;
        java.lang.Boolean boolean6 = noLoopInPath2.exec(tuple5);
        org.apache.pig.data.Tuple tuple7 = null;
        java.lang.Boolean boolean8 = noLoopInPath2.exec(tuple7);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag10 = new pignlproc.evaluation.AggregateTextBag((int) '4');
        pignlproc.evaluation.ConcatTextBag concatTextBag12 = new pignlproc.evaluation.ConcatTextBag("\" title \"");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = concatTextBag12.getReporter();
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath29 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText30 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = null;
        safeTsvText30.setPigLogger(pigLogger31);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText33 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable34 = mergeAsOpenNLPAnnotatedText33.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract35 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract35.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = mergeAsOpenNLPAnnotatedText33.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = safeTsvText30.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath29.outputSchema(schema38);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag41 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText42 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        safeTsvText42.setPigLogger(pigLogger43);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText45 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable46 = mergeAsOpenNLPAnnotatedText45.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = checkAbstract47.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText45.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = safeTsvText42.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = aggregateTextBag41.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = noLoopInPath29.outputSchema(schema50);
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum56 = null;
        checkAbstract54.warn("http://.wikipedia.org/wiki/hi%21", enum56);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger58 = null;
        checkAbstract54.setPigLogger(pigLogger58);
        checkAbstract54.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText61 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        safeTsvText61.setPigLogger(pigLogger62);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText64 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable65 = mergeAsOpenNLPAnnotatedText64.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract66 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract66.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText64.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = safeTsvText61.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = checkAbstract54.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = noLoopInPath29.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = aggregateTextBag28.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = noLoopInPath14.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = concatTextBag12.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = aggregateTextBag10.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = noLoopInPath2.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = concatTextBag1.outputSchema(schema74);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink79 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList80 = sentencesWithLink79.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger81 = null;
        sentencesWithLink79.setPigLogger(pigLogger81);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable83 = null;
        sentencesWithLink79.setReporter(pigProgressable83);
        java.lang.reflect.Type type85 = sentencesWithLink79.getReturnType();
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = sentencesWithLink79.outputSchema(schema86);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = concatTextBag1.outputSchema(schema87);
        org.junit.Assert.assertEquals("'" + boolean6 + "' != '" + true + "'", boolean6, true);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + true + "'", boolean8, true);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(pigProgressable46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNull(pigProgressable65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNull(funcSpecList80);
        org.junit.Assert.assertNotNull(type85);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
    }

    @Test
    public void test3284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3284");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("hi!");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser2.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser8 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser8.getHeaderAnnotations();
        java.util.List<java.lang.String> strList10 = annotatingMarkupParser8.getParagraphs();
        java.lang.Appendable appendable11 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable12 = annotatingMarkupParser8.new CountingAppendable(appendable11);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable13 = annotatingMarkupParser2.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable14 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable12);
        java.lang.Appendable appendable15 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser1.new CountingAppendable(appendable15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable18 = countingAppendable16.append(' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNotNull(strList10);
    }

    @Test
    public void test3285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3285");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath3 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText4 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = null;
        safeTsvText4.setPigLogger(pigLogger5);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = mergeAsOpenNLPAnnotatedText7.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = checkAbstract9.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = safeTsvText4.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = noLoopInPath3.outputSchema(schema12);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag15 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText16 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        safeTsvText16.setPigLogger(pigLogger17);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = mergeAsOpenNLPAnnotatedText19.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = checkAbstract21.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = mergeAsOpenNLPAnnotatedText19.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = safeTsvText16.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = aggregateTextBag15.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath3.outputSchema(schema24);
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum30 = null;
        checkAbstract28.warn("http://.wikipedia.org/wiki/hi%21", enum30);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger32 = null;
        checkAbstract28.setPigLogger(pigLogger32);
        checkAbstract28.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText35 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        safeTsvText35.setPigLogger(pigLogger36);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText35.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract28.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = noLoopInPath3.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = aggregateTextBag2.outputSchema(schema45);
        aggregateTextBag2.finish();
        aggregateTextBag2.finish();
        aggregateTextBag2.progress();
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNull(pigProgressable20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
    }

    @Test
    public void test3286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3286");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("hi!");
        info.bliki.wiki.model.WikiModel wikiModel45 = annotatingMarkupParser0.makeWikiModel("http://\"title\"\n.wikipedia.org/wiki/");
        info.bliki.wiki.model.WikiModel wikiModel47 = annotatingMarkupParser0.makeWikiModel("http://http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!\n" + "'", str43, "hi!\n");
        org.junit.Assert.assertNotNull(wikiModel45);
        org.junit.Assert.assertNotNull(wikiModel47);
    }

    @Test
    public void test3287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3287");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = parsingWikipediaLoader1.getStatistics("http://\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/http_%3A_%2F%2F_hi_%21_._wikipedia_._org_%2F_wiki_%2F_opennlp___%25_2_F___en___-___sent___.___bin", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = parsingWikipediaLoader1.getPartitionKeys("http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A", job10);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNull(resourceStatistics8);
        org.junit.Assert.assertNull(strArray11);
    }

    @Test
    public void test3288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3288");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriStringLiteralNTriplesLoader2.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriStringLiteralNTriplesLoader2.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriStringLiteralNTriplesLoader2.getSchema("title\n\n", job14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple16 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test3289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3289");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract0.setReporter(pigProgressable4);
        java.lang.reflect.Type type6 = checkAbstract0.getReturnType();
        boolean boolean7 = checkAbstract0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        checkAbstract0.setPigLogger(pigLogger9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = checkAbstract0.getReporter();
        java.lang.Enum enum13 = null;
        checkAbstract0.warn("hi !\n", enum13);
        java.lang.Enum enum16 = null;
        checkAbstract0.warn("\"title\"", enum16);
        java.lang.Enum enum19 = null;
        checkAbstract0.warn("\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"", enum19);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable11);
    }

    @Test
    public void test3290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3290");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href");
        java.lang.String str13 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "hi !");
        java.lang.String str15 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/hi%21\n");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "opennlp/en-sent.bin" + "'", str13, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "opennlp/en-sent.bin" + "'", str15, "opennlp/en-sent.bin");
    }

    @Test
    public void test3291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3291");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", job10);
        org.apache.hadoop.mapreduce.RecordReader recordReader12 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit13 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader12, pigSplit13);
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(strArray11);
    }

    @Test
    public void test3292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3292");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.progress();
        boolean boolean10 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = null;
        sentencesWithLink0.setReporter(pigProgressable12);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList14 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = null;
        sentencesWithLink0.setReporter(pigProgressable15);
        java.lang.Enum enum18 = null;
        sentencesWithLink0.warn("\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/hrefwikiobject\"\"\"\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"\"\"\"wikiobject\"\"hi!\"\" wikiobject wikiobjectopennlp/en-sent.binwikiobjecthttp://hi! .wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"\"http://.wikipedia.org/wiki/hi%21\"\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"\"opennlp / en - sent . bin\"\"wikiobject\"\"\"\"\"", enum18);
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(pigLogger11);
        org.junit.Assert.assertNull(funcSpecList14);
    }

    @Test
    public void test3293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3293");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\" http : // . wikipedia . org / wiki / hi % 21 \"");
        java.lang.Class<?> wildcardClass2 = mergeAsOpenNLPAnnotatedText1.getClass();
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test3294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3294");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://\"\"\"hi!\"\" \".wikipedia.org/wiki/");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader4 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \"", "http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href");
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = uriStringLiteralNTriplesLoader4.getSchema("\"hi! \"\n", job6);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema7);
    }

    @Test
    public void test3295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3295");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        checkAbstract0.finish();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag11 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 10, false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = aggregateTextBag11.outputSchema(schema17);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink19 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList20 = sentencesWithLink19.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        sentencesWithLink19.setPigLogger(pigLogger21);
        java.lang.reflect.Type type23 = sentencesWithLink19.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = sentencesWithLink19.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = sentencesWithLink19.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        sentencesWithLink19.setPigLogger(pigLogger26);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink28 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList29 = sentencesWithLink28.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        sentencesWithLink28.setPigLogger(pigLogger30);
        java.lang.reflect.Type type32 = sentencesWithLink28.getReturnType();
        java.lang.Enum enum34 = null;
        sentencesWithLink28.warn("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", enum34);
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum38 = null;
        checkAbstract36.warn("http://.wikipedia.org/wiki/hi%21", enum38);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = null;
        checkAbstract36.setReporter(pigProgressable40);
        java.lang.reflect.Type type42 = checkAbstract36.getReturnType();
        boolean boolean43 = checkAbstract36.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList44 = checkAbstract36.getArgToFuncMapping();
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract36.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = sentencesWithLink28.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = sentencesWithLink19.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = aggregateTextBag11.outputSchema(schema46);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag51 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 0);
        pignlproc.evaluation.ConcatTextBag concatTextBag54 = new pignlproc.evaluation.ConcatTextBag("http://\"title\".wikipedia.org/wiki/%22hi%21%22", true);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink55 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList56 = sentencesWithLink55.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract57 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum59 = null;
        checkAbstract57.warn("http://.wikipedia.org/wiki/hi%21", enum59);
        java.lang.Enum enum62 = null;
        checkAbstract57.warn("hi !", enum62);
        pignlproc.evaluation.NoLoopInPath noLoopInPath64 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText65 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger66 = null;
        safeTsvText65.setPigLogger(pigLogger66);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText68 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable69 = mergeAsOpenNLPAnnotatedText68.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract70 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = checkAbstract70.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = mergeAsOpenNLPAnnotatedText68.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = safeTsvText65.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = noLoopInPath64.outputSchema(schema73);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag76 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText77 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger78 = null;
        safeTsvText77.setPigLogger(pigLogger78);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText80 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable81 = mergeAsOpenNLPAnnotatedText80.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract82 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = checkAbstract82.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = mergeAsOpenNLPAnnotatedText80.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = safeTsvText77.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = aggregateTextBag76.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = noLoopInPath64.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = checkAbstract57.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = sentencesWithLink55.outputSchema(schema89);
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = concatTextBag54.outputSchema(schema89);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = aggregateTextBag51.outputSchema(schema89);
        org.apache.pig.impl.logicalLayer.schema.Schema schema93 = aggregateTextBag11.outputSchema(schema92);
        org.apache.pig.impl.logicalLayer.schema.Schema schema94 = checkAbstract0.outputSchema(schema93);
        java.lang.Enum enum96 = null;
        checkAbstract0.warn("\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", enum96);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(funcSpecList20);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNull(pigProgressable24);
        org.junit.Assert.assertNull(pigProgressable25);
        org.junit.Assert.assertNull(funcSpecList29);
        org.junit.Assert.assertNotNull(type32);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(funcSpecList44);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNull(funcSpecList56);
        org.junit.Assert.assertNull(pigProgressable69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(pigProgressable81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema90);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNotNull(schema93);
        org.junit.Assert.assertNotNull(schema94);
    }

    @Test
    public void test3296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3296");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 10, false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = mergeAsOpenNLPAnnotatedText3.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema6 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = checkAbstract5.outputSchema(schema6);
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = mergeAsOpenNLPAnnotatedText3.outputSchema(schema6);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = aggregateTextBag2.outputSchema(schema8);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink10 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList11 = sentencesWithLink10.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = null;
        sentencesWithLink10.setPigLogger(pigLogger12);
        java.lang.reflect.Type type14 = sentencesWithLink10.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = sentencesWithLink10.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable16 = sentencesWithLink10.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        sentencesWithLink10.setPigLogger(pigLogger17);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink19 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList20 = sentencesWithLink19.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        sentencesWithLink19.setPigLogger(pigLogger21);
        java.lang.reflect.Type type23 = sentencesWithLink19.getReturnType();
        java.lang.Enum enum25 = null;
        sentencesWithLink19.warn("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", enum25);
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum29 = null;
        checkAbstract27.warn("http://.wikipedia.org/wiki/hi%21", enum29);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = null;
        checkAbstract27.setReporter(pigProgressable31);
        java.lang.reflect.Type type33 = checkAbstract27.getReturnType();
        boolean boolean34 = checkAbstract27.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList35 = checkAbstract27.getArgToFuncMapping();
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract27.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = sentencesWithLink19.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = sentencesWithLink10.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = aggregateTextBag2.outputSchema(schema37);
        boolean boolean41 = aggregateTextBag2.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNotNull(schema7);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNull(funcSpecList11);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNull(pigProgressable16);
        org.junit.Assert.assertNull(funcSpecList20);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(type33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(funcSpecList35);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test3297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3297");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.Boolean boolean3 = noLoopInPath1.exec(tuple2);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = noLoopInPath1.getArgToFuncMapping();
        org.junit.Assert.assertEquals("'" + boolean3 + "' != '" + true + "'", boolean3, true);
        org.junit.Assert.assertNull(funcSpecList4);
    }

    @Test
    public void test3298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3298");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        int int5 = annotation4.begin;
        java.lang.String str6 = annotation4.label;
        int int7 = annotation4.end;
        java.lang.String str8 = annotation4.label;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "title" + "'", str6, "title");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "title" + "'", str8, "title");
    }

    @Test
    public void test3299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3299");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("\"hi!\"\n", "");
        org.apache.pig.Expression expression3 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = uriStringLiteralNTriplesLoader2.getSchema("\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"", job6);
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader8, pigSplit9);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple11 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema7);
    }

    @Test
    public void test3300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3300");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.progress();
        boolean boolean10 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = null;
        sentencesWithLink0.setReporter(pigProgressable12);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList14 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = null;
        sentencesWithLink0.setReporter(pigProgressable15);
        java.lang.Enum enum18 = null;
        sentencesWithLink0.warn("http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href", enum18);
        java.lang.Enum enum21 = null;
        sentencesWithLink0.warn("\"hi!\"\n\n", enum21);
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNotNull(type7);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(pigLogger11);
        org.junit.Assert.assertNull(funcSpecList14);
    }

    @Test
    public void test3301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3301");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("hi!");
        info.bliki.wiki.model.WikiModel wikiModel45 = annotatingMarkupParser0.makeWikiModel("");
        info.bliki.wiki.model.WikiModel wikiModel47 = annotatingMarkupParser0.makeWikiModel("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        java.util.List<pignlproc.markup.Annotation> annotationList48 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser0.getParagraphs();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!\n" + "'", str43, "hi!\n");
        org.junit.Assert.assertNotNull(wikiModel45);
        org.junit.Assert.assertNotNull(wikiModel47);
        org.junit.Assert.assertNotNull(annotationList48);
        org.junit.Assert.assertNotNull(strList49);
    }

    @Test
    public void test3302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3302");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (short) 10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        checkAbstract1.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = checkAbstract1.getPigLogger();
        org.junit.Assert.assertNull(pigLogger4);
    }

    @Test
    public void test3303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3303");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"href");
        boolean boolean2 = concatTextBag1.isAsynchronous();
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.String str4 = concatTextBag1.exec(tuple3);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
    }

    @Test
    public void test3304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3304");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("hi !");
        org.apache.pig.LoadCaster loadCaster2 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("\"\"\"opennlp / en - sent . bin\"\"\"");
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.pig.LoadCaster loadCaster6 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.InputFormat inputFormat7 = parsingWikipediaLoader1.getInputFormat();
        org.junit.Assert.assertNotNull(loadCaster2);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(loadCaster6);
        org.junit.Assert.assertNotNull(inputFormat7);
    }

    @Test
    public void test3305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3305");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\" title \"\n");
    }

    @Test
    public void test3306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3306");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        pignlproc.evaluation.NoLoopInPath noLoopInPath5 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText6 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        safeTsvText6.setPigLogger(pigLogger7);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText9 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = mergeAsOpenNLPAnnotatedText9.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = checkAbstract11.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = mergeAsOpenNLPAnnotatedText9.outputSchema(schema12);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = safeTsvText6.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = noLoopInPath5.outputSchema(schema14);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = noLoopInPath5.getPigLogger();
        java.lang.reflect.Type type18 = noLoopInPath5.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath19 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText20 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        safeTsvText20.setPigLogger(pigLogger21);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText23 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = mergeAsOpenNLPAnnotatedText23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract25.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText23.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = safeTsvText20.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = noLoopInPath19.outputSchema(schema28);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag31 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText32 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = null;
        safeTsvText32.setPigLogger(pigLogger33);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText35 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable36 = mergeAsOpenNLPAnnotatedText35.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract37 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract37.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = mergeAsOpenNLPAnnotatedText35.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = safeTsvText32.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = aggregateTextBag31.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = noLoopInPath19.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath5.outputSchema(schema43);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable45 = noLoopInPath5.getReporter();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag48 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText49 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray51 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList52 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList52, spanArray51);
        java.lang.String str54 = mergeAsOpenNLPAnnotatedText49.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList52);
        pignlproc.evaluation.ConcatTextBag concatTextBag56 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract57 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum59 = null;
        checkAbstract57.warn("http://.wikipedia.org/wiki/hi%21", enum59);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger61 = null;
        checkAbstract57.setPigLogger(pigLogger61);
        checkAbstract57.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText64 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger65 = null;
        safeTsvText64.setPigLogger(pigLogger65);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText67 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable68 = mergeAsOpenNLPAnnotatedText67.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract69 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = checkAbstract69.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = mergeAsOpenNLPAnnotatedText67.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = safeTsvText64.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = checkAbstract57.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = concatTextBag56.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = mergeAsOpenNLPAnnotatedText49.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = aggregateTextBag48.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = noLoopInPath5.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = safeTsvText0.outputSchema(schema78);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNotNull(schema13);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNull(pigLogger17);
        org.junit.Assert.assertNotNull(type18);
        org.junit.Assert.assertNull(pigProgressable24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(pigProgressable36);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNull(pigProgressable45);
        org.junit.Assert.assertNotNull(spanArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "href" + "'", str54, "href");
        org.junit.Assert.assertNull(pigProgressable68);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
    }

    @Test
    public void test3307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3307");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http://http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http://http://http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22 .wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521\"" + "'", str1, "\"http://http://http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22 .wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521\"");
    }

    @Test
    public void test3308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3308");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.reflect.Type type5 = checkAbstract0.getReturnType();
        checkAbstract0.progress();
        org.apache.pig.data.Tuple tuple7 = null;
        java.lang.Boolean boolean8 = checkAbstract0.exec(tuple7);
        checkAbstract0.finish();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + boolean8 + "' != '" + false + "'", boolean8, false);
    }

    @Test
    public void test3309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3309");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable13 = countingAppendable10.append((java.lang.CharSequence) "");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test3310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3310");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, 10, "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"href", "hi !");
    }

    @Test
    public void test3311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3311");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = checkAbstract0.getPigLogger();
        boolean boolean6 = checkAbstract0.isAsynchronous();
        pignlproc.evaluation.SafeTsvText safeTsvText7 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        safeTsvText7.setPigLogger(pigLogger8);
        org.apache.commons.logging.Log log10 = safeTsvText7.getLogger();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray13 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList14 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList14, spanArray13);
        java.lang.String str16 = mergeAsOpenNLPAnnotatedText11.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList14);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        mergeAsOpenNLPAnnotatedText11.setPigLogger(pigLogger17);
        pignlproc.evaluation.NoLoopInPath noLoopInPath19 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText20 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        safeTsvText20.setPigLogger(pigLogger21);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText23 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = mergeAsOpenNLPAnnotatedText23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract25.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText23.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = safeTsvText20.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = noLoopInPath19.outputSchema(schema28);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag33 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.NoLoopInPath noLoopInPath34 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText35 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        safeTsvText35.setPigLogger(pigLogger36);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText35.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = noLoopInPath34.outputSchema(schema43);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag46 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText47 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger48 = null;
        safeTsvText47.setPigLogger(pigLogger48);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText50 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable51 = mergeAsOpenNLPAnnotatedText50.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract52 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract52.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = mergeAsOpenNLPAnnotatedText50.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = safeTsvText47.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = aggregateTextBag46.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = noLoopInPath34.outputSchema(schema55);
        pignlproc.evaluation.CheckAbstract checkAbstract59 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum61 = null;
        checkAbstract59.warn("http://.wikipedia.org/wiki/hi%21", enum61);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger63 = null;
        checkAbstract59.setPigLogger(pigLogger63);
        checkAbstract59.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText66 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger67 = null;
        safeTsvText66.setPigLogger(pigLogger67);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText69 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable70 = mergeAsOpenNLPAnnotatedText69.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract71 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = checkAbstract71.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = mergeAsOpenNLPAnnotatedText69.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = safeTsvText66.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = checkAbstract59.outputSchema(schema75);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = noLoopInPath34.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = aggregateTextBag33.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = noLoopInPath19.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = mergeAsOpenNLPAnnotatedText11.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = safeTsvText7.outputSchema(schema80);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = checkAbstract0.outputSchema(schema80);
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer86 = new pignlproc.storage.UriUriNTriplesStorer("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", "http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21\n", "http://http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22.wikipedia.org/wiki/wikiobject");
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList87 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) schema82, (java.lang.Object) "http://http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22.wikipedia.org/wiki/wikiobject");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: org.apache.pig.impl.logicalLayer.schema.Schema cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigLogger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(spanArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi !" + "'", str16, "hi !");
        org.junit.Assert.assertNull(pigProgressable24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(pigProgressable51);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNull(pigProgressable70);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test3312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3312");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22.wikipedia.org/wiki/wikiobject");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.cleanupOnFailure("\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"http://hi!.wikipedia.org/wiki/%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3313");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F%22hi%21%22%0A.wikipedia.org%2Fwiki%2F%2522hi%2521_%2522", "http://http://http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhttp_%253A_%252F%252F_http_%253A_%252F%252F_._wikipedia_._org_%252F_wiki_%252F_hi_%2525_21_._wikipedia_._org_%252F_wiki_%252F_hi_%2525_21", "\"http://.wikipedia.org/wiki/hi%21\"\n\n");
    }

    @Test
    public void test3314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3314");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("\" opennlp / en - sent . bin \"\n");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"\"\" opennlp / en - sent . bin \"\" \"" + "'", str1, "\"\"\" opennlp / en - sent . bin \"\" \"");
    }

    @Test
    public void test3315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3315");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader0 = new pignlproc.storage.UriUriNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job2 = null;
        java.lang.String[] strArray3 = uriUriNTriplesLoader0.getPartitionKeys("title", job2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader0.getSchema("http://.wikipedia.org/wiki/hi%21", job5);
        org.apache.pig.LoadCaster loadCaster7 = uriUriNTriplesLoader0.getLoadCaster();
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        uriUriNTriplesLoader0.prepareToRead(recordReader8, pigSplit9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = uriUriNTriplesLoader0.getInputFormat();
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceStatistics resourceStatistics14 = uriUriNTriplesLoader0.getStatistics("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"href", job13);
        org.junit.Assert.assertNull(strArray3);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(loadCaster7);
        org.junit.Assert.assertNotNull(inputFormat11);
        org.junit.Assert.assertNull(resourceStatistics14);
    }

    @Test
    public void test3316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3316");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract0.setReporter(pigProgressable4);
        pignlproc.evaluation.NoLoopInPath noLoopInPath7 = new pignlproc.evaluation.NoLoopInPath("wikiobject");
        boolean boolean8 = noLoopInPath7.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath9 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = noLoopInPath9.outputSchema(schema18);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink21 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath22 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText23 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        safeTsvText23.setPigLogger(pigLogger24);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText26 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable27 = mergeAsOpenNLPAnnotatedText26.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = checkAbstract28.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = mergeAsOpenNLPAnnotatedText26.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText23.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = noLoopInPath22.outputSchema(schema31);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag34 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText35 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        safeTsvText35.setPigLogger(pigLogger36);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText35.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = aggregateTextBag34.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = noLoopInPath22.outputSchema(schema43);
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum49 = null;
        checkAbstract47.warn("http://.wikipedia.org/wiki/hi%21", enum49);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        checkAbstract47.setPigLogger(pigLogger51);
        checkAbstract47.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText54 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger55 = null;
        safeTsvText54.setPigLogger(pigLogger55);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText57 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable58 = mergeAsOpenNLPAnnotatedText57.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract59 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = checkAbstract59.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = mergeAsOpenNLPAnnotatedText57.outputSchema(schema60);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = safeTsvText54.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = checkAbstract47.outputSchema(schema63);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = noLoopInPath22.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = sentencesWithLink21.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = noLoopInPath9.outputSchema(schema65);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = noLoopInPath7.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = checkAbstract0.outputSchema(schema67);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable70 = checkAbstract0.getReporter();
        java.lang.reflect.Type type71 = checkAbstract0.getReturnType();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNull(pigProgressable27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(pigProgressable58);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNull(pigProgressable70);
        org.junit.Assert.assertNotNull(type71);
    }

    @Test
    public void test3317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3317");
        java.net.URL uRL0 = null;
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader wikipediaRecordReader3 = new pignlproc.format.WikipediaPageInputFormat.WikipediaRecordReader(uRL0, 0L, (long) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3318");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = sentencesWithLink7.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum11 = null;
        checkAbstract9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        java.lang.Enum enum14 = null;
        checkAbstract9.warn("hi !", enum14);
        pignlproc.evaluation.NoLoopInPath noLoopInPath16 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText17 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        safeTsvText17.setPigLogger(pigLogger18);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = safeTsvText17.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = noLoopInPath16.outputSchema(schema25);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag28 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = aggregateTextBag28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath16.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = checkAbstract9.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = sentencesWithLink7.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema41);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
    }

    @Test
    public void test3319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3319");
        pignlproc.evaluation.SafeTsvText safeTsvText0 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum2 = null;
        safeTsvText0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = safeTsvText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = safeTsvText0.getReporter();
        safeTsvText0.progress();
        boolean boolean7 = safeTsvText0.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test3320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3320");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        mergeAsOpenNLPAnnotatedText0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        mergeAsOpenNLPAnnotatedText0.setReporter(pigProgressable9);
        boolean boolean11 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag14 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum16 = null;
        aggregateTextBag14.warn("href", enum16);
        aggregateTextBag14.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = aggregateTextBag14.getPigLogger();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText20 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = mergeAsOpenNLPAnnotatedText20.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = checkAbstract22.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = mergeAsOpenNLPAnnotatedText20.outputSchema(schema23);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser26 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser26.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser26.getWikiLinkAnnotations();
        java.util.List<opennlp.tools.util.Span> spanList29 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) pigLogger19, (java.lang.Object) schema23, (java.lang.Object) annotationList28);
        java.lang.String str30 = mergeAsOpenNLPAnnotatedText0.merge("titlehref", spanList29);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = mergeAsOpenNLPAnnotatedText0.getPigLogger();
        org.apache.pig.data.Tuple tuple32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str33 = mergeAsOpenNLPAnnotatedText0.exec(tuple32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "href" + "'", str5, "href");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(pigLogger19);
        org.junit.Assert.assertNull(pigProgressable21);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNotNull(spanList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "titlehref" + "'", str30, "titlehref");
        org.junit.Assert.assertNull(pigLogger31);
    }

    @Test
    public void test3321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3321");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http://hi! .wikipedia.org/wiki/%22_title_%22\"" + "'", str1, "\"http://hi! .wikipedia.org/wiki/%22_title_%22\"");
    }

    @Test
    public void test3322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3322");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceSchema resourceSchema8 = uriStringLiteralNTriplesLoader2.getSchema("\"title\"\n", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = uriStringLiteralNTriplesLoader2.getStatistics("hi !\n", job10);
        org.apache.pig.LoadCaster loadCaster12 = uriStringLiteralNTriplesLoader2.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = uriStringLiteralNTriplesLoader2.getSchema("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21", job14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple16 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(resourceSchema8);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(loadCaster12);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test3323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3323");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable1 = mergeAsOpenNLPAnnotatedText0.getReporter();
        java.lang.Enum enum3 = null;
        mergeAsOpenNLPAnnotatedText0.warn("title", enum3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        org.apache.commons.logging.Log log8 = mergeAsOpenNLPAnnotatedText0.getLogger();
        org.junit.Assert.assertNull(pigProgressable1);
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertNotNull(log8);
    }

    @Test
    public void test3324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3324");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = parsingWikipediaLoader1.getStatistics("\"hi! \"\n", job5);
        parsingWikipediaLoader1.setUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = parsingWikipediaLoader1.getSchema("\"titlehref\"", job10);
        org.apache.hadoop.mapreduce.InputFormat inputFormat12 = parsingWikipediaLoader1.getInputFormat();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple13 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics6);
        org.junit.Assert.assertNotNull(resourceSchema11);
        org.junit.Assert.assertNotNull(inputFormat12);
    }

    @Test
    public void test3325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3325");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        java.lang.Enum enum5 = null;
        sentencesWithLink0.warn("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", enum5);
        org.junit.Assert.assertNull(pigLogger1);
    }

    @Test
    public void test3326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3326");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("hi!");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = mergeAsOpenNLPAnnotatedText3.getPigLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = mergeAsOpenNLPAnnotatedText3.getArgToFuncMapping();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink7 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        sentencesWithLink7.setPigLogger(pigLogger8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = sentencesWithLink7.getReporter();
        java.lang.reflect.Type type11 = sentencesWithLink7.getReturnType();
        boolean boolean12 = sentencesWithLink7.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = sentencesWithLink7.getPigLogger();
        java.lang.Enum enum15 = null;
        sentencesWithLink7.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", enum15);
        pignlproc.markup.Annotation annotation21 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str22 = annotation21.label;
        java.util.List<opennlp.tools.util.Span> spanList23 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) enum15, (java.lang.Object) str22);
        java.lang.String str24 = mergeAsOpenNLPAnnotatedText3.merge("\"hi!\"", spanList23);
        java.lang.String str25 = mergeAsOpenNLPAnnotatedText1.merge("\"http://.wikipedia.org/wiki/hi%21\"", spanList23);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText1.getReporter();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray30 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList31 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList31, spanArray30);
        java.lang.String str33 = mergeAsOpenNLPAnnotatedText28.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList31);
        pignlproc.evaluation.ConcatTextBag concatTextBag35 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum38 = null;
        checkAbstract36.warn("http://.wikipedia.org/wiki/hi%21", enum38);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger40 = null;
        checkAbstract36.setPigLogger(pigLogger40);
        checkAbstract36.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText43 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger44 = null;
        safeTsvText43.setPigLogger(pigLogger44);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText46 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable47 = mergeAsOpenNLPAnnotatedText46.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract48 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = checkAbstract48.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = mergeAsOpenNLPAnnotatedText46.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = safeTsvText43.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract36.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = concatTextBag35.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema53);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText57 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray59 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList60 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList60, spanArray59);
        java.lang.String str62 = mergeAsOpenNLPAnnotatedText57.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList60);
        java.lang.String str63 = mergeAsOpenNLPAnnotatedText28.merge("\"hi!\"", (java.util.List<opennlp.tools.util.Span>) spanList60);
        java.lang.String str64 = mergeAsOpenNLPAnnotatedText1.merge("titlehref", (java.util.List<opennlp.tools.util.Span>) spanList60);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertNull(pigProgressable10);
        org.junit.Assert.assertNotNull(type11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(pigLogger13);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "title" + "'", str22, "title");
        org.junit.Assert.assertNotNull(spanList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "\" hi ! \"" + "'", str24, "\" hi ! \"");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "\" http : // . wikipedia . org / wiki / hi % 21 \"" + "'", str25, "\" http : // . wikipedia . org / wiki / hi % 21 \"");
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(spanArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "href" + "'", str33, "href");
        org.junit.Assert.assertNull(pigProgressable47);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(spanArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "hi !" + "'", str62, "hi !");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "\" hi ! \"" + "'", str63, "\" hi ! \"");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "titlehref" + "'", str64, "titlehref");
    }

    @Test
    public void test3327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3327");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = null;
        noLoopInPath0.setReporter(pigProgressable25);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        noLoopInPath0.setPigLogger(pigLogger27);
        org.apache.commons.logging.Log log29 = noLoopInPath0.getLogger();
        noLoopInPath0.progress();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(log29);
    }

    @Test
    public void test3328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3328");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("\"title\"\n", "hi!", "");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = uriUriNTriplesLoader3.getStatistics("\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        java.lang.String[] strArray9 = uriUriNTriplesLoader3.getPartitionKeys("", job8);
        org.junit.Assert.assertNull(resourceStatistics6);
        org.junit.Assert.assertNull(strArray9);
    }

    @Test
    public void test3329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3329");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = sentencesWithLink0.getPigLogger();
        java.lang.reflect.Type type7 = sentencesWithLink0.getReturnType();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigLogger6);
        org.junit.Assert.assertNotNull(type7);
    }

    @Test
    public void test3330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3330");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"");
    }

    @Test
    public void test3331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3331");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://\" title \".wikipedia.org/wiki/");
    }

    @Test
    public void test3332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3332");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable2 = concatTextBag1.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = concatTextBag1.getPigLogger();
        concatTextBag1.finish();
        org.apache.commons.logging.Log log5 = concatTextBag1.getLogger();
        org.junit.Assert.assertNull(pigProgressable2);
        org.junit.Assert.assertNull(pigLogger3);
        org.junit.Assert.assertNotNull(log5);
    }

    @Test
    public void test3333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3333");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceStatistics resourceStatistics7 = uriUriNTriplesLoader3.getStatistics("\"hi! \"", job6);
        org.apache.pig.LoadCaster loadCaster8 = uriUriNTriplesLoader3.getLoadCaster();
        uriUriNTriplesLoader3.setUDFContextSignature("");
        uriUriNTriplesLoader3.setUDFContextSignature("http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"href.wikipedia.org/wiki/%22_http_%3A_%2F%2F_hi_%21_._wikipedia_._org_%2F_wiki_%2F_http_%25_3_A_%25_2_F_%25_2_Fhttp_%25_3_A_%25_2_F_%25_2_F_._wikipedia_._org_%25_2_Fwiki_%25_2_Fhi_%25_2521_%25_0_A_._wikipedia_._org_%25_2_Fwiki_%25_2_F_%25_2522_title_%25_2522_%22");
        org.junit.Assert.assertNotNull(inputFormat4);
        org.junit.Assert.assertNull(resourceStatistics7);
        org.junit.Assert.assertNotNull(loadCaster8);
    }

    @Test
    public void test3334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3334");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.RecordReader recordReader5 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit6 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader5, pigSplit6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        java.lang.String[] strArray13 = parsingWikipediaLoader1.getPartitionKeys("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job12);
        org.apache.hadoop.mapreduce.RecordReader recordReader14 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit15 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader14, pigSplit15);
        org.apache.hadoop.mapreduce.Job job18 = null;
        org.apache.pig.ResourceSchema resourceSchema19 = parsingWikipediaLoader1.getSchema("title\n\n", job18);
        org.apache.pig.Expression expression20 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression20);
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNull(strArray13);
        org.junit.Assert.assertNotNull(resourceSchema19);
    }

    @Test
    public void test3335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3335");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("hi!");
        uriUriNTriplesStorer1.setStoreFuncUDFContextSignature("http://http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521");
    }

    @Test
    public void test3336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3336");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://\"title\".wikipedia.org/wiki/%22hi%21%22", true);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink3 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = sentencesWithLink3.getArgToFuncMapping();
        pignlproc.evaluation.CheckAbstract checkAbstract5 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum7 = null;
        checkAbstract5.warn("http://.wikipedia.org/wiki/hi%21", enum7);
        java.lang.Enum enum10 = null;
        checkAbstract5.warn("hi !", enum10);
        pignlproc.evaluation.NoLoopInPath noLoopInPath12 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = noLoopInPath12.outputSchema(schema21);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag24 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText25 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        safeTsvText25.setPigLogger(pigLogger26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = mergeAsOpenNLPAnnotatedText28.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract30.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = safeTsvText25.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = aggregateTextBag24.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = noLoopInPath12.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract5.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = sentencesWithLink3.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = concatTextBag2.outputSchema(schema37);
        concatTextBag2.finish();
        org.apache.commons.logging.Log log41 = concatTextBag2.getLogger();
        org.apache.commons.logging.Log log42 = concatTextBag2.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable43 = null;
        concatTextBag2.setReporter(pigProgressable43);
        org.junit.Assert.assertNull(funcSpecList4);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(log41);
        org.junit.Assert.assertNotNull(log42);
    }

    @Test
    public void test3337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3337");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", "\" hi ! \"", "\"http://.wikipedia.org/wiki/hi%21\"");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = uriUriNTriplesLoader3.getStatistics("\"\"\"\"\"\"\"\"\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\"\"\"\"\" \"\"\"\"\"\"\"", job5);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple7 = uriUriNTriplesLoader3.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics6);
    }

    @Test
    public void test3338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3338");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        checkAbstract0.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText7 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        safeTsvText7.setPigLogger(pigLogger8);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = mergeAsOpenNLPAnnotatedText10.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract12 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema13 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = checkAbstract12.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = mergeAsOpenNLPAnnotatedText10.outputSchema(schema13);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = safeTsvText7.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract0.outputSchema(schema16);
        java.lang.Enum enum19 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum19);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable21 = null;
        checkAbstract0.setReporter(pigProgressable21);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList23 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = null;
        checkAbstract0.setReporter(pigProgressable24);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger26 = null;
        checkAbstract0.setPigLogger(pigLogger26);
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(schema14);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNull(funcSpecList23);
    }

    @Test
    public void test3339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3339");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        java.util.List<java.lang.String> strList5 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser0.getParagraphs();
        info.bliki.wiki.model.WikiModel wikiModel8 = annotatingMarkupParser0.makeWikiModel("hi!");
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser0.getHeaders();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser10 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser10.getHeaders();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser10.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList13 = annotatingMarkupParser10.getHeaderAnnotations();
        java.lang.String str14 = annotatingMarkupParser10.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser15.getHeaders();
        java.lang.Appendable appendable18 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable19 = annotatingMarkupParser15.new CountingAppendable(appendable18);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable20 = annotatingMarkupParser10.new CountingAppendable((java.lang.Appendable) countingAppendable19);
        info.bliki.wiki.model.WikiModel wikiModel22 = annotatingMarkupParser10.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser23 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser23.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser25.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser29 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser29.getHeaders();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser29.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser29.getHeaderAnnotations();
        java.lang.String str33 = annotatingMarkupParser29.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser34.getHeaders();
        java.lang.Appendable appendable37 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable38 = annotatingMarkupParser34.new CountingAppendable(appendable37);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable39 = annotatingMarkupParser29.new CountingAppendable((java.lang.Appendable) countingAppendable38);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser40.getHeaderAnnotations();
        java.lang.String str42 = annotatingMarkupParser40.getRedirect();
        pignlproc.markup.Annotation annotation47 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation52 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int53 = annotation52.end;
        int int54 = annotation52.begin;
        pignlproc.markup.Annotation[] annotationArray55 = new pignlproc.markup.Annotation[] { annotation47, annotation52 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList56 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList56, annotationArray55);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser58 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList59 = annotatingMarkupParser58.getHeaders();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser58.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList61 = annotatingMarkupParser58.getHeaderAnnotations();
        java.lang.String str62 = annotatingMarkupParser58.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser63 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList64 = annotatingMarkupParser63.getHeaders();
        java.util.List<java.lang.String> strList65 = annotatingMarkupParser63.getHeaders();
        java.lang.Appendable appendable66 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable67 = annotatingMarkupParser63.new CountingAppendable(appendable66);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable68 = annotatingMarkupParser58.new CountingAppendable((java.lang.Appendable) countingAppendable67);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser69 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList70 = annotatingMarkupParser69.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel72 = annotatingMarkupParser69.makeWikiModel("title");
        annotatingMarkupParser40.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList56, (java.lang.Appendable) countingAppendable67, (info.bliki.wiki.model.IWikiModel) wikiModel72);
        annotatingMarkupParser23.nodesToText(annotationList28, (java.lang.Appendable) countingAppendable39, (info.bliki.wiki.model.IWikiModel) wikiModel72);
        int int75 = countingAppendable39.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable76 = annotatingMarkupParser10.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        countingAppendable39.currentPosition = (byte) 10;
        int int79 = countingAppendable39.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable80 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable39);
        java.util.List<java.lang.String> strList81 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel83 = annotatingMarkupParser0.makeWikiModel("http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22");
        java.util.List<java.lang.String> strList84 = annotatingMarkupParser0.getHeaders();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(wikiModel8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(annotationList13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(wikiModel22);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 52 + "'", int54 == 52);
        org.junit.Assert.assertNotNull(annotationArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(annotationList61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strList64);
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(annotationList70);
        org.junit.Assert.assertNotNull(wikiModel72);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 10 + "'", int79 == 10);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertNotNull(wikiModel83);
        org.junit.Assert.assertNotNull(strList84);
    }

    @Test
    public void test3340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3340");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("http://http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22.wikipedia.org/wiki/wikiobject", "http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22%22%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%22_%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi%2521.wikipedia.org%252Fwiki%252F%252522http%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%252522%25250A%2522%2522%2522.wikipedia.org%2Fwiki%2Fwikiobject" + "'", str2, "http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/%22opennlp_%2F_en_-_sent_._bin%22%0A.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22%22%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%22_%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi%2521.wikipedia.org%252Fwiki%252F%252522http%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%252522%25250A%2522%2522%2522.wikipedia.org%2Fwiki%2Fwikiobject");
    }

    @Test
    public void test3341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3341");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/hi%21");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\"title\"\n");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\"hi!\"\n");
        java.lang.String str13 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "opennlp/en-sent.bin" + "'", str13, "opennlp/en-sent.bin");
    }

    @Test
    public void test3342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3342");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 1, true);
        java.lang.Enum enum4 = null;
        aggregateTextBag2.warn("http://http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href.wikipedia.org/wiki/http%3A%2F%2F%22opennlp_%2F_en_-_sent_._bin%22.wikipedia.org%2Fwiki%2Fhrefwikiobject%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22wikiobject%22hi%21%22%0Awikiobject%0Awikiobjectopennlp%2Fen-sent.binwikiobjecthttp%3A%2F%2Fhi%21%0A.wikipedia.org%2Fwiki%2Fopennlp_%252F_en_-_sent_._binwikiobjecthttp%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521wikiobjecthttp%3A%2F%2F%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22.wikipedia.org%2Fwiki%2F%2522%2522%2522http%253A%252F%252Fhi_%2521_.wikipedia.org%252Fwiki%252Fhttp%25253A%25252F%25252Fhttp%25253A%25252F%25252F.wikipedia.org%25252Fwiki%25252Fhi%25252521%25250A.wikipedia.org%25252Fwiki%25252F%25252522title%25252522%2522%2522%2522wikiobject%22opennlp_%2F_en_-_sent_._bin%22wikiobject%22%22", enum4);
        boolean boolean6 = aggregateTextBag2.isAsynchronous();
        org.apache.pig.data.Tuple tuple7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str8 = aggregateTextBag2.exec(tuple7);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test3343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3343");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi !", "title", "title");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader4 = new pignlproc.storage.UriStringLiteralNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = uriStringLiteralNTriplesLoader4.getSchema("", job6);
        uriUriNTriplesStorer3.checkSchema(resourceSchema7);
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("hi !\n\n");
        org.junit.Assert.assertNotNull(resourceSchema7);
    }

    @Test
    public void test3344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3344");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"opennlp/en-sent.bin\"\" \"");
    }

    @Test
    public void test3345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3345");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray9 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList10 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList10, spanArray9);
        java.lang.String str12 = mergeAsOpenNLPAnnotatedText7.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList10);
        java.lang.String str13 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = mergeAsOpenNLPAnnotatedText0.getPigLogger();
        mergeAsOpenNLPAnnotatedText0.progress();
        mergeAsOpenNLPAnnotatedText0.progress();
        java.lang.reflect.Type type17 = mergeAsOpenNLPAnnotatedText0.getReturnType();
        java.lang.reflect.Type type18 = mergeAsOpenNLPAnnotatedText0.getReturnType();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNotNull(spanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "href" + "'", str12, "href");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi !" + "'", str13, "hi !");
        org.junit.Assert.assertNull(pigLogger14);
        org.junit.Assert.assertNotNull(type17);
        org.junit.Assert.assertNotNull(type18);
    }

    @Test
    public void test3346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3346");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = checkAbstract0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger5 = checkAbstract0.getPigLogger();
        boolean boolean6 = checkAbstract0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        checkAbstract0.setReporter(pigProgressable7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = checkAbstract0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = checkAbstract0.getReporter();
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigLogger5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(pigLogger9);
        org.junit.Assert.assertNull(pigProgressable10);
    }

    @Test
    public void test3347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3347");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser2 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser2.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser2.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser2.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser6.getHeaderAnnotations();
        java.lang.String str10 = annotatingMarkupParser6.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser17.getHeaderAnnotations();
        java.lang.String str19 = annotatingMarkupParser17.getRedirect();
        pignlproc.markup.Annotation annotation24 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation29 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int30 = annotation29.end;
        int int31 = annotation29.begin;
        pignlproc.markup.Annotation[] annotationArray32 = new pignlproc.markup.Annotation[] { annotation24, annotation29 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList33 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList33, annotationArray32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser35 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList36 = annotatingMarkupParser35.getHeaders();
        java.util.List<java.lang.String> strList37 = annotatingMarkupParser35.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList38 = annotatingMarkupParser35.getHeaderAnnotations();
        java.lang.String str39 = annotatingMarkupParser35.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser40 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList41 = annotatingMarkupParser40.getHeaders();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser40.getHeaders();
        java.lang.Appendable appendable43 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable44 = annotatingMarkupParser40.new CountingAppendable(appendable43);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable45 = annotatingMarkupParser35.new CountingAppendable((java.lang.Appendable) countingAppendable44);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser46 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList47 = annotatingMarkupParser46.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel49 = annotatingMarkupParser46.makeWikiModel("title");
        annotatingMarkupParser17.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList33, (java.lang.Appendable) countingAppendable44, (info.bliki.wiki.model.IWikiModel) wikiModel49);
        annotatingMarkupParser0.nodesToText(annotationList5, (java.lang.Appendable) countingAppendable16, (info.bliki.wiki.model.IWikiModel) wikiModel49);
        java.lang.String str53 = annotatingMarkupParser0.parse("\"title\"\n\n");
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList55 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertNotNull(annotationArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(annotationList38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(annotationList47);
        org.junit.Assert.assertNotNull(wikiModel49);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "\"title\"\n\n" + "'", str53, "\"title\"\n\n");
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(annotationList55);
    }

    @Test
    public void test3348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3348");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("\" http : // http : // \"\" title \"\" . wikipedia . org / wiki / % 22 hi % 21 % 22 . wikipedia . org / wiki / hi % 21 \"", job4);
        org.junit.Assert.assertNotNull(resourceSchema5);
    }

    @Test
    public void test3349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3349");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"title\"\" \"href");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3350");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("\"title\"", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = uriStringLiteralNTriplesLoader2.getSchema("titlehref", job8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = uriStringLiteralNTriplesLoader2.getSchema("\"hi! \"", job11);
        org.apache.hadoop.mapreduce.InputFormat inputFormat13 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNotNull(inputFormat6);
        org.junit.Assert.assertNotNull(resourceSchema9);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(inputFormat13);
    }

    @Test
    public void test3351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3351");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522", "http://hi!\n.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        org.apache.pig.LoadCaster loadCaster4 = uriUriNTriplesLoader3.getLoadCaster();
        org.junit.Assert.assertNotNull(loadCaster4);
    }

    @Test
    public void test3352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3352");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        int int5 = annotation4.begin;
        int int6 = annotation4.begin;
        java.lang.String str7 = annotation4.value;
        int int8 = annotation4.end;
        int int9 = annotation4.end;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 10 + "'", int6 == 10);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    public void test3353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3353");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        aggregateTextBag0.finish();
        pignlproc.evaluation.SafeTsvText safeTsvText2 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum4 = null;
        safeTsvText2.warn("http://.wikipedia.org/wiki/hi%21", enum4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = safeTsvText2.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        safeTsvText2.setReporter(pigProgressable7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = null;
        safeTsvText2.setReporter(pigProgressable9);
        boolean boolean11 = safeTsvText2.isAsynchronous();
        java.lang.Enum enum13 = null;
        safeTsvText2.warn("\"title\"\n", enum13);
        pignlproc.evaluation.ConcatTextBag concatTextBag16 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract17 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum19 = null;
        checkAbstract17.warn("http://.wikipedia.org/wiki/hi%21", enum19);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        checkAbstract17.setPigLogger(pigLogger21);
        checkAbstract17.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract17.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = concatTextBag16.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText2.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag0.outputSchema(schema34);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
    }

    @Test
    public void test3354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3354");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((-1), false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag2.setReporter(pigProgressable3);
        org.apache.commons.logging.Log log5 = aggregateTextBag2.getLogger();
        java.lang.reflect.Type type6 = aggregateTextBag2.getReturnType();
        java.lang.Enum enum8 = null;
        aggregateTextBag2.warn("http://http://.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/hi_%21", enum8);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(type6);
    }

    @Test
    public void test3355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3355");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) '4', true);
        java.lang.reflect.Type type3 = aggregateTextBag2.getReturnType();
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str5 = aggregateTextBag2.exec(tuple4);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.backend.executionengine.ExecException; message: Error while computing aggregate text of bag in AggregateTextBag");
        } catch (org.apache.pig.backend.executionengine.ExecException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(type3);
    }

    @Test
    public void test3356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3356");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser0.getHeaders();
        java.lang.Class<?> wildcardClass7 = strList6.getClass();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3357");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://http://\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/href\".wikipedia.org/wiki/%22_opennlp_%2F_en_-_sent_._bin_%22.wikipedia.org/wiki/http%3A%2F%2F%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22.wikipedia.org%2Fwiki%2F%2522%2522%2522opennlp_%252F_en_-_sent_._bin%2522%2522%2522");
    }

    @Test
    public void test3358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3358");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        java.lang.String[] strArray5 = uriStringLiteralNTriplesLoader2.getPartitionKeys("http://.wikipedia.org/wiki/hi%21\n", job4);
        uriStringLiteralNTriplesLoader2.setUDFContextSignature("");
        org.apache.hadoop.mapreduce.Job job9 = null;
        java.lang.String[] strArray10 = uriStringLiteralNTriplesLoader2.getPartitionKeys("hi!", job9);
        org.apache.hadoop.mapreduce.InputFormat inputFormat11 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.junit.Assert.assertNull(strArray5);
        org.junit.Assert.assertNull(strArray10);
        org.junit.Assert.assertNotNull(inputFormat11);
    }

    @Test
    public void test3359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3359");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/hi%21");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\"opennlp/en-sent.bin\"\n");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
    }

    @Test
    public void test3360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3360");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("href");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("opennlp/en-sent.bin", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("title", job6);
        org.apache.pig.Expression expression8 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression8);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(resourceSchema7);
    }

    @Test
    public void test3361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3361");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser0.getParagraphs();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
    }

    @Test
    public void test3362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3362");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.Enum enum6 = null;
        checkAbstract0.warn("href", enum6);
        org.apache.pig.data.Tuple tuple8 = null;
        java.lang.Boolean boolean9 = checkAbstract0.exec(tuple8);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList10 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        checkAbstract0.setPigLogger(pigLogger11);
        org.apache.commons.logging.Log log13 = checkAbstract0.getLogger();
        java.lang.reflect.Type type14 = checkAbstract0.getReturnType();
        checkAbstract0.finish();
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertEquals("'" + boolean9 + "' != '" + false + "'", boolean9, false);
        org.junit.Assert.assertNull(funcSpecList10);
        org.junit.Assert.assertNotNull(log13);
        org.junit.Assert.assertNotNull(type14);
    }

    @Test
    public void test3363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3363");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://\"title\".wikipedia.org/wiki/%22hi%21%22", true);
        concatTextBag2.finish();
    }

    @Test
    public void test3364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3364");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        java.lang.String[] strArray11 = uriUriNTriplesLoader3.getPartitionKeys("hi !", job10);
        org.apache.hadoop.mapreduce.InputFormat inputFormat12 = uriUriNTriplesLoader3.getInputFormat();
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNull(strArray11);
        org.junit.Assert.assertNotNull(inputFormat12);
    }

    @Test
    public void test3365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3365");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.hadoop.mapreduce.Job job6 = null;
        org.apache.pig.ResourceSchema resourceSchema7 = parsingWikipediaLoader1.getSchema("\"hi!\"", job6);
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader1.getSchema("\"hi!\"\n", job9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("http://.wikipedia.org/wiki/hi%21\n", job12);
        org.apache.pig.Expression expression14 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression14);
        org.apache.hadoop.mapreduce.Job job17 = null;
        org.apache.pig.ResourceStatistics resourceStatistics18 = parsingWikipediaLoader1.getStatistics("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", job17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple19 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
        org.junit.Assert.assertNotNull(resourceSchema7);
        org.junit.Assert.assertNotNull(resourceSchema10);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNull(resourceStatistics18);
    }

    @Test
    public void test3366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3366");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        org.apache.commons.logging.Log log29 = noLoopInPath0.getLogger();
        noLoopInPath0.progress();
        boolean boolean31 = noLoopInPath0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = null;
        noLoopInPath0.setReporter(pigProgressable32);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNotNull(log29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test3367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3367");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        sentencesWithLink0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = null;
        sentencesWithLink0.setReporter(pigProgressable7);
        java.lang.reflect.Type type9 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.progress();
        java.lang.reflect.Type type11 = sentencesWithLink0.getReturnType();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(type11);
    }

    @Test
    public void test3368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3368");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "href" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.String str6 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "");
        java.lang.String str8 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"");
        java.lang.String str10 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "\"title\"");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "href" + "'", str6, "href");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"href" + "'", str8, "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"href");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "\"title\"href" + "'", str10, "\"title\"href");
    }

    @Test
    public void test3369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3369");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("opennlp / en - sent . bin", "http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/%22%22%22_http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22%22%22", "hi!\n");
    }

    @Test
    public void test3370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3370");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.RecordReader recordReader9 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit10 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader9, pigSplit10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriUriNTriplesLoader3.getSchema("\"opennlp / en - sent . bin\"", job13);
        org.apache.pig.LoadCaster loadCaster15 = uriUriNTriplesLoader3.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job17 = null;
        org.apache.pig.ResourceSchema resourceSchema18 = uriUriNTriplesLoader3.getSchema("\"\"\"opennlp / en - sent . bin\"\"\"", job17);
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNotNull(loadCaster15);
        org.junit.Assert.assertNotNull(resourceSchema18);
    }

    @Test
    public void test3371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3371");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (short) 10);
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.Boolean boolean3 = checkAbstract1.exec(tuple2);
        java.lang.reflect.Type type4 = checkAbstract1.getReturnType();
        pignlproc.evaluation.ConcatTextBag concatTextBag6 = new pignlproc.evaluation.ConcatTextBag("\"\"\"hi!\"\" \"");
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = checkAbstract7.getReporter();
        org.apache.pig.data.Tuple tuple9 = null;
        java.lang.Boolean boolean10 = checkAbstract7.exec(tuple9);
        pignlproc.evaluation.NoLoopInPath noLoopInPath11 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText12 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        safeTsvText12.setPigLogger(pigLogger13);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText15 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable16 = mergeAsOpenNLPAnnotatedText15.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract17 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = checkAbstract17.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = mergeAsOpenNLPAnnotatedText15.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = safeTsvText12.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = noLoopInPath11.outputSchema(schema20);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag23 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText24 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        safeTsvText24.setPigLogger(pigLogger25);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText27 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = mergeAsOpenNLPAnnotatedText27.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract29 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = checkAbstract29.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = mergeAsOpenNLPAnnotatedText27.outputSchema(schema30);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = safeTsvText24.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = aggregateTextBag23.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = noLoopInPath11.outputSchema(schema32);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        noLoopInPath11.setPigLogger(pigLogger36);
        org.apache.pig.data.Tuple tuple38 = null;
        java.lang.Boolean boolean39 = noLoopInPath11.exec(tuple38);
        org.apache.commons.logging.Log log40 = noLoopInPath11.getLogger();
        java.util.List<opennlp.tools.util.Span> spanList41 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) tuple9, (java.lang.Object) log40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList42 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) type4, (java.lang.Object) "\"\"\"hi!\"\" \"", (java.lang.Object) log40);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: java.lang.Class cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + boolean3 + "' != '" + false + "'", boolean3, false);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertEquals("'" + boolean10 + "' != '" + false + "'", boolean10, false);
        org.junit.Assert.assertNull(pigProgressable16);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertEquals("'" + boolean39 + "' != '" + true + "'", boolean39, true);
        org.junit.Assert.assertNotNull(log40);
        org.junit.Assert.assertNotNull(spanList41);
    }

    @Test
    public void test3372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3372");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable1 = mergeAsOpenNLPAnnotatedText0.getReporter();
        java.lang.Enum enum3 = null;
        mergeAsOpenNLPAnnotatedText0.warn("title", enum3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList5 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer9 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\n");
        pignlproc.evaluation.ConcatTextBag concatTextBag11 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.data.Tuple tuple12 = null;
        java.lang.String str13 = concatTextBag11.exec(tuple12);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = null;
        concatTextBag11.setReporter(pigProgressable14);
        java.lang.Enum enum17 = null;
        concatTextBag11.warn("hi !\n\n", enum17);
        concatTextBag11.progress();
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<opennlp.tools.util.Span> spanList20 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) mergeAsOpenNLPAnnotatedText0, (java.lang.Object) uriStringLiteralNTriplesStorer9, (java.lang.Object) concatTextBag11);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassCastException; message: pignlproc.evaluation.MergeAsOpenNLPAnnotatedText cannot be cast to java.lang.Integer");
        } catch (java.lang.ClassCastException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(pigProgressable1);
        org.junit.Assert.assertNull(funcSpecList5);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test3373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3373");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser0.getParagraphs();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
    }

    @Test
    public void test3374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3374");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "\"http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21\"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \"http :%20/%20http%20:%20/%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%20.%20wikipedia%20.%20org%20/%20wiki%20/%20hi%20%25%2021%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3375");
        java.lang.String str2 = pignlproc.markup.AnnotatingMarkupParser.titleToUri("http://.wikipedia.org/wiki/hi%21\n", "http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "http://http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A" + "'", str2, "http://http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A");
    }

    @Test
    public void test3376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3376");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader3 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceStatistics resourceStatistics6 = parsingWikipediaLoader3.getStatistics("hi!", job5);
        org.apache.hadoop.mapreduce.Job job8 = null;
        org.apache.pig.ResourceSchema resourceSchema9 = parsingWikipediaLoader3.getSchema("hi!", job8);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.cleanupOnFailure("\"\"", job12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics6);
        org.junit.Assert.assertNotNull(resourceSchema9);
    }

    @Test
    public void test3377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3377");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://\"\"\"http://.wikipedia.org/wiki/hi%21\"\" \".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi%21.wikipedia.org%2Fwiki%2F%2522http%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%2522%250A%22%22%22", "http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", "http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
        java.lang.Object obj4 = null;
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader6 = new pignlproc.storage.ParsingWikipediaLoader("");
        parsingWikipediaLoader6.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = parsingWikipediaLoader6.getStatistics("hi !\n\n", job10);
        org.apache.pig.Expression expression12 = null;
        parsingWikipediaLoader6.setPartitionFilter(expression12);
        java.util.List<opennlp.tools.util.Span> spanList14 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) "http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", obj4, (java.lang.Object) parsingWikipediaLoader6);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(spanList14);
    }

    @Test
    public void test3378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3378");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum3 = null;
        sentencesWithLink0.warn("opennlp / en - sent . bin", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum9 = null;
        checkAbstract7.warn("http://.wikipedia.org/wiki/hi%21", enum9);
        java.lang.Enum enum12 = null;
        checkAbstract7.warn("hi !", enum12);
        pignlproc.evaluation.NoLoopInPath noLoopInPath14 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText15 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = null;
        safeTsvText15.setPigLogger(pigLogger16);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable19 = mergeAsOpenNLPAnnotatedText18.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract20 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = checkAbstract20.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = mergeAsOpenNLPAnnotatedText18.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = safeTsvText15.outputSchema(schema23);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath14.outputSchema(schema23);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag26 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText27 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger28 = null;
        safeTsvText27.setPigLogger(pigLogger28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText30 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable31 = mergeAsOpenNLPAnnotatedText30.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract32 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = checkAbstract32.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = mergeAsOpenNLPAnnotatedText30.outputSchema(schema33);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = safeTsvText27.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = aggregateTextBag26.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = noLoopInPath14.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = checkAbstract7.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = sentencesWithLink0.outputSchema(schema38);
        sentencesWithLink0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = null;
        sentencesWithLink0.setReporter(pigProgressable42);
        boolean boolean44 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable45 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(pigLogger1);
        org.junit.Assert.assertNull(pigProgressable19);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable31);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(pigProgressable45);
    }

    @Test
    public void test3379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3379");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%2521%22%22%22%22%20%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3380");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = sentencesWithLink0.getPigLogger();
        java.lang.Enum enum8 = null;
        sentencesWithLink0.warn("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", enum8);
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigLogger6);
    }

    @Test
    public void test3381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3381");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum4 = null;
        checkAbstract2.warn("http://.wikipedia.org/wiki/hi%21", enum4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        checkAbstract2.setPigLogger(pigLogger6);
        checkAbstract2.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = checkAbstract2.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = concatTextBag1.outputSchema(schema19);
        org.apache.pig.data.Tuple tuple21 = null;
        java.lang.String str22 = concatTextBag1.exec(tuple21);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink23 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList24 = sentencesWithLink23.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        sentencesWithLink23.setPigLogger(pigLogger25);
        java.lang.reflect.Type type27 = sentencesWithLink23.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = sentencesWithLink23.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable29 = sentencesWithLink23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract30 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum32 = null;
        checkAbstract30.warn("http://.wikipedia.org/wiki/hi%21", enum32);
        java.lang.Enum enum35 = null;
        checkAbstract30.warn("hi !", enum35);
        pignlproc.evaluation.NoLoopInPath noLoopInPath37 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText38 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger39 = null;
        safeTsvText38.setPigLogger(pigLogger39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText41 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable42 = mergeAsOpenNLPAnnotatedText41.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract43 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = checkAbstract43.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = mergeAsOpenNLPAnnotatedText41.outputSchema(schema44);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = safeTsvText38.outputSchema(schema46);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = noLoopInPath37.outputSchema(schema46);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag49 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText50 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger51 = null;
        safeTsvText50.setPigLogger(pigLogger51);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText53 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable54 = mergeAsOpenNLPAnnotatedText53.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract55 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = checkAbstract55.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = mergeAsOpenNLPAnnotatedText53.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema59 = safeTsvText50.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema60 = aggregateTextBag49.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema61 = noLoopInPath37.outputSchema(schema58);
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = checkAbstract30.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = sentencesWithLink23.outputSchema(schema61);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = concatTextBag1.outputSchema(schema61);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger65 = null;
        concatTextBag1.setPigLogger(pigLogger65);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag67 = new pignlproc.evaluation.AggregateTextBag();
        org.apache.commons.logging.Log log68 = aggregateTextBag67.getLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable69 = aggregateTextBag67.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable70 = null;
        aggregateTextBag67.setReporter(pigProgressable70);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag72 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText73 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger74 = null;
        safeTsvText73.setPigLogger(pigLogger74);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText76 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable77 = mergeAsOpenNLPAnnotatedText76.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract78 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = checkAbstract78.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = mergeAsOpenNLPAnnotatedText76.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = safeTsvText73.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = aggregateTextBag72.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = aggregateTextBag67.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = concatTextBag1.outputSchema(schema83);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
        org.junit.Assert.assertNull(funcSpecList24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(pigProgressable28);
        org.junit.Assert.assertNull(pigProgressable29);
        org.junit.Assert.assertNull(pigProgressable42);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNull(pigProgressable54);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
        org.junit.Assert.assertNotNull(schema59);
        org.junit.Assert.assertNotNull(schema60);
        org.junit.Assert.assertNotNull(schema61);
        org.junit.Assert.assertNotNull(schema62);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(log68);
        org.junit.Assert.assertNull(pigProgressable69);
        org.junit.Assert.assertNull(pigProgressable77);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
    }

    @Test
    public void test3382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3382");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser3 = new pignlproc.markup.AnnotatingMarkupParser("\"\"\n");
        java.lang.String str5 = annotatingMarkupParser3.parse("\" opennlp / en - sent . bin \"");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser6.getHeaderAnnotations();
        java.lang.String str10 = annotatingMarkupParser6.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser6.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList20 = annotatingMarkupParser19.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList23 = annotatingMarkupParser21.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser21.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getHeaderAnnotations();
        java.lang.String str29 = annotatingMarkupParser25.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.lang.Appendable appendable33 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser30.new CountingAppendable(appendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser25.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser36 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList37 = annotatingMarkupParser36.getHeaderAnnotations();
        java.lang.String str38 = annotatingMarkupParser36.getRedirect();
        pignlproc.markup.Annotation annotation43 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation48 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int49 = annotation48.end;
        int int50 = annotation48.begin;
        pignlproc.markup.Annotation[] annotationArray51 = new pignlproc.markup.Annotation[] { annotation43, annotation48 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList52 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList52, annotationArray51);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser54 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser54.getHeaders();
        java.util.List<java.lang.String> strList56 = annotatingMarkupParser54.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList57 = annotatingMarkupParser54.getHeaderAnnotations();
        java.lang.String str58 = annotatingMarkupParser54.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser59.getHeaders();
        java.util.List<java.lang.String> strList61 = annotatingMarkupParser59.getHeaders();
        java.lang.Appendable appendable62 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable63 = annotatingMarkupParser59.new CountingAppendable(appendable62);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable64 = annotatingMarkupParser54.new CountingAppendable((java.lang.Appendable) countingAppendable63);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList66 = annotatingMarkupParser65.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel68 = annotatingMarkupParser65.makeWikiModel("title");
        annotatingMarkupParser36.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList52, (java.lang.Appendable) countingAppendable63, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        annotatingMarkupParser19.nodesToText(annotationList24, (java.lang.Appendable) countingAppendable35, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        int int71 = countingAppendable35.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable72 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable35);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser73 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList74 = annotatingMarkupParser73.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList75 = annotatingMarkupParser73.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList76 = annotatingMarkupParser73.getParagraphAnnotations();
        java.util.List<java.lang.String> strList77 = annotatingMarkupParser73.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList78 = annotatingMarkupParser73.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser79 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList80 = annotatingMarkupParser79.getHeaderAnnotations();
        java.util.List<java.lang.String> strList81 = annotatingMarkupParser79.getParagraphs();
        java.lang.Appendable appendable82 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable83 = annotatingMarkupParser79.new CountingAppendable(appendable82);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable84 = annotatingMarkupParser73.new CountingAppendable((java.lang.Appendable) countingAppendable83);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable85 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable83);
        int int86 = countingAppendable83.currentPosition;
        int int87 = countingAppendable83.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable88 = annotatingMarkupParser3.new CountingAppendable((java.lang.Appendable) countingAppendable83);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable89 = annotatingMarkupParser1.new CountingAppendable((java.lang.Appendable) countingAppendable88);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "\" opennlp / en - sent . bin \"\n" + "'", str5, "\" opennlp / en - sent . bin \"\n");
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(annotationList20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(annotationList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(annotationList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(annotationList57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(annotationList66);
        org.junit.Assert.assertNotNull(wikiModel68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertNotNull(annotationList75);
        org.junit.Assert.assertNotNull(annotationList76);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(annotationList78);
        org.junit.Assert.assertNotNull(annotationList80);
        org.junit.Assert.assertNotNull(strList81);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
    }

    @Test
    public void test3383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3383");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521", "http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22", "\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"");
        org.apache.hadoop.mapreduce.InputFormat inputFormat4 = uriUriNTriplesLoader3.getInputFormat();
        org.junit.Assert.assertNotNull(inputFormat4);
    }

    @Test
    public void test3384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3384");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema1 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema2 = checkAbstract0.outputSchema(schema1);
        org.apache.pig.data.Tuple tuple3 = null;
        java.lang.Boolean boolean4 = checkAbstract0.exec(tuple3);
        java.lang.reflect.Type type5 = checkAbstract0.getReturnType();
        org.apache.pig.data.Tuple tuple6 = null;
        java.lang.Boolean boolean7 = checkAbstract0.exec(tuple6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = null;
        checkAbstract0.setReporter(pigProgressable8);
        java.lang.Enum enum11 = null;
        checkAbstract0.warn("\"http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21\"", enum11);
        org.junit.Assert.assertNotNull(schema2);
        org.junit.Assert.assertEquals("'" + boolean4 + "' != '" + false + "'", boolean4, false);
        org.junit.Assert.assertNotNull(type5);
        org.junit.Assert.assertEquals("'" + boolean7 + "' != '" + false + "'", boolean7, false);
    }

    @Test
    public void test3385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3385");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("href", "opennlp/en-sent.bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("http://.wikipedia.org/wiki/hi%21", job4);
        org.apache.hadoop.mapreduce.InputFormat inputFormat6 = uriStringLiteralNTriplesLoader2.getInputFormat();
        org.apache.pig.Expression expression7 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.RecordReader recordReader9 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit10 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader9, pigSplit10);
        org.apache.hadoop.mapreduce.RecordReader recordReader12 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit13 = null;
        uriStringLiteralNTriplesLoader2.prepareToRead(recordReader12, pigSplit13);
        org.apache.pig.Expression expression15 = null;
        uriStringLiteralNTriplesLoader2.setPartitionFilter(expression15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple17 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
        org.junit.Assert.assertNotNull(inputFormat6);
    }

    @Test
    public void test3386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3386");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum3 = null;
        aggregateTextBag1.warn("href", enum3);
        pignlproc.evaluation.ConcatTextBag concatTextBag6 = new pignlproc.evaluation.ConcatTextBag("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"href");
        boolean boolean7 = concatTextBag6.isAsynchronous();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink8 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList9 = sentencesWithLink8.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        sentencesWithLink8.setPigLogger(pigLogger10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = null;
        sentencesWithLink8.setReporter(pigProgressable12);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = sentencesWithLink8.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = null;
        sentencesWithLink8.setReporter(pigProgressable15);
        boolean boolean17 = sentencesWithLink8.isAsynchronous();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag19 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        aggregateTextBag19.progress();
        pignlproc.evaluation.ConcatTextBag concatTextBag22 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract23 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum25 = null;
        checkAbstract23.warn("http://.wikipedia.org/wiki/hi%21", enum25);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        checkAbstract23.setPigLogger(pigLogger27);
        checkAbstract23.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText30 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = null;
        safeTsvText30.setPigLogger(pigLogger31);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText33 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable34 = mergeAsOpenNLPAnnotatedText33.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract35 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract35.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = mergeAsOpenNLPAnnotatedText33.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = safeTsvText30.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract23.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = concatTextBag22.outputSchema(schema40);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = aggregateTextBag19.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = sentencesWithLink8.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = concatTextBag6.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = aggregateTextBag1.outputSchema(schema44);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(funcSpecList9);
        org.junit.Assert.assertNull(pigLogger14);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(pigProgressable34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
    }

    @Test
    public void test3387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3387");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("titlehref");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader3 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = parsingWikipediaLoader3.getSchema("title", job5);
        org.apache.pig.LoadCaster loadCaster7 = parsingWikipediaLoader3.getLoadCaster();
        parsingWikipediaLoader3.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader10 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit11 = null;
        parsingWikipediaLoader3.prepareToRead(recordReader10, pigSplit11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = parsingWikipediaLoader3.getSchema("\" title \"", job14);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema15);
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader18 = new pignlproc.storage.ParsingWikipediaLoader("");
        parsingWikipediaLoader18.setUDFContextSignature("hi !");
        org.apache.pig.Expression expression21 = null;
        parsingWikipediaLoader18.setPartitionFilter(expression21);
        org.apache.hadoop.mapreduce.Job job24 = null;
        org.apache.pig.ResourceSchema resourceSchema25 = parsingWikipediaLoader18.getSchema("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22", job24);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema25);
        org.apache.hadoop.fs.Path path28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("http://\"hi!\"\n.wikipedia.org/wiki/%22hi%21_%22", path28);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://\"hi!\"?.wikipedia.org/wiki/%22hi%21_%22 curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(loadCaster7);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNotNull(resourceSchema25);
    }

    @Test
    public void test3388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3388");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", "hi !");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceStatistics resourceStatistics5 = uriStringLiteralNTriplesLoader2.getStatistics("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"", job7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"http://hi%20!%20.wikipedia.org/wiki/http%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics5);
    }

    @Test
    public void test3389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3389");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList2 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = null;
        sentencesWithLink0.setReporter(pigProgressable5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = sentencesWithLink0.getPigLogger();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNull(funcSpecList2);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNull(pigLogger7);
    }

    @Test
    public void test3390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3390");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        java.lang.Enum enum5 = null;
        checkAbstract0.warn("hi !", enum5);
        pignlproc.evaluation.NoLoopInPath noLoopInPath7 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText8 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        safeTsvText8.setPigLogger(pigLogger9);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = mergeAsOpenNLPAnnotatedText11.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = checkAbstract13.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = mergeAsOpenNLPAnnotatedText11.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = safeTsvText8.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = noLoopInPath7.outputSchema(schema16);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag19 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText20 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        safeTsvText20.setPigLogger(pigLogger21);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText23 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = mergeAsOpenNLPAnnotatedText23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract25.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText23.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = safeTsvText20.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = aggregateTextBag19.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath7.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract0.outputSchema(schema31);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList33 = checkAbstract0.getArgToFuncMapping();
        checkAbstract0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = checkAbstract0.getPigLogger();
        org.junit.Assert.assertNull(pigProgressable12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(pigProgressable24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(funcSpecList33);
        org.junit.Assert.assertNull(pigLogger35);
    }

    @Test
    public void test3391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3391");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        sentencesWithLink0.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        java.lang.reflect.Type type6 = sentencesWithLink0.getReturnType();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = sentencesWithLink0.outputSchema(schema7);
        java.lang.Enum enum10 = null;
        sentencesWithLink0.warn("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22", enum10);
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertNotNull(schema8);
    }

    @Test
    public void test3392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3392");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("titlehref");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader3 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = parsingWikipediaLoader3.getSchema("title", job5);
        org.apache.pig.LoadCaster loadCaster7 = parsingWikipediaLoader3.getLoadCaster();
        parsingWikipediaLoader3.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader10 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit11 = null;
        parsingWikipediaLoader3.prepareToRead(recordReader10, pigSplit11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = parsingWikipediaLoader3.getSchema("\" title \"", job14);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema15);
        org.apache.hadoop.fs.Path path18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str19 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\n", path18);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21? curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(loadCaster7);
        org.junit.Assert.assertNotNull(resourceSchema15);
    }

    @Test
    public void test3393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3393");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin");
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser1.getParagraphs();
        java.lang.String str3 = annotatingMarkupParser1.getRedirect();
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test3394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3394");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22\n.wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521", "\"\"\"title\"\" \"");
    }

    @Test
    public void test3395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3395");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http://.wikipedia.org/wiki/\n");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http://.wikipedia.org/wiki/ \"" + "'", str1, "\"http://.wikipedia.org/wiki/ \"");
    }

    @Test
    public void test3396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3396");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 1, false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag2.setReporter(pigProgressable3);
        pignlproc.evaluation.ConcatTextBag concatTextBag6 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = concatTextBag6.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = concatTextBag6.getPigLogger();
        java.lang.Enum enum10 = null;
        concatTextBag6.warn("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", enum10);
        boolean boolean12 = concatTextBag6.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath13 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath13.outputSchema(schema22);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag25 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText26 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger27 = null;
        safeTsvText26.setPigLogger(pigLogger27);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText29 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable30 = mergeAsOpenNLPAnnotatedText29.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract31 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = checkAbstract31.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = mergeAsOpenNLPAnnotatedText29.outputSchema(schema32);
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = safeTsvText26.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = aggregateTextBag25.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = noLoopInPath13.outputSchema(schema34);
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum40 = null;
        checkAbstract38.warn("http://.wikipedia.org/wiki/hi%21", enum40);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        checkAbstract38.setPigLogger(pigLogger42);
        checkAbstract38.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText45 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger46 = null;
        safeTsvText45.setPigLogger(pigLogger46);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText48 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable49 = mergeAsOpenNLPAnnotatedText48.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract50 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = checkAbstract50.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = mergeAsOpenNLPAnnotatedText48.outputSchema(schema51);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = safeTsvText45.outputSchema(schema53);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract38.outputSchema(schema54);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = noLoopInPath13.outputSchema(schema55);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = concatTextBag6.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = aggregateTextBag2.outputSchema(schema56);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable59 = null;
        aggregateTextBag2.setReporter(pigProgressable59);
        java.lang.Enum enum62 = null;
        aggregateTextBag2.warn("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521", enum62);
        java.lang.Enum enum65 = null;
        aggregateTextBag2.warn("\"\"\"title\"\" \"", enum65);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNull(pigLogger8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNull(pigProgressable30);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNotNull(schema34);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNull(pigProgressable49);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test3397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3397");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"href", false);
    }

    @Test
    public void test3398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3398");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://\"title\"\n.wikipedia.org/wiki/", "\"\"\"hi!\"\" \"", "\"hi!\"");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer5 = new pignlproc.storage.UriUriNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat6 = uriUriNTriplesStorer5.getOutputFormat();
        uriUriNTriplesStorer5.setStoreFuncUDFContextSignature("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21");
        uriUriNTriplesStorer5.setStoreFuncUDFContextSignature("\" title \"");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader12 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceStatistics resourceStatistics15 = parsingWikipediaLoader12.getStatistics("hi!", job14);
        org.apache.hadoop.mapreduce.RecordReader recordReader16 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit17 = null;
        parsingWikipediaLoader12.prepareToRead(recordReader16, pigSplit17);
        org.apache.hadoop.mapreduce.Job job20 = null;
        java.lang.String[] strArray21 = parsingWikipediaLoader12.getPartitionKeys("http://.wikipedia.org/wiki/hi%21", job20);
        org.apache.pig.Expression expression22 = null;
        parsingWikipediaLoader12.setPartitionFilter(expression22);
        org.apache.hadoop.mapreduce.Job job25 = null;
        org.apache.pig.ResourceStatistics resourceStatistics26 = parsingWikipediaLoader12.getStatistics("\"hi!\"\n\n", job25);
        org.apache.hadoop.mapreduce.Job job28 = null;
        org.apache.pig.ResourceSchema resourceSchema29 = parsingWikipediaLoader12.getSchema("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", job28);
        uriUriNTriplesStorer5.checkSchema(resourceSchema29);
        uriUriNTriplesStorer3.checkSchema(resourceSchema29);
        org.apache.pig.data.Tuple tuple32 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat6);
        org.junit.Assert.assertNull(resourceStatistics15);
        org.junit.Assert.assertNull(strArray21);
        org.junit.Assert.assertNull(resourceStatistics26);
        org.junit.Assert.assertNotNull(resourceSchema29);
    }

    @Test
    public void test3399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3399");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) (byte) 10);
        java.lang.Enum enum3 = null;
        checkAbstract1.warn("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href", enum3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = checkAbstract1.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        checkAbstract1.setPigLogger(pigLogger6);
        java.lang.Enum enum9 = null;
        checkAbstract1.warn("\"\"\"hi!\"\" \"\n\n", enum9);
        org.junit.Assert.assertNull(pigProgressable5);
    }

    @Test
    public void test3400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3400");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0, true);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink3 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink3.getPigLogger();
        java.lang.Enum enum6 = null;
        sentencesWithLink3.warn("opennlp / en - sent . bin", enum6);
        java.lang.reflect.Type type8 = sentencesWithLink3.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum11 = null;
        safeTsvText9.warn("http://.wikipedia.org/wiki/hi%21", enum11);
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum15 = null;
        checkAbstract13.warn("http://.wikipedia.org/wiki/hi%21", enum15);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        checkAbstract13.setPigLogger(pigLogger17);
        checkAbstract13.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText20 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        safeTsvText20.setPigLogger(pigLogger21);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText23 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = mergeAsOpenNLPAnnotatedText23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract25.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText23.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = safeTsvText20.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = checkAbstract13.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = safeTsvText9.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = sentencesWithLink3.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = aggregateTextBag2.outputSchema(schema29);
        aggregateTextBag2.progress();
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertNotNull(type8);
        org.junit.Assert.assertNull(pigProgressable24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
    }

    @Test
    public void test3401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3401");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        sentencesWithLink0.setReporter(pigProgressable4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = sentencesWithLink0.getReporter();
        sentencesWithLink0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = sentencesWithLink0.getPigLogger();
        java.lang.reflect.Type type9 = sentencesWithLink0.getReturnType();
        java.lang.Class<?> wildcardClass10 = sentencesWithLink0.getClass();
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNull(pigLogger8);
        org.junit.Assert.assertNotNull(type9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test3402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3402");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("http://.wikipedia.org/wiki/hi%21\n", "hi !\n");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceStatistics resourceStatistics5 = uriStringLiteralNTriplesLoader2.getStatistics("\"hi! \"\n", job4);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple6 = uriStringLiteralNTriplesLoader2.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics5);
    }

    @Test
    public void test3403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3403");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        boolean boolean6 = annotatingMarkupParser0.noLinks();
        java.lang.String str8 = annotatingMarkupParser0.parse("\"opennlp / en - sent . bin\"");
        boolean boolean9 = annotatingMarkupParser0.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList11 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList12 = annotatingMarkupParser0.getHeaderAnnotations();
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "\"opennlp / en - sent . bin\"\n" + "'", str8, "\"opennlp / en - sent . bin\"\n");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNotNull(annotationList11);
        org.junit.Assert.assertNotNull(annotationList12);
    }

    @Test
    public void test3404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3404");
        org.apache.hadoop.mapreduce.Job job1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.StoreFunc.cleanupOnFailureImpl("http://.wikipedia.org/wiki/http%3A%2F%2F%22%22%22hi%21%22%22_%22.wikipedia.org%2Fwiki%2F", job1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3405");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("http://\"title\"\n.wikipedia.org/wiki/\n");
        noLoopInPath1.progress();
    }

    @Test
    public void test3406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3406");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("hi !\n\n");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"title\"\n");
        java.lang.Enum enum5 = null;
        mergeAsOpenNLPAnnotatedText3.warn("\"hi!\"\n\n", enum5);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText8 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        pignlproc.evaluation.NoLoopInPath noLoopInPath9 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = noLoopInPath9.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText8.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText3.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = concatTextBag1.outputSchema(schema18);
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
    }

    @Test
    public void test3407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3407");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter2 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter2);
        org.apache.hadoop.mapreduce.Job job5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer1.cleanupOnFailure("http://http://http : // \" hi ! \" . wikipedia . org / wiki / % 22 hi % 21 _ % 22.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%0A.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhttp_%253A_%252F%252F_http_%253A_%252F%252F_._wikipedia_._org_%252F_wiki_%252F_hi_%2525_21_._wikipedia_._org_%252F_wiki_%252F_hi_%2525_21", job5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3408");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.Annotation annotation8 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation13 = new pignlproc.markup.Annotation((int) (byte) 1, (-1), "wikiobject", "href");
        pignlproc.markup.Annotation annotation18 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation23 = new pignlproc.markup.Annotation(10, 10, "title", "hi !");
        pignlproc.markup.Annotation annotation28 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str29 = annotation28.label;
        java.lang.String str30 = annotation28.label;
        pignlproc.markup.Annotation annotation35 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        java.lang.String str36 = annotation35.label;
        java.lang.String str37 = annotation35.label;
        java.lang.String str38 = annotation35.value;
        pignlproc.markup.Annotation[] annotationArray39 = new pignlproc.markup.Annotation[] { annotation8, annotation13, annotation18, annotation23, annotation28, annotation35 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList40 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList40, annotationArray39);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser42 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList43 = annotatingMarkupParser42.getHeaders();
        java.util.List<java.lang.String> strList44 = annotatingMarkupParser42.getHeaders();
        java.lang.Appendable appendable45 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable46 = annotatingMarkupParser42.new CountingAppendable(appendable45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser47 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList48 = annotatingMarkupParser47.getHeaderAnnotations();
        java.lang.String str49 = annotatingMarkupParser47.getRedirect();
        pignlproc.markup.Annotation annotation54 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation59 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int60 = annotation59.end;
        int int61 = annotation59.begin;
        pignlproc.markup.Annotation[] annotationArray62 = new pignlproc.markup.Annotation[] { annotation54, annotation59 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList63 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList63, annotationArray62);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList66 = annotatingMarkupParser65.getHeaders();
        java.util.List<java.lang.String> strList67 = annotatingMarkupParser65.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList68 = annotatingMarkupParser65.getHeaderAnnotations();
        java.lang.String str69 = annotatingMarkupParser65.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser70 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList71 = annotatingMarkupParser70.getHeaders();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser70.getHeaders();
        java.lang.Appendable appendable73 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable74 = annotatingMarkupParser70.new CountingAppendable(appendable73);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable75 = annotatingMarkupParser65.new CountingAppendable((java.lang.Appendable) countingAppendable74);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList77 = annotatingMarkupParser76.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel79 = annotatingMarkupParser76.makeWikiModel("title");
        annotatingMarkupParser47.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList63, (java.lang.Appendable) countingAppendable74, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        annotatingMarkupParser0.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList40, appendable45, (info.bliki.wiki.model.IWikiModel) wikiModel79);
        java.util.List<pignlproc.markup.Annotation> annotationList82 = annotatingMarkupParser0.getParagraphAnnotations();
        boolean boolean83 = annotatingMarkupParser0.noLinks();
        java.util.List<pignlproc.markup.Annotation> annotationList84 = annotatingMarkupParser0.getWikiLinkAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "title" + "'", str29, "title");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "title" + "'", str30, "title");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "title" + "'", str36, "title");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "title" + "'", str37, "title");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(annotationArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(annotationList48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 52 + "'", int61 == 52);
        org.junit.Assert.assertNotNull(annotationArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strList66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertNotNull(annotationList68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strList71);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(annotationList77);
        org.junit.Assert.assertNotNull(wikiModel79);
        org.junit.Assert.assertNotNull(annotationList82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(annotationList84);
    }

    @Test
    public void test3409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3409");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getParagraphs();
        java.lang.Appendable appendable3 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable4 = annotatingMarkupParser0.new CountingAppendable(appendable3);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable6 = countingAppendable4.append((java.lang.CharSequence) "\"http://hi! .wikipedia.org/wiki/%22_title_%22\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(strList2);
    }

    @Test
    public void test3410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3410");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setInputPaths(job0, "\"titlehref\"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3411");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = sentencesWithLink0.getPigLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList7 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        java.lang.reflect.Type type9 = sentencesWithLink0.getReturnType();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigLogger6);
        org.junit.Assert.assertNull(funcSpecList7);
        org.junit.Assert.assertNotNull(type9);
    }

    @Test
    public void test3412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3412");
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader2 = new pignlproc.storage.UriStringLiteralNTriplesLoader("wikiobject", "http://http://hi!\n.wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin");
        org.apache.hadoop.mapreduce.Job job4 = null;
        org.apache.pig.ResourceSchema resourceSchema5 = uriStringLiteralNTriplesLoader2.getSchema("\"opennlp / en - sent . bin\"", job4);
        org.apache.hadoop.mapreduce.Job job7 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesLoader2.setLocation("http://hi!\n.wikipedia.org/wiki/%22_title_%22", job7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema5);
    }

    @Test
    public void test3413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3413");
        org.apache.hadoop.fs.Path path1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str2 = org.apache.pig.LoadFunc.getAbsolutePath("\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\" \"", path1);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location: \"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\" \" curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3414");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger25 = null;
        noLoopInPath0.setPigLogger(pigLogger25);
        org.apache.pig.data.Tuple tuple27 = null;
        java.lang.Boolean boolean28 = noLoopInPath0.exec(tuple27);
        noLoopInPath0.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = noLoopInPath0.getPigLogger();
        org.apache.commons.logging.Log log31 = noLoopInPath0.getLogger();
        pignlproc.evaluation.SentencesWithLink sentencesWithLink32 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger33 = null;
        sentencesWithLink32.setPigLogger(pigLogger33);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable35 = sentencesWithLink32.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable36 = sentencesWithLink32.getReporter();
        boolean boolean37 = sentencesWithLink32.isAsynchronous();
        pignlproc.evaluation.NoLoopInPath noLoopInPath38 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText39 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger40 = null;
        safeTsvText39.setPigLogger(pigLogger40);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText42 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable43 = mergeAsOpenNLPAnnotatedText42.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract44 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = checkAbstract44.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = mergeAsOpenNLPAnnotatedText42.outputSchema(schema45);
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = safeTsvText39.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = noLoopInPath38.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = sentencesWithLink32.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = noLoopInPath0.outputSchema(schema50);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertEquals("'" + boolean28 + "' != '" + true + "'", boolean28, true);
        org.junit.Assert.assertNull(pigLogger30);
        org.junit.Assert.assertNotNull(log31);
        org.junit.Assert.assertNull(pigProgressable35);
        org.junit.Assert.assertNull(pigProgressable36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(pigProgressable43);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
    }

    @Test
    public void test3415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3415");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        java.lang.String str13 = annotatingMarkupParser0.getRedirect();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test3416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3416");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList1 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        org.apache.commons.logging.Log log3 = sentencesWithLink0.getLogger();
        java.lang.reflect.Type type4 = sentencesWithLink0.getReturnType();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        org.junit.Assert.assertNull(funcSpecList1);
        org.junit.Assert.assertNotNull(log3);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test3417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3417");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract3 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum5 = null;
        checkAbstract3.warn("http://.wikipedia.org/wiki/hi%21", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        checkAbstract3.setPigLogger(pigLogger7);
        checkAbstract3.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText10 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger11 = null;
        safeTsvText10.setPigLogger(pigLogger11);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText13 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable14 = mergeAsOpenNLPAnnotatedText13.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = mergeAsOpenNLPAnnotatedText13.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = safeTsvText10.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract3.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = concatTextBag2.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = sentencesWithLink0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger23 = null;
        sentencesWithLink0.setPigLogger(pigLogger23);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray27 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList28 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList28, spanArray27);
        java.lang.String str30 = mergeAsOpenNLPAnnotatedText25.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray34 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList35 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList35, spanArray34);
        java.lang.String str37 = mergeAsOpenNLPAnnotatedText32.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList35);
        java.lang.String str38 = mergeAsOpenNLPAnnotatedText25.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList35);
        pignlproc.evaluation.SafeTsvText safeTsvText39 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type40 = safeTsvText39.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract41 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract41.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText39.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = sentencesWithLink0.outputSchema(schema45);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable47 = sentencesWithLink0.getReporter();
        java.lang.reflect.Type type48 = sentencesWithLink0.getReturnType();
        org.junit.Assert.assertNull(pigProgressable14);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(spanArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "hi !" + "'", str30, "hi !");
        org.junit.Assert.assertNotNull(spanArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "href" + "'", str37, "href");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi !" + "'", str38, "hi !");
        org.junit.Assert.assertNotNull(type40);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNull(pigProgressable47);
        org.junit.Assert.assertNotNull(type48);
    }

    @Test
    public void test3418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3418");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("wikiobject");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.String str3 = concatTextBag1.exec(tuple2);
        concatTextBag1.progress();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
    }

    @Test
    public void test3419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3419");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"", "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href", "\"\"\"opennlp / en - sent . bin\"\"\"");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriStringLiteralNTriplesStorer3.getOutputFormat();
        org.apache.pig.data.Tuple tuple5 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriStringLiteralNTriplesStorer3.putNext(tuple5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat4);
    }

    @Test
    public void test3420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3420");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) '#', false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        aggregateTextBag2.setPigLogger(pigLogger3);
        aggregateTextBag2.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = null;
        aggregateTextBag2.setReporter(pigProgressable6);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = aggregateTextBag2.getPigLogger();
        org.junit.Assert.assertNull(pigLogger8);
    }

    @Test
    public void test3421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3421");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("wikiobject");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        concatTextBag1.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        concatTextBag1.setPigLogger(pigLogger4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = concatTextBag1.getReporter();
        org.apache.pig.data.Tuple tuple7 = null;
        java.lang.String str8 = concatTextBag1.exec(tuple7);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
    }

    @Test
    public void test3422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3422");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList3 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser0.getHeaders();
        java.lang.String str9 = annotatingMarkupParser0.parse("http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(strList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(wikiModel6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22\n" + "'", str9, "http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22\n");
    }

    @Test
    public void test3423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3423");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        java.lang.String str13 = annotatingMarkupParser0.parse("hi!\n");
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser16.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser16.getHeaderAnnotations();
        java.lang.String str20 = annotatingMarkupParser16.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser21.getHeaders();
        java.lang.Appendable appendable24 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser21.new CountingAppendable(appendable24);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser16.new CountingAppendable((java.lang.Appendable) countingAppendable25);
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser16.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel29 = annotatingMarkupParser16.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser30.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel34 = annotatingMarkupParser30.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel36 = annotatingMarkupParser30.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList37 = annotatingMarkupParser30.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList40 = annotatingMarkupParser38.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser38.getParagraphAnnotations();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser38.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = annotatingMarkupParser38.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList45 = annotatingMarkupParser44.getHeaderAnnotations();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser44.getParagraphs();
        java.lang.Appendable appendable47 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser44.new CountingAppendable(appendable47);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser50.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser50.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel54 = annotatingMarkupParser50.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel56 = annotatingMarkupParser50.makeWikiModel("hi!\n");
        annotatingMarkupParser16.nodesToText(annotationList37, (java.lang.Appendable) countingAppendable49, (info.bliki.wiki.model.IWikiModel) wikiModel56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable62 = countingAppendable58.append((java.lang.CharSequence) "http://.wikipedia.org/wiki/%22_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_%22", 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!\n\n" + "'", str13, "hi!\n\n");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(wikiModel29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNotNull(wikiModel34);
        org.junit.Assert.assertNotNull(wikiModel36);
        org.junit.Assert.assertNotNull(annotationList37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(annotationList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(annotationList43);
        org.junit.Assert.assertNotNull(annotationList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNotNull(wikiModel54);
        org.junit.Assert.assertNotNull(wikiModel56);
    }

    @Test
    public void test3424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3424");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        java.lang.Enum enum5 = null;
        checkAbstract0.warn("hi !", enum5);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = checkAbstract0.getReporter();
        org.junit.Assert.assertNull(pigProgressable7);
    }

    @Test
    public void test3425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3425");
        // The following exception was thrown during execution in test generation
        try {
            pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract("http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NumberFormatException; message: For input string: \"http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521?\"");
        } catch (java.lang.NumberFormatException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3426");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText6 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable7 = mergeAsOpenNLPAnnotatedText6.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = checkAbstract8.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = mergeAsOpenNLPAnnotatedText6.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = sentencesWithLink0.outputSchema(schema11);
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(pigProgressable7);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
    }

    @Test
    public void test3427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3427");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        int int5 = annotation4.begin;
        java.lang.String str6 = annotation4.value;
        int int7 = annotation4.begin;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "hi!" + "'", str6, "hi!");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    }

    @Test
    public void test3428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3428");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        sentencesWithLink0.setPigLogger(pigLogger4);
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        java.lang.Enum enum8 = null;
        sentencesWithLink0.warn("http : // \" opennlp / en - sent . bin \" . wikipedia . org / wiki / href", enum8);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable10 = null;
        sentencesWithLink0.setReporter(pigProgressable10);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNotNull(log6);
    }

    @Test
    public void test3429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3429");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList1 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel3 = annotatingMarkupParser0.makeWikiModel("title");
        java.util.List<pignlproc.markup.Annotation> annotationList4 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser6.getHeaders();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList9 = annotatingMarkupParser6.getHeaderAnnotations();
        java.lang.String str10 = annotatingMarkupParser6.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser11 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList12 = annotatingMarkupParser11.getHeaders();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser11.getHeaders();
        java.lang.Appendable appendable14 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable15 = annotatingMarkupParser11.new CountingAppendable(appendable14);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable15);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser17 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser17.getHeaders();
        java.util.List<java.lang.String> strList19 = annotatingMarkupParser17.getHeaders();
        java.lang.Appendable appendable20 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable21 = annotatingMarkupParser17.new CountingAppendable(appendable20);
        countingAppendable21.currentPosition = '#';
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable24 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable21);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getHeaderAnnotations();
        java.lang.String str29 = annotatingMarkupParser25.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.lang.Appendable appendable33 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser30.new CountingAppendable(appendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser25.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable36 = annotatingMarkupParser6.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        countingAppendable34.currentPosition = 0;
        countingAppendable34.currentPosition = (short) 100;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable41 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        countingAppendable34.currentPosition = ' ';
        countingAppendable34.currentPosition = (short) -1;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable49 = countingAppendable34.append((java.lang.CharSequence) "\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\n", (int) (short) 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(annotationList1);
        org.junit.Assert.assertNotNull(wikiModel3);
        org.junit.Assert.assertNotNull(annotationList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(annotationList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strList12);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
    }

    @Test
    public void test3430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3430");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        info.bliki.wiki.model.WikiModel wikiModel12 = annotatingMarkupParser0.makeWikiModel("\"hi!\"\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList14 = annotatingMarkupParser13.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser15 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList16 = annotatingMarkupParser15.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList17 = annotatingMarkupParser15.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser15.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList20 = annotatingMarkupParser19.getHeaders();
        java.util.List<java.lang.String> strList21 = annotatingMarkupParser19.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList22 = annotatingMarkupParser19.getHeaderAnnotations();
        java.lang.String str23 = annotatingMarkupParser19.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser24 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList25 = annotatingMarkupParser24.getHeaders();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser24.getHeaders();
        java.lang.Appendable appendable27 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable28 = annotatingMarkupParser24.new CountingAppendable(appendable27);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable29 = annotatingMarkupParser19.new CountingAppendable((java.lang.Appendable) countingAppendable28);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList31 = annotatingMarkupParser30.getHeaderAnnotations();
        java.lang.String str32 = annotatingMarkupParser30.getRedirect();
        pignlproc.markup.Annotation annotation37 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation42 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int43 = annotation42.end;
        int int44 = annotation42.begin;
        pignlproc.markup.Annotation[] annotationArray45 = new pignlproc.markup.Annotation[] { annotation37, annotation42 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList46 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList46, annotationArray45);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser48 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList49 = annotatingMarkupParser48.getHeaders();
        java.util.List<java.lang.String> strList50 = annotatingMarkupParser48.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList51 = annotatingMarkupParser48.getHeaderAnnotations();
        java.lang.String str52 = annotatingMarkupParser48.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser53 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList54 = annotatingMarkupParser53.getHeaders();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser53.getHeaders();
        java.lang.Appendable appendable56 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable57 = annotatingMarkupParser53.new CountingAppendable(appendable56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser48.new CountingAppendable((java.lang.Appendable) countingAppendable57);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList60 = annotatingMarkupParser59.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel62 = annotatingMarkupParser59.makeWikiModel("title");
        annotatingMarkupParser30.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList46, (java.lang.Appendable) countingAppendable57, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        annotatingMarkupParser13.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable29, (info.bliki.wiki.model.IWikiModel) wikiModel62);
        int int65 = countingAppendable29.currentPosition;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable66 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable29);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable70 = countingAppendable66.append((java.lang.CharSequence) "http://\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\".wikipedia.org/wiki/href", 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(wikiModel12);
        org.junit.Assert.assertNotNull(annotationList14);
        org.junit.Assert.assertNotNull(strList16);
        org.junit.Assert.assertNotNull(annotationList17);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(strList20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertNotNull(annotationList22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertNotNull(annotationArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertNotNull(annotationList51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(annotationList60);
        org.junit.Assert.assertNotNull(wikiModel62);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
    }

    @Test
    public void test3431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3431");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
    }

    @Test
    public void test3432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3432");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.pig.Expression expression8 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression8);
        org.apache.hadoop.mapreduce.Job job11 = null;
        org.apache.pig.ResourceSchema resourceSchema12 = parsingWikipediaLoader1.getSchema("http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin", job11);
        org.apache.hadoop.mapreduce.Job job14 = null;
        org.apache.pig.ResourceSchema resourceSchema15 = parsingWikipediaLoader1.getSchema("\"opennlp / en - sent . bin\"", job14);
        org.apache.pig.LoadCaster loadCaster16 = parsingWikipediaLoader1.getLoadCaster();
        org.apache.hadoop.mapreduce.InputFormat inputFormat17 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceStatistics resourceStatistics20 = parsingWikipediaLoader1.getStatistics("\"titlehref\"", job19);
        org.apache.hadoop.mapreduce.InputFormat inputFormat21 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.Job job23 = null;
        org.apache.pig.ResourceSchema resourceSchema24 = parsingWikipediaLoader1.getSchema("wikiobject", job23);
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema12);
        org.junit.Assert.assertNotNull(resourceSchema15);
        org.junit.Assert.assertNotNull(loadCaster16);
        org.junit.Assert.assertNotNull(inputFormat17);
        org.junit.Assert.assertNull(resourceStatistics20);
        org.junit.Assert.assertNotNull(inputFormat21);
        org.junit.Assert.assertNotNull(resourceSchema24);
    }

    @Test
    public void test3433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3433");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) (short) 0);
        java.lang.Enum enum3 = null;
        aggregateTextBag1.warn("href", enum3);
        aggregateTextBag1.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = aggregateTextBag1.getPigLogger();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable8 = mergeAsOpenNLPAnnotatedText7.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract9 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = checkAbstract9.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = mergeAsOpenNLPAnnotatedText7.outputSchema(schema10);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser13 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser13.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser13.getWikiLinkAnnotations();
        java.util.List<opennlp.tools.util.Span> spanList16 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) pigLogger6, (java.lang.Object) schema10, (java.lang.Object) annotationList15);
        java.lang.Class<?> wildcardClass17 = spanList16.getClass();
        org.junit.Assert.assertNull(pigLogger6);
        org.junit.Assert.assertNull(pigProgressable8);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(spanList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test3434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3434");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = aggregateTextBag0.outputSchema(schema9);
        java.lang.Enum enum13 = null;
        aggregateTextBag0.warn("\"hi!\"\n", enum13);
        boolean boolean15 = aggregateTextBag0.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test3435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3435");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "\"http : // \"\" opennlp / en - sent . bin \"\" . wikipedia . org / wiki / href\"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Relative path in absolute URI: \"http :%20/%20%22%22%20opennlp%20/%20en%20-%20sent%20.%20bin%20%22%22%20.%20wikipedia%20.%20org%20/%20wiki%20/%20href%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3436");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("hi!\n", "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"", "title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader5 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job7 = null;
        org.apache.pig.ResourceStatistics resourceStatistics8 = parsingWikipediaLoader5.getStatistics("hi!", job7);
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = parsingWikipediaLoader5.getSchema("\"hi!\"", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        java.lang.String[] strArray14 = parsingWikipediaLoader5.getPartitionKeys("\"opennlp / en - sent . bin\"\n", job13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        org.apache.pig.ResourceSchema resourceSchema17 = parsingWikipediaLoader5.getSchema("http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href", job16);
        uriUriNTriplesStorer3.checkSchema(resourceSchema17);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat19 = uriUriNTriplesStorer3.getOutputFormat();
        uriUriNTriplesStorer3.setStoreFuncUDFContextSignature("http://http://.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F%22title%22.wikipedia.org%2Fwiki%2F%2522hi%2521%2522.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org/wiki/http%3A%2F%2F%22hi%21%22%0A.wikipedia.org%2Fwiki%2F%2522hi%2521_%2522");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat22 = uriUriNTriplesStorer3.getOutputFormat();
        org.junit.Assert.assertNull(resourceStatistics8);
        org.junit.Assert.assertNotNull(resourceSchema11);
        org.junit.Assert.assertNull(strArray14);
        org.junit.Assert.assertNotNull(resourceSchema17);
        org.junit.Assert.assertNotNull(outputFormat19);
        org.junit.Assert.assertNotNull(outputFormat22);
    }

    @Test
    public void test3437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3437");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("wikiobject");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi !", job3);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.pig.data.Tuple tuple5 = parsingWikipediaLoader1.getNext();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(resourceStatistics4);
    }

    @Test
    public void test3438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3438");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag0 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag3 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 10, false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = aggregateTextBag3.outputSchema(schema9);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink11 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList12 = sentencesWithLink11.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        sentencesWithLink11.setPigLogger(pigLogger13);
        java.lang.reflect.Type type15 = sentencesWithLink11.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable16 = sentencesWithLink11.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = sentencesWithLink11.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        sentencesWithLink11.setPigLogger(pigLogger18);
        pignlproc.evaluation.SentencesWithLink sentencesWithLink20 = new pignlproc.evaluation.SentencesWithLink();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList21 = sentencesWithLink20.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger22 = null;
        sentencesWithLink20.setPigLogger(pigLogger22);
        java.lang.reflect.Type type24 = sentencesWithLink20.getReturnType();
        java.lang.Enum enum26 = null;
        sentencesWithLink20.warn("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", enum26);
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum30 = null;
        checkAbstract28.warn("http://.wikipedia.org/wiki/hi%21", enum30);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = null;
        checkAbstract28.setReporter(pigProgressable32);
        java.lang.reflect.Type type34 = checkAbstract28.getReturnType();
        boolean boolean35 = checkAbstract28.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList36 = checkAbstract28.getArgToFuncMapping();
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = checkAbstract28.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = sentencesWithLink20.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = sentencesWithLink11.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = aggregateTextBag3.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = aggregateTextBag0.outputSchema(schema38);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNull(funcSpecList12);
        org.junit.Assert.assertNotNull(type15);
        org.junit.Assert.assertNull(pigProgressable16);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNull(funcSpecList21);
        org.junit.Assert.assertNotNull(type24);
        org.junit.Assert.assertNotNull(type34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(funcSpecList36);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
    }

    @Test
    public void test3439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3439");
        pignlproc.evaluation.CheckAbstract checkAbstract1 = new pignlproc.evaluation.CheckAbstract((int) '#');
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.Boolean boolean3 = checkAbstract1.exec(tuple2);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList4 = checkAbstract1.getArgToFuncMapping();
        org.apache.commons.logging.Log log5 = checkAbstract1.getLogger();
        java.lang.Class<?> wildcardClass6 = checkAbstract1.getClass();
        org.junit.Assert.assertEquals("'" + boolean3 + "' != '" + false + "'", boolean3, false);
        org.junit.Assert.assertNull(funcSpecList4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test3440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3440");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("\"\"\"\"\"\"\"opennlp / en - sent . bin\"\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "\"\"\"\"\"\"\"opennlp / en - sent . bin\"\"\"\"\"\"\"\n" + "'", str43, "\"\"\"\"\"\"\"opennlp / en - sent . bin\"\"\"\"\"\"\"\n");
    }

    @Test
    public void test3441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3441");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.apache.hadoop.mapreduce.Job job3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.setStoreLocation("http://http://\"opennlp / en - sent . bin\".wikipedia.org/wiki/href\n.wikipedia.org/wiki/%22%22", job3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3442");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser1 = new pignlproc.markup.AnnotatingMarkupParser("\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\" \"");
    }

    @Test
    public void test3443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3443");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        java.lang.Enum enum5 = null;
        checkAbstract0.warn("hi !", enum5);
        pignlproc.evaluation.NoLoopInPath noLoopInPath7 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText8 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        safeTsvText8.setPigLogger(pigLogger9);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = mergeAsOpenNLPAnnotatedText11.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = checkAbstract13.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = mergeAsOpenNLPAnnotatedText11.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = safeTsvText8.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = noLoopInPath7.outputSchema(schema16);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag19 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText20 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        safeTsvText20.setPigLogger(pigLogger21);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText23 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = mergeAsOpenNLPAnnotatedText23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract25.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText23.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = safeTsvText20.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = aggregateTextBag19.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath7.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract0.outputSchema(schema31);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList33 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        checkAbstract0.setPigLogger(pigLogger34);
        org.junit.Assert.assertNull(pigProgressable12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(pigProgressable24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNull(funcSpecList33);
    }

    @Test
    public void test3444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3444");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract2 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum4 = null;
        checkAbstract2.warn("http://.wikipedia.org/wiki/hi%21", enum4);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        checkAbstract2.setPigLogger(pigLogger6);
        checkAbstract2.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = checkAbstract2.outputSchema(schema18);
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = concatTextBag1.outputSchema(schema19);
        boolean boolean21 = concatTextBag1.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test3445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3445");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("\"http://.wikipedia.org/wiki/hi%21\"\n\n");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        noLoopInPath1.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        noLoopInPath1.setReporter(pigProgressable4);
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable9 = checkAbstract6.getReporter();
        checkAbstract6.progress();
        org.apache.pig.data.Tuple tuple11 = null;
        java.lang.Boolean boolean12 = checkAbstract6.exec(tuple11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = null;
        checkAbstract6.setReporter(pigProgressable13);
        pignlproc.evaluation.ConcatTextBag concatTextBag17 = new pignlproc.evaluation.ConcatTextBag("wikiobject", true);
        pignlproc.evaluation.SafeTsvText safeTsvText18 = new pignlproc.evaluation.SafeTsvText();
        java.lang.Enum enum20 = null;
        safeTsvText18.warn("opennlp/en-sent.bin", enum20);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList22 = safeTsvText18.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable23 = safeTsvText18.getReporter();
        pignlproc.evaluation.ConcatTextBag concatTextBag25 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple26 = null;
        java.lang.String str27 = concatTextBag25.exec(tuple26);
        pignlproc.evaluation.NoLoopInPath noLoopInPath28 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = noLoopInPath28.outputSchema(schema37);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag40 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText41 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        safeTsvText41.setPigLogger(pigLogger42);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText44 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable45 = mergeAsOpenNLPAnnotatedText44.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract46 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract46.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = mergeAsOpenNLPAnnotatedText44.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = safeTsvText41.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = aggregateTextBag40.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = noLoopInPath28.outputSchema(schema49);
        pignlproc.evaluation.CheckAbstract checkAbstract53 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum55 = null;
        checkAbstract53.warn("http://.wikipedia.org/wiki/hi%21", enum55);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger57 = null;
        checkAbstract53.setPigLogger(pigLogger57);
        checkAbstract53.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText60 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger61 = null;
        safeTsvText60.setPigLogger(pigLogger61);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText63 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable64 = mergeAsOpenNLPAnnotatedText63.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract65 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = checkAbstract65.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = mergeAsOpenNLPAnnotatedText63.outputSchema(schema66);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = safeTsvText60.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = checkAbstract53.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = noLoopInPath28.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = concatTextBag25.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = safeTsvText18.outputSchema(schema72);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = concatTextBag17.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = checkAbstract6.outputSchema(schema74);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = noLoopInPath1.outputSchema(schema75);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNull(pigProgressable9);
        org.junit.Assert.assertEquals("'" + boolean12 + "' != '" + false + "'", boolean12, false);
        org.junit.Assert.assertNull(funcSpecList22);
        org.junit.Assert.assertNull(pigProgressable23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "" + "'", str27, "");
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(pigProgressable45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNull(pigProgressable64);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
    }

    @Test
    public void test3446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3446");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        java.lang.reflect.Type type2 = mergeAsOpenNLPAnnotatedText1.getReturnType();
        boolean boolean3 = mergeAsOpenNLPAnnotatedText1.isAsynchronous();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        mergeAsOpenNLPAnnotatedText1.setPigLogger(pigLogger4);
        org.junit.Assert.assertNotNull(type2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
    }

    @Test
    public void test3447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3447");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("http://.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521");
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList8 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser0.getParagraphs();
        boolean boolean10 = annotatingMarkupParser0.noLinks();
        java.lang.String str11 = annotatingMarkupParser0.getRedirect();
        java.util.List<pignlproc.markup.Annotation> annotationList12 = annotatingMarkupParser0.getParagraphAnnotations();
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(wikiModel6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(annotationList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(annotationList12);
    }

    @Test
    public void test3448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3448");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("\"\"\"\"\"\"\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/%22title%22href\"\"\"\"\"\"\"", "\"\"\"\"\"\"\" http : // . wikipedia . org / wiki / hi % 21 \"\"\"\" \"\"\"href", "\"title\"\n");
        org.apache.pig.data.Tuple tuple4 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer3.putNext(tuple4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3449");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"\"\" opennlp / en - sent . bin \"\"\"");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText3 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("");
        mergeAsOpenNLPAnnotatedText3.progress();
        boolean boolean5 = mergeAsOpenNLPAnnotatedText3.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText7 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray9 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList10 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList10, spanArray9);
        java.lang.String str12 = mergeAsOpenNLPAnnotatedText7.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger13 = null;
        mergeAsOpenNLPAnnotatedText7.setPigLogger(pigLogger13);
        boolean boolean15 = mergeAsOpenNLPAnnotatedText7.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray19 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList20 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList20, spanArray19);
        java.lang.String str22 = mergeAsOpenNLPAnnotatedText17.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList20);
        java.lang.String str23 = mergeAsOpenNLPAnnotatedText7.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList20);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText25 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = mergeAsOpenNLPAnnotatedText25.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract27 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = checkAbstract27.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = mergeAsOpenNLPAnnotatedText25.outputSchema(schema28);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray34 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList35 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList35, spanArray34);
        java.lang.String str37 = mergeAsOpenNLPAnnotatedText32.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList35);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText39 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray41 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList42 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList42, spanArray41);
        java.lang.String str44 = mergeAsOpenNLPAnnotatedText39.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList42);
        java.lang.String str45 = mergeAsOpenNLPAnnotatedText32.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList42);
        java.lang.String str46 = mergeAsOpenNLPAnnotatedText25.merge("title", (java.util.List<opennlp.tools.util.Span>) spanList42);
        java.lang.String str47 = mergeAsOpenNLPAnnotatedText7.merge("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", (java.util.List<opennlp.tools.util.Span>) spanList42);
        java.lang.String str48 = mergeAsOpenNLPAnnotatedText3.merge("hi!\n", (java.util.List<opennlp.tools.util.Span>) spanList42);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag49 = new pignlproc.evaluation.AggregateTextBag();
        org.apache.commons.logging.Log log50 = aggregateTextBag49.getLogger();
        java.lang.reflect.Type type51 = aggregateTextBag49.getReturnType();
        pignlproc.evaluation.ConcatTextBag concatTextBag53 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract54 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum56 = null;
        checkAbstract54.warn("http://.wikipedia.org/wiki/hi%21", enum56);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger58 = null;
        checkAbstract54.setPigLogger(pigLogger58);
        checkAbstract54.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText61 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger62 = null;
        safeTsvText61.setPigLogger(pigLogger62);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText64 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable65 = mergeAsOpenNLPAnnotatedText64.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract66 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract66.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText64.outputSchema(schema67);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = safeTsvText61.outputSchema(schema69);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = checkAbstract54.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = concatTextBag53.outputSchema(schema71);
        org.apache.pig.data.Tuple tuple73 = null;
        java.lang.String str74 = concatTextBag53.exec(tuple73);
        pignlproc.evaluation.ConcatTextBag concatTextBag76 = new pignlproc.evaluation.ConcatTextBag("opennlp/en-sent.bin");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable77 = concatTextBag76.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger78 = concatTextBag76.getPigLogger();
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = concatTextBag76.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = concatTextBag53.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = aggregateTextBag49.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = mergeAsOpenNLPAnnotatedText3.outputSchema(schema81);
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = mergeAsOpenNLPAnnotatedText1.outputSchema(schema81);
        java.lang.reflect.Type type85 = mergeAsOpenNLPAnnotatedText1.getReturnType();
        java.lang.Enum enum87 = null;
        mergeAsOpenNLPAnnotatedText1.warn("\"hi!\"\n", enum87);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(spanArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi !" + "'", str12, "hi !");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(spanArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "href" + "'", str22, "href");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "opennlp / en - sent . bin" + "'", str23, "opennlp / en - sent . bin");
        org.junit.Assert.assertNull(pigProgressable26);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(spanArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "hi !" + "'", str37, "hi !");
        org.junit.Assert.assertNotNull(spanArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "href" + "'", str44, "href");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "hi !" + "'", str45, "hi !");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "title" + "'", str46, "title");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21" + "'", str47, "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi !" + "'", str48, "hi !");
        org.junit.Assert.assertNotNull(log50);
        org.junit.Assert.assertNotNull(type51);
        org.junit.Assert.assertNull(pigProgressable65);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
        org.junit.Assert.assertNull(pigProgressable77);
        org.junit.Assert.assertNull(pigLogger78);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
        org.junit.Assert.assertNotNull(schema83);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(type85);
    }

    @Test
    public void test3450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3450");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.util.List<pignlproc.markup.Annotation> annotationList42 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel44 = annotatingMarkupParser0.makeWikiModel("\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertNotNull(annotationList42);
        org.junit.Assert.assertNotNull(wikiModel44);
    }

    @Test
    public void test3451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3451");
        pignlproc.markup.Annotation annotation4 = new pignlproc.markup.Annotation((int) (short) -1, (int) (short) 0, "\"http://http://hi! .wikipedia.org/wiki/%22_title_%22.wikipedia.org/wiki/opennlp_%2F_en_-_sent_._bin\"", "hi !\n\nhref");
        int int5 = annotation4.end;
        int int6 = annotation4.begin;
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test3452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3452");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.setMaxInputSplitSize(job0, (long) 97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3453");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("\"opennlp / en - sent . bin\"");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("http://http://\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\".wikipedia.org/wiki/%22%22%22opennlp_%2F_en_-_sent_._bin%22%22%22.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521.wikipedia.org%2Fwiki%2Fhi_%2521", job3);
        org.junit.Assert.assertNull(resourceStatistics4);
    }

    @Test
    public void test3454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3454");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http : // . wikipedia . org / wiki / hi % 21");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http : // . wikipedia . org / wiki / hi % 21\"" + "'", str1, "\"http : // . wikipedia . org / wiki / hi % 21\"");
    }

    @Test
    public void test3455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3455");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("http://.wikipedia.org/wiki/");
    }

    @Test
    public void test3456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3456");
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader3 = new pignlproc.storage.UriUriNTriplesLoader("http://.wikipedia.org/wiki/hi%21", "hi!", "href");
        org.apache.hadoop.mapreduce.Job job5 = null;
        org.apache.pig.ResourceSchema resourceSchema6 = uriUriNTriplesLoader3.getSchema("", job5);
        org.apache.pig.Expression expression7 = null;
        uriUriNTriplesLoader3.setPartitionFilter(expression7);
        org.apache.hadoop.mapreduce.RecordReader recordReader9 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit10 = null;
        uriUriNTriplesLoader3.prepareToRead(recordReader9, pigSplit10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = uriUriNTriplesLoader3.getSchema("\"opennlp / en - sent . bin\"", job13);
        org.apache.hadoop.mapreduce.Job job16 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesLoader3.setLocation("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin", job16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(resourceSchema6);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test3457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3457");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("title", false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        concatTextBag2.setPigLogger(pigLogger3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = mergeAsOpenNLPAnnotatedText5.getReporter();
        java.lang.Enum enum8 = null;
        mergeAsOpenNLPAnnotatedText5.warn("title", enum8);
        org.apache.commons.logging.Log log10 = mergeAsOpenNLPAnnotatedText5.getLogger();
        pignlproc.evaluation.SafeTsvText safeTsvText11 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type12 = safeTsvText11.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = checkAbstract13.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = safeTsvText11.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText5.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = concatTextBag2.outputSchema(schema16);
        java.lang.reflect.Type type19 = concatTextBag2.getReturnType();
        concatTextBag2.finish();
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNotNull(log10);
        org.junit.Assert.assertNotNull(type12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(type19);
    }

    @Test
    public void test3458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3458");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://wikiobject.wikipedia.org/wiki/opennlp%2Fen-sent.bin", "wikiobject", "http : // . wikipedia . org / wiki / hi % 21");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat4 = uriUriNTriplesStorer3.getOutputFormat();
        pignlproc.storage.UriUriNTriplesLoader uriUriNTriplesLoader8 = new pignlproc.storage.UriUriNTriplesLoader("hi !", "opennlp/en-sent.bin", "wikiobject");
        org.apache.pig.Expression expression9 = null;
        uriUriNTriplesLoader8.setPartitionFilter(expression9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = uriUriNTriplesLoader8.getSchema("\"\"\n", job12);
        uriUriNTriplesStorer3.checkSchema(resourceSchema13);
        org.junit.Assert.assertNotNull(outputFormat4);
        org.junit.Assert.assertNotNull(resourceSchema13);
    }

    @Test
    public void test3459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3459");
        java.lang.String[] strArray2 = new java.lang.String[] { "", "href" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        java.lang.String str6 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "");
        java.lang.String str8 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21");
        java.lang.String str10 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList3, "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        pignlproc.evaluation.CheckAbstract checkAbstract11 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum13 = null;
        checkAbstract11.warn("http://.wikipedia.org/wiki/hi%21", enum13);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable15 = checkAbstract11.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger16 = checkAbstract11.getPigLogger();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = checkAbstract11.getPigLogger();
        org.apache.pig.data.Tuple tuple18 = null;
        java.lang.Boolean boolean19 = checkAbstract11.exec(tuple18);
        java.util.List<opennlp.tools.util.Span> spanList20 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) strList3, (java.lang.Object) tuple18);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "href" + "'", str6, "href");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href" + "'", str8, "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href" + "'", str10, "http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22href");
        org.junit.Assert.assertNull(pigProgressable15);
        org.junit.Assert.assertNull(pigLogger16);
        org.junit.Assert.assertNull(pigLogger17);
        org.junit.Assert.assertEquals("'" + boolean19 + "' != '" + false + "'", boolean19, false);
        org.junit.Assert.assertNotNull(spanList20);
    }

    @Test
    public void test3460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3460");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((-1), false);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = null;
        aggregateTextBag2.setReporter(pigProgressable3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray7 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList8 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList8, spanArray7);
        java.lang.String str10 = mergeAsOpenNLPAnnotatedText5.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList8);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList11 = mergeAsOpenNLPAnnotatedText5.getArgToFuncMapping();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray14 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList15 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList15, spanArray14);
        java.lang.String str17 = mergeAsOpenNLPAnnotatedText12.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList15);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger18 = null;
        mergeAsOpenNLPAnnotatedText12.setPigLogger(pigLogger18);
        boolean boolean20 = mergeAsOpenNLPAnnotatedText12.isAsynchronous();
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum23 = null;
        checkAbstract21.warn("http://.wikipedia.org/wiki/hi%21", enum23);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = null;
        checkAbstract21.setReporter(pigProgressable25);
        java.lang.reflect.Type type27 = checkAbstract21.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath28 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText29 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        safeTsvText29.setPigLogger(pigLogger30);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText32 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable33 = mergeAsOpenNLPAnnotatedText32.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract34 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = checkAbstract34.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = mergeAsOpenNLPAnnotatedText32.outputSchema(schema35);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = safeTsvText29.outputSchema(schema37);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = noLoopInPath28.outputSchema(schema37);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag40 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText41 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        safeTsvText41.setPigLogger(pigLogger42);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText44 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable45 = mergeAsOpenNLPAnnotatedText44.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract46 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = checkAbstract46.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = mergeAsOpenNLPAnnotatedText44.outputSchema(schema47);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = safeTsvText41.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = aggregateTextBag40.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = noLoopInPath28.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = checkAbstract21.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = mergeAsOpenNLPAnnotatedText5.outputSchema(schema49);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = aggregateTextBag2.outputSchema(schema49);
        pignlproc.evaluation.CheckAbstract checkAbstract57 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum59 = null;
        checkAbstract57.warn("http://.wikipedia.org/wiki/hi%21", enum59);
        java.lang.Enum enum62 = null;
        checkAbstract57.warn("hi !", enum62);
        pignlproc.evaluation.NoLoopInPath noLoopInPath64 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText65 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger66 = null;
        safeTsvText65.setPigLogger(pigLogger66);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText68 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable69 = mergeAsOpenNLPAnnotatedText68.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract70 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = checkAbstract70.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = mergeAsOpenNLPAnnotatedText68.outputSchema(schema71);
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = safeTsvText65.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = noLoopInPath64.outputSchema(schema73);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag76 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText77 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger78 = null;
        safeTsvText77.setPigLogger(pigLogger78);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText80 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable81 = mergeAsOpenNLPAnnotatedText80.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract82 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema83 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema84 = checkAbstract82.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema85 = mergeAsOpenNLPAnnotatedText80.outputSchema(schema83);
        org.apache.pig.impl.logicalLayer.schema.Schema schema86 = safeTsvText77.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema87 = aggregateTextBag76.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema88 = noLoopInPath64.outputSchema(schema85);
        org.apache.pig.impl.logicalLayer.schema.Schema schema89 = checkAbstract57.outputSchema(schema88);
        org.apache.pig.impl.logicalLayer.schema.Schema schema90 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema91 = checkAbstract57.outputSchema(schema90);
        org.apache.pig.impl.logicalLayer.schema.Schema schema92 = aggregateTextBag2.outputSchema(schema90);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList93 = aggregateTextBag2.getArgToFuncMapping();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList94 = aggregateTextBag2.getArgToFuncMapping();
        org.junit.Assert.assertNotNull(spanArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi !" + "'", str10, "hi !");
        org.junit.Assert.assertNull(funcSpecList11);
        org.junit.Assert.assertNotNull(spanArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi !" + "'", str17, "hi !");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(pigProgressable33);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNull(pigProgressable45);
        org.junit.Assert.assertNotNull(schema48);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNull(pigProgressable69);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertNotNull(schema73);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNull(pigProgressable81);
        org.junit.Assert.assertNotNull(schema84);
        org.junit.Assert.assertNotNull(schema85);
        org.junit.Assert.assertNotNull(schema86);
        org.junit.Assert.assertNotNull(schema87);
        org.junit.Assert.assertNotNull(schema88);
        org.junit.Assert.assertNotNull(schema89);
        org.junit.Assert.assertNotNull(schema91);
        org.junit.Assert.assertNotNull(schema92);
        org.junit.Assert.assertNull(funcSpecList93);
        org.junit.Assert.assertNull(funcSpecList94);
    }

    @Test
    public void test3461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3461");
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath("\"http://\"\"opennlp / en - sent . bin\"\".wikipedia.org/wiki/hrefwikiobject\"\"\"\"\"\"http://hi!.wikipedia.org/wiki/%22http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%22%0A\"\"\"\"\"\"wikiobject\"\"hi!\"\" wikiobject wikiobjectopennlp/en-sent.binwikiobjecthttp://hi! .wikipedia.org/wiki/opennlp_%2F_en_-_sent_._binwikiobjecthttp://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21wikiobjecthttp://\"\"http://.wikipedia.org/wiki/hi%21\"\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22wikiobject\"\"opennlp / en - sent . bin\"\"wikiobject\"\"\"\"\"");
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        noLoopInPath1.setPigLogger(pigLogger2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = noLoopInPath1.getPigLogger();
        org.junit.Assert.assertNull(pigLogger4);
    }

    @Test
    public void test3462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3462");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = null;
        checkAbstract0.setReporter(pigProgressable4);
        java.lang.reflect.Type type6 = checkAbstract0.getReturnType();
        boolean boolean7 = checkAbstract0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList8 = checkAbstract0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        checkAbstract0.setPigLogger(pigLogger9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable11 = checkAbstract0.getReporter();
        java.lang.Enum enum13 = null;
        checkAbstract0.warn("hi !\n", enum13);
        java.lang.Enum enum16 = null;
        checkAbstract0.warn("\"title\"", enum16);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = null;
        checkAbstract0.setReporter(pigProgressable18);
        java.lang.Enum enum21 = null;
        checkAbstract0.warn("\"http://http://.wikipedia.org/wiki/hi%21 .wikipedia.org/wiki/hi%21\"", enum21);
        java.lang.reflect.Type type23 = checkAbstract0.getReturnType();
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(funcSpecList8);
        org.junit.Assert.assertNull(pigProgressable11);
        org.junit.Assert.assertNotNull(type23);
    }

    @Test
    public void test3463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3463");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "\" hi ! \"\n");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3464");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel4 = annotatingMarkupParser0.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel6 = annotatingMarkupParser0.makeWikiModel("hi!\n");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser7 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser7.getHeaders();
        java.util.List<java.lang.String> strList9 = annotatingMarkupParser7.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList10 = annotatingMarkupParser7.getHeaderAnnotations();
        java.lang.String str11 = annotatingMarkupParser7.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser12 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList13 = annotatingMarkupParser12.getHeaders();
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser12.getHeaders();
        java.lang.Appendable appendable15 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable16 = annotatingMarkupParser12.new CountingAppendable(appendable15);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable17 = annotatingMarkupParser7.new CountingAppendable((java.lang.Appendable) countingAppendable16);
        java.util.List<pignlproc.markup.Annotation> annotationList18 = annotatingMarkupParser7.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser19 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList20 = annotatingMarkupParser19.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList23 = annotatingMarkupParser21.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser21.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser25 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser25.getHeaders();
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser25.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList28 = annotatingMarkupParser25.getHeaderAnnotations();
        java.lang.String str29 = annotatingMarkupParser25.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<java.lang.String> strList32 = annotatingMarkupParser30.getHeaders();
        java.lang.Appendable appendable33 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable34 = annotatingMarkupParser30.new CountingAppendable(appendable33);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable35 = annotatingMarkupParser25.new CountingAppendable((java.lang.Appendable) countingAppendable34);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser36 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList37 = annotatingMarkupParser36.getHeaderAnnotations();
        java.lang.String str38 = annotatingMarkupParser36.getRedirect();
        pignlproc.markup.Annotation annotation43 = new pignlproc.markup.Annotation((int) (short) 10, (int) (short) 10, "title", "hi!");
        pignlproc.markup.Annotation annotation48 = new pignlproc.markup.Annotation((int) '4', (int) (byte) 0, "http://.wikipedia.org/wiki/hi%21", "http://.wikipedia.org/wiki/hi%21");
        int int49 = annotation48.end;
        int int50 = annotation48.begin;
        pignlproc.markup.Annotation[] annotationArray51 = new pignlproc.markup.Annotation[] { annotation43, annotation48 };
        java.util.ArrayList<pignlproc.markup.Annotation> annotationList52 = new java.util.ArrayList<pignlproc.markup.Annotation>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<pignlproc.markup.Annotation>) annotationList52, annotationArray51);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser54 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList55 = annotatingMarkupParser54.getHeaders();
        java.util.List<java.lang.String> strList56 = annotatingMarkupParser54.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList57 = annotatingMarkupParser54.getHeaderAnnotations();
        java.lang.String str58 = annotatingMarkupParser54.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser59 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList60 = annotatingMarkupParser59.getHeaders();
        java.util.List<java.lang.String> strList61 = annotatingMarkupParser59.getHeaders();
        java.lang.Appendable appendable62 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable63 = annotatingMarkupParser59.new CountingAppendable(appendable62);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable64 = annotatingMarkupParser54.new CountingAppendable((java.lang.Appendable) countingAppendable63);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser65 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList66 = annotatingMarkupParser65.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel68 = annotatingMarkupParser65.makeWikiModel("title");
        annotatingMarkupParser36.nodesToText((java.util.List<pignlproc.markup.Annotation>) annotationList52, (java.lang.Appendable) countingAppendable63, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        annotatingMarkupParser19.nodesToText(annotationList24, (java.lang.Appendable) countingAppendable35, (info.bliki.wiki.model.IWikiModel) wikiModel68);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser71 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList72 = annotatingMarkupParser71.getHeaders();
        java.util.List<java.lang.String> strList73 = annotatingMarkupParser71.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList74 = annotatingMarkupParser71.getHeaderAnnotations();
        java.lang.String str75 = annotatingMarkupParser71.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser76 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList77 = annotatingMarkupParser76.getHeaders();
        java.util.List<java.lang.String> strList78 = annotatingMarkupParser76.getHeaders();
        java.lang.Appendable appendable79 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable80 = annotatingMarkupParser76.new CountingAppendable(appendable79);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable81 = annotatingMarkupParser71.new CountingAppendable((java.lang.Appendable) countingAppendable80);
        java.util.List<java.lang.String> strList82 = annotatingMarkupParser71.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel84 = annotatingMarkupParser71.makeWikiModel("opennlp / en - sent . bin");
        annotatingMarkupParser0.nodesToText(annotationList18, (java.lang.Appendable) countingAppendable35, (info.bliki.wiki.model.IWikiModel) wikiModel84);
        int int86 = countingAppendable35.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable88 = countingAppendable35.append((java.lang.CharSequence) "\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\" \"");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(wikiModel4);
        org.junit.Assert.assertNotNull(wikiModel6);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertNotNull(strList9);
        org.junit.Assert.assertNotNull(annotationList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strList13);
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList18);
        org.junit.Assert.assertNotNull(annotationList20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(annotationList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(annotationList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(annotationList37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertNotNull(annotationArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strList55);
        org.junit.Assert.assertNotNull(strList56);
        org.junit.Assert.assertNotNull(annotationList57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strList60);
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertNotNull(annotationList66);
        org.junit.Assert.assertNotNull(wikiModel68);
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertNotNull(strList73);
        org.junit.Assert.assertNotNull(annotationList74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(strList77);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(wikiModel84);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test3465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3465");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.apache.commons.logging.Log log7 = mergeAsOpenNLPAnnotatedText0.getLogger();
        pignlproc.evaluation.CheckAbstract checkAbstract8 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum10 = null;
        checkAbstract8.warn("http://.wikipedia.org/wiki/hi%21", enum10);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = null;
        checkAbstract8.setReporter(pigProgressable12);
        java.lang.reflect.Type type14 = checkAbstract8.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath15 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText16 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger17 = null;
        safeTsvText16.setPigLogger(pigLogger17);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText19 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable20 = mergeAsOpenNLPAnnotatedText19.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract21 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = checkAbstract21.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = mergeAsOpenNLPAnnotatedText19.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = safeTsvText16.outputSchema(schema24);
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = noLoopInPath15.outputSchema(schema24);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag27 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText28 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger29 = null;
        safeTsvText28.setPigLogger(pigLogger29);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText31 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable32 = mergeAsOpenNLPAnnotatedText31.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract33 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema34 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema35 = checkAbstract33.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = mergeAsOpenNLPAnnotatedText31.outputSchema(schema34);
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = safeTsvText28.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = aggregateTextBag27.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = noLoopInPath15.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract8.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText0.outputSchema(schema40);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger42 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger42);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList44 = mergeAsOpenNLPAnnotatedText0.getArgToFuncMapping();
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(type14);
        org.junit.Assert.assertNull(pigProgressable20);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNull(pigProgressable32);
        org.junit.Assert.assertNotNull(schema35);
        org.junit.Assert.assertNotNull(schema36);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNull(funcSpecList44);
    }

    @Test
    public void test3466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3466");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag1 = new pignlproc.evaluation.AggregateTextBag((int) '4');
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        aggregateTextBag1.setPigLogger(pigLogger2);
        org.apache.commons.logging.Log log4 = aggregateTextBag1.getLogger();
        aggregateTextBag1.finish();
        org.junit.Assert.assertNotNull(log4);
    }

    @Test
    public void test3467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3467");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<java.lang.String> strList2 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getHeaderAnnotations();
        java.lang.String str4 = annotatingMarkupParser0.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser5 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList6 = annotatingMarkupParser5.getHeaders();
        java.util.List<java.lang.String> strList7 = annotatingMarkupParser5.getHeaders();
        java.lang.Appendable appendable8 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable9 = annotatingMarkupParser5.new CountingAppendable(appendable8);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable9);
        java.util.List<java.lang.String> strList11 = annotatingMarkupParser0.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel13 = annotatingMarkupParser0.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser14 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList15 = annotatingMarkupParser14.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList16 = annotatingMarkupParser14.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel18 = annotatingMarkupParser14.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel20 = annotatingMarkupParser14.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList21 = annotatingMarkupParser14.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser22 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser22.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList24 = annotatingMarkupParser22.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList25 = annotatingMarkupParser22.getParagraphAnnotations();
        java.util.List<java.lang.String> strList26 = annotatingMarkupParser22.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList27 = annotatingMarkupParser22.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser28 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList29 = annotatingMarkupParser28.getHeaderAnnotations();
        java.util.List<java.lang.String> strList30 = annotatingMarkupParser28.getParagraphs();
        java.lang.Appendable appendable31 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable32 = annotatingMarkupParser28.new CountingAppendable(appendable31);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable33 = annotatingMarkupParser22.new CountingAppendable((java.lang.Appendable) countingAppendable32);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser34 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList35 = annotatingMarkupParser34.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList36 = annotatingMarkupParser34.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel38 = annotatingMarkupParser34.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel40 = annotatingMarkupParser34.makeWikiModel("hi!\n");
        annotatingMarkupParser0.nodesToText(annotationList21, (java.lang.Appendable) countingAppendable33, (info.bliki.wiki.model.IWikiModel) wikiModel40);
        java.lang.String str43 = annotatingMarkupParser0.parse("hi!");
        info.bliki.wiki.model.WikiModel wikiModel45 = annotatingMarkupParser0.makeWikiModel("");
        info.bliki.wiki.model.WikiModel wikiModel47 = annotatingMarkupParser0.makeWikiModel("http://hi!\n.wikipedia.org/wiki/%22_title_%22");
        java.lang.String str49 = annotatingMarkupParser0.parse("http://http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A");
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(strList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strList6);
        org.junit.Assert.assertNotNull(strList7);
        org.junit.Assert.assertNotNull(strList11);
        org.junit.Assert.assertNotNull(wikiModel13);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNotNull(annotationList16);
        org.junit.Assert.assertNotNull(wikiModel18);
        org.junit.Assert.assertNotNull(wikiModel20);
        org.junit.Assert.assertNotNull(annotationList21);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(annotationList24);
        org.junit.Assert.assertNotNull(annotationList25);
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(annotationList27);
        org.junit.Assert.assertNotNull(annotationList29);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNotNull(strList35);
        org.junit.Assert.assertNotNull(annotationList36);
        org.junit.Assert.assertNotNull(wikiModel38);
        org.junit.Assert.assertNotNull(wikiModel40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "hi!\n" + "'", str43, "hi!\n");
        org.junit.Assert.assertNotNull(wikiModel45);
        org.junit.Assert.assertNotNull(wikiModel47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "http://http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A\n" + "'", str49, "http://http://\"http://.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/%22%22%22http%3A%2F%2Fhi_%21_.wikipedia.org%2Fwiki%2Fhttp%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22\n.wikipedia.org/wiki/http%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A\n");
    }

    @Test
    public void test3468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3468");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        java.lang.reflect.Type type4 = checkAbstract0.getReturnType();
        pignlproc.evaluation.SafeTsvText safeTsvText5 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type6 = safeTsvText5.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = null;
        safeTsvText5.setPigLogger(pigLogger7);
        pignlproc.evaluation.ConcatTextBag concatTextBag9 = new pignlproc.evaluation.ConcatTextBag();
        org.apache.pig.data.Tuple tuple10 = null;
        java.lang.String str11 = concatTextBag9.exec(tuple10);
        java.lang.Enum enum13 = null;
        concatTextBag9.warn("href", enum13);
        pignlproc.evaluation.CheckAbstract checkAbstract15 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = checkAbstract15.outputSchema(schema16);
        checkAbstract15.finish();
        java.lang.Enum enum20 = null;
        checkAbstract15.warn("href", enum20);
        pignlproc.evaluation.CheckAbstract checkAbstract22 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum24 = null;
        checkAbstract22.warn("http://.wikipedia.org/wiki/hi%21", enum24);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable26 = null;
        checkAbstract22.setReporter(pigProgressable26);
        java.lang.reflect.Type type28 = checkAbstract22.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath29 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText30 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger31 = null;
        safeTsvText30.setPigLogger(pigLogger31);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText33 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable34 = mergeAsOpenNLPAnnotatedText33.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract35 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema36 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema37 = checkAbstract35.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema38 = mergeAsOpenNLPAnnotatedText33.outputSchema(schema36);
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = safeTsvText30.outputSchema(schema38);
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = noLoopInPath29.outputSchema(schema38);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag41 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText42 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger43 = null;
        safeTsvText42.setPigLogger(pigLogger43);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText45 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable46 = mergeAsOpenNLPAnnotatedText45.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract47 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema48 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema49 = checkAbstract47.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = mergeAsOpenNLPAnnotatedText45.outputSchema(schema48);
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = safeTsvText42.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = aggregateTextBag41.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = noLoopInPath29.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = checkAbstract22.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema55 = checkAbstract15.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema56 = concatTextBag9.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema57 = safeTsvText5.outputSchema(schema56);
        org.apache.pig.impl.logicalLayer.schema.Schema schema58 = checkAbstract0.outputSchema(schema57);
        org.junit.Assert.assertNotNull(type4);
        org.junit.Assert.assertNotNull(type6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(type28);
        org.junit.Assert.assertNull(pigProgressable34);
        org.junit.Assert.assertNotNull(schema37);
        org.junit.Assert.assertNotNull(schema38);
        org.junit.Assert.assertNotNull(schema39);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNull(pigProgressable46);
        org.junit.Assert.assertNotNull(schema49);
        org.junit.Assert.assertNotNull(schema50);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNotNull(schema55);
        org.junit.Assert.assertNotNull(schema56);
        org.junit.Assert.assertNotNull(schema57);
        org.junit.Assert.assertNotNull(schema58);
    }

    @Test
    public void test3469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3469");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"href");
        boolean boolean2 = concatTextBag1.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = concatTextBag1.getArgToFuncMapping();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(funcSpecList3);
    }

    @Test
    public void test3470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3470");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText1 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText("\"\"\"hi!\"\" \"\n");
        org.apache.pig.data.Tuple tuple2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str3 = mergeAsOpenNLPAnnotatedText1.exec(tuple2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3471");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceSchema resourceSchema4 = parsingWikipediaLoader1.getSchema("title", job3);
        org.apache.pig.LoadCaster loadCaster5 = parsingWikipediaLoader1.getLoadCaster();
        parsingWikipediaLoader1.setUDFContextSignature("hi !");
        org.apache.hadoop.mapreduce.RecordReader recordReader8 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit9 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader8, pigSplit9);
        org.apache.hadoop.mapreduce.Job job12 = null;
        org.apache.pig.ResourceSchema resourceSchema13 = parsingWikipediaLoader1.getSchema("\" title \"", job12);
        org.apache.hadoop.mapreduce.InputFormat inputFormat14 = parsingWikipediaLoader1.getInputFormat();
        org.apache.hadoop.mapreduce.RecordReader recordReader15 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit16 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader15, pigSplit16);
        org.apache.hadoop.mapreduce.InputFormat inputFormat18 = parsingWikipediaLoader1.getInputFormat();
        org.junit.Assert.assertNotNull(resourceSchema4);
        org.junit.Assert.assertNotNull(loadCaster5);
        org.junit.Assert.assertNotNull(resourceSchema13);
        org.junit.Assert.assertNotNull(inputFormat14);
        org.junit.Assert.assertNotNull(inputFormat18);
    }

    @Test
    public void test3472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3472");
        pignlproc.evaluation.AggregateTextBag aggregateTextBag2 = new pignlproc.evaluation.AggregateTextBag((int) (byte) 10, false);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = aggregateTextBag2.getArgToFuncMapping();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser4 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser4.getHeaderAnnotations();
        java.lang.String str6 = annotatingMarkupParser4.getRedirect();
        java.lang.String str7 = annotatingMarkupParser4.getRedirect();
        java.util.List<opennlp.tools.util.Span> spanList8 = pignlproc.helpers.SpanHelper.tupleFieldsToSpans((java.lang.Object) funcSpecList3, (java.lang.Object) str7);
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(spanList8);
    }

    @Test
    public void test3473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3473");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = noLoopInPath0.getPigLogger();
        java.lang.reflect.Type type13 = noLoopInPath0.getReturnType();
        java.lang.Enum enum15 = null;
        noLoopInPath0.warn("\"hi!\"\n", enum15);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = null;
        noLoopInPath0.setReporter(pigProgressable17);
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigLogger12);
        org.junit.Assert.assertNotNull(type13);
    }

    @Test
    public void test3474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3474");
        java.lang.String str1 = pignlproc.evaluation.SafeTsvText.escape("http://http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "\"http://http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22\"" + "'", str1, "\"http://http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22\"");
    }

    @Test
    public void test3475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3475");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21", "http : // hi ! . wikipedia . org / wiki / http % 3 A % 2 F % 2 Fhttp % 3 A % 2 F % 2 F . wikipedia . org % 2 Fwiki % 2 Fhi % 2521 % 0 A . wikipedia . org % 2 Fwiki % 2 F % 2522 title % 2522", "\"opennlp / en - sent . bin\"");
        uriStringLiteralNTriplesStorer3.setStoreFuncUDFContextSignature("\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\"\"");
    }

    @Test
    public void test3476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3476");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable3 = sentencesWithLink0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = sentencesWithLink0.getReporter();
        java.lang.Enum enum6 = null;
        sentencesWithLink0.warn("http://http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21.wikipedia.org/wiki/http_%3A_%2F%2F_http_%3A_%2F%2F_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21_._wikipedia_._org_%2F_wiki_%2F_hi_%25_21", enum6);
        pignlproc.evaluation.NoLoopInPath noLoopInPath8 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText9 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger10 = null;
        safeTsvText9.setPigLogger(pigLogger10);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText12 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = mergeAsOpenNLPAnnotatedText12.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract14 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = checkAbstract14.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = mergeAsOpenNLPAnnotatedText12.outputSchema(schema15);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = safeTsvText9.outputSchema(schema17);
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = noLoopInPath8.outputSchema(schema17);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger20 = noLoopInPath8.getPigLogger();
        java.lang.reflect.Type type21 = noLoopInPath8.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath22 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText23 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        safeTsvText23.setPigLogger(pigLogger24);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText26 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable27 = mergeAsOpenNLPAnnotatedText26.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract28 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = checkAbstract28.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = mergeAsOpenNLPAnnotatedText26.outputSchema(schema29);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = safeTsvText23.outputSchema(schema31);
        org.apache.pig.impl.logicalLayer.schema.Schema schema33 = noLoopInPath22.outputSchema(schema31);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag34 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText35 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger36 = null;
        safeTsvText35.setPigLogger(pigLogger36);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText38 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable39 = mergeAsOpenNLPAnnotatedText38.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract40 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = checkAbstract40.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = mergeAsOpenNLPAnnotatedText38.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = safeTsvText35.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = aggregateTextBag34.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema46 = noLoopInPath22.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema47 = noLoopInPath8.outputSchema(schema46);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable48 = noLoopInPath8.getReporter();
        pignlproc.evaluation.AggregateTextBag aggregateTextBag51 = new pignlproc.evaluation.AggregateTextBag((int) 'a', false);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText52 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray54 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList55 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList55, spanArray54);
        java.lang.String str57 = mergeAsOpenNLPAnnotatedText52.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList55);
        pignlproc.evaluation.ConcatTextBag concatTextBag59 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        pignlproc.evaluation.CheckAbstract checkAbstract60 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum62 = null;
        checkAbstract60.warn("http://.wikipedia.org/wiki/hi%21", enum62);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger64 = null;
        checkAbstract60.setPigLogger(pigLogger64);
        checkAbstract60.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText67 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger68 = null;
        safeTsvText67.setPigLogger(pigLogger68);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText70 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable71 = mergeAsOpenNLPAnnotatedText70.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract72 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema73 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema74 = checkAbstract72.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema75 = mergeAsOpenNLPAnnotatedText70.outputSchema(schema73);
        org.apache.pig.impl.logicalLayer.schema.Schema schema76 = safeTsvText67.outputSchema(schema75);
        org.apache.pig.impl.logicalLayer.schema.Schema schema77 = checkAbstract60.outputSchema(schema76);
        org.apache.pig.impl.logicalLayer.schema.Schema schema78 = concatTextBag59.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema79 = mergeAsOpenNLPAnnotatedText52.outputSchema(schema77);
        org.apache.pig.impl.logicalLayer.schema.Schema schema80 = aggregateTextBag51.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema81 = noLoopInPath8.outputSchema(schema79);
        org.apache.pig.impl.logicalLayer.schema.Schema schema82 = sentencesWithLink0.outputSchema(schema79);
        org.junit.Assert.assertNull(pigProgressable3);
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNull(pigProgressable13);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNotNull(schema19);
        org.junit.Assert.assertNull(pigLogger20);
        org.junit.Assert.assertNotNull(type21);
        org.junit.Assert.assertNull(pigProgressable27);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertNotNull(schema33);
        org.junit.Assert.assertNull(pigProgressable39);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNotNull(schema46);
        org.junit.Assert.assertNotNull(schema47);
        org.junit.Assert.assertNull(pigProgressable48);
        org.junit.Assert.assertNotNull(spanArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "href" + "'", str57, "href");
        org.junit.Assert.assertNull(pigProgressable71);
        org.junit.Assert.assertNotNull(schema74);
        org.junit.Assert.assertNotNull(schema75);
        org.junit.Assert.assertNotNull(schema76);
        org.junit.Assert.assertNotNull(schema77);
        org.junit.Assert.assertNotNull(schema78);
        org.junit.Assert.assertNotNull(schema79);
        org.junit.Assert.assertNotNull(schema80);
        org.junit.Assert.assertNotNull(schema81);
        org.junit.Assert.assertNotNull(schema82);
    }

    @Test
    public void test3477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3477");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"\n\n");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%2521%22%22%22%22%20%22%22%22%0A%0A");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3478");
        pignlproc.evaluation.ConcatTextBag concatTextBag1 = new pignlproc.evaluation.ConcatTextBag("http://.wikipedia.org/wiki/hi%21");
        org.apache.pig.data.Tuple tuple2 = null;
        java.lang.String str3 = concatTextBag1.exec(tuple2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable4 = concatTextBag1.getReporter();
        org.apache.commons.logging.Log log5 = concatTextBag1.getLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = concatTextBag1.getArgToFuncMapping();
        concatTextBag1.progress();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "" + "'", str3, "");
        org.junit.Assert.assertNull(pigProgressable4);
        org.junit.Assert.assertNotNull(log5);
        org.junit.Assert.assertNull(funcSpecList6);
    }

    @Test
    public void test3479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3479");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader1 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job3 = null;
        org.apache.pig.ResourceStatistics resourceStatistics4 = parsingWikipediaLoader1.getStatistics("hi!", job3);
        org.apache.pig.Expression expression5 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression5);
        org.apache.pig.Expression expression7 = null;
        parsingWikipediaLoader1.setPartitionFilter(expression7);
        parsingWikipediaLoader1.setUDFContextSignature("http://http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522.wikipedia.org/wiki/%22_hi_%21_%22");
        org.apache.hadoop.mapreduce.RecordReader recordReader11 = null;
        org.apache.pig.backend.hadoop.executionengine.mapReduceLayer.PigSplit pigSplit12 = null;
        parsingWikipediaLoader1.prepareToRead(recordReader11, pigSplit12);
        org.junit.Assert.assertNull(resourceStatistics4);
    }

    @Test
    public void test3480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3480");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("http://.wikipedia.org/wiki/hi%21");
        org.apache.hadoop.mapreduce.RecordWriter recordWriter2 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter2);
        org.apache.hadoop.fs.Path path5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str6 = uriStringLiteralNTriplesStorer1.relToAbsPathForStoreLocation("", path5);
            org.junit.Assert.fail("Expected exception of type org.apache.pig.impl.logicalLayer.FrontendException; message: location:  curDir: null");
        } catch (org.apache.pig.impl.logicalLayer.FrontendException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3481");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger8 = null;
        sentencesWithLink0.setPigLogger(pigLogger8);
        java.lang.Enum enum11 = null;
        sentencesWithLink0.warn("http://hi !\n.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522", enum11);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable13 = sentencesWithLink0.getReporter();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(pigProgressable13);
    }

    @Test
    public void test3482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3482");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger12 = noLoopInPath0.getPigLogger();
        java.lang.reflect.Type type13 = noLoopInPath0.getReturnType();
        noLoopInPath0.finish();
        org.apache.pig.data.Tuple tuple15 = null;
        java.lang.Boolean boolean16 = noLoopInPath0.exec(tuple15);
        pignlproc.evaluation.NoLoopInPath noLoopInPath17 = new pignlproc.evaluation.NoLoopInPath();
        noLoopInPath17.progress();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger19 = null;
        noLoopInPath17.setPigLogger(pigLogger19);
        org.apache.commons.logging.Log log21 = noLoopInPath17.getLogger();
        pignlproc.evaluation.SafeTsvText safeTsvText22 = new pignlproc.evaluation.SafeTsvText();
        java.lang.reflect.Type type23 = safeTsvText22.getReturnType();
        pignlproc.evaluation.CheckAbstract checkAbstract24 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = checkAbstract24.outputSchema(schema25);
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = safeTsvText22.outputSchema(schema26);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray30 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList31 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList31, spanArray30);
        java.lang.String str33 = mergeAsOpenNLPAnnotatedText28.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList31);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList34 = mergeAsOpenNLPAnnotatedText28.getArgToFuncMapping();
        org.apache.commons.logging.Log log35 = mergeAsOpenNLPAnnotatedText28.getLogger();
        pignlproc.evaluation.CheckAbstract checkAbstract36 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum38 = null;
        checkAbstract36.warn("http://.wikipedia.org/wiki/hi%21", enum38);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable40 = null;
        checkAbstract36.setReporter(pigProgressable40);
        java.lang.reflect.Type type42 = checkAbstract36.getReturnType();
        pignlproc.evaluation.NoLoopInPath noLoopInPath43 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText44 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger45 = null;
        safeTsvText44.setPigLogger(pigLogger45);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText47 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable48 = mergeAsOpenNLPAnnotatedText47.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract49 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema50 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema51 = checkAbstract49.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema52 = mergeAsOpenNLPAnnotatedText47.outputSchema(schema50);
        org.apache.pig.impl.logicalLayer.schema.Schema schema53 = safeTsvText44.outputSchema(schema52);
        org.apache.pig.impl.logicalLayer.schema.Schema schema54 = noLoopInPath43.outputSchema(schema52);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag55 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText56 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger57 = null;
        safeTsvText56.setPigLogger(pigLogger57);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText59 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable60 = mergeAsOpenNLPAnnotatedText59.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract61 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema62 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema63 = checkAbstract61.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema64 = mergeAsOpenNLPAnnotatedText59.outputSchema(schema62);
        org.apache.pig.impl.logicalLayer.schema.Schema schema65 = safeTsvText56.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema66 = aggregateTextBag55.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema67 = noLoopInPath43.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema68 = checkAbstract36.outputSchema(schema64);
        org.apache.pig.impl.logicalLayer.schema.Schema schema69 = mergeAsOpenNLPAnnotatedText28.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema70 = safeTsvText22.outputSchema(schema68);
        org.apache.pig.impl.logicalLayer.schema.Schema schema71 = noLoopInPath17.outputSchema(schema70);
        org.apache.pig.impl.logicalLayer.schema.Schema schema72 = noLoopInPath0.outputSchema(schema70);
        boolean boolean73 = noLoopInPath0.isAsynchronous();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigLogger12);
        org.junit.Assert.assertNotNull(type13);
        org.junit.Assert.assertEquals("'" + boolean16 + "' != '" + true + "'", boolean16, true);
        org.junit.Assert.assertNotNull(log21);
        org.junit.Assert.assertNotNull(type23);
        org.junit.Assert.assertNotNull(schema26);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(spanArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi !" + "'", str33, "hi !");
        org.junit.Assert.assertNull(funcSpecList34);
        org.junit.Assert.assertNotNull(log35);
        org.junit.Assert.assertNotNull(type42);
        org.junit.Assert.assertNull(pigProgressable48);
        org.junit.Assert.assertNotNull(schema51);
        org.junit.Assert.assertNotNull(schema52);
        org.junit.Assert.assertNotNull(schema53);
        org.junit.Assert.assertNotNull(schema54);
        org.junit.Assert.assertNull(pigProgressable60);
        org.junit.Assert.assertNotNull(schema63);
        org.junit.Assert.assertNotNull(schema64);
        org.junit.Assert.assertNotNull(schema65);
        org.junit.Assert.assertNotNull(schema66);
        org.junit.Assert.assertNotNull(schema67);
        org.junit.Assert.assertNotNull(schema68);
        org.junit.Assert.assertNotNull(schema69);
        org.junit.Assert.assertNotNull(schema70);
        org.junit.Assert.assertNotNull(schema71);
        org.junit.Assert.assertNotNull(schema72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test3483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3483");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("hi !\n\n");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer5 = new pignlproc.storage.UriUriNTriplesStorer("hi !", "title", "title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader7 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.pig.LoadCaster loadCaster8 = parsingWikipediaLoader7.getLoadCaster();
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceSchema resourceSchema11 = parsingWikipediaLoader7.getSchema("hi!", job10);
        uriUriNTriplesStorer5.checkSchema(resourceSchema11);
        org.apache.hadoop.mapreduce.RecordWriter recordWriter13 = null;
        uriUriNTriplesStorer5.prepareToWrite(recordWriter13);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat15 = uriUriNTriplesStorer5.getOutputFormat();
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader17 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceStatistics resourceStatistics20 = parsingWikipediaLoader17.getStatistics("hi!", job19);
        org.apache.hadoop.mapreduce.Job job22 = null;
        org.apache.pig.ResourceSchema resourceSchema23 = parsingWikipediaLoader17.getSchema("hi!", job22);
        org.apache.hadoop.mapreduce.Job job25 = null;
        org.apache.pig.ResourceSchema resourceSchema26 = parsingWikipediaLoader17.getSchema("http://.wikipedia.org/wiki/hi%21\n", job25);
        uriUriNTriplesStorer5.checkSchema(resourceSchema26);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema26);
        org.junit.Assert.assertNotNull(loadCaster8);
        org.junit.Assert.assertNotNull(resourceSchema11);
        org.junit.Assert.assertNotNull(outputFormat15);
        org.junit.Assert.assertNull(resourceStatistics20);
        org.junit.Assert.assertNotNull(resourceSchema23);
        org.junit.Assert.assertNotNull(resourceSchema26);
    }

    @Test
    public void test3484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3484");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.RecordWriter recordWriter3 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter3);
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer6 = new pignlproc.storage.UriStringLiteralNTriplesStorer("title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader8 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = parsingWikipediaLoader8.getStatistics("hi!", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader8.getSchema("hi!", job13);
        uriStringLiteralNTriplesStorer6.checkSchema(resourceSchema14);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema14);
        pignlproc.storage.UriStringLiteralNTriplesLoader uriStringLiteralNTriplesLoader17 = new pignlproc.storage.UriStringLiteralNTriplesLoader();
        org.apache.hadoop.mapreduce.Job job19 = null;
        org.apache.pig.ResourceSchema resourceSchema20 = uriStringLiteralNTriplesLoader17.getSchema("hi!", job19);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema20);
        org.apache.hadoop.mapreduce.OutputFormat outputFormat22 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(resourceSchema14);
        org.junit.Assert.assertNotNull(resourceSchema20);
        org.junit.Assert.assertNotNull(outputFormat22);
    }

    @Test
    public void test3485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3485");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        org.apache.pig.data.Tuple tuple12 = null;
        java.lang.Boolean boolean13 = noLoopInPath0.exec(tuple12);
        noLoopInPath0.progress();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertEquals("'" + boolean13 + "' != '" + true + "'", boolean13, true);
    }

    @Test
    public void test3486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3486");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer3 = new pignlproc.storage.UriUriNTriplesStorer("http://http : // http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / http _ % 3 A _ % 2 F % 2 F _ http _ % 3 A _ % 2 F % 2 F _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21 _ . _ wikipedia _ . _ org _ % 2 F _ wiki _ % 2 F _ hi _ % 25 _ 21.wikipedia.org/wiki/%22http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521_.wikipedia.org%2Fwiki%2F%2522title%2522href%22", "\"\"\"\"\"\"\"http://.wikipedia.org/wiki/hi%21\"\"\"\" \"\"\"", "http : // hi ! . wikipedia . org / wiki / opennlp _ % 2 F _ en _ - _ sent _ . _ bin");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader5 = new pignlproc.storage.ParsingWikipediaLoader("href");
        parsingWikipediaLoader5.setUDFContextSignature("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        org.apache.hadoop.mapreduce.Job job9 = null;
        org.apache.pig.ResourceSchema resourceSchema10 = parsingWikipediaLoader5.getSchema("http://.wikipedia.org/wiki/hi%21", job9);
        uriUriNTriplesStorer3.checkSchema(resourceSchema10);
        org.junit.Assert.assertNotNull(resourceSchema10);
    }

    @Test
    public void test3487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3487");
        org.apache.hadoop.mapreduce.Job job0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.mapreduce.lib.input.FileInputFormat.addInputPaths(job0, "\"\"\"\"\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"\"\"\"\"");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: java.net.URISyntaxException: Illegal character in scheme name at index 0: \"\"\"\"\"\"\"http://hi%20!%20.wikipedia.org/wiki/http%253A%252F%252Fhttp%253A%252F%252F.wikipedia.org%252Fwiki%252Fhi%252521%250A.wikipedia.org%252Fwiki%252F%252522title%252522%22%22%22%22%22%22%22");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3488");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList6 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger7 = sentencesWithLink0.getPigLogger();
        sentencesWithLink0.finish();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(funcSpecList6);
        org.junit.Assert.assertNull(pigLogger7);
    }

    @Test
    public void test3489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3489");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger1 = null;
        sentencesWithLink0.setPigLogger(pigLogger1);
        java.util.List<org.apache.pig.FuncSpec> funcSpecList3 = sentencesWithLink0.getArgToFuncMapping();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = sentencesWithLink0.getPigLogger();
        boolean boolean5 = sentencesWithLink0.isAsynchronous();
        org.apache.commons.logging.Log log6 = sentencesWithLink0.getLogger();
        org.apache.commons.logging.Log log7 = sentencesWithLink0.getLogger();
        org.apache.commons.logging.Log log8 = sentencesWithLink0.getLogger();
        java.util.List<org.apache.pig.FuncSpec> funcSpecList9 = sentencesWithLink0.getArgToFuncMapping();
        sentencesWithLink0.finish();
        sentencesWithLink0.progress();
        org.junit.Assert.assertNull(funcSpecList3);
        org.junit.Assert.assertNull(pigLogger4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(log6);
        org.junit.Assert.assertNotNull(log7);
        org.junit.Assert.assertNotNull(log8);
        org.junit.Assert.assertNull(funcSpecList9);
    }

    @Test
    public void test3490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3490");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        java.lang.Enum enum5 = null;
        checkAbstract0.warn("hi !", enum5);
        pignlproc.evaluation.NoLoopInPath noLoopInPath7 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText8 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger9 = null;
        safeTsvText8.setPigLogger(pigLogger9);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText11 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable12 = mergeAsOpenNLPAnnotatedText11.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract13 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema14 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema15 = checkAbstract13.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema16 = mergeAsOpenNLPAnnotatedText11.outputSchema(schema14);
        org.apache.pig.impl.logicalLayer.schema.Schema schema17 = safeTsvText8.outputSchema(schema16);
        org.apache.pig.impl.logicalLayer.schema.Schema schema18 = noLoopInPath7.outputSchema(schema16);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag19 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText20 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger21 = null;
        safeTsvText20.setPigLogger(pigLogger21);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText23 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable24 = mergeAsOpenNLPAnnotatedText23.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract25 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema26 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema27 = checkAbstract25.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema28 = mergeAsOpenNLPAnnotatedText23.outputSchema(schema26);
        org.apache.pig.impl.logicalLayer.schema.Schema schema29 = safeTsvText20.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema30 = aggregateTextBag19.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema31 = noLoopInPath7.outputSchema(schema28);
        org.apache.pig.impl.logicalLayer.schema.Schema schema32 = checkAbstract0.outputSchema(schema31);
        org.apache.pig.data.Tuple tuple33 = null;
        java.lang.Boolean boolean34 = checkAbstract0.exec(tuple33);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger35 = null;
        checkAbstract0.setPigLogger(pigLogger35);
        org.junit.Assert.assertNull(pigProgressable12);
        org.junit.Assert.assertNotNull(schema15);
        org.junit.Assert.assertNotNull(schema16);
        org.junit.Assert.assertNotNull(schema17);
        org.junit.Assert.assertNotNull(schema18);
        org.junit.Assert.assertNull(pigProgressable24);
        org.junit.Assert.assertNotNull(schema27);
        org.junit.Assert.assertNotNull(schema28);
        org.junit.Assert.assertNotNull(schema29);
        org.junit.Assert.assertNotNull(schema30);
        org.junit.Assert.assertNotNull(schema31);
        org.junit.Assert.assertNotNull(schema32);
        org.junit.Assert.assertEquals("'" + boolean34 + "' != '" + false + "'", boolean34, false);
    }

    @Test
    public void test3491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3491");
        pignlproc.storage.UriUriNTriplesStorer uriUriNTriplesStorer1 = new pignlproc.storage.UriUriNTriplesStorer("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/%22title%22");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriUriNTriplesStorer1.getOutputFormat();
        org.apache.pig.data.Tuple tuple3 = null;
        // The following exception was thrown during execution in test generation
        try {
            uriUriNTriplesStorer1.putNext(tuple3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(outputFormat2);
    }

    @Test
    public void test3492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3492");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser0 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList1 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList2 = annotatingMarkupParser0.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList3 = annotatingMarkupParser0.getParagraphAnnotations();
        java.util.List<java.lang.String> strList4 = annotatingMarkupParser0.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList5 = annotatingMarkupParser0.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser6 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList7 = annotatingMarkupParser6.getHeaderAnnotations();
        java.util.List<java.lang.String> strList8 = annotatingMarkupParser6.getParagraphs();
        java.lang.Appendable appendable9 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable10 = annotatingMarkupParser6.new CountingAppendable(appendable9);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable11 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable10);
        java.lang.String str13 = annotatingMarkupParser0.parse("hi!\n");
        java.util.List<java.lang.String> strList14 = annotatingMarkupParser0.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList15 = annotatingMarkupParser0.getHeaderAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser16 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList17 = annotatingMarkupParser16.getHeaders();
        java.util.List<java.lang.String> strList18 = annotatingMarkupParser16.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList19 = annotatingMarkupParser16.getHeaderAnnotations();
        java.lang.String str20 = annotatingMarkupParser16.getRedirect();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser21 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList22 = annotatingMarkupParser21.getHeaders();
        java.util.List<java.lang.String> strList23 = annotatingMarkupParser21.getHeaders();
        java.lang.Appendable appendable24 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable25 = annotatingMarkupParser21.new CountingAppendable(appendable24);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable26 = annotatingMarkupParser16.new CountingAppendable((java.lang.Appendable) countingAppendable25);
        java.util.List<java.lang.String> strList27 = annotatingMarkupParser16.getHeaders();
        info.bliki.wiki.model.WikiModel wikiModel29 = annotatingMarkupParser16.makeWikiModel("opennlp / en - sent . bin");
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser30 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList31 = annotatingMarkupParser30.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList32 = annotatingMarkupParser30.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel34 = annotatingMarkupParser30.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel36 = annotatingMarkupParser30.makeWikiModel("hi!\n");
        java.util.List<pignlproc.markup.Annotation> annotationList37 = annotatingMarkupParser30.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser38 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList39 = annotatingMarkupParser38.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList40 = annotatingMarkupParser38.getWikiLinkAnnotations();
        java.util.List<pignlproc.markup.Annotation> annotationList41 = annotatingMarkupParser38.getParagraphAnnotations();
        java.util.List<java.lang.String> strList42 = annotatingMarkupParser38.getParagraphs();
        java.util.List<pignlproc.markup.Annotation> annotationList43 = annotatingMarkupParser38.getParagraphAnnotations();
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser44 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<pignlproc.markup.Annotation> annotationList45 = annotatingMarkupParser44.getHeaderAnnotations();
        java.util.List<java.lang.String> strList46 = annotatingMarkupParser44.getParagraphs();
        java.lang.Appendable appendable47 = null;
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable48 = annotatingMarkupParser44.new CountingAppendable(appendable47);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable49 = annotatingMarkupParser38.new CountingAppendable((java.lang.Appendable) countingAppendable48);
        pignlproc.markup.AnnotatingMarkupParser annotatingMarkupParser50 = new pignlproc.markup.AnnotatingMarkupParser();
        java.util.List<java.lang.String> strList51 = annotatingMarkupParser50.getHeaders();
        java.util.List<pignlproc.markup.Annotation> annotationList52 = annotatingMarkupParser50.getWikiLinkAnnotations();
        info.bliki.wiki.model.WikiModel wikiModel54 = annotatingMarkupParser50.makeWikiModel("http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        info.bliki.wiki.model.WikiModel wikiModel56 = annotatingMarkupParser50.makeWikiModel("hi!\n");
        annotatingMarkupParser16.nodesToText(annotationList37, (java.lang.Appendable) countingAppendable49, (info.bliki.wiki.model.IWikiModel) wikiModel56);
        pignlproc.markup.AnnotatingMarkupParser.CountingAppendable countingAppendable58 = annotatingMarkupParser0.new CountingAppendable((java.lang.Appendable) countingAppendable49);
        int int59 = countingAppendable49.currentPosition;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Appendable appendable61 = countingAppendable49.append('a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(strList1);
        org.junit.Assert.assertNotNull(annotationList2);
        org.junit.Assert.assertNotNull(annotationList3);
        org.junit.Assert.assertNotNull(strList4);
        org.junit.Assert.assertNotNull(annotationList5);
        org.junit.Assert.assertNotNull(annotationList7);
        org.junit.Assert.assertNotNull(strList8);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!\n\n" + "'", str13, "hi!\n\n");
        org.junit.Assert.assertNotNull(strList14);
        org.junit.Assert.assertNotNull(annotationList15);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertNotNull(annotationList19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strList22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(wikiModel29);
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNotNull(annotationList32);
        org.junit.Assert.assertNotNull(wikiModel34);
        org.junit.Assert.assertNotNull(wikiModel36);
        org.junit.Assert.assertNotNull(annotationList37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(annotationList40);
        org.junit.Assert.assertNotNull(annotationList41);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(annotationList43);
        org.junit.Assert.assertNotNull(annotationList45);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertNotNull(annotationList52);
        org.junit.Assert.assertNotNull(wikiModel54);
        org.junit.Assert.assertNotNull(wikiModel56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test3493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3493");
        java.lang.String[] strArray1 = new java.lang.String[] { "opennlp/en-sent.bin" };
        java.util.ArrayList<java.lang.String> strList2 = new java.util.ArrayList<java.lang.String>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList2, strArray1);
        java.lang.String str5 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "");
        java.lang.String str7 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://\"title\".wikipedia.org/wiki/%22hi%21%22");
        java.lang.String str9 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "hi !");
        java.lang.String str11 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "\"opennlp / en - sent . bin\"");
        java.lang.String str13 = org.apache.pig.LoadFunc.join((java.util.AbstractCollection<java.lang.String>) strList2, "http://http://\"title\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21href");
        org.junit.Assert.assertNotNull(strArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "opennlp/en-sent.bin" + "'", str5, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "opennlp/en-sent.bin" + "'", str7, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "opennlp/en-sent.bin" + "'", str9, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "opennlp/en-sent.bin" + "'", str11, "opennlp/en-sent.bin");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "opennlp/en-sent.bin" + "'", str13, "opennlp/en-sent.bin");
    }

    @Test
    public void test3494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3494");
        pignlproc.evaluation.SentencesWithLink sentencesWithLink0 = new pignlproc.evaluation.SentencesWithLink();
        pignlproc.evaluation.NoLoopInPath noLoopInPath1 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText2 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger3 = null;
        safeTsvText2.setPigLogger(pigLogger3);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText5 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable6 = mergeAsOpenNLPAnnotatedText5.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract7 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = checkAbstract7.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = mergeAsOpenNLPAnnotatedText5.outputSchema(schema8);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = safeTsvText2.outputSchema(schema10);
        org.apache.pig.impl.logicalLayer.schema.Schema schema12 = noLoopInPath1.outputSchema(schema10);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag13 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText14 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger15 = null;
        safeTsvText14.setPigLogger(pigLogger15);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText17 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable18 = mergeAsOpenNLPAnnotatedText17.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract19 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = checkAbstract19.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = mergeAsOpenNLPAnnotatedText17.outputSchema(schema20);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = safeTsvText14.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = aggregateTextBag13.outputSchema(schema22);
        org.apache.pig.impl.logicalLayer.schema.Schema schema25 = noLoopInPath1.outputSchema(schema22);
        pignlproc.evaluation.CheckAbstract checkAbstract26 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum28 = null;
        checkAbstract26.warn("http://.wikipedia.org/wiki/hi%21", enum28);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger30 = null;
        checkAbstract26.setPigLogger(pigLogger30);
        checkAbstract26.progress();
        pignlproc.evaluation.SafeTsvText safeTsvText33 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger34 = null;
        safeTsvText33.setPigLogger(pigLogger34);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema42 = safeTsvText33.outputSchema(schema41);
        org.apache.pig.impl.logicalLayer.schema.Schema schema43 = checkAbstract26.outputSchema(schema42);
        org.apache.pig.impl.logicalLayer.schema.Schema schema44 = noLoopInPath1.outputSchema(schema43);
        org.apache.pig.impl.logicalLayer.schema.Schema schema45 = sentencesWithLink0.outputSchema(schema44);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable46 = sentencesWithLink0.getReporter();
        java.lang.Enum enum48 = null;
        sentencesWithLink0.warn("http://\"http://http://\"\"title\"\".wikipedia.org/wiki/%22hi%21%22.wikipedia.org/wiki/hi%21\".wikipedia.org/wiki/http_%3A_%2F%2F_hi_%21_._wikipedia_._org_%2F_wiki_%2F_opennlp___%25_2_F___en___-___sent___.___bin", enum48);
        org.junit.Assert.assertNull(pigProgressable6);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNotNull(schema12);
        org.junit.Assert.assertNull(pigProgressable18);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(schema25);
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(schema42);
        org.junit.Assert.assertNotNull(schema43);
        org.junit.Assert.assertNotNull(schema44);
        org.junit.Assert.assertNotNull(schema45);
        org.junit.Assert.assertNull(pigProgressable46);
    }

    @Test
    public void test3495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3495");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer1 = new pignlproc.storage.UriStringLiteralNTriplesStorer("href");
        org.apache.hadoop.mapreduce.OutputFormat outputFormat2 = uriStringLiteralNTriplesStorer1.getOutputFormat();
        org.apache.hadoop.mapreduce.RecordWriter recordWriter3 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter3);
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer6 = new pignlproc.storage.UriStringLiteralNTriplesStorer("title");
        pignlproc.storage.ParsingWikipediaLoader parsingWikipediaLoader8 = new pignlproc.storage.ParsingWikipediaLoader("");
        org.apache.hadoop.mapreduce.Job job10 = null;
        org.apache.pig.ResourceStatistics resourceStatistics11 = parsingWikipediaLoader8.getStatistics("hi!", job10);
        org.apache.hadoop.mapreduce.Job job13 = null;
        org.apache.pig.ResourceSchema resourceSchema14 = parsingWikipediaLoader8.getSchema("hi!", job13);
        uriStringLiteralNTriplesStorer6.checkSchema(resourceSchema14);
        uriStringLiteralNTriplesStorer1.checkSchema(resourceSchema14);
        org.apache.hadoop.mapreduce.RecordWriter recordWriter17 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter17);
        org.apache.hadoop.mapreduce.RecordWriter recordWriter19 = null;
        uriStringLiteralNTriplesStorer1.prepareToWrite(recordWriter19);
        org.junit.Assert.assertNotNull(outputFormat2);
        org.junit.Assert.assertNull(resourceStatistics11);
        org.junit.Assert.assertNotNull(resourceSchema14);
    }

    @Test
    public void test3496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3496");
        pignlproc.evaluation.NoLoopInPath noLoopInPath0 = new pignlproc.evaluation.NoLoopInPath();
        pignlproc.evaluation.SafeTsvText safeTsvText1 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger2 = null;
        safeTsvText1.setPigLogger(pigLogger2);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText4 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable5 = mergeAsOpenNLPAnnotatedText4.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract6 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema7 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema8 = checkAbstract6.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema9 = mergeAsOpenNLPAnnotatedText4.outputSchema(schema7);
        org.apache.pig.impl.logicalLayer.schema.Schema schema10 = safeTsvText1.outputSchema(schema9);
        org.apache.pig.impl.logicalLayer.schema.Schema schema11 = noLoopInPath0.outputSchema(schema9);
        pignlproc.evaluation.AggregateTextBag aggregateTextBag12 = new pignlproc.evaluation.AggregateTextBag();
        pignlproc.evaluation.SafeTsvText safeTsvText13 = new pignlproc.evaluation.SafeTsvText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger14 = null;
        safeTsvText13.setPigLogger(pigLogger14);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText16 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable17 = mergeAsOpenNLPAnnotatedText16.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract18 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema19 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema20 = checkAbstract18.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema21 = mergeAsOpenNLPAnnotatedText16.outputSchema(schema19);
        org.apache.pig.impl.logicalLayer.schema.Schema schema22 = safeTsvText13.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema23 = aggregateTextBag12.outputSchema(schema21);
        org.apache.pig.impl.logicalLayer.schema.Schema schema24 = noLoopInPath0.outputSchema(schema21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable25 = null;
        noLoopInPath0.setReporter(pigProgressable25);
        java.lang.reflect.Type type27 = noLoopInPath0.getReturnType();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable28 = noLoopInPath0.getReporter();
        org.junit.Assert.assertNull(pigProgressable5);
        org.junit.Assert.assertNotNull(schema8);
        org.junit.Assert.assertNotNull(schema9);
        org.junit.Assert.assertNotNull(schema10);
        org.junit.Assert.assertNotNull(schema11);
        org.junit.Assert.assertNull(pigProgressable17);
        org.junit.Assert.assertNotNull(schema20);
        org.junit.Assert.assertNotNull(schema21);
        org.junit.Assert.assertNotNull(schema22);
        org.junit.Assert.assertNotNull(schema23);
        org.junit.Assert.assertNotNull(schema24);
        org.junit.Assert.assertNotNull(type27);
        org.junit.Assert.assertNull(pigProgressable28);
    }

    @Test
    public void test3497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3497");
        pignlproc.storage.UriStringLiteralNTriplesStorer uriStringLiteralNTriplesStorer3 = new pignlproc.storage.UriStringLiteralNTriplesStorer("\"\"\"http://.wikipedia.org/wiki/hi%21\"\"  \"", "\"\"\"\"\"\"\"opennlp / en - sent . bin\"\"\"\"\"\"\"\n", "http://\"\"\"http://hi ! .wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522\"\"\"href.wikipedia.org/wiki/http%3A%2F%2Fhttp%3A%2F%2F.wikipedia.org%2Fwiki%2Fhi%2521%0A.wikipedia.org%2Fwiki%2F%2522title%2522");
    }

    @Test
    public void test3498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3498");
        pignlproc.evaluation.ConcatTextBag concatTextBag2 = new pignlproc.evaluation.ConcatTextBag("\" http : // http : // \"\" title \"\" . wikipedia . org / wiki / % 22 hi % 21 % 22 . wikipedia . org / wiki / hi % 21 \"", false);
    }

    @Test
    public void test3499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3499");
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText0 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray2 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList3 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList3, spanArray2);
        java.lang.String str5 = mergeAsOpenNLPAnnotatedText0.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList3);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger6 = null;
        mergeAsOpenNLPAnnotatedText0.setPigLogger(pigLogger6);
        boolean boolean8 = mergeAsOpenNLPAnnotatedText0.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText10 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray12 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList13 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList13, spanArray12);
        java.lang.String str15 = mergeAsOpenNLPAnnotatedText10.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList13);
        java.lang.String str16 = mergeAsOpenNLPAnnotatedText0.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList13);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText18 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray20 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList21 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList21, spanArray20);
        java.lang.String str23 = mergeAsOpenNLPAnnotatedText18.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList21);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger24 = null;
        mergeAsOpenNLPAnnotatedText18.setPigLogger(pigLogger24);
        boolean boolean26 = mergeAsOpenNLPAnnotatedText18.isAsynchronous();
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText28 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray30 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList31 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList31, spanArray30);
        java.lang.String str33 = mergeAsOpenNLPAnnotatedText28.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList31);
        java.lang.String str34 = mergeAsOpenNLPAnnotatedText18.merge("opennlp/en-sent.bin", (java.util.List<opennlp.tools.util.Span>) spanList31);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText36 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable37 = mergeAsOpenNLPAnnotatedText36.getReporter();
        pignlproc.evaluation.CheckAbstract checkAbstract38 = new pignlproc.evaluation.CheckAbstract();
        org.apache.pig.impl.logicalLayer.schema.Schema schema39 = null;
        org.apache.pig.impl.logicalLayer.schema.Schema schema40 = checkAbstract38.outputSchema(schema39);
        org.apache.pig.impl.logicalLayer.schema.Schema schema41 = mergeAsOpenNLPAnnotatedText36.outputSchema(schema39);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText43 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray45 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList46 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList46, spanArray45);
        java.lang.String str48 = mergeAsOpenNLPAnnotatedText43.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList46);
        pignlproc.evaluation.MergeAsOpenNLPAnnotatedText mergeAsOpenNLPAnnotatedText50 = new pignlproc.evaluation.MergeAsOpenNLPAnnotatedText();
        opennlp.tools.util.Span[] spanArray52 = new opennlp.tools.util.Span[] {};
        java.util.ArrayList<opennlp.tools.util.Span> spanList53 = new java.util.ArrayList<opennlp.tools.util.Span>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<opennlp.tools.util.Span>) spanList53, spanArray52);
        java.lang.String str55 = mergeAsOpenNLPAnnotatedText50.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList53);
        java.lang.String str56 = mergeAsOpenNLPAnnotatedText43.merge("hi!", (java.util.List<opennlp.tools.util.Span>) spanList53);
        java.lang.String str57 = mergeAsOpenNLPAnnotatedText36.merge("title", (java.util.List<opennlp.tools.util.Span>) spanList53);
        java.lang.String str58 = mergeAsOpenNLPAnnotatedText18.merge("http://http://.wikipedia.org/wiki/hi%21\n.wikipedia.org/wiki/hi%21", (java.util.List<opennlp.tools.util.Span>) spanList53);
        java.lang.String str59 = mergeAsOpenNLPAnnotatedText0.merge("href", (java.util.List<opennlp.tools.util.Span>) spanList53);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable60 = mergeAsOpenNLPAnnotatedText0.getReporter();
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigProgressable pigProgressable61 = null;
        mergeAsOpenNLPAnnotatedText0.setReporter(pigProgressable61);
        org.junit.Assert.assertNotNull(spanArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "hi !" + "'", str5, "hi !");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(spanArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "href" + "'", str15, "href");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "opennlp / en - sent . bin" + "'", str16, "opennlp / en - sent . bin");
        org.junit.Assert.assertNotNull(spanArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi !" + "'", str23, "hi !");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(spanArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "href" + "'", str33, "href");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "opennlp / en - sent . bin" + "'", str34, "opennlp / en - sent . bin");
        org.junit.Assert.assertNull(pigProgressable37);
        org.junit.Assert.assertNotNull(schema40);
        org.junit.Assert.assertNotNull(schema41);
        org.junit.Assert.assertNotNull(spanArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi !" + "'", str48, "hi !");
        org.junit.Assert.assertNotNull(spanArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "href" + "'", str55, "href");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi !" + "'", str56, "hi !");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "title" + "'", str57, "title");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21" + "'", str58, "http : // http : // . wikipedia . org / wiki / hi % 21 . wikipedia . org / wiki / hi % 21");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "href" + "'", str59, "href");
        org.junit.Assert.assertNull(pigProgressable60);
    }

    @Test
    public void test3500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test3500");
        pignlproc.evaluation.CheckAbstract checkAbstract0 = new pignlproc.evaluation.CheckAbstract();
        java.lang.Enum enum2 = null;
        checkAbstract0.warn("http://.wikipedia.org/wiki/hi%21", enum2);
        org.apache.pig.backend.hadoop.executionengine.physicalLayer.PigLogger pigLogger4 = null;
        checkAbstract0.setPigLogger(pigLogger4);
        org.apache.commons.logging.Log log6 = checkAbstract0.getLogger();
        org.junit.Assert.assertNotNull(log6);
    }
}

